//***REMOVED***This***REMOVED***file***REMOVED***replaces***REMOVED***`index.js`***REMOVED***in***REMOVED***bundlers***REMOVED***like***REMOVED***webpack***REMOVED***or***REMOVED***Rollup,
//***REMOVED***according***REMOVED***to***REMOVED***`browser`***REMOVED***config***REMOVED***in***REMOVED***`package.json`.

let***REMOVED***{***REMOVED***urlAlphabet***REMOVED***}***REMOVED***=***REMOVED***require('./url-alphabet/index.cjs')

let***REMOVED***random***REMOVED***=***REMOVED***bytes***REMOVED***=>***REMOVED***crypto.getRandomValues(new***REMOVED***Uint8Array(bytes))

let***REMOVED***customRandom***REMOVED***=***REMOVED***(alphabet,***REMOVED***defaultSize,***REMOVED***getRandom)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***First,***REMOVED***a***REMOVED***bitmask***REMOVED***is***REMOVED***necessary***REMOVED***to***REMOVED***generate***REMOVED***the***REMOVED***ID.***REMOVED***The***REMOVED***bitmask***REMOVED***makes***REMOVED***bytes
***REMOVED******REMOVED***//***REMOVED***values***REMOVED***closer***REMOVED***to***REMOVED***the***REMOVED***alphabet***REMOVED***size.***REMOVED***The***REMOVED***bitmask***REMOVED***calculates***REMOVED***the***REMOVED***closest
***REMOVED******REMOVED***//***REMOVED***`2^31***REMOVED***-***REMOVED***1`***REMOVED***number,***REMOVED***which***REMOVED***exceeds***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED***//***REMOVED***For***REMOVED***example,***REMOVED***the***REMOVED***bitmask***REMOVED***for***REMOVED***the***REMOVED***alphabet***REMOVED***size***REMOVED***30***REMOVED***is***REMOVED***31***REMOVED***(00011111).
***REMOVED******REMOVED***//***REMOVED***`Math.clz32`***REMOVED***is***REMOVED***not***REMOVED***used,***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***available***REMOVED***in***REMOVED***browsers.
***REMOVED******REMOVED***let***REMOVED***mask***REMOVED***=***REMOVED***(2***REMOVED***<<***REMOVED***(Math.log(alphabet.length***REMOVED***-***REMOVED***1)***REMOVED***/***REMOVED***Math.LN2))***REMOVED***-***REMOVED***1
***REMOVED******REMOVED***//***REMOVED***Though,***REMOVED***the***REMOVED***bitmask***REMOVED***solution***REMOVED***is***REMOVED***not***REMOVED***perfect***REMOVED***since***REMOVED***the***REMOVED***bytes***REMOVED***exceeding
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***alphabet***REMOVED***size***REMOVED***are***REMOVED***refused.***REMOVED***Therefore,***REMOVED***to***REMOVED***reliably***REMOVED***generate***REMOVED***the***REMOVED***ID,
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***random***REMOVED***bytes***REMOVED***redundancy***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***satisfied.

***REMOVED******REMOVED***//***REMOVED***Note:***REMOVED***every***REMOVED***hardware***REMOVED***random***REMOVED***generator***REMOVED***call***REMOVED***is***REMOVED***performance***REMOVED***expensive,
***REMOVED******REMOVED***//***REMOVED***because***REMOVED***the***REMOVED***system***REMOVED***call***REMOVED***for***REMOVED***entropy***REMOVED***collection***REMOVED***takes***REMOVED***a***REMOVED***lot***REMOVED***of***REMOVED***time.
***REMOVED******REMOVED***//***REMOVED***So,***REMOVED***to***REMOVED***avoid***REMOVED***additional***REMOVED***system***REMOVED***calls,***REMOVED***extra***REMOVED***bytes***REMOVED***are***REMOVED***requested***REMOVED***in***REMOVED***advance.

***REMOVED******REMOVED***//***REMOVED***Next,***REMOVED***a***REMOVED***step***REMOVED***determines***REMOVED***how***REMOVED***many***REMOVED***random***REMOVED***bytes***REMOVED***to***REMOVED***generate.
***REMOVED******REMOVED***//***REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***random***REMOVED***bytes***REMOVED***gets***REMOVED***decided***REMOVED***upon***REMOVED***the***REMOVED***ID***REMOVED***size,***REMOVED***mask,
***REMOVED******REMOVED***//***REMOVED***alphabet***REMOVED***size,***REMOVED***and***REMOVED***magic***REMOVED***number***REMOVED***1.6***REMOVED***(using***REMOVED***1.6***REMOVED***peaks***REMOVED***at***REMOVED***performance
***REMOVED******REMOVED***//***REMOVED***according***REMOVED***to***REMOVED***benchmarks).

***REMOVED******REMOVED***//***REMOVED***`-~f***REMOVED***=>***REMOVED***Math.ceil(f)`***REMOVED***if***REMOVED***f***REMOVED***is***REMOVED***a***REMOVED***float
***REMOVED******REMOVED***//***REMOVED***`-~i***REMOVED***=>***REMOVED***i***REMOVED***+***REMOVED***1`***REMOVED***if***REMOVED***i***REMOVED***is***REMOVED***an***REMOVED***integer
***REMOVED******REMOVED***let***REMOVED***step***REMOVED***=***REMOVED***-~((1.6***REMOVED*******REMOVED***mask***REMOVED*******REMOVED***defaultSize)***REMOVED***/***REMOVED***alphabet.length)

***REMOVED******REMOVED***return***REMOVED***(size***REMOVED***=***REMOVED***defaultSize)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***id***REMOVED***=***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bytes***REMOVED***=***REMOVED***getRandom(step)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***compact***REMOVED***alternative***REMOVED***for***REMOVED***`for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***step;***REMOVED***i++)`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***j***REMOVED***=***REMOVED***step***REMOVED***|***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(j--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Adding***REMOVED***`||***REMOVED***''`***REMOVED***refuses***REMOVED***a***REMOVED***random***REMOVED***byte***REMOVED***that***REMOVED***exceeds***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***alphabet[bytes[j]***REMOVED***&***REMOVED***mask]***REMOVED***||***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.length***REMOVED***===***REMOVED***size)***REMOVED***return***REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

let***REMOVED***customAlphabet***REMOVED***=***REMOVED***(alphabet,***REMOVED***size***REMOVED***=***REMOVED***21)***REMOVED***=>
***REMOVED******REMOVED***customRandom(alphabet,***REMOVED***size,***REMOVED***random)

let***REMOVED***nanoid***REMOVED***=***REMOVED***(size***REMOVED***=***REMOVED***21)***REMOVED***=>
***REMOVED******REMOVED***crypto.getRandomValues(new***REMOVED***Uint8Array(size)).reduce((id,***REMOVED***byte)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It***REMOVED***is***REMOVED***incorrect***REMOVED***to***REMOVED***use***REMOVED***bytes***REMOVED***exceeding***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***following***REMOVED***mask***REMOVED***reduces***REMOVED***the***REMOVED***random***REMOVED***byte***REMOVED***in***REMOVED***the***REMOVED***0-255***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***range***REMOVED***to***REMOVED***the***REMOVED***0-63***REMOVED***value***REMOVED***range.***REMOVED***Therefore,***REMOVED***adding***REMOVED***hacks,***REMOVED***such
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***empty***REMOVED***string***REMOVED***fallback***REMOVED***or***REMOVED***magic***REMOVED***numbers,***REMOVED***is***REMOVED***unneccessary***REMOVED***because
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***bitmask***REMOVED***trims***REMOVED***bytes***REMOVED***down***REMOVED***to***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED***byte***REMOVED***&=***REMOVED***63
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(byte***REMOVED***<***REMOVED***36)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`0-9a-z`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***byte.toString(36)
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(byte***REMOVED***<***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`A-Z`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***(byte***REMOVED***-***REMOVED***26).toString(36).toUpperCase()
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(byte***REMOVED***>***REMOVED***62)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***'-'
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***'_'
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id
***REMOVED******REMOVED***},***REMOVED***'')

module.exports***REMOVED***=***REMOVED***{***REMOVED***nanoid,***REMOVED***customAlphabet,***REMOVED***customRandom,***REMOVED***urlAlphabet,***REMOVED***random***REMOVED***}
