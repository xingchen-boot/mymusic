let***REMOVED***crypto***REMOVED***=***REMOVED***require('crypto')

let***REMOVED***{***REMOVED***urlAlphabet***REMOVED***}***REMOVED***=***REMOVED***require('../url-alphabet/index.cjs')

//***REMOVED***`crypto.randomFill()`***REMOVED***is***REMOVED***a***REMOVED***little***REMOVED***faster***REMOVED***than***REMOVED***`crypto.randomBytes()`,
//***REMOVED***because***REMOVED***it***REMOVED***is***REMOVED***possible***REMOVED***to***REMOVED***use***REMOVED***in***REMOVED***combination***REMOVED***with***REMOVED***`Buffer.allocUnsafe()`.
let***REMOVED***random***REMOVED***=***REMOVED***bytes***REMOVED***=>
***REMOVED******REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`Buffer.allocUnsafe()`***REMOVED***is***REMOVED***faster***REMOVED***because***REMOVED***it***REMOVED***doesnâ€™t***REMOVED***flush***REMOVED***the***REMOVED***memory.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Memory***REMOVED***flushing***REMOVED***is***REMOVED***unnecessary***REMOVED***since***REMOVED***the***REMOVED***buffer***REMOVED***allocation***REMOVED***itself***REMOVED***resets
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***memory***REMOVED***with***REMOVED***the***REMOVED***new***REMOVED***bytes.
***REMOVED******REMOVED******REMOVED******REMOVED***crypto.randomFill(Buffer.allocUnsafe(bytes),***REMOVED***(err,***REMOVED***buf)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(err)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(buf)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED***})

let***REMOVED***customAlphabet***REMOVED***=***REMOVED***(alphabet,***REMOVED***defaultSize***REMOVED***=***REMOVED***21)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***First,***REMOVED***a***REMOVED***bitmask***REMOVED***is***REMOVED***necessary***REMOVED***to***REMOVED***generate***REMOVED***the***REMOVED***ID.***REMOVED***The***REMOVED***bitmask***REMOVED***makes***REMOVED***bytes
***REMOVED******REMOVED***//***REMOVED***values***REMOVED***closer***REMOVED***to***REMOVED***the***REMOVED***alphabet***REMOVED***size.***REMOVED***The***REMOVED***bitmask***REMOVED***calculates***REMOVED***the***REMOVED***closest
***REMOVED******REMOVED***//***REMOVED***`2^31***REMOVED***-***REMOVED***1`***REMOVED***number,***REMOVED***which***REMOVED***exceeds***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED***//***REMOVED***For***REMOVED***example,***REMOVED***the***REMOVED***bitmask***REMOVED***for***REMOVED***the***REMOVED***alphabet***REMOVED***size***REMOVED***30***REMOVED***is***REMOVED***31***REMOVED***(00011111).
***REMOVED******REMOVED***let***REMOVED***mask***REMOVED***=***REMOVED***(2***REMOVED***<<***REMOVED***(31***REMOVED***-***REMOVED***Math.clz32((alphabet.length***REMOVED***-***REMOVED***1)***REMOVED***|***REMOVED***1)))***REMOVED***-***REMOVED***1
***REMOVED******REMOVED***//***REMOVED***Though,***REMOVED***the***REMOVED***bitmask***REMOVED***solution***REMOVED***is***REMOVED***not***REMOVED***perfect***REMOVED***since***REMOVED***the***REMOVED***bytes***REMOVED***exceeding
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***alphabet***REMOVED***size***REMOVED***are***REMOVED***refused.***REMOVED***Therefore,***REMOVED***to***REMOVED***reliably***REMOVED***generate***REMOVED***the***REMOVED***ID,
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***random***REMOVED***bytes***REMOVED***redundancy***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***satisfied.

***REMOVED******REMOVED***//***REMOVED***Note:***REMOVED***every***REMOVED***hardware***REMOVED***random***REMOVED***generator***REMOVED***call***REMOVED***is***REMOVED***performance***REMOVED***expensive,
***REMOVED******REMOVED***//***REMOVED***because***REMOVED***the***REMOVED***system***REMOVED***call***REMOVED***for***REMOVED***entropy***REMOVED***collection***REMOVED***takes***REMOVED***a***REMOVED***lot***REMOVED***of***REMOVED***time.
***REMOVED******REMOVED***//***REMOVED***So,***REMOVED***to***REMOVED***avoid***REMOVED***additional***REMOVED***system***REMOVED***calls,***REMOVED***extra***REMOVED***bytes***REMOVED***are***REMOVED***requested***REMOVED***in***REMOVED***advance.

***REMOVED******REMOVED***//***REMOVED***Next,***REMOVED***a***REMOVED***step***REMOVED***determines***REMOVED***how***REMOVED***many***REMOVED***random***REMOVED***bytes***REMOVED***to***REMOVED***generate.
***REMOVED******REMOVED***//***REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***random***REMOVED***bytes***REMOVED***gets***REMOVED***decided***REMOVED***upon***REMOVED***the***REMOVED***ID***REMOVED***size,***REMOVED***mask,
***REMOVED******REMOVED***//***REMOVED***alphabet***REMOVED***size,***REMOVED***and***REMOVED***magic***REMOVED***number***REMOVED***1.6***REMOVED***(using***REMOVED***1.6***REMOVED***peaks***REMOVED***at***REMOVED***performance
***REMOVED******REMOVED***//***REMOVED***according***REMOVED***to***REMOVED***benchmarks).
***REMOVED******REMOVED***let***REMOVED***step***REMOVED***=***REMOVED***Math.ceil((1.6***REMOVED*******REMOVED***mask***REMOVED*******REMOVED***defaultSize)***REMOVED***/***REMOVED***alphabet.length)

***REMOVED******REMOVED***let***REMOVED***tick***REMOVED***=***REMOVED***(id,***REMOVED***size***REMOVED***=***REMOVED***defaultSize)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED***random(step).then(bytes***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***compact***REMOVED***alternative***REMOVED***for***REMOVED***`for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***step;***REMOVED***i++)`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***step
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Adding***REMOVED***`||***REMOVED***''`***REMOVED***refuses***REMOVED***a***REMOVED***random***REMOVED***byte***REMOVED***that***REMOVED***exceeds***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***alphabet[bytes[i]***REMOVED***&***REMOVED***mask]***REMOVED***||***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.length***REMOVED***>=***REMOVED***size)***REMOVED***return***REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tick(id,***REMOVED***size)
***REMOVED******REMOVED******REMOVED******REMOVED***})

***REMOVED******REMOVED***return***REMOVED***size***REMOVED***=>***REMOVED***tick('',***REMOVED***size)
}

let***REMOVED***nanoid***REMOVED***=***REMOVED***(size***REMOVED***=***REMOVED***21)***REMOVED***=>
***REMOVED******REMOVED***random((size***REMOVED***|=***REMOVED***0)).then(bytes***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***id***REMOVED***=***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***compact***REMOVED***alternative***REMOVED***for***REMOVED***`for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***step;***REMOVED***i++)`.
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(size--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It***REMOVED***is***REMOVED***incorrect***REMOVED***to***REMOVED***use***REMOVED***bytes***REMOVED***exceeding***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***following***REMOVED***mask***REMOVED***reduces***REMOVED***the***REMOVED***random***REMOVED***byte***REMOVED***in***REMOVED***the***REMOVED***0-255***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***range***REMOVED***to***REMOVED***the***REMOVED***0-63***REMOVED***value***REMOVED***range.***REMOVED***Therefore,***REMOVED***adding***REMOVED***hacks,***REMOVED***such
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***empty***REMOVED***string***REMOVED***fallback***REMOVED***or***REMOVED***magic***REMOVED***numbers,***REMOVED***is***REMOVED***unneccessary***REMOVED***because
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***bitmask***REMOVED***trims***REMOVED***bytes***REMOVED***down***REMOVED***to***REMOVED***the***REMOVED***alphabet***REMOVED***size.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***+=***REMOVED***urlAlphabet[bytes[size]***REMOVED***&***REMOVED***63]
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***id
***REMOVED******REMOVED***})

module.exports***REMOVED***=***REMOVED***{***REMOVED***nanoid,***REMOVED***customAlphabet,***REMOVED***random***REMOVED***}
