import***REMOVED***{***REMOVED***comma,***REMOVED***decodeInteger,***REMOVED***encodeInteger,***REMOVED***hasMoreVlq,***REMOVED***semicolon***REMOVED***}***REMOVED***from***REMOVED***'./vlq';
import***REMOVED***{***REMOVED***StringWriter,***REMOVED***StringReader***REMOVED***}***REMOVED***from***REMOVED***'./strings';

export***REMOVED***{
***REMOVED******REMOVED***decodeOriginalScopes,
***REMOVED******REMOVED***encodeOriginalScopes,
***REMOVED******REMOVED***decodeGeneratedRanges,
***REMOVED******REMOVED***encodeGeneratedRanges,
}***REMOVED***from***REMOVED***'./scopes';
export***REMOVED***type***REMOVED***{***REMOVED***OriginalScope,***REMOVED***GeneratedRange,***REMOVED***CallSite,***REMOVED***BindingExpressionRange***REMOVED***}***REMOVED***from***REMOVED***'./scopes';

export***REMOVED***type***REMOVED***SourceMapSegment***REMOVED***=
***REMOVED******REMOVED***|***REMOVED***[number]
***REMOVED******REMOVED***|***REMOVED***[number,***REMOVED***number,***REMOVED***number,***REMOVED***number]
***REMOVED******REMOVED***|***REMOVED***[number,***REMOVED***number,***REMOVED***number,***REMOVED***number,***REMOVED***number];
export***REMOVED***type***REMOVED***SourceMapLine***REMOVED***=***REMOVED***SourceMapSegment[];
export***REMOVED***type***REMOVED***SourceMapMappings***REMOVED***=***REMOVED***SourceMapLine[];

export***REMOVED***function***REMOVED***decode(mappings:***REMOVED***string):***REMOVED***SourceMapMappings***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***mappings;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(mappings);
***REMOVED******REMOVED***const***REMOVED***decoded:***REMOVED***SourceMapMappings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***namesIndex***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***semi***REMOVED***=***REMOVED***reader.indexOf(';');
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line:***REMOVED***SourceMapLine***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sorted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastCol***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(reader.pos***REMOVED***<***REMOVED***semi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***seg:***REMOVED***SourceMapSegment;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***genColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(genColumn***REMOVED***<***REMOVED***lastCol)***REMOVED***sorted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastCol***REMOVED***=***REMOVED***genColumn;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourceLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourceColumn);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***namesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn,***REMOVED***sourcesIndex,***REMOVED***sourceLine,***REMOVED***sourceColumn,***REMOVED***namesIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn,***REMOVED***sourcesIndex,***REMOVED***sourceLine,***REMOVED***sourceColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line.push(seg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader.pos++;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sorted)***REMOVED***sort(line);
***REMOVED******REMOVED******REMOVED******REMOVED***decoded.push(line);
***REMOVED******REMOVED******REMOVED******REMOVED***reader.pos***REMOVED***=***REMOVED***semi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(reader.pos***REMOVED***<=***REMOVED***length);

***REMOVED******REMOVED***return***REMOVED***decoded;
}

function***REMOVED***sort(line:***REMOVED***SourceMapSegment[])***REMOVED***{
***REMOVED******REMOVED***line.sort(sortComparator);
}

function***REMOVED***sortComparator(a:***REMOVED***SourceMapSegment,***REMOVED***b:***REMOVED***SourceMapSegment):***REMOVED***number***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***a[0]***REMOVED***-***REMOVED***b[0];
}

export***REMOVED***function***REMOVED***encode(decoded:***REMOVED***SourceMapMappings):***REMOVED***string;
export***REMOVED***function***REMOVED***encode(decoded:***REMOVED***Readonly<SourceMapMappings>):***REMOVED***string;
export***REMOVED***function***REMOVED***encode(decoded:***REMOVED***Readonly<SourceMapMappings>):***REMOVED***string***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();
***REMOVED******REMOVED***let***REMOVED***sourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***namesIndex***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***decoded.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***decoded[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***0)***REMOVED***writer.write(semicolon);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line.length***REMOVED***===***REMOVED***0)***REMOVED***continue;

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***line.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segment***REMOVED***=***REMOVED***line[j];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***>***REMOVED***0)***REMOVED***writer.write(comma);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[0],***REMOVED***genColumn);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***1)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesIndex***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[1],***REMOVED***sourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceLine***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[2],***REMOVED***sourceLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[3],***REMOVED***sourceColumn);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***4)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namesIndex***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[4],***REMOVED***namesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***writer.flush();
}
