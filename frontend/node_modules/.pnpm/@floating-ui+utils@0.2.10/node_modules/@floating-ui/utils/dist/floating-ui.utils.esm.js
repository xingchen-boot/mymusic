/**
***REMOVED*******REMOVED***Custom***REMOVED***positioning***REMOVED***reference***REMOVED***element.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/virtual-elements
***REMOVED****/

const***REMOVED***sides***REMOVED***=***REMOVED***['top',***REMOVED***'right',***REMOVED***'bottom',***REMOVED***'left'];
const***REMOVED***alignments***REMOVED***=***REMOVED***['start',***REMOVED***'end'];
const***REMOVED***placements***REMOVED***=***REMOVED***/*#__PURE__*/sides.reduce((acc,***REMOVED***side)***REMOVED***=>***REMOVED***acc.concat(side,***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignments[0],***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignments[1]),***REMOVED***[]);
const***REMOVED***min***REMOVED***=***REMOVED***Math.min;
const***REMOVED***max***REMOVED***=***REMOVED***Math.max;
const***REMOVED***round***REMOVED***=***REMOVED***Math.round;
const***REMOVED***floor***REMOVED***=***REMOVED***Math.floor;
const***REMOVED***createCoords***REMOVED***=***REMOVED***v***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***x:***REMOVED***v,
***REMOVED******REMOVED***y:***REMOVED***v
});
const***REMOVED***oppositeSideMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***left:***REMOVED***'right',
***REMOVED******REMOVED***right:***REMOVED***'left',
***REMOVED******REMOVED***bottom:***REMOVED***'top',
***REMOVED******REMOVED***top:***REMOVED***'bottom'
};
const***REMOVED***oppositeAlignmentMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***start:***REMOVED***'end',
***REMOVED******REMOVED***end:***REMOVED***'start'
};
function***REMOVED***clamp(start,***REMOVED***value,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***max(start,***REMOVED***min(value,***REMOVED***end));
}
function***REMOVED***evaluate(value,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***value(param)***REMOVED***:***REMOVED***value;
}
function***REMOVED***getSide(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.split('-')[0];
}
function***REMOVED***getAlignment(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.split('-')[1];
}
function***REMOVED***getOppositeAxis(axis)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***axis***REMOVED***===***REMOVED***'x'***REMOVED***?***REMOVED***'y'***REMOVED***:***REMOVED***'x';
}
function***REMOVED***getAxisLength(axis)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***axis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'height'***REMOVED***:***REMOVED***'width';
}
const***REMOVED***yAxisSides***REMOVED***=***REMOVED***/*#__PURE__*/new***REMOVED***Set(['top',***REMOVED***'bottom']);
function***REMOVED***getSideAxis(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***yAxisSides.has(getSide(placement))***REMOVED***?***REMOVED***'y'***REMOVED***:***REMOVED***'x';
}
function***REMOVED***getAlignmentAxis(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***getOppositeAxis(getSideAxis(placement));
}
function***REMOVED***getAlignmentSides(placement,***REMOVED***rects,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(rtl***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***rtl***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED***const***REMOVED***alignmentAxis***REMOVED***=***REMOVED***getAlignmentAxis(placement);
***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***getAxisLength(alignmentAxis);
***REMOVED******REMOVED***let***REMOVED***mainAlignmentSide***REMOVED***=***REMOVED***alignmentAxis***REMOVED***===***REMOVED***'x'***REMOVED***?***REMOVED***alignment***REMOVED***===***REMOVED***(rtl***REMOVED***?***REMOVED***'end'***REMOVED***:***REMOVED***'start')***REMOVED***?***REMOVED***'right'***REMOVED***:***REMOVED***'left'***REMOVED***:***REMOVED***alignment***REMOVED***===***REMOVED***'start'***REMOVED***?***REMOVED***'bottom'***REMOVED***:***REMOVED***'top';
***REMOVED******REMOVED***if***REMOVED***(rects.reference[length]***REMOVED***>***REMOVED***rects.floating[length])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mainAlignmentSide***REMOVED***=***REMOVED***getOppositePlacement(mainAlignmentSide);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[mainAlignmentSide,***REMOVED***getOppositePlacement(mainAlignmentSide)];
}
function***REMOVED***getExpandedPlacements(placement)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***oppositePlacement***REMOVED***=***REMOVED***getOppositePlacement(placement);
***REMOVED******REMOVED***return***REMOVED***[getOppositeAlignmentPlacement(placement),***REMOVED***oppositePlacement,***REMOVED***getOppositeAlignmentPlacement(oppositePlacement)];
}
function***REMOVED***getOppositeAlignmentPlacement(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.replace(/start|end/g,***REMOVED***alignment***REMOVED***=>***REMOVED***oppositeAlignmentMap[alignment]);
}
const***REMOVED***lrPlacement***REMOVED***=***REMOVED***['left',***REMOVED***'right'];
const***REMOVED***rlPlacement***REMOVED***=***REMOVED***['right',***REMOVED***'left'];
const***REMOVED***tbPlacement***REMOVED***=***REMOVED***['top',***REMOVED***'bottom'];
const***REMOVED***btPlacement***REMOVED***=***REMOVED***['bottom',***REMOVED***'top'];
function***REMOVED***getSideList(side,***REMOVED***isStart,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(side)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'top':
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'bottom':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rtl)***REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***rlPlacement***REMOVED***:***REMOVED***lrPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***lrPlacement***REMOVED***:***REMOVED***rlPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'left':
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'right':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***tbPlacement***REMOVED***:***REMOVED***btPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
}
function***REMOVED***getOppositeAxisPlacements(placement,***REMOVED***flipAlignment,***REMOVED***direction,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED***let***REMOVED***list***REMOVED***=***REMOVED***getSideList(getSide(placement),***REMOVED***direction***REMOVED***===***REMOVED***'start',***REMOVED***rtl);
***REMOVED******REMOVED***if***REMOVED***(alignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***list***REMOVED***=***REMOVED***list.map(side***REMOVED***=>***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignment);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flipAlignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list***REMOVED***=***REMOVED***list.concat(list.map(getOppositeAlignmentPlacement));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***list;
}
function***REMOVED***getOppositePlacement(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.replace(/left|right|bottom|top/g,***REMOVED***side***REMOVED***=>***REMOVED***oppositeSideMap[side]);
}
function***REMOVED***expandPaddingObject(padding)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***...padding
***REMOVED******REMOVED***};
}
function***REMOVED***getPaddingObject(padding)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***padding***REMOVED***!==***REMOVED***'number'***REMOVED***?***REMOVED***expandPaddingObject(padding)***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***padding
***REMOVED******REMOVED***};
}
function***REMOVED***rectToClientRect(rect)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***height
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***rect;
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***x***REMOVED***+***REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***y***REMOVED***+***REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED***};
}

export***REMOVED***{***REMOVED***alignments,***REMOVED***clamp,***REMOVED***createCoords,***REMOVED***evaluate,***REMOVED***expandPaddingObject,***REMOVED***floor,***REMOVED***getAlignment,***REMOVED***getAlignmentAxis,***REMOVED***getAlignmentSides,***REMOVED***getAxisLength,***REMOVED***getExpandedPlacements,***REMOVED***getOppositeAlignmentPlacement,***REMOVED***getOppositeAxis,***REMOVED***getOppositeAxisPlacements,***REMOVED***getOppositePlacement,***REMOVED***getPaddingObject,***REMOVED***getSide,***REMOVED***getSideAxis,***REMOVED***max,***REMOVED***min,***REMOVED***placements,***REMOVED***rectToClientRect,***REMOVED***round,***REMOVED***sides***REMOVED***};
