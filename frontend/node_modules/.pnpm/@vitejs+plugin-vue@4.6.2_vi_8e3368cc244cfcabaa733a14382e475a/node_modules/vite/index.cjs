/****REMOVED***eslint-disable***REMOVED***no-restricted-globals***REMOVED****/

//***REMOVED***type***REMOVED***utils
module.exports.defineConfig***REMOVED***=***REMOVED***(config)***REMOVED***=>***REMOVED***config

//***REMOVED***proxy***REMOVED***cjs***REMOVED***utils***REMOVED***(sync***REMOVED***functions)
Object.assign(module.exports,***REMOVED***require('./dist/node-cjs/publicUtils.cjs'))

//***REMOVED***async***REMOVED***functions,***REMOVED***can***REMOVED***be***REMOVED***redirect***REMOVED***from***REMOVED***ESM***REMOVED***build
const***REMOVED***asyncFunctions***REMOVED***=***REMOVED***[
***REMOVED******REMOVED***'build',
***REMOVED******REMOVED***'createServer',
***REMOVED******REMOVED***'preview',
***REMOVED******REMOVED***'transformWithEsbuild',
***REMOVED******REMOVED***'resolveConfig',
***REMOVED******REMOVED***'optimizeDeps',
***REMOVED******REMOVED***'formatPostcssSourceMap',
***REMOVED******REMOVED***'loadConfigFromFile',
***REMOVED******REMOVED***'preprocessCSS',
]
asyncFunctions.forEach((name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***module.exports[name]***REMOVED***=***REMOVED***(...args)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED***import('./dist/node/index.js').then((i)***REMOVED***=>***REMOVED***i[name](...args))
})

//***REMOVED***some***REMOVED***sync***REMOVED***functions***REMOVED***are***REMOVED***marked***REMOVED***not***REMOVED***supported***REMOVED***due***REMOVED***to***REMOVED***their***REMOVED***complexity***REMOVED***and***REMOVED***uncommon***REMOVED***usage
const***REMOVED***unsupportedCJS***REMOVED***=***REMOVED***['resolvePackageEntry',***REMOVED***'resolvePackageData']
unsupportedCJS.forEach((name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***module.exports[name]***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"${name}"***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***in***REMOVED***CJS***REMOVED***build***REMOVED***of***REMOVED***Vite***REMOVED***4.\nPlease***REMOVED***use***REMOVED***ESM***REMOVED***or***REMOVED***dynamic***REMOVED***imports***REMOVED***\`const***REMOVED***{***REMOVED***${name}***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('vite')\`.`,
***REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED***}
})
