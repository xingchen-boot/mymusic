import***REMOVED***'@vite/env';

const***REMOVED***base$1***REMOVED***=***REMOVED***__BASE__***REMOVED***||***REMOVED***'/';
//***REMOVED***set***REMOVED***:host***REMOVED***styles***REMOVED***to***REMOVED***make***REMOVED***playwright***REMOVED***detect***REMOVED***the***REMOVED***element***REMOVED***as***REMOVED***visible
const***REMOVED***template***REMOVED***=***REMOVED***/*html*/***REMOVED***`
<style>
:host***REMOVED***{
***REMOVED******REMOVED***position:***REMOVED***fixed;
***REMOVED******REMOVED***top:***REMOVED***0;
***REMOVED******REMOVED***left:***REMOVED***0;
***REMOVED******REMOVED***width:***REMOVED***100%;
***REMOVED******REMOVED***height:***REMOVED***100%;
***REMOVED******REMOVED***z-index:***REMOVED***99999;
***REMOVED******REMOVED***--monospace:***REMOVED***'SFMono-Regular',***REMOVED***Consolas,
***REMOVED******REMOVED***'Liberation***REMOVED***Mono',***REMOVED***Menlo,***REMOVED***Courier,***REMOVED***monospace;
***REMOVED******REMOVED***--red:***REMOVED***#ff5555;
***REMOVED******REMOVED***--yellow:***REMOVED***#e2aa53;
***REMOVED******REMOVED***--purple:***REMOVED***#cfa4ff;
***REMOVED******REMOVED***--cyan:***REMOVED***#2dd9da;
***REMOVED******REMOVED***--dim:***REMOVED***#c9c9c9;

***REMOVED******REMOVED***--window-background:***REMOVED***#181818;
***REMOVED******REMOVED***--window-color:***REMOVED***#d8d8d8;
}

.backdrop***REMOVED***{
***REMOVED******REMOVED***position:***REMOVED***fixed;
***REMOVED******REMOVED***z-index:***REMOVED***99999;
***REMOVED******REMOVED***top:***REMOVED***0;
***REMOVED******REMOVED***left:***REMOVED***0;
***REMOVED******REMOVED***width:***REMOVED***100%;
***REMOVED******REMOVED***height:***REMOVED***100%;
***REMOVED******REMOVED***overflow-y:***REMOVED***scroll;
***REMOVED******REMOVED***margin:***REMOVED***0;
***REMOVED******REMOVED***background:***REMOVED***rgba(0,***REMOVED***0,***REMOVED***0,***REMOVED***0.66);
}

.window***REMOVED***{
***REMOVED******REMOVED***font-family:***REMOVED***var(--monospace);
***REMOVED******REMOVED***line-height:***REMOVED***1.5;
***REMOVED******REMOVED***width:***REMOVED***800px;
***REMOVED******REMOVED***color:***REMOVED***var(--window-color);
***REMOVED******REMOVED***margin:***REMOVED***30px***REMOVED***auto;
***REMOVED******REMOVED***padding:***REMOVED***25px***REMOVED***40px;
***REMOVED******REMOVED***position:***REMOVED***relative;
***REMOVED******REMOVED***background:***REMOVED***var(--window-background);
***REMOVED******REMOVED***border-radius:***REMOVED***6px***REMOVED***6px***REMOVED***8px***REMOVED***8px;
***REMOVED******REMOVED***box-shadow:***REMOVED***0***REMOVED***19px***REMOVED***38px***REMOVED***rgba(0,0,0,0.30),***REMOVED***0***REMOVED***15px***REMOVED***12px***REMOVED***rgba(0,0,0,0.22);
***REMOVED******REMOVED***overflow:***REMOVED***hidden;
***REMOVED******REMOVED***border-top:***REMOVED***8px***REMOVED***solid***REMOVED***var(--red);
***REMOVED******REMOVED***direction:***REMOVED***ltr;
***REMOVED******REMOVED***text-align:***REMOVED***left;
}

pre***REMOVED***{
***REMOVED******REMOVED***font-family:***REMOVED***var(--monospace);
***REMOVED******REMOVED***font-size:***REMOVED***16px;
***REMOVED******REMOVED***margin-top:***REMOVED***0;
***REMOVED******REMOVED***margin-bottom:***REMOVED***1em;
***REMOVED******REMOVED***overflow-x:***REMOVED***scroll;
***REMOVED******REMOVED***scrollbar-width:***REMOVED***none;
}

pre::-webkit-scrollbar***REMOVED***{
***REMOVED******REMOVED***display:***REMOVED***none;
}

.message***REMOVED***{
***REMOVED******REMOVED***line-height:***REMOVED***1.3;
***REMOVED******REMOVED***font-weight:***REMOVED***600;
***REMOVED******REMOVED***white-space:***REMOVED***pre-wrap;
}

.message-body***REMOVED***{
***REMOVED******REMOVED***color:***REMOVED***var(--red);
}

.plugin***REMOVED***{
***REMOVED******REMOVED***color:***REMOVED***var(--purple);
}

.file***REMOVED***{
***REMOVED******REMOVED***color:***REMOVED***var(--cyan);
***REMOVED******REMOVED***margin-bottom:***REMOVED***0;
***REMOVED******REMOVED***white-space:***REMOVED***pre-wrap;
***REMOVED******REMOVED***word-break:***REMOVED***break-all;
}

.frame***REMOVED***{
***REMOVED******REMOVED***color:***REMOVED***var(--yellow);
}

.stack***REMOVED***{
***REMOVED******REMOVED***font-size:***REMOVED***13px;
***REMOVED******REMOVED***color:***REMOVED***var(--dim);
}

.tip***REMOVED***{
***REMOVED******REMOVED***font-size:***REMOVED***13px;
***REMOVED******REMOVED***color:***REMOVED***#999;
***REMOVED******REMOVED***border-top:***REMOVED***1px***REMOVED***dotted***REMOVED***#999;
***REMOVED******REMOVED***padding-top:***REMOVED***13px;
***REMOVED******REMOVED***line-height:***REMOVED***1.8;
}

code***REMOVED***{
***REMOVED******REMOVED***font-size:***REMOVED***13px;
***REMOVED******REMOVED***font-family:***REMOVED***var(--monospace);
***REMOVED******REMOVED***color:***REMOVED***var(--yellow);
}

.file-link***REMOVED***{
***REMOVED******REMOVED***text-decoration:***REMOVED***underline;
***REMOVED******REMOVED***cursor:***REMOVED***pointer;
}

kbd***REMOVED***{
***REMOVED******REMOVED***line-height:***REMOVED***1.5;
***REMOVED******REMOVED***font-family:***REMOVED***ui-monospace,***REMOVED***Menlo,***REMOVED***Monaco,***REMOVED***Consolas,***REMOVED***"Liberation***REMOVED***Mono",***REMOVED***"Courier***REMOVED***New",***REMOVED***monospace;
***REMOVED******REMOVED***font-size:***REMOVED***0.75rem;
***REMOVED******REMOVED***font-weight:***REMOVED***700;
***REMOVED******REMOVED***background-color:***REMOVED***rgb(38,***REMOVED***40,***REMOVED***44);
***REMOVED******REMOVED***color:***REMOVED***rgb(166,***REMOVED***167,***REMOVED***171);
***REMOVED******REMOVED***padding:***REMOVED***0.15rem***REMOVED***0.3rem;
***REMOVED******REMOVED***border-radius:***REMOVED***0.25rem;
***REMOVED******REMOVED***border-width:***REMOVED***0.0625rem***REMOVED***0.0625rem***REMOVED***0.1875rem;
***REMOVED******REMOVED***border-style:***REMOVED***solid;
***REMOVED******REMOVED***border-color:***REMOVED***rgb(54,***REMOVED***57,***REMOVED***64);
***REMOVED******REMOVED***border-image:***REMOVED***initial;
}
</style>
<div***REMOVED***class="backdrop"***REMOVED***part="backdrop">
***REMOVED******REMOVED***<div***REMOVED***class="window"***REMOVED***part="window">
***REMOVED******REMOVED******REMOVED******REMOVED***<pre***REMOVED***class="message"***REMOVED***part="message"><span***REMOVED***class="plugin"***REMOVED***part="plugin"></span><span***REMOVED***class="message-body"***REMOVED***part="message-body"></span></pre>
***REMOVED******REMOVED******REMOVED******REMOVED***<pre***REMOVED***class="file"***REMOVED***part="file"></pre>
***REMOVED******REMOVED******REMOVED******REMOVED***<pre***REMOVED***class="frame"***REMOVED***part="frame"></pre>
***REMOVED******REMOVED******REMOVED******REMOVED***<pre***REMOVED***class="stack"***REMOVED***part="stack"></pre>
***REMOVED******REMOVED******REMOVED******REMOVED***<div***REMOVED***class="tip"***REMOVED***part="tip">
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Click***REMOVED***outside,***REMOVED***press***REMOVED***<kbd>Esc</kbd>***REMOVED***key,***REMOVED***or***REMOVED***fix***REMOVED***the***REMOVED***code***REMOVED***to***REMOVED***dismiss.<br>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***You***REMOVED***can***REMOVED***also***REMOVED***disable***REMOVED***this***REMOVED***overlay***REMOVED***by***REMOVED***setting
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***<code***REMOVED***part="config-option-name">server.hmr.overlay</code>***REMOVED***to***REMOVED***<code***REMOVED***part="config-option-value">false</code>***REMOVED***in***REMOVED***<code***REMOVED***part="config-file-name">vite.config.js.</code>
***REMOVED******REMOVED******REMOVED******REMOVED***</div>
***REMOVED******REMOVED***</div>
</div>
`;
const***REMOVED***fileRE***REMOVED***=***REMOVED***/(?:[a-zA-Z]:\\|\/).*?:\d+:\d+/g;
const***REMOVED***codeframeRE***REMOVED***=***REMOVED***/^(?:>?\s+\d+\s+\|.*|\s+\|\s*\^.*)\r?\n/gm;
//***REMOVED***Allow***REMOVED***`ErrorOverlay`***REMOVED***to***REMOVED***extend***REMOVED***`HTMLElement`***REMOVED***even***REMOVED***in***REMOVED***environments***REMOVED***where
//***REMOVED***`HTMLElement`***REMOVED***was***REMOVED***not***REMOVED***originally***REMOVED***defined.
const***REMOVED***{***REMOVED***HTMLElement***REMOVED***=***REMOVED***class***REMOVED***{
}***REMOVED***}***REMOVED***=***REMOVED***globalThis;
class***REMOVED***ErrorOverlay***REMOVED***extends***REMOVED***HTMLElement***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(err,***REMOVED***links***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***this.attachShadow({***REMOVED***mode:***REMOVED***'open'***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.innerHTML***REMOVED***=***REMOVED***template;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***codeframeRE.lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasFrame***REMOVED***=***REMOVED***err.frame***REMOVED***&&***REMOVED***codeframeRE.test(err.frame);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***message***REMOVED***=***REMOVED***hasFrame
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***err.message.replace(codeframeRE,***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***err.message;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err.plugin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.plugin',***REMOVED***`[plugin:${err.plugin}]***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.message-body',***REMOVED***message.trim());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[file]***REMOVED***=***REMOVED***(((_a***REMOVED***=***REMOVED***err.loc)***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***_a***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.file)***REMOVED***||***REMOVED***err.id***REMOVED***||***REMOVED***'unknown***REMOVED***file').split(`?`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.file',***REMOVED***`${file}:${err.loc.line}:${err.loc.column}`,***REMOVED***links);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(err.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.file',***REMOVED***file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasFrame)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.frame',***REMOVED***err.frame.trim());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.text('.stack',***REMOVED***err.stack,***REMOVED***links);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.querySelector('.window').addEventListener('click',***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.stopPropagation();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.addEventListener('click',***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.closeOnEsc***REMOVED***=***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(e.key***REMOVED***===***REMOVED***'Escape'***REMOVED***||***REMOVED***e.code***REMOVED***===***REMOVED***'Escape')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.addEventListener('keydown',***REMOVED***this.closeOnEsc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***text(selector,***REMOVED***text,***REMOVED***linkFiles***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***this.root.querySelector(selector);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!linkFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.textContent***REMOVED***=***REMOVED***text;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***curIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileRE.lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((match***REMOVED***=***REMOVED***fileRE.exec(text)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***file,***REMOVED***index***REMOVED***}***REMOVED***=***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***frag***REMOVED***=***REMOVED***text.slice(curIndex,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.appendChild(document.createTextNode(frag));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***link***REMOVED***=***REMOVED***document.createElement('a');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.textContent***REMOVED***=***REMOVED***file;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.className***REMOVED***=***REMOVED***'file-link';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.onclick***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fetch(`${base$1}__open-in-editor?file=`***REMOVED***+***REMOVED***encodeURIComponent(file));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.appendChild(link);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curIndex***REMOVED***+=***REMOVED***frag.length***REMOVED***+***REMOVED***file.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***close()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_a***REMOVED***=***REMOVED***this.parentNode)***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***_a***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.removeChild(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.removeEventListener('keydown',***REMOVED***this.closeOnEsc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***overlayId***REMOVED***=***REMOVED***'vite-error-overlay';
const***REMOVED***{***REMOVED***customElements***REMOVED***}***REMOVED***=***REMOVED***globalThis;***REMOVED***//***REMOVED***Ensure***REMOVED***`customElements`***REMOVED***is***REMOVED***defined***REMOVED***before***REMOVED***the***REMOVED***next***REMOVED***line.
if***REMOVED***(customElements***REMOVED***&&***REMOVED***!customElements.get(overlayId))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***customElements.define(overlayId,***REMOVED***ErrorOverlay);
}

console.debug('[vite]***REMOVED***connecting...');
const***REMOVED***importMetaUrl***REMOVED***=***REMOVED***new***REMOVED***URL(import.meta.url);
//***REMOVED***use***REMOVED***server***REMOVED***configuration,***REMOVED***then***REMOVED***fallback***REMOVED***to***REMOVED***inference
const***REMOVED***serverHost***REMOVED***=***REMOVED***__SERVER_HOST__;
const***REMOVED***socketProtocol***REMOVED***=***REMOVED***__HMR_PROTOCOL__***REMOVED***||***REMOVED***(importMetaUrl.protocol***REMOVED***===***REMOVED***'https:'***REMOVED***?***REMOVED***'wss'***REMOVED***:***REMOVED***'ws');
const***REMOVED***hmrPort***REMOVED***=***REMOVED***__HMR_PORT__;
const***REMOVED***socketHost***REMOVED***=***REMOVED***`${__HMR_HOSTNAME__***REMOVED***||***REMOVED***importMetaUrl.hostname}:${hmrPort***REMOVED***||***REMOVED***importMetaUrl.port}${__HMR_BASE__}`;
const***REMOVED***directSocketHost***REMOVED***=***REMOVED***__HMR_DIRECT_TARGET__;
const***REMOVED***base***REMOVED***=***REMOVED***__BASE__***REMOVED***||***REMOVED***'/';
const***REMOVED***wsToken***REMOVED***=***REMOVED***__WS_TOKEN__;
const***REMOVED***messageBuffer***REMOVED***=***REMOVED***[];
let***REMOVED***socket;
try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fallback;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***use***REMOVED***fallback***REMOVED***when***REMOVED***port***REMOVED***is***REMOVED***inferred***REMOVED***to***REMOVED***prevent***REMOVED***confusion
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hmrPort)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallback***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fallback***REMOVED***to***REMOVED***connecting***REMOVED***directly***REMOVED***to***REMOVED***the***REMOVED***hmr***REMOVED***server
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***servers***REMOVED***which***REMOVED***does***REMOVED***not***REMOVED***support***REMOVED***proxying***REMOVED***websocket
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***socket***REMOVED***=***REMOVED***setupWebSocket(socketProtocol,***REMOVED***directSocketHost,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentScriptHostURL***REMOVED***=***REMOVED***new***REMOVED***URL(import.meta.url);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentScriptHost***REMOVED***=***REMOVED***currentScriptHostURL.host***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentScriptHostURL.pathname.replace(/@vite\/client$/,***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error('[vite]***REMOVED***failed***REMOVED***to***REMOVED***connect***REMOVED***to***REMOVED***websocket.\n'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'your***REMOVED***current***REMOVED***setup:\n'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`***REMOVED******REMOVED***(browser)***REMOVED***${currentScriptHost}***REMOVED***<--[HTTP]-->***REMOVED***${serverHost}***REMOVED***(server)\n`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`***REMOVED******REMOVED***(browser)***REMOVED***${socketHost}***REMOVED***<--[WebSocket***REMOVED***(failing)]-->***REMOVED***${directSocketHost}***REMOVED***(server)\n`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Check***REMOVED***out***REMOVED***your***REMOVED***Vite***REMOVED***/***REMOVED***network***REMOVED***configuration***REMOVED***and***REMOVED***https://vitejs.dev/config/server-options.html#server-hmr***REMOVED***.');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***socket.addEventListener('open',***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.info('[vite]***REMOVED***Direct***REMOVED***websocket***REMOVED***connection***REMOVED***fallback.***REMOVED***Check***REMOVED***out***REMOVED***https://vitejs.dev/config/server-options.html#server-hmr***REMOVED***to***REMOVED***remove***REMOVED***the***REMOVED***previous***REMOVED***connection***REMOVED***error.');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{***REMOVED***once:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***socket***REMOVED***=***REMOVED***setupWebSocket(socketProtocol,***REMOVED***socketHost,***REMOVED***fallback);
}
catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***console.error(`[vite]***REMOVED***failed***REMOVED***to***REMOVED***connect***REMOVED***to***REMOVED***websocket***REMOVED***(${error}).***REMOVED***`);
}
function***REMOVED***setupWebSocket(protocol,***REMOVED***hostAndPath,***REMOVED***onCloseWithoutOpen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***socket***REMOVED***=***REMOVED***new***REMOVED***WebSocket(`${protocol}://${hostAndPath}?token=${wsToken}`,***REMOVED***'vite-hmr');
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isOpened***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***socket.addEventListener('open',***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isOpened***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:ws:connect',***REMOVED***{***REMOVED***webSocket:***REMOVED***socket***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{***REMOVED***once:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Listen***REMOVED***for***REMOVED***messages
***REMOVED******REMOVED******REMOVED******REMOVED***socket.addEventListener('message',***REMOVED***async***REMOVED***({***REMOVED***data***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleMessage(JSON.parse(data));
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ping***REMOVED***server
***REMOVED******REMOVED******REMOVED******REMOVED***socket.addEventListener('close',***REMOVED***async***REMOVED***({***REMOVED***wasClean***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(wasClean)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isOpened***REMOVED***&&***REMOVED***onCloseWithoutOpen)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onCloseWithoutOpen();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:ws:disconnect',***REMOVED***{***REMOVED***webSocket:***REMOVED***socket***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log(`[vite]***REMOVED***server***REMOVED***connection***REMOVED***lost.***REMOVED***polling***REMOVED***for***REMOVED***restart...`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***waitForSuccessfulPing(protocol,***REMOVED***hostAndPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location.reload();
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***socket;
}
function***REMOVED***warnFailedFetch(err,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!err.message.match('fetch'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(err);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***console.error(`[hmr]***REMOVED***Failed***REMOVED***to***REMOVED***reload***REMOVED***${path}.***REMOVED***`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`This***REMOVED***could***REMOVED***be***REMOVED***due***REMOVED***to***REMOVED***syntax***REMOVED***errors***REMOVED***or***REMOVED***importing***REMOVED***non-existent***REMOVED***`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`modules.***REMOVED***(see***REMOVED***errors***REMOVED***above)`);
}
function***REMOVED***cleanUrl(pathname)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***url***REMOVED***=***REMOVED***new***REMOVED***URL(pathname,***REMOVED***location.toString());
***REMOVED******REMOVED******REMOVED******REMOVED***url.searchParams.delete('direct');
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***url.pathname***REMOVED***+***REMOVED***url.search;
}
let***REMOVED***isFirstUpdate***REMOVED***=***REMOVED***true;
const***REMOVED***outdatedLinkTags***REMOVED***=***REMOVED***new***REMOVED***WeakSet();
const***REMOVED***debounceReload***REMOVED***=***REMOVED***(time)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***timer;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(timer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearTimeout(timer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer***REMOVED***=***REMOVED***setTimeout(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***location.reload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***time);
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***pageReload***REMOVED***=***REMOVED***debounceReload(50);
async***REMOVED***function***REMOVED***handleMessage(payload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(payload.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'connected':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.debug(`[vite]***REMOVED***connected.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sendMessageBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***proxy(nginx,***REMOVED***docker)***REMOVED***hmr***REMOVED***ws***REMOVED***maybe***REMOVED***caused***REMOVED***timeout,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***send***REMOVED***ping***REMOVED***package***REMOVED***let***REMOVED***ws***REMOVED***keep***REMOVED***alive.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setInterval(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(socket.readyState***REMOVED***===***REMOVED***socket.OPEN)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***socket.send('{"type":"ping"}');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***__HMR_TIMEOUT__);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'update':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:beforeUpdate',***REMOVED***payload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***this***REMOVED***is***REMOVED***the***REMOVED***first***REMOVED***update***REMOVED***and***REMOVED***there's***REMOVED***already***REMOVED***an***REMOVED***error***REMOVED***overlay,***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***means***REMOVED***the***REMOVED***page***REMOVED***opened***REMOVED***with***REMOVED***existing***REMOVED***server***REMOVED***compile***REMOVED***error***REMOVED***and***REMOVED***the***REMOVED***whole
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***module***REMOVED***script***REMOVED***failed***REMOVED***to***REMOVED***load***REMOVED***(since***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***nested***REMOVED***imports***REMOVED***is***REMOVED***500).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***this***REMOVED***case***REMOVED***a***REMOVED***normal***REMOVED***update***REMOVED***won't***REMOVED***work***REMOVED***and***REMOVED***a***REMOVED***full***REMOVED***reload***REMOVED***is***REMOVED***needed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFirstUpdate***REMOVED***&&***REMOVED***hasErrorOverlay())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***window.location.reload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearErrorOverlay();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFirstUpdate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(payload.updates.map(async***REMOVED***(update)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(update.type***REMOVED***===***REMOVED***'js-update')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***queueUpdate(fetchUpdate(update));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***css-update
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***sent***REMOVED***when***REMOVED***a***REMOVED***css***REMOVED***file***REMOVED***referenced***REMOVED***with***REMOVED***<link>***REMOVED***is***REMOVED***updated
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***path,***REMOVED***timestamp***REMOVED***}***REMOVED***=***REMOVED***update;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***searchUrl***REMOVED***=***REMOVED***cleanUrl(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can't***REMOVED***use***REMOVED***querySelector***REMOVED***with***REMOVED***`[href*=]`***REMOVED***here***REMOVED***since***REMOVED***the***REMOVED***link***REMOVED***may***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***using***REMOVED***relative***REMOVED***paths***REMOVED***so***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***use***REMOVED***link.href***REMOVED***to***REMOVED***grab***REMOVED***the***REMOVED***full
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***URL***REMOVED***for***REMOVED***the***REMOVED***include***REMOVED***check.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***Array.from(document.querySelectorAll('link')).find((e)***REMOVED***=>***REMOVED***!outdatedLinkTags.has(e)***REMOVED***&&***REMOVED***cleanUrl(e.href).includes(searchUrl));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newPath***REMOVED***=***REMOVED***`${base}${searchUrl.slice(1)}${searchUrl.includes('?')***REMOVED***?***REMOVED***'&'***REMOVED***:***REMOVED***'?'}t=${timestamp}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***rather***REMOVED***than***REMOVED***swapping***REMOVED***the***REMOVED***href***REMOVED***on***REMOVED***the***REMOVED***existing***REMOVED***tag,***REMOVED***we***REMOVED***will
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***create***REMOVED***a***REMOVED***new***REMOVED***link***REMOVED***tag.***REMOVED***Once***REMOVED***the***REMOVED***new***REMOVED***stylesheet***REMOVED***has***REMOVED***loaded***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***will***REMOVED***remove***REMOVED***the***REMOVED***existing***REMOVED***link***REMOVED***tag.***REMOVED***This***REMOVED***removes***REMOVED***a***REMOVED***Flash***REMOVED***Of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Unstyled***REMOVED***Content***REMOVED***that***REMOVED***can***REMOVED***occur***REMOVED***when***REMOVED***swapping***REMOVED***out***REMOVED***the***REMOVED***tag***REMOVED***href
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***directly,***REMOVED***as***REMOVED***the***REMOVED***new***REMOVED***stylesheet***REMOVED***has***REMOVED***not***REMOVED***yet***REMOVED***been***REMOVED***loaded.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newLinkTag***REMOVED***=***REMOVED***el.cloneNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newLinkTag.href***REMOVED***=***REMOVED***new***REMOVED***URL(newPath,***REMOVED***el.href).href;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***removeOldEl***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.remove();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.debug(`[vite]***REMOVED***css***REMOVED***hot***REMOVED***updated:***REMOVED***${searchUrl}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newLinkTag.addEventListener('load',***REMOVED***removeOldEl);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newLinkTag.addEventListener('error',***REMOVED***removeOldEl);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outdatedLinkTags.add(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.after(newLinkTag);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:afterUpdate',***REMOVED***payload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'custom':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners(payload.event,***REMOVED***payload.data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'full-reload':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:beforeFullReload',***REMOVED***payload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(payload.path***REMOVED***&&***REMOVED***payload.path.endsWith('.html'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***html***REMOVED***file***REMOVED***is***REMOVED***edited,***REMOVED***only***REMOVED***reload***REMOVED***the***REMOVED***page***REMOVED***if***REMOVED***the***REMOVED***browser***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***currently***REMOVED***on***REMOVED***that***REMOVED***page.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pagePath***REMOVED***=***REMOVED***decodeURI(location.pathname);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***payloadPath***REMOVED***=***REMOVED***base***REMOVED***+***REMOVED***payload.path.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pagePath***REMOVED***===***REMOVED***payloadPath***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***payload.path***REMOVED***===***REMOVED***'/index.html'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(pagePath.endsWith('/')***REMOVED***&&***REMOVED***pagePath***REMOVED***+***REMOVED***'index.html'***REMOVED***===***REMOVED***payloadPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pageReload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pageReload();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'prune':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:beforePrune',***REMOVED***payload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***After***REMOVED***an***REMOVED***HMR***REMOVED***update,***REMOVED***some***REMOVED***modules***REMOVED***are***REMOVED***no***REMOVED***longer***REMOVED***imported***REMOVED***on***REMOVED***the***REMOVED***page
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***they***REMOVED***may***REMOVED***have***REMOVED***left***REMOVED***behind***REMOVED***side***REMOVED***effects***REMOVED***that***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***cleaned***REMOVED***up
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(.e.g***REMOVED***style***REMOVED***injections)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***Trigger***REMOVED***their***REMOVED***dispose***REMOVED***callbacks.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***payload.paths.forEach((path)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fn***REMOVED***=***REMOVED***pruneMap.get(path);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn(dataMap.get(path));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'error':***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:error',***REMOVED***payload);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***err***REMOVED***=***REMOVED***payload.err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(enableOverlay)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createErrorOverlay(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(`[vite]***REMOVED***Internal***REMOVED***Server***REMOVED***Error\n${err.message}\n${err.stack}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***check***REMOVED***=***REMOVED***payload;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***check;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***notifyListeners(event,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cbs***REMOVED***=***REMOVED***customListenersMap.get(event);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cbs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cbs.forEach((cb)***REMOVED***=>***REMOVED***cb(data));
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***enableOverlay***REMOVED***=***REMOVED***__HMR_ENABLE_OVERLAY__;
function***REMOVED***createErrorOverlay(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!enableOverlay)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***clearErrorOverlay();
***REMOVED******REMOVED******REMOVED******REMOVED***document.body.appendChild(new***REMOVED***ErrorOverlay(err));
}
function***REMOVED***clearErrorOverlay()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***document
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.querySelectorAll(overlayId)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.forEach((n)***REMOVED***=>***REMOVED***n.close());
}
function***REMOVED***hasErrorOverlay()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***document.querySelectorAll(overlayId).length;
}
let***REMOVED***pending***REMOVED***=***REMOVED***false;
let***REMOVED***queued***REMOVED***=***REMOVED***[];
/**
***REMOVED*******REMOVED***buffer***REMOVED***multiple***REMOVED***hot***REMOVED***updates***REMOVED***triggered***REMOVED***by***REMOVED***the***REMOVED***same***REMOVED***src***REMOVED***change
***REMOVED*******REMOVED***so***REMOVED***that***REMOVED***they***REMOVED***are***REMOVED***invoked***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***order***REMOVED***they***REMOVED***were***REMOVED***sent.
***REMOVED*******REMOVED***(otherwise***REMOVED***the***REMOVED***order***REMOVED***may***REMOVED***be***REMOVED***inconsistent***REMOVED***because***REMOVED***of***REMOVED***the***REMOVED***http***REMOVED***request***REMOVED***round***REMOVED***trip)
***REMOVED****/
async***REMOVED***function***REMOVED***queueUpdate(p)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***queued.push(p);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pending)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pending***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pending***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loading***REMOVED***=***REMOVED***[...queued];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queued***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(await***REMOVED***Promise.all(loading)).forEach((fn)***REMOVED***=>***REMOVED***fn***REMOVED***&&***REMOVED***fn());
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
async***REMOVED***function***REMOVED***waitForSuccessfulPing(socketProtocol,***REMOVED***hostAndPath,***REMOVED***ms***REMOVED***=***REMOVED***1000)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pingHostProtocol***REMOVED***=***REMOVED***socketProtocol***REMOVED***===***REMOVED***'wss'***REMOVED***?***REMOVED***'https'***REMOVED***:***REMOVED***'http';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ping***REMOVED***=***REMOVED***async***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***fetch***REMOVED***on***REMOVED***a***REMOVED***websocket***REMOVED***URL***REMOVED***will***REMOVED***return***REMOVED***a***REMOVED***successful***REMOVED***promise***REMOVED***with***REMOVED***status***REMOVED***400,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***will***REMOVED***reject***REMOVED***a***REMOVED***networking***REMOVED***error.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***running***REMOVED***on***REMOVED***middleware***REMOVED***mode,***REMOVED***it***REMOVED***returns***REMOVED***status***REMOVED***426,***REMOVED***and***REMOVED***an***REMOVED***cors***REMOVED***error***REMOVED***happens***REMOVED***if***REMOVED***mode***REMOVED***is***REMOVED***not***REMOVED***no-cors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***fetch(`${pingHostProtocol}://${hostAndPath}`,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***'no-cors',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Custom***REMOVED***headers***REMOVED***won't***REMOVED***be***REMOVED***included***REMOVED***in***REMOVED***a***REMOVED***request***REMOVED***with***REMOVED***no-cors***REMOVED***so***REMOVED***(ab)use***REMOVED***one***REMOVED***of***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***safelisted***REMOVED***headers***REMOVED***to***REMOVED***identify***REMOVED***the***REMOVED***ping***REMOVED***request
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Accept:***REMOVED***'text/x-vite-ping',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(await***REMOVED***ping())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***wait(ms);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-constant-condition
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(document.visibilityState***REMOVED***===***REMOVED***'visible')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(await***REMOVED***ping())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***wait(ms);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***waitForWindowShow();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
function***REMOVED***wait(ms)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve)***REMOVED***=>***REMOVED***setTimeout(resolve,***REMOVED***ms));
}
function***REMOVED***waitForWindowShow()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onChange***REMOVED***=***REMOVED***async***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(document.visibilityState***REMOVED***===***REMOVED***'visible')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.removeEventListener('visibilitychange',***REMOVED***onChange);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.addEventListener('visibilitychange',***REMOVED***onChange);
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
const***REMOVED***sheetsMap***REMOVED***=***REMOVED***new***REMOVED***Map();
//***REMOVED***collect***REMOVED***existing***REMOVED***style***REMOVED***elements***REMOVED***that***REMOVED***may***REMOVED***have***REMOVED***been***REMOVED***inserted***REMOVED***during***REMOVED***SSR
//***REMOVED***to***REMOVED***avoid***REMOVED***FOUC***REMOVED***or***REMOVED***duplicate***REMOVED***styles
if***REMOVED***('document'***REMOVED***in***REMOVED***globalThis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***document.querySelectorAll('style[data-vite-dev-id]').forEach((el)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sheetsMap.set(el.getAttribute('data-vite-dev-id'),***REMOVED***el);
***REMOVED******REMOVED******REMOVED******REMOVED***});
}
//***REMOVED***all***REMOVED***css***REMOVED***imports***REMOVED***should***REMOVED***be***REMOVED***inserted***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***position
//***REMOVED***because***REMOVED***after***REMOVED***build***REMOVED***it***REMOVED***will***REMOVED***be***REMOVED***a***REMOVED***single***REMOVED***css***REMOVED***file
let***REMOVED***lastInsertedStyle;
function***REMOVED***updateStyle(id,***REMOVED***content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***style***REMOVED***=***REMOVED***sheetsMap.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!style)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style***REMOVED***=***REMOVED***document.createElement('style');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.setAttribute('type',***REMOVED***'text/css');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.setAttribute('data-vite-dev-id',***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.textContent***REMOVED***=***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!lastInsertedStyle)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.head.appendChild(style);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reset***REMOVED***lastInsertedStyle***REMOVED***after***REMOVED***async
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***because***REMOVED***dynamically***REMOVED***imported***REMOVED***css***REMOVED***will***REMOVED***be***REMOVED***splitted***REMOVED***into***REMOVED***a***REMOVED***different***REMOVED***file
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setTimeout(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastInsertedStyle***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastInsertedStyle.insertAdjacentElement('afterend',***REMOVED***style);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastInsertedStyle***REMOVED***=***REMOVED***style;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.textContent***REMOVED***=***REMOVED***content;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***sheetsMap.set(id,***REMOVED***style);
}
function***REMOVED***removeStyle(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***style***REMOVED***=***REMOVED***sheetsMap.get(id);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(style)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***document.head.removeChild(style);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sheetsMap.delete(id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
async***REMOVED***function***REMOVED***fetchUpdate({***REMOVED***path,***REMOVED***acceptedPath,***REMOVED***timestamp,***REMOVED***explicitImportRequired,***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mod***REMOVED***=***REMOVED***hotModulesMap.get(path);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!mod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***a***REMOVED***code-splitting***REMOVED***project,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it***REMOVED***is***REMOVED***common***REMOVED***that***REMOVED***the***REMOVED***hot-updating***REMOVED***module***REMOVED***is***REMOVED***not***REMOVED***loaded***REMOVED***yet.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/vitejs/vite/issues/721
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fetchedModule;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSelfUpdate***REMOVED***=***REMOVED***path***REMOVED***===***REMOVED***acceptedPath;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***determine***REMOVED***the***REMOVED***qualified***REMOVED***callbacks***REMOVED***before***REMOVED***we***REMOVED***re-import***REMOVED***the***REMOVED***modules
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***qualifiedCallbacks***REMOVED***=***REMOVED***mod.callbacks.filter(({***REMOVED***deps***REMOVED***})***REMOVED***=>***REMOVED***deps.includes(acceptedPath));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSelfUpdate***REMOVED***||***REMOVED***qualifiedCallbacks.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***disposer***REMOVED***=***REMOVED***disposeMap.get(acceptedPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(disposer)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***disposer(dataMap.get(acceptedPath));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[acceptedPathWithoutQuery,***REMOVED***query]***REMOVED***=***REMOVED***acceptedPath.split(`?`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fetchedModule***REMOVED***=***REMOVED***await***REMOVED***import(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***@vite-ignore***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptedPathWithoutQuery.slice(1)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`?${explicitImportRequired***REMOVED***?***REMOVED***'import&'***REMOVED***:***REMOVED***''}t=${timestamp}${query***REMOVED***?***REMOVED***`&${query}`***REMOVED***:***REMOVED***''}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnFailedFetch(e,***REMOVED***acceptedPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***deps,***REMOVED***fn***REMOVED***}***REMOVED***of***REMOVED***qualifiedCallbacks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn(deps.map((dep)***REMOVED***=>***REMOVED***(dep***REMOVED***===***REMOVED***acceptedPath***REMOVED***?***REMOVED***fetchedModule***REMOVED***:***REMOVED***undefined)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loggedPath***REMOVED***=***REMOVED***isSelfUpdate***REMOVED***?***REMOVED***path***REMOVED***:***REMOVED***`${acceptedPath}***REMOVED***via***REMOVED***${path}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.debug(`[vite]***REMOVED***hot***REMOVED***updated:***REMOVED***${loggedPath}`);
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
function***REMOVED***sendMessageBuffer()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(socket.readyState***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***messageBuffer.forEach((msg)***REMOVED***=>***REMOVED***socket.send(msg));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***messageBuffer.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
const***REMOVED***hotModulesMap***REMOVED***=***REMOVED***new***REMOVED***Map();
const***REMOVED***disposeMap***REMOVED***=***REMOVED***new***REMOVED***Map();
const***REMOVED***pruneMap***REMOVED***=***REMOVED***new***REMOVED***Map();
const***REMOVED***dataMap***REMOVED***=***REMOVED***new***REMOVED***Map();
const***REMOVED***customListenersMap***REMOVED***=***REMOVED***new***REMOVED***Map();
const***REMOVED***ctxToListenersMap***REMOVED***=***REMOVED***new***REMOVED***Map();
function***REMOVED***createHotContext(ownerPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dataMap.has(ownerPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dataMap.set(ownerPath,***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***a***REMOVED***file***REMOVED***is***REMOVED***hot***REMOVED***updated,***REMOVED***a***REMOVED***new***REMOVED***context***REMOVED***is***REMOVED***created
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***clear***REMOVED***its***REMOVED***stale***REMOVED***callbacks
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mod***REMOVED***=***REMOVED***hotModulesMap.get(ownerPath);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.callbacks***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***clear***REMOVED***stale***REMOVED***custom***REMOVED***event***REMOVED***listeners
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staleListeners***REMOVED***=***REMOVED***ctxToListenersMap.get(ownerPath);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(staleListeners)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[event,***REMOVED***staleFns]***REMOVED***of***REMOVED***staleListeners)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***listeners***REMOVED***=***REMOVED***customListenersMap.get(event);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(listeners)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customListenersMap.set(event,***REMOVED***listeners.filter((l)***REMOVED***=>***REMOVED***!staleFns.includes(l)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newListeners***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***ctxToListenersMap.set(ownerPath,***REMOVED***newListeners);
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***acceptDeps(deps,***REMOVED***callback***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mod***REMOVED***=***REMOVED***hotModulesMap.get(ownerPath)***REMOVED***||***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***ownerPath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callbacks:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.callbacks.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn:***REMOVED***callback,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hotModulesMap.set(ownerPath,***REMOVED***mod);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hot***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***data()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dataMap.get(ownerPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accept(deps,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***deps***REMOVED***===***REMOVED***'function'***REMOVED***||***REMOVED***!deps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***self-accept:***REMOVED***hot.accept(()***REMOVED***=>***REMOVED***{})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptDeps([ownerPath],***REMOVED***([mod])***REMOVED***=>***REMOVED***deps***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***deps***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***deps(mod));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***deps***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***explicit***REMOVED***deps
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptDeps([deps],***REMOVED***([mod])***REMOVED***=>***REMOVED***callback***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***callback***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***callback(mod));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(Array.isArray(deps))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptDeps(deps,***REMOVED***callback);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`invalid***REMOVED***hot.accept()***REMOVED***usage.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***export***REMOVED***names***REMOVED***(first***REMOVED***arg)***REMOVED***are***REMOVED***irrelevant***REMOVED***on***REMOVED***the***REMOVED***client***REMOVED***side,***REMOVED***they're
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***extracted***REMOVED***in***REMOVED***the***REMOVED***server***REMOVED***for***REMOVED***propagation
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptExports(_,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acceptDeps([ownerPath],***REMOVED***([mod])***REMOVED***=>***REMOVED***callback***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***callback***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***callback(mod));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dispose(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disposeMap.set(ownerPath,***REMOVED***cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prune(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pruneMap.set(ownerPath,***REMOVED***cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Kept***REMOVED***for***REMOVED***backward***REMOVED***compatibility***REMOVED***(#11036)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***untyped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/no-empty-function
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decline()***REMOVED***{***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***tell***REMOVED***the***REMOVED***server***REMOVED***to***REMOVED***re-perform***REMOVED***hmr***REMOVED***propagation***REMOVED***from***REMOVED***this***REMOVED***module***REMOVED***as***REMOVED***root
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidate(message)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***notifyListeners('vite:invalidate',***REMOVED***{***REMOVED***path:***REMOVED***ownerPath,***REMOVED***message***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.send('vite:invalidate',***REMOVED***{***REMOVED***path:***REMOVED***ownerPath,***REMOVED***message***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.debug(`[vite]***REMOVED***invalidate***REMOVED***${ownerPath}${message***REMOVED***?***REMOVED***`:***REMOVED***${message}`***REMOVED***:***REMOVED***''}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***custom***REMOVED***events
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***on(event,***REMOVED***cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***addToMap***REMOVED***=***REMOVED***(map)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existing***REMOVED***=***REMOVED***map.get(event)***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.push(cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.set(event,***REMOVED***existing);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addToMap(customListenersMap);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addToMap(newListeners);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***send(event,***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***messageBuffer.push(JSON.stringify({***REMOVED***type:***REMOVED***'custom',***REMOVED***event,***REMOVED***data***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sendMessageBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hot;
}
/**
***REMOVED*******REMOVED***urls***REMOVED***here***REMOVED***are***REMOVED***dynamic***REMOVED***import()***REMOVED***urls***REMOVED***that***REMOVED***couldn't***REMOVED***be***REMOVED***statically***REMOVED***analyzed
***REMOVED****/
function***REMOVED***injectQuery(url,***REMOVED***queryToInject)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***skip***REMOVED***urls***REMOVED***that***REMOVED***won't***REMOVED***be***REMOVED***handled***REMOVED***by***REMOVED***vite
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(url[0]***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***url[0]***REMOVED***!==***REMOVED***'/')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***url;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can't***REMOVED***use***REMOVED***pathname***REMOVED***from***REMOVED***URL***REMOVED***since***REMOVED***it***REMOVED***may***REMOVED***be***REMOVED***relative***REMOVED***like***REMOVED***../
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pathname***REMOVED***=***REMOVED***url.replace(/#.*$/,***REMOVED***'').replace(/\?.*$/,***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***search,***REMOVED***hash***REMOVED***}***REMOVED***=***REMOVED***new***REMOVED***URL(url,***REMOVED***'http://vitejs.dev');
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${pathname}?${queryToInject}${search***REMOVED***?***REMOVED***`&`***REMOVED***+***REMOVED***search.slice(1)***REMOVED***:***REMOVED***''}${hash***REMOVED***||***REMOVED***''}`;
}

export***REMOVED***{***REMOVED***ErrorOverlay,***REMOVED***createHotContext,***REMOVED***injectQuery,***REMOVED***removeStyle,***REMOVED***updateStyle***REMOVED***};
//#***REMOVED***sourceMappingURL=client.mjs.map
