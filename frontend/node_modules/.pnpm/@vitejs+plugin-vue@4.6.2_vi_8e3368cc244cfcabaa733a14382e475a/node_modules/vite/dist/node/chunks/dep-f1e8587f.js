import***REMOVED***{***REMOVED***G***REMOVED***as***REMOVED***commonjsGlobal,***REMOVED***F***REMOVED***as***REMOVED***getDefaultExportFromCjs***REMOVED***}***REMOVED***from***REMOVED***'./dep-827b23df.js';
import***REMOVED***require$$0__default***REMOVED***from***REMOVED***'fs';
import***REMOVED***require$$0***REMOVED***from***REMOVED***'postcss';
import***REMOVED***require$$0$1***REMOVED***from***REMOVED***'path';
import***REMOVED***require$$3***REMOVED***from***REMOVED***'crypto';
import***REMOVED***require$$0$2***REMOVED***from***REMOVED***'util';
import***REMOVED***{***REMOVED***l***REMOVED***as***REMOVED***lib***REMOVED***}***REMOVED***from***REMOVED***'./dep-c423598f.js';

import***REMOVED***{***REMOVED***fileURLToPath***REMOVED***as***REMOVED***__cjs_fileURLToPath***REMOVED***}***REMOVED***from***REMOVED***'node:url';
import***REMOVED***{***REMOVED***dirname***REMOVED***as***REMOVED***__cjs_dirname***REMOVED***}***REMOVED***from***REMOVED***'node:path';
import***REMOVED***{***REMOVED***createRequire***REMOVED***as***REMOVED***__cjs_createRequire***REMOVED***}***REMOVED***from***REMOVED***'node:module';

const***REMOVED***__filename***REMOVED***=***REMOVED***__cjs_fileURLToPath(import.meta.url);
const***REMOVED***__dirname***REMOVED***=***REMOVED***__cjs_dirname(__filename);
const***REMOVED***require***REMOVED***=***REMOVED***__cjs_createRequire(import.meta.url);
const***REMOVED***__require***REMOVED***=***REMOVED***require;
function***REMOVED***_mergeNamespaces(n,***REMOVED***m)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***m.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***e***REMOVED***=***REMOVED***m[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***e***REMOVED***!==***REMOVED***'string'***REMOVED***&&***REMOVED***!Array.isArray(e))***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***k***REMOVED***in***REMOVED***e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(k***REMOVED***!==***REMOVED***'default'***REMOVED***&&***REMOVED***!(k***REMOVED***in***REMOVED***n))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n[k]***REMOVED***=***REMOVED***e[k];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***n;
}

var***REMOVED***build***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***fs***REMOVED***=***REMOVED***{};

Object.defineProperty(fs,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
fs.getFileSystem***REMOVED***=***REMOVED***getFileSystem;
fs.setFileSystem***REMOVED***=***REMOVED***setFileSystem;
let***REMOVED***fileSystem***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***readFile:***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***Error("readFile***REMOVED***not***REMOVED***implemented");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***writeFile:***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***Error("writeFile***REMOVED***not***REMOVED***implemented");
***REMOVED******REMOVED***}
};

function***REMOVED***setFileSystem(fs)***REMOVED***{
***REMOVED******REMOVED***fileSystem.readFile***REMOVED***=***REMOVED***fs.readFile;
***REMOVED******REMOVED***fileSystem.writeFile***REMOVED***=***REMOVED***fs.writeFile;
}

function***REMOVED***getFileSystem()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***fileSystem;
}

var***REMOVED***pluginFactory***REMOVED***=***REMOVED***{};

var***REMOVED***unquote$1***REMOVED***=***REMOVED***{};

Object.defineProperty(unquote$1,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
unquote$1.default***REMOVED***=***REMOVED***unquote;
//***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/lakenen/node-unquote
const***REMOVED***reg***REMOVED***=***REMOVED***/['"]/;

function***REMOVED***unquote(str)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(reg.test(str.charAt(0)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.substr(1);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(reg.test(str.charAt(str.length***REMOVED***-***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.substr(0,***REMOVED***str.length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***str;
}

var***REMOVED***Parser$1***REMOVED***=***REMOVED***{};

const***REMOVED***matchValueName***REMOVED***=***REMOVED***/[$]?[\w-]+/g;

const***REMOVED***replaceValueSymbols$2***REMOVED***=***REMOVED***(value,***REMOVED***replacements)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***matches;

***REMOVED******REMOVED***while***REMOVED***((matches***REMOVED***=***REMOVED***matchValueName.exec(value)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replacement***REMOVED***=***REMOVED***replacements[matches[0]];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.slice(0,***REMOVED***matches.index)***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacement***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.slice(matchValueName.lastIndex);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchValueName.lastIndex***REMOVED***-=***REMOVED***matches[0].length***REMOVED***-***REMOVED***replacement.length;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***value;
};

var***REMOVED***replaceValueSymbols_1***REMOVED***=***REMOVED***replaceValueSymbols$2;

const***REMOVED***replaceValueSymbols$1***REMOVED***=***REMOVED***replaceValueSymbols_1;

const***REMOVED***replaceSymbols$1***REMOVED***=***REMOVED***(css,***REMOVED***replacements)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***css.walk((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"decl"***REMOVED***&&***REMOVED***node.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***replaceValueSymbols$1(node.value.toString(),***REMOVED***replacements);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.selector***REMOVED***=***REMOVED***replaceValueSymbols$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.selector.toString(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacements
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&***REMOVED***node.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***replaceValueSymbols$1(node.params.toString(),***REMOVED***replacements);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
};

var***REMOVED***replaceSymbols_1***REMOVED***=***REMOVED***replaceSymbols$1;

const***REMOVED***importPattern***REMOVED***=***REMOVED***/^:import\(("[^"]*"|'[^']*'|[^"']+)\)$/;
const***REMOVED***balancedQuotes***REMOVED***=***REMOVED***/^("[^"]*"|'[^']*'|[^"']+)$/;

const***REMOVED***getDeclsObject***REMOVED***=***REMOVED***(rule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***object***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***before***REMOVED***=***REMOVED***decl.raws.before***REMOVED***?***REMOVED***decl.raws.before.trim()***REMOVED***:***REMOVED***"";

***REMOVED******REMOVED******REMOVED******REMOVED***object[before***REMOVED***+***REMOVED***decl.prop]***REMOVED***=***REMOVED***decl.value;
***REMOVED******REMOVED***});

***REMOVED******REMOVED***return***REMOVED***object;
};
/**
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***removeRules
***REMOVED*******REMOVED***@param***REMOVED***{'auto'***REMOVED***|***REMOVED***'rule'***REMOVED***|***REMOVED***'at-rule'}***REMOVED***mode
***REMOVED****/
const***REMOVED***extractICSS$2***REMOVED***=***REMOVED***(css,***REMOVED***removeRules***REMOVED***=***REMOVED***true,***REMOVED***mode***REMOVED***=***REMOVED***"auto")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***icssImports***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***icssExports***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***function***REMOVED***addImports(node,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unquoted***REMOVED***=***REMOVED***path.replace(/'|"/g,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***icssImports[unquoted]***REMOVED***=***REMOVED***Object.assign(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***icssImports[unquoted]***REMOVED***||***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getDeclsObject(node)
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeRules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.remove();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***function***REMOVED***addExports(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(icssExports,***REMOVED***getDeclsObject(node));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeRules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.remove();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***css.each((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"rule"***REMOVED***&&***REMOVED***mode***REMOVED***!==***REMOVED***"at-rule")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.selector.slice(0,***REMOVED***7)***REMOVED***===***REMOVED***":import")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***importPattern.exec(node.selector);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImports(node,***REMOVED***matches[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.selector***REMOVED***===***REMOVED***":export")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addExports(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&***REMOVED***mode***REMOVED***!==***REMOVED***"rule")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.name***REMOVED***===***REMOVED***"icss-import")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***balancedQuotes.exec(node.params);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImports(node,***REMOVED***matches[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.name***REMOVED***===***REMOVED***"icss-export")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addExports(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});

***REMOVED******REMOVED***return***REMOVED***{***REMOVED***icssImports,***REMOVED***icssExports***REMOVED***};
};

var***REMOVED***extractICSS_1***REMOVED***=***REMOVED***extractICSS$2;

const***REMOVED***createImports***REMOVED***=***REMOVED***(imports,***REMOVED***postcss,***REMOVED***mode***REMOVED***=***REMOVED***"rule")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***Object.keys(imports).map((path)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***imports[path];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarations***REMOVED***=***REMOVED***Object.keys(aliases).map((key)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***aliases[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDeclarations***REMOVED***=***REMOVED***declarations.length***REMOVED***>***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rule***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode***REMOVED***===***REMOVED***"rule"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***postcss.rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import('${path}')`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***hasDeclarations***REMOVED***?***REMOVED***"\n"***REMOVED***:***REMOVED***""***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***postcss.atRule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"icss-import",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***`'${path}'`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***hasDeclarations***REMOVED***?***REMOVED***"\n"***REMOVED***:***REMOVED***""***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDeclarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.append(declarations);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rule;
***REMOVED******REMOVED***});
};

const***REMOVED***createExports***REMOVED***=***REMOVED***(exports,***REMOVED***postcss,***REMOVED***mode***REMOVED***=***REMOVED***"rule")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***declarations***REMOVED***=***REMOVED***Object.keys(exports).map((key)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exports[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED***);

***REMOVED******REMOVED***if***REMOVED***(declarations.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***rule***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***mode***REMOVED***===***REMOVED***"rule"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***postcss.rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:export`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***postcss.atRule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"icss-export",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED***rule.append(declarations);

***REMOVED******REMOVED***return***REMOVED***[rule];
};

const***REMOVED***createICSSRules$1***REMOVED***=***REMOVED***(imports,***REMOVED***exports,***REMOVED***postcss,***REMOVED***mode)***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED***...createImports(imports,***REMOVED***postcss,***REMOVED***mode),
***REMOVED******REMOVED***...createExports(exports,***REMOVED***postcss,***REMOVED***mode),
];

var***REMOVED***createICSSRules_1***REMOVED***=***REMOVED***createICSSRules$1;

const***REMOVED***replaceValueSymbols***REMOVED***=***REMOVED***replaceValueSymbols_1;
const***REMOVED***replaceSymbols***REMOVED***=***REMOVED***replaceSymbols_1;
const***REMOVED***extractICSS$1***REMOVED***=***REMOVED***extractICSS_1;
const***REMOVED***createICSSRules***REMOVED***=***REMOVED***createICSSRules_1;

var***REMOVED***src$4***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***replaceValueSymbols,
***REMOVED******REMOVED***replaceSymbols,
***REMOVED******REMOVED***extractICSS:***REMOVED***extractICSS$1,
***REMOVED******REMOVED***createICSSRules,
};

Object.defineProperty(Parser$1,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
Parser$1.default***REMOVED***=***REMOVED***void***REMOVED***0;

var***REMOVED***_icssUtils***REMOVED***=***REMOVED***src$4;

//***REMOVED***Initially***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/css-modules/css-modules-loader-core
const***REMOVED***importRegexp***REMOVED***=***REMOVED***/^:import\((.+)\)$/;

class***REMOVED***Parser***REMOVED***{
***REMOVED******REMOVED***constructor(pathFetcher,***REMOVED***trace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.pathFetcher***REMOVED***=***REMOVED***pathFetcher;
***REMOVED******REMOVED******REMOVED******REMOVED***this.plugin***REMOVED***=***REMOVED***this.plugin.bind(this);
***REMOVED******REMOVED******REMOVED******REMOVED***this.exportTokens***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.translations***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.trace***REMOVED***=***REMOVED***trace;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***plugin()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"css-modules-parser",

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***OnceExit(css)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(parser.fetchAllImports(css));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parser.linkImportedSymbols(css);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser.extractExports(css);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***fetchAllImports(css)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***imports***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***css.each(node***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***==***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector.match(importRegexp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports.push(this.fetchImport(node,***REMOVED***css.source.input.from,***REMOVED***imports.length));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***imports;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***linkImportedSymbols(css)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_icssUtils.replaceSymbols)(css,***REMOVED***this.translations);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***extractExports(css)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***css.each(node***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***==***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector***REMOVED***==***REMOVED***":export")***REMOVED***this.handleExport(node);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***handleExport(exportNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***exportNode.each(decl***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***==***REMOVED***"decl")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(this.translations).forEach(translation***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***decl.value.replace(translation,***REMOVED***this.translations[translation]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportTokens[decl.prop]***REMOVED***=***REMOVED***decl.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***exportNode.remove();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***async***REMOVED***fetchImport(importNode,***REMOVED***relativeTo,***REMOVED***depNr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***file***REMOVED***=***REMOVED***importNode.selector.match(importRegexp)[1];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***depTrace***REMOVED***=***REMOVED***this.trace***REMOVED***+***REMOVED***String.fromCharCode(depNr);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***await***REMOVED***this.pathFetcher(file,***REMOVED***relativeTo,***REMOVED***depTrace);

***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode.each(decl***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***==***REMOVED***"decl")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.translations[decl.prop]***REMOVED***=***REMOVED***exports[decl.value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode.remove();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log(err);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

}

Parser$1.default***REMOVED***=***REMOVED***Parser;

var***REMOVED***saveJSON$1***REMOVED***=***REMOVED***{};

Object.defineProperty(saveJSON$1,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
saveJSON$1.default***REMOVED***=***REMOVED***saveJSON;

var***REMOVED***_fs$2***REMOVED***=***REMOVED***fs;

function***REMOVED***saveJSON(cssFile,***REMOVED***json)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writeFile
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***(0,***REMOVED***_fs$2.getFileSystem)();
***REMOVED******REMOVED******REMOVED******REMOVED***writeFile(`${cssFile}.json`,***REMOVED***JSON.stringify(json),***REMOVED***e***REMOVED***=>***REMOVED***e***REMOVED***?***REMOVED***reject(e)***REMOVED***:***REMOVED***resolve(json));
***REMOVED******REMOVED***});
}

var***REMOVED***localsConvention***REMOVED***=***REMOVED***{};

/**
***REMOVED*******REMOVED***lodash***REMOVED***(Custom***REMOVED***Build)***REMOVED***<https://lodash.com/>
***REMOVED*******REMOVED***Build:***REMOVED***`lodash***REMOVED***modularize***REMOVED***exports="npm"***REMOVED***-o***REMOVED***./`
***REMOVED*******REMOVED***Copyright***REMOVED***jQuery***REMOVED***Foundation***REMOVED***and***REMOVED***other***REMOVED***contributors***REMOVED***<https://jquery.org/>
***REMOVED*******REMOVED***Released***REMOVED***under***REMOVED***MIT***REMOVED***license***REMOVED***<https://lodash.com/license>
***REMOVED*******REMOVED***Based***REMOVED***on***REMOVED***Underscore.js***REMOVED***1.8.3***REMOVED***<http://underscorejs.org/LICENSE>
***REMOVED*******REMOVED***Copyright***REMOVED***Jeremy***REMOVED***Ashkenas,***REMOVED***DocumentCloud***REMOVED***and***REMOVED***Investigative***REMOVED***Reporters***REMOVED***&***REMOVED***Editors
***REMOVED****/

/*****REMOVED***Used***REMOVED***as***REMOVED***references***REMOVED***for***REMOVED***various***REMOVED***`Number`***REMOVED***constants.***REMOVED****/
var***REMOVED***INFINITY***REMOVED***=***REMOVED***1***REMOVED***/***REMOVED***0;

/*****REMOVED***`Object#toString`***REMOVED***result***REMOVED***references.***REMOVED****/
var***REMOVED***symbolTag***REMOVED***=***REMOVED***'[object***REMOVED***Symbol]';

/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***words***REMOVED***composed***REMOVED***of***REMOVED***alphanumeric***REMOVED***characters.***REMOVED****/
var***REMOVED***reAsciiWord***REMOVED***=***REMOVED***/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***Latin***REMOVED***Unicode***REMOVED***letters***REMOVED***(excluding***REMOVED***mathematical***REMOVED***operators).***REMOVED****/
var***REMOVED***reLatin***REMOVED***=***REMOVED***/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***character***REMOVED***classes.***REMOVED****/
var***REMOVED***rsAstralRange***REMOVED***=***REMOVED***'\\ud800-\\udfff',
***REMOVED******REMOVED******REMOVED******REMOVED***rsComboMarksRange***REMOVED***=***REMOVED***'\\u0300-\\u036f\\ufe20-\\ufe23',
***REMOVED******REMOVED******REMOVED******REMOVED***rsComboSymbolsRange***REMOVED***=***REMOVED***'\\u20d0-\\u20f0',
***REMOVED******REMOVED******REMOVED******REMOVED***rsDingbatRange***REMOVED***=***REMOVED***'\\u2700-\\u27bf',
***REMOVED******REMOVED******REMOVED******REMOVED***rsLowerRange***REMOVED***=***REMOVED***'a-z\\xdf-\\xf6\\xf8-\\xff',
***REMOVED******REMOVED******REMOVED******REMOVED***rsMathOpRange***REMOVED***=***REMOVED***'\\xac\\xb1\\xd7\\xf7',
***REMOVED******REMOVED******REMOVED******REMOVED***rsNonCharRange***REMOVED***=***REMOVED***'\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
***REMOVED******REMOVED******REMOVED******REMOVED***rsPunctuationRange***REMOVED***=***REMOVED***'\\u2000-\\u206f',
***REMOVED******REMOVED******REMOVED******REMOVED***rsSpaceRange***REMOVED***=***REMOVED***'***REMOVED***\\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
***REMOVED******REMOVED******REMOVED******REMOVED***rsUpperRange***REMOVED***=***REMOVED***'A-Z\\xc0-\\xd6\\xd8-\\xde',
***REMOVED******REMOVED******REMOVED******REMOVED***rsVarRange***REMOVED***=***REMOVED***'\\ufe0e\\ufe0f',
***REMOVED******REMOVED******REMOVED******REMOVED***rsBreakRange***REMOVED***=***REMOVED***rsMathOpRange***REMOVED***+***REMOVED***rsNonCharRange***REMOVED***+***REMOVED***rsPunctuationRange***REMOVED***+***REMOVED***rsSpaceRange;

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***capture***REMOVED***groups.***REMOVED****/
var***REMOVED***rsApos***REMOVED***=***REMOVED***"['\u2019]",
***REMOVED******REMOVED******REMOVED******REMOVED***rsAstral***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsBreak***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsBreakRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsCombo***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsComboMarksRange***REMOVED***+***REMOVED***rsComboSymbolsRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsDigits***REMOVED***=***REMOVED***'\\d+',
***REMOVED******REMOVED******REMOVED******REMOVED***rsDingbat***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsDingbatRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsLower***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsLowerRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsMisc***REMOVED***=***REMOVED***'[^'***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***rsBreakRange***REMOVED***+***REMOVED***rsDigits***REMOVED***+***REMOVED***rsDingbatRange***REMOVED***+***REMOVED***rsLowerRange***REMOVED***+***REMOVED***rsUpperRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsFitz***REMOVED***=***REMOVED***'\\ud83c[\\udffb-\\udfff]',
***REMOVED******REMOVED******REMOVED******REMOVED***rsModifier***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsCombo***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsFitz***REMOVED***+***REMOVED***')',
***REMOVED******REMOVED******REMOVED******REMOVED***rsNonAstral***REMOVED***=***REMOVED***'[^'***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsRegional***REMOVED***=***REMOVED***'(?:\\ud83c[\\udde6-\\uddff]){2}',
***REMOVED******REMOVED******REMOVED******REMOVED***rsSurrPair***REMOVED***=***REMOVED***'[\\ud800-\\udbff][\\udc00-\\udfff]',
***REMOVED******REMOVED******REMOVED******REMOVED***rsUpper***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsUpperRange***REMOVED***+***REMOVED***']',
***REMOVED******REMOVED******REMOVED******REMOVED***rsZWJ***REMOVED***=***REMOVED***'\\u200d';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***regexes.***REMOVED****/
var***REMOVED***rsLowerMisc***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsLower***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsMisc***REMOVED***+***REMOVED***')',
***REMOVED******REMOVED******REMOVED******REMOVED***rsUpperMisc***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsUpper***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsMisc***REMOVED***+***REMOVED***')',
***REMOVED******REMOVED******REMOVED******REMOVED***rsOptLowerContr***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsApos***REMOVED***+***REMOVED***'(?:d|ll|m|re|s|t|ve))?',
***REMOVED******REMOVED******REMOVED******REMOVED***rsOptUpperContr***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsApos***REMOVED***+***REMOVED***'(?:D|LL|M|RE|S|T|VE))?',
***REMOVED******REMOVED******REMOVED******REMOVED***reOptMod***REMOVED***=***REMOVED***rsModifier***REMOVED***+***REMOVED***'?',
***REMOVED******REMOVED******REMOVED******REMOVED***rsOptVar***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsVarRange***REMOVED***+***REMOVED***']?',
***REMOVED******REMOVED******REMOVED******REMOVED***rsOptJoin***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsZWJ***REMOVED***+***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsNonAstral,***REMOVED***rsRegional,***REMOVED***rsSurrPair].join('|')***REMOVED***+***REMOVED***')'***REMOVED***+***REMOVED***rsOptVar***REMOVED***+***REMOVED***reOptMod***REMOVED***+***REMOVED***')*',
***REMOVED******REMOVED******REMOVED******REMOVED***rsSeq***REMOVED***=***REMOVED***rsOptVar***REMOVED***+***REMOVED***reOptMod***REMOVED***+***REMOVED***rsOptJoin,
***REMOVED******REMOVED******REMOVED******REMOVED***rsEmoji***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsDingbat,***REMOVED***rsRegional,***REMOVED***rsSurrPair].join('|')***REMOVED***+***REMOVED***')'***REMOVED***+***REMOVED***rsSeq,
***REMOVED******REMOVED******REMOVED******REMOVED***rsSymbol***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsNonAstral***REMOVED***+***REMOVED***rsCombo***REMOVED***+***REMOVED***'?',***REMOVED***rsCombo,***REMOVED***rsRegional,***REMOVED***rsSurrPair,***REMOVED***rsAstral].join('|')***REMOVED***+***REMOVED***')';

/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***apostrophes.***REMOVED****/
var***REMOVED***reApos***REMOVED***=***REMOVED***RegExp(rsApos,***REMOVED***'g');

/**
***REMOVED*******REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***[combining***REMOVED***diacritical***REMOVED***marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks)***REMOVED***and
***REMOVED*******REMOVED***[combining***REMOVED***diacritical***REMOVED***marks***REMOVED***for***REMOVED***symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
***REMOVED****/
var***REMOVED***reComboMark***REMOVED***=***REMOVED***RegExp(rsCombo,***REMOVED***'g');

/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***[string***REMOVED***symbols](https://mathiasbynens.be/notes/javascript-unicode).***REMOVED****/
var***REMOVED***reUnicode***REMOVED***=***REMOVED***RegExp(rsFitz***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***rsFitz***REMOVED***+***REMOVED***')|'***REMOVED***+***REMOVED***rsSymbol***REMOVED***+***REMOVED***rsSeq,***REMOVED***'g');

/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***complex***REMOVED***or***REMOVED***compound***REMOVED***words.***REMOVED****/
var***REMOVED***reUnicodeWord***REMOVED***=***REMOVED***RegExp([
***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'?'***REMOVED***+***REMOVED***rsLower***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptLowerContr***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***[rsBreak,***REMOVED***rsUpper,***REMOVED***'$'].join('|')***REMOVED***+***REMOVED***')',
***REMOVED******REMOVED***rsUpperMisc***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptUpperContr***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***[rsBreak,***REMOVED***rsUpper***REMOVED***+***REMOVED***rsLowerMisc,***REMOVED***'$'].join('|')***REMOVED***+***REMOVED***')',
***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'?'***REMOVED***+***REMOVED***rsLowerMisc***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptLowerContr,
***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptUpperContr,
***REMOVED******REMOVED***rsDigits,
***REMOVED******REMOVED***rsEmoji
].join('|'),***REMOVED***'g');

/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***strings***REMOVED***with***REMOVED***[zero-width***REMOVED***joiners***REMOVED***or***REMOVED***code***REMOVED***points***REMOVED***from***REMOVED***the***REMOVED***astral***REMOVED***planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).***REMOVED****/
var***REMOVED***reHasUnicode***REMOVED***=***REMOVED***RegExp('['***REMOVED***+***REMOVED***rsZWJ***REMOVED***+***REMOVED***rsAstralRange***REMOVED******REMOVED***+***REMOVED***rsComboMarksRange***REMOVED***+***REMOVED***rsComboSymbolsRange***REMOVED***+***REMOVED***rsVarRange***REMOVED***+***REMOVED***']');

/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***strings***REMOVED***that***REMOVED***need***REMOVED***a***REMOVED***more***REMOVED***robust***REMOVED***regexp***REMOVED***to***REMOVED***match***REMOVED***words.***REMOVED****/
var***REMOVED***reHasUnicodeWord***REMOVED***=***REMOVED***/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9***REMOVED***]/;

/*****REMOVED***Used***REMOVED***to***REMOVED***map***REMOVED***Latin***REMOVED***Unicode***REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters.***REMOVED****/
var***REMOVED***deburredLetters***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Latin-1***REMOVED***Supplement***REMOVED***block.
***REMOVED******REMOVED***'\xc0':***REMOVED***'A',***REMOVED******REMOVED***'\xc1':***REMOVED***'A',***REMOVED***'\xc2':***REMOVED***'A',***REMOVED***'\xc3':***REMOVED***'A',***REMOVED***'\xc4':***REMOVED***'A',***REMOVED***'\xc5':***REMOVED***'A',
***REMOVED******REMOVED***'\xe0':***REMOVED***'a',***REMOVED******REMOVED***'\xe1':***REMOVED***'a',***REMOVED***'\xe2':***REMOVED***'a',***REMOVED***'\xe3':***REMOVED***'a',***REMOVED***'\xe4':***REMOVED***'a',***REMOVED***'\xe5':***REMOVED***'a',
***REMOVED******REMOVED***'\xc7':***REMOVED***'C',***REMOVED******REMOVED***'\xe7':***REMOVED***'c',
***REMOVED******REMOVED***'\xd0':***REMOVED***'D',***REMOVED******REMOVED***'\xf0':***REMOVED***'d',
***REMOVED******REMOVED***'\xc8':***REMOVED***'E',***REMOVED******REMOVED***'\xc9':***REMOVED***'E',***REMOVED***'\xca':***REMOVED***'E',***REMOVED***'\xcb':***REMOVED***'E',
***REMOVED******REMOVED***'\xe8':***REMOVED***'e',***REMOVED******REMOVED***'\xe9':***REMOVED***'e',***REMOVED***'\xea':***REMOVED***'e',***REMOVED***'\xeb':***REMOVED***'e',
***REMOVED******REMOVED***'\xcc':***REMOVED***'I',***REMOVED******REMOVED***'\xcd':***REMOVED***'I',***REMOVED***'\xce':***REMOVED***'I',***REMOVED***'\xcf':***REMOVED***'I',
***REMOVED******REMOVED***'\xec':***REMOVED***'i',***REMOVED******REMOVED***'\xed':***REMOVED***'i',***REMOVED***'\xee':***REMOVED***'i',***REMOVED***'\xef':***REMOVED***'i',
***REMOVED******REMOVED***'\xd1':***REMOVED***'N',***REMOVED******REMOVED***'\xf1':***REMOVED***'n',
***REMOVED******REMOVED***'\xd2':***REMOVED***'O',***REMOVED******REMOVED***'\xd3':***REMOVED***'O',***REMOVED***'\xd4':***REMOVED***'O',***REMOVED***'\xd5':***REMOVED***'O',***REMOVED***'\xd6':***REMOVED***'O',***REMOVED***'\xd8':***REMOVED***'O',
***REMOVED******REMOVED***'\xf2':***REMOVED***'o',***REMOVED******REMOVED***'\xf3':***REMOVED***'o',***REMOVED***'\xf4':***REMOVED***'o',***REMOVED***'\xf5':***REMOVED***'o',***REMOVED***'\xf6':***REMOVED***'o',***REMOVED***'\xf8':***REMOVED***'o',
***REMOVED******REMOVED***'\xd9':***REMOVED***'U',***REMOVED******REMOVED***'\xda':***REMOVED***'U',***REMOVED***'\xdb':***REMOVED***'U',***REMOVED***'\xdc':***REMOVED***'U',
***REMOVED******REMOVED***'\xf9':***REMOVED***'u',***REMOVED******REMOVED***'\xfa':***REMOVED***'u',***REMOVED***'\xfb':***REMOVED***'u',***REMOVED***'\xfc':***REMOVED***'u',
***REMOVED******REMOVED***'\xdd':***REMOVED***'Y',***REMOVED******REMOVED***'\xfd':***REMOVED***'y',***REMOVED***'\xff':***REMOVED***'y',
***REMOVED******REMOVED***'\xc6':***REMOVED***'Ae',***REMOVED***'\xe6':***REMOVED***'ae',
***REMOVED******REMOVED***'\xde':***REMOVED***'Th',***REMOVED***'\xfe':***REMOVED***'th',
***REMOVED******REMOVED***'\xdf':***REMOVED***'ss',
***REMOVED******REMOVED***//***REMOVED***Latin***REMOVED***Extended-A***REMOVED***block.
***REMOVED******REMOVED***'\u0100':***REMOVED***'A',***REMOVED******REMOVED***'\u0102':***REMOVED***'A',***REMOVED***'\u0104':***REMOVED***'A',
***REMOVED******REMOVED***'\u0101':***REMOVED***'a',***REMOVED******REMOVED***'\u0103':***REMOVED***'a',***REMOVED***'\u0105':***REMOVED***'a',
***REMOVED******REMOVED***'\u0106':***REMOVED***'C',***REMOVED******REMOVED***'\u0108':***REMOVED***'C',***REMOVED***'\u010a':***REMOVED***'C',***REMOVED***'\u010c':***REMOVED***'C',
***REMOVED******REMOVED***'\u0107':***REMOVED***'c',***REMOVED******REMOVED***'\u0109':***REMOVED***'c',***REMOVED***'\u010b':***REMOVED***'c',***REMOVED***'\u010d':***REMOVED***'c',
***REMOVED******REMOVED***'\u010e':***REMOVED***'D',***REMOVED******REMOVED***'\u0110':***REMOVED***'D',***REMOVED***'\u010f':***REMOVED***'d',***REMOVED***'\u0111':***REMOVED***'d',
***REMOVED******REMOVED***'\u0112':***REMOVED***'E',***REMOVED******REMOVED***'\u0114':***REMOVED***'E',***REMOVED***'\u0116':***REMOVED***'E',***REMOVED***'\u0118':***REMOVED***'E',***REMOVED***'\u011a':***REMOVED***'E',
***REMOVED******REMOVED***'\u0113':***REMOVED***'e',***REMOVED******REMOVED***'\u0115':***REMOVED***'e',***REMOVED***'\u0117':***REMOVED***'e',***REMOVED***'\u0119':***REMOVED***'e',***REMOVED***'\u011b':***REMOVED***'e',
***REMOVED******REMOVED***'\u011c':***REMOVED***'G',***REMOVED******REMOVED***'\u011e':***REMOVED***'G',***REMOVED***'\u0120':***REMOVED***'G',***REMOVED***'\u0122':***REMOVED***'G',
***REMOVED******REMOVED***'\u011d':***REMOVED***'g',***REMOVED******REMOVED***'\u011f':***REMOVED***'g',***REMOVED***'\u0121':***REMOVED***'g',***REMOVED***'\u0123':***REMOVED***'g',
***REMOVED******REMOVED***'\u0124':***REMOVED***'H',***REMOVED******REMOVED***'\u0126':***REMOVED***'H',***REMOVED***'\u0125':***REMOVED***'h',***REMOVED***'\u0127':***REMOVED***'h',
***REMOVED******REMOVED***'\u0128':***REMOVED***'I',***REMOVED******REMOVED***'\u012a':***REMOVED***'I',***REMOVED***'\u012c':***REMOVED***'I',***REMOVED***'\u012e':***REMOVED***'I',***REMOVED***'\u0130':***REMOVED***'I',
***REMOVED******REMOVED***'\u0129':***REMOVED***'i',***REMOVED******REMOVED***'\u012b':***REMOVED***'i',***REMOVED***'\u012d':***REMOVED***'i',***REMOVED***'\u012f':***REMOVED***'i',***REMOVED***'\u0131':***REMOVED***'i',
***REMOVED******REMOVED***'\u0134':***REMOVED***'J',***REMOVED******REMOVED***'\u0135':***REMOVED***'j',
***REMOVED******REMOVED***'\u0136':***REMOVED***'K',***REMOVED******REMOVED***'\u0137':***REMOVED***'k',***REMOVED***'\u0138':***REMOVED***'k',
***REMOVED******REMOVED***'\u0139':***REMOVED***'L',***REMOVED******REMOVED***'\u013b':***REMOVED***'L',***REMOVED***'\u013d':***REMOVED***'L',***REMOVED***'\u013f':***REMOVED***'L',***REMOVED***'\u0141':***REMOVED***'L',
***REMOVED******REMOVED***'\u013a':***REMOVED***'l',***REMOVED******REMOVED***'\u013c':***REMOVED***'l',***REMOVED***'\u013e':***REMOVED***'l',***REMOVED***'\u0140':***REMOVED***'l',***REMOVED***'\u0142':***REMOVED***'l',
***REMOVED******REMOVED***'\u0143':***REMOVED***'N',***REMOVED******REMOVED***'\u0145':***REMOVED***'N',***REMOVED***'\u0147':***REMOVED***'N',***REMOVED***'\u014a':***REMOVED***'N',
***REMOVED******REMOVED***'\u0144':***REMOVED***'n',***REMOVED******REMOVED***'\u0146':***REMOVED***'n',***REMOVED***'\u0148':***REMOVED***'n',***REMOVED***'\u014b':***REMOVED***'n',
***REMOVED******REMOVED***'\u014c':***REMOVED***'O',***REMOVED******REMOVED***'\u014e':***REMOVED***'O',***REMOVED***'\u0150':***REMOVED***'O',
***REMOVED******REMOVED***'\u014d':***REMOVED***'o',***REMOVED******REMOVED***'\u014f':***REMOVED***'o',***REMOVED***'\u0151':***REMOVED***'o',
***REMOVED******REMOVED***'\u0154':***REMOVED***'R',***REMOVED******REMOVED***'\u0156':***REMOVED***'R',***REMOVED***'\u0158':***REMOVED***'R',
***REMOVED******REMOVED***'\u0155':***REMOVED***'r',***REMOVED******REMOVED***'\u0157':***REMOVED***'r',***REMOVED***'\u0159':***REMOVED***'r',
***REMOVED******REMOVED***'\u015a':***REMOVED***'S',***REMOVED******REMOVED***'\u015c':***REMOVED***'S',***REMOVED***'\u015e':***REMOVED***'S',***REMOVED***'\u0160':***REMOVED***'S',
***REMOVED******REMOVED***'\u015b':***REMOVED***'s',***REMOVED******REMOVED***'\u015d':***REMOVED***'s',***REMOVED***'\u015f':***REMOVED***'s',***REMOVED***'\u0161':***REMOVED***'s',
***REMOVED******REMOVED***'\u0162':***REMOVED***'T',***REMOVED******REMOVED***'\u0164':***REMOVED***'T',***REMOVED***'\u0166':***REMOVED***'T',
***REMOVED******REMOVED***'\u0163':***REMOVED***'t',***REMOVED******REMOVED***'\u0165':***REMOVED***'t',***REMOVED***'\u0167':***REMOVED***'t',
***REMOVED******REMOVED***'\u0168':***REMOVED***'U',***REMOVED******REMOVED***'\u016a':***REMOVED***'U',***REMOVED***'\u016c':***REMOVED***'U',***REMOVED***'\u016e':***REMOVED***'U',***REMOVED***'\u0170':***REMOVED***'U',***REMOVED***'\u0172':***REMOVED***'U',
***REMOVED******REMOVED***'\u0169':***REMOVED***'u',***REMOVED******REMOVED***'\u016b':***REMOVED***'u',***REMOVED***'\u016d':***REMOVED***'u',***REMOVED***'\u016f':***REMOVED***'u',***REMOVED***'\u0171':***REMOVED***'u',***REMOVED***'\u0173':***REMOVED***'u',
***REMOVED******REMOVED***'\u0174':***REMOVED***'W',***REMOVED******REMOVED***'\u0175':***REMOVED***'w',
***REMOVED******REMOVED***'\u0176':***REMOVED***'Y',***REMOVED******REMOVED***'\u0177':***REMOVED***'y',***REMOVED***'\u0178':***REMOVED***'Y',
***REMOVED******REMOVED***'\u0179':***REMOVED***'Z',***REMOVED******REMOVED***'\u017b':***REMOVED***'Z',***REMOVED***'\u017d':***REMOVED***'Z',
***REMOVED******REMOVED***'\u017a':***REMOVED***'z',***REMOVED******REMOVED***'\u017c':***REMOVED***'z',***REMOVED***'\u017e':***REMOVED***'z',
***REMOVED******REMOVED***'\u0132':***REMOVED***'IJ',***REMOVED***'\u0133':***REMOVED***'ij',
***REMOVED******REMOVED***'\u0152':***REMOVED***'Oe',***REMOVED***'\u0153':***REMOVED***'oe',
***REMOVED******REMOVED***'\u0149':***REMOVED***"'n",***REMOVED***'\u017f':***REMOVED***'ss'
};

/*****REMOVED***Detect***REMOVED***free***REMOVED***variable***REMOVED***`global`***REMOVED***from***REMOVED***Node.js.***REMOVED****/
var***REMOVED***freeGlobal***REMOVED***=***REMOVED***typeof***REMOVED***commonjsGlobal***REMOVED***==***REMOVED***'object'***REMOVED***&&***REMOVED***commonjsGlobal***REMOVED***&&***REMOVED***commonjsGlobal.Object***REMOVED***===***REMOVED***Object***REMOVED***&&***REMOVED***commonjsGlobal;

/*****REMOVED***Detect***REMOVED***free***REMOVED***variable***REMOVED***`self`.***REMOVED****/
var***REMOVED***freeSelf***REMOVED***=***REMOVED***typeof***REMOVED***self***REMOVED***==***REMOVED***'object'***REMOVED***&&***REMOVED***self***REMOVED***&&***REMOVED***self.Object***REMOVED***===***REMOVED***Object***REMOVED***&&***REMOVED***self;

/*****REMOVED***Used***REMOVED***as***REMOVED***a***REMOVED***reference***REMOVED***to***REMOVED***the***REMOVED***global***REMOVED***object.***REMOVED****/
var***REMOVED***root$2***REMOVED***=***REMOVED***freeGlobal***REMOVED***||***REMOVED***freeSelf***REMOVED***||***REMOVED***Function('return***REMOVED***this')();

/**
***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`_.reduce`***REMOVED***for***REMOVED***arrays***REMOVED***without***REMOVED***support***REMOVED***for
***REMOVED*******REMOVED***iteratee***REMOVED***shorthands.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[array]***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***iterate***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***iteratee***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***[accumulator]***REMOVED***The***REMOVED***initial***REMOVED***value.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[initAccum]***REMOVED***Specify***REMOVED***using***REMOVED***the***REMOVED***first***REMOVED***element***REMOVED***of***REMOVED***`array`***REMOVED***as
***REMOVED*******REMOVED******REMOVED***the***REMOVED***initial***REMOVED***value.
***REMOVED*******REMOVED***@returns***REMOVED***{*}***REMOVED***Returns***REMOVED***the***REMOVED***accumulated***REMOVED***value.
***REMOVED****/
function***REMOVED***arrayReduce(array,***REMOVED***iteratee,***REMOVED***accumulator,***REMOVED***initAccum)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***?***REMOVED***array.length***REMOVED***:***REMOVED***0;

***REMOVED******REMOVED***if***REMOVED***(initAccum***REMOVED***&&***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***accumulator***REMOVED***=***REMOVED***array[++index];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***accumulator***REMOVED***=***REMOVED***iteratee(accumulator,***REMOVED***array[index],***REMOVED***index,***REMOVED***array);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***accumulator;
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***an***REMOVED***ASCII***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
***REMOVED****/
function***REMOVED***asciiToArray(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***string.split('');
}

/**
***REMOVED*******REMOVED***Splits***REMOVED***an***REMOVED***ASCII***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
***REMOVED****/
function***REMOVED***asciiWords(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***string.match(reAsciiWord)***REMOVED***||***REMOVED***[];
}

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.propertyOf`***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***deep***REMOVED***paths.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***accessor***REMOVED***function.
***REMOVED****/
function***REMOVED***basePropertyOf(object)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***object[key];
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Used***REMOVED***by***REMOVED***`_.deburr`***REMOVED***to***REMOVED***convert***REMOVED***Latin-1***REMOVED***Supplement***REMOVED***and***REMOVED***Latin***REMOVED***Extended-A
***REMOVED*******REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***letter***REMOVED***The***REMOVED***matched***REMOVED***letter***REMOVED***to***REMOVED***deburr.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***deburred***REMOVED***letter.
***REMOVED****/
var***REMOVED***deburrLetter***REMOVED***=***REMOVED***basePropertyOf(deburredLetters);

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`string`***REMOVED***contains***REMOVED***Unicode***REMOVED***symbols.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***a***REMOVED***symbol***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***hasUnicode(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***reHasUnicode.test(string);
}

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`string`***REMOVED***contains***REMOVED***a***REMOVED***word***REMOVED***composed***REMOVED***of***REMOVED***Unicode***REMOVED***symbols.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***a***REMOVED***word***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***hasUnicodeWord(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***reHasUnicodeWord.test(string);
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
***REMOVED****/
function***REMOVED***stringToArray(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***hasUnicode(string)
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***unicodeToArray(string)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***asciiToArray(string);
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***a***REMOVED***Unicode***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
***REMOVED****/
function***REMOVED***unicodeToArray(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***string.match(reUnicode)***REMOVED***||***REMOVED***[];
}

/**
***REMOVED*******REMOVED***Splits***REMOVED***a***REMOVED***Unicode***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
***REMOVED****/
function***REMOVED***unicodeWords(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***string.match(reUnicodeWord)***REMOVED***||***REMOVED***[];
}

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/**
***REMOVED*******REMOVED***Used***REMOVED***to***REMOVED***resolve***REMOVED***the
***REMOVED*******REMOVED***[`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
***REMOVED*******REMOVED***of***REMOVED***values.
***REMOVED****/
var***REMOVED***objectToString***REMOVED***=***REMOVED***objectProto.toString;

/*****REMOVED***Built-in***REMOVED***value***REMOVED***references.***REMOVED****/
var***REMOVED***Symbol$1***REMOVED***=***REMOVED***root$2.Symbol;

/*****REMOVED***Used***REMOVED***to***REMOVED***convert***REMOVED***symbols***REMOVED***to***REMOVED***primitives***REMOVED***and***REMOVED***strings.***REMOVED****/
var***REMOVED***symbolProto***REMOVED***=***REMOVED***Symbol$1***REMOVED***?***REMOVED***Symbol$1.prototype***REMOVED***:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED***symbolToString***REMOVED***=***REMOVED***symbolProto***REMOVED***?***REMOVED***symbolProto.toString***REMOVED***:***REMOVED***undefined;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.slice`***REMOVED***without***REMOVED***an***REMOVED***iteratee***REMOVED***call***REMOVED***guard.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***slice.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[start=0]***REMOVED***The***REMOVED***start***REMOVED***position.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[end=array.length]***REMOVED***The***REMOVED***end***REMOVED***position.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***slice***REMOVED***of***REMOVED***`array`.
***REMOVED****/
function***REMOVED***baseSlice(array,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array.length;

***REMOVED******REMOVED***if***REMOVED***(start***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***-start***REMOVED***>***REMOVED***length***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***(length***REMOVED***+***REMOVED***start);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***end***REMOVED***=***REMOVED***end***REMOVED***>***REMOVED***length***REMOVED***?***REMOVED***length***REMOVED***:***REMOVED***end;
***REMOVED******REMOVED***if***REMOVED***(end***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***+=***REMOVED***length;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***length***REMOVED***=***REMOVED***start***REMOVED***>***REMOVED***end***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***((end***REMOVED***-***REMOVED***start)***REMOVED***>>>***REMOVED***0);
***REMOVED******REMOVED***start***REMOVED***>>>=***REMOVED***0;

***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***Array(length);
***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result[index]***REMOVED***=***REMOVED***array[index***REMOVED***+***REMOVED***start];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.toString`***REMOVED***which***REMOVED***doesn't***REMOVED***convert***REMOVED***nullish
***REMOVED*******REMOVED***values***REMOVED***to***REMOVED***empty***REMOVED***strings.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***process.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***string.
***REMOVED****/
function***REMOVED***baseToString(value)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Exit***REMOVED***early***REMOVED***for***REMOVED***strings***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***performance***REMOVED***hit***REMOVED***in***REMOVED***some***REMOVED***environments.
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isSymbol(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***symbolToString***REMOVED***?***REMOVED***symbolToString.call(value)***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***(value***REMOVED***+***REMOVED***'');
***REMOVED******REMOVED***return***REMOVED***(result***REMOVED***==***REMOVED***'0'***REMOVED***&&***REMOVED***(1***REMOVED***/***REMOVED***value)***REMOVED***==***REMOVED***-INFINITY)***REMOVED***?***REMOVED***'-0'***REMOVED***:***REMOVED***result;
}

/**
***REMOVED*******REMOVED***Casts***REMOVED***`array`***REMOVED***to***REMOVED***a***REMOVED***slice***REMOVED***if***REMOVED***it's***REMOVED***needed.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***start***REMOVED***position.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[end=array.length]***REMOVED***The***REMOVED***end***REMOVED***position.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***slice.
***REMOVED****/
function***REMOVED***castSlice(array,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array.length;
***REMOVED******REMOVED***end***REMOVED***=***REMOVED***end***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***length***REMOVED***:***REMOVED***end;
***REMOVED******REMOVED***return***REMOVED***(!start***REMOVED***&&***REMOVED***end***REMOVED***>=***REMOVED***length)***REMOVED***?***REMOVED***array***REMOVED***:***REMOVED***baseSlice(array,***REMOVED***start,***REMOVED***end);
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***like***REMOVED***`_.lowerFirst`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***methodName***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***`String`***REMOVED***case***REMOVED***method***REMOVED***to***REMOVED***use.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***case***REMOVED***function.
***REMOVED****/
function***REMOVED***createCaseFirst(methodName)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***strSymbols***REMOVED***=***REMOVED***hasUnicode(string)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***stringToArray(string)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined;

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***chr***REMOVED***=***REMOVED***strSymbols
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***strSymbols[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***string.charAt(0);

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***trailing***REMOVED***=***REMOVED***strSymbols
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***castSlice(strSymbols,***REMOVED***1).join('')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***string.slice(1);

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chr[methodName]()***REMOVED***+***REMOVED***trailing;
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***like***REMOVED***`_.camelCase`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***callback***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***combine***REMOVED***each***REMOVED***word.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***compounder***REMOVED***function.
***REMOVED****/
function***REMOVED***createCompounder(callback)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(string)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrayReduce(words(deburr(string).replace(reApos,***REMOVED***'')),***REMOVED***callback,***REMOVED***'');
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***object-like.***REMOVED***A***REMOVED***value***REMOVED***is***REMOVED***object-like***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***`null`
***REMOVED*******REMOVED***and***REMOVED***has***REMOVED***a***REMOVED***`typeof`***REMOVED***result***REMOVED***of***REMOVED***"object".
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***object-like,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.isObjectLike({});
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.isObjectLike([1,***REMOVED***2,***REMOVED***3]);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.isObjectLike(_.noop);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.isObjectLike(null);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****/
function***REMOVED***isObjectLike(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!value***REMOVED***&&***REMOVED***typeof***REMOVED***value***REMOVED***==***REMOVED***'object';
}

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***classified***REMOVED***as***REMOVED***a***REMOVED***`Symbol`***REMOVED***primitive***REMOVED***or***REMOVED***object.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***symbol,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.isSymbol(Symbol.iterator);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.isSymbol('abc');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****/
function***REMOVED***isSymbol(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***==***REMOVED***'symbol'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***(isObjectLike(value)***REMOVED***&&***REMOVED***objectToString.call(value)***REMOVED***==***REMOVED***symbolTag);
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***`value`***REMOVED***to***REMOVED***a***REMOVED***string.***REMOVED***An***REMOVED***empty***REMOVED***string***REMOVED***is***REMOVED***returned***REMOVED***for***REMOVED***`null`
***REMOVED*******REMOVED***and***REMOVED***`undefined`***REMOVED***values.***REMOVED***The***REMOVED***sign***REMOVED***of***REMOVED***`-0`***REMOVED***is***REMOVED***preserved.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***process.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***string.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.toString(null);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***''
***REMOVED****
***REMOVED*******REMOVED***_.toString(-0);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'-0'
***REMOVED****
***REMOVED*******REMOVED***_.toString([1,***REMOVED***2,***REMOVED***3]);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'1,2,3'
***REMOVED****/
function***REMOVED***toString(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***baseToString(value);
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***`string`***REMOVED***to***REMOVED***[camel***REMOVED***case](https://en.wikipedia.org/wiki/CamelCase).
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***String
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***camel***REMOVED***cased***REMOVED***string.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.camelCase('Foo***REMOVED***Bar');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
***REMOVED****
***REMOVED*******REMOVED***_.camelCase('--foo-bar--');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
***REMOVED****
***REMOVED*******REMOVED***_.camelCase('__FOO_BAR__');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
***REMOVED****/
var***REMOVED***camelCase***REMOVED***=***REMOVED***createCompounder(function(result,***REMOVED***word,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED***word***REMOVED***=***REMOVED***word.toLowerCase();
***REMOVED******REMOVED***return***REMOVED***result***REMOVED***+***REMOVED***(index***REMOVED***?***REMOVED***capitalize(word)***REMOVED***:***REMOVED***word);
});

/**
***REMOVED*******REMOVED***Converts***REMOVED***the***REMOVED***first***REMOVED***character***REMOVED***of***REMOVED***`string`***REMOVED***to***REMOVED***upper***REMOVED***case***REMOVED***and***REMOVED***the***REMOVED***remaining
***REMOVED*******REMOVED***to***REMOVED***lower***REMOVED***case.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***String
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***capitalize.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***capitalized***REMOVED***string.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.capitalize('FRED');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'Fred'
***REMOVED****/
function***REMOVED***capitalize(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***upperFirst(toString(string).toLowerCase());
}

/**
***REMOVED*******REMOVED***Deburrs***REMOVED***`string`***REMOVED***by***REMOVED***converting
***REMOVED*******REMOVED***[Latin-1***REMOVED***Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
***REMOVED*******REMOVED***and***REMOVED***[Latin***REMOVED***Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
***REMOVED*******REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters***REMOVED***and***REMOVED***removing
***REMOVED*******REMOVED***[combining***REMOVED***diacritical***REMOVED***marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***String
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***deburr.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***deburred***REMOVED***string.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.deburr('déjà***REMOVED***vu');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'deja***REMOVED***vu'
***REMOVED****/
function***REMOVED***deburr(string)***REMOVED***{
***REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);
***REMOVED******REMOVED***return***REMOVED***string***REMOVED***&&***REMOVED***string.replace(reLatin,***REMOVED***deburrLetter).replace(reComboMark,***REMOVED***'');
}

/**
***REMOVED*******REMOVED***Converts***REMOVED***the***REMOVED***first***REMOVED***character***REMOVED***of***REMOVED***`string`***REMOVED***to***REMOVED***upper***REMOVED***case.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***String
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***string.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.upperFirst('fred');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'Fred'
***REMOVED****
***REMOVED*******REMOVED***_.upperFirst('FRED');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'FRED'
***REMOVED****/
var***REMOVED***upperFirst***REMOVED***=***REMOVED***createCaseFirst('toUpperCase');

/**
***REMOVED*******REMOVED***Splits***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***String
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{RegExp|string}***REMOVED***[pattern]***REMOVED***The***REMOVED***pattern***REMOVED***to***REMOVED***match***REMOVED***words.
***REMOVED*******REMOVED***@param-***REMOVED***{Object}***REMOVED***[guard]***REMOVED***Enables***REMOVED***use***REMOVED***as***REMOVED***an***REMOVED***iteratee***REMOVED***for***REMOVED***methods***REMOVED***like***REMOVED***`_.map`.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.words('fred,***REMOVED***barney,***REMOVED***&***REMOVED***pebbles');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['fred',***REMOVED***'barney',***REMOVED***'pebbles']
***REMOVED****
***REMOVED*******REMOVED***_.words('fred,***REMOVED***barney,***REMOVED***&***REMOVED***pebbles',***REMOVED***/[^,***REMOVED***]+/g);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['fred',***REMOVED***'barney',***REMOVED***'&',***REMOVED***'pebbles']
***REMOVED****/
function***REMOVED***words(string,***REMOVED***pattern,***REMOVED***guard)***REMOVED***{
***REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);
***REMOVED******REMOVED***pattern***REMOVED***=***REMOVED***guard***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***pattern;

***REMOVED******REMOVED***if***REMOVED***(pattern***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasUnicodeWord(string)***REMOVED***?***REMOVED***unicodeWords(string)***REMOVED***:***REMOVED***asciiWords(string);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***string.match(pattern)***REMOVED***||***REMOVED***[];
}

var***REMOVED***lodash_camelcase***REMOVED***=***REMOVED***camelCase;

Object.defineProperty(localsConvention,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
localsConvention.makeLocalsConventionReducer***REMOVED***=***REMOVED***makeLocalsConventionReducer;

var***REMOVED***_lodash***REMOVED***=***REMOVED***_interopRequireDefault$5(lodash_camelcase);

function***REMOVED***_interopRequireDefault$5(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

function***REMOVED***dashesCamelCase(string)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***string.replace(/-+(\w)/g,***REMOVED***(_,***REMOVED***firstLetter)***REMOVED***=>***REMOVED***firstLetter.toUpperCase());
}

function***REMOVED***makeLocalsConventionReducer(localsConvention,***REMOVED***inputFile)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isFunc***REMOVED***=***REMOVED***typeof***REMOVED***localsConvention***REMOVED***===***REMOVED***"function";
***REMOVED******REMOVED***return***REMOVED***(tokens,***REMOVED***[className,***REMOVED***value])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***convention***REMOVED***=***REMOVED***localsConvention(className,***REMOVED***value,***REMOVED***inputFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[convention]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokens;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(localsConvention)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"camelCase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[className]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[(0,***REMOVED***_lodash.default)(className)]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"camelCaseOnly":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[(0,***REMOVED***_lodash.default)(className)]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"dashes":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[className]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[dashesCamelCase(className)]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"dashesOnly":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[dashesCamelCase(className)]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokens;
***REMOVED******REMOVED***};
}

var***REMOVED***FileSystemLoader$1***REMOVED***=***REMOVED***{};

Object.defineProperty(FileSystemLoader$1,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
FileSystemLoader$1.default***REMOVED***=***REMOVED***void***REMOVED***0;

var***REMOVED***_postcss$1***REMOVED***=***REMOVED***_interopRequireDefault$4(require$$0);

var***REMOVED***_path***REMOVED***=***REMOVED***_interopRequireDefault$4(require$$0$1);

var***REMOVED***_Parser$1***REMOVED***=***REMOVED***_interopRequireDefault$4(Parser$1);

var***REMOVED***_fs$1***REMOVED***=***REMOVED***fs;

function***REMOVED***_interopRequireDefault$4(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

//***REMOVED***Initially***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/css-modules/css-modules-loader-core
class***REMOVED***Core***REMOVED***{
***REMOVED******REMOVED***constructor(plugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.plugins***REMOVED***=***REMOVED***plugins***REMOVED***||***REMOVED***Core.defaultPlugins;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***async***REMOVED***load(sourceString,***REMOVED***sourcePath,***REMOVED***trace,***REMOVED***pathFetcher)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_Parser$1.default(pathFetcher,***REMOVED***trace);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***this.plugins.concat([parser.plugin()]);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***await***REMOVED***(0,***REMOVED***_postcss$1.default)(plugins).process(sourceString,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***sourcePath
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injectableSource:***REMOVED***result.css,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens:***REMOVED***parser.exportTokens
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

}***REMOVED***//***REMOVED***Sorts***REMOVED***dependencies***REMOVED***in***REMOVED***the***REMOVED***following***REMOVED***way:
//***REMOVED***AAA***REMOVED***comes***REMOVED***before***REMOVED***AA***REMOVED***and***REMOVED***A
//***REMOVED***AB***REMOVED***comes***REMOVED***after***REMOVED***AA***REMOVED***and***REMOVED***before***REMOVED***A
//***REMOVED***All***REMOVED***Bs***REMOVED***come***REMOVED***after***REMOVED***all***REMOVED***As
//***REMOVED***This***REMOVED***ensures***REMOVED***that***REMOVED***the***REMOVED***files***REMOVED***are***REMOVED***always***REMOVED***returned***REMOVED***in***REMOVED***the***REMOVED***following***REMOVED***order:
//***REMOVED***-***REMOVED***In***REMOVED***the***REMOVED***order***REMOVED***they***REMOVED***were***REMOVED***required,***REMOVED***except
//***REMOVED***-***REMOVED***After***REMOVED***all***REMOVED***their***REMOVED***dependencies


const***REMOVED***traceKeySorter***REMOVED***=***REMOVED***(a,***REMOVED***b)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***<***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***<***REMOVED***b.substring(0,***REMOVED***a.length)***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***>***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a.substring(0,***REMOVED***b.length)***REMOVED***<=***REMOVED***b***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***a***REMOVED***<***REMOVED***b***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
};

class***REMOVED***FileSystemLoader***REMOVED***{
***REMOVED******REMOVED***constructor(root,***REMOVED***plugins,***REMOVED***fileResolve)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(root***REMOVED***===***REMOVED***"/"***REMOVED***&&***REMOVED***process.platform***REMOVED***===***REMOVED***"win32")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cwdDrive***REMOVED***=***REMOVED***process.cwd().slice(0,***REMOVED***3);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/^[A-Za-z]:\\$/.test(cwdDrive))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Failed***REMOVED***to***REMOVED***obtain***REMOVED***root***REMOVED***from***REMOVED***"${process.cwd()}".`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***=***REMOVED***cwdDrive;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***root;
***REMOVED******REMOVED******REMOVED******REMOVED***this.fileResolve***REMOVED***=***REMOVED***fileResolve;
***REMOVED******REMOVED******REMOVED******REMOVED***this.sources***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.traces***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.importNr***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.core***REMOVED***=***REMOVED***new***REMOVED***Core(plugins);
***REMOVED******REMOVED******REMOVED******REMOVED***this.tokensByFile***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.fs***REMOVED***=***REMOVED***(0,***REMOVED***_fs$1.getFileSystem)();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***async***REMOVED***fetch(_newPath,***REMOVED***relativeTo,***REMOVED***_trace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newPath***REMOVED***=***REMOVED***_newPath.replace(/^["']|["']$/g,***REMOVED***"");

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trace***REMOVED***=***REMOVED***_trace***REMOVED***||***REMOVED***String.fromCharCode(this.importNr++);

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useFileResolve***REMOVED***=***REMOVED***typeof***REMOVED***this.fileResolve***REMOVED***===***REMOVED***"function";
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileResolvedPath***REMOVED***=***REMOVED***useFileResolve***REMOVED***?***REMOVED***await***REMOVED***this.fileResolve(newPath,***REMOVED***relativeTo)***REMOVED***:***REMOVED***await***REMOVED***Promise.resolve();

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileResolvedPath***REMOVED***&&***REMOVED***!_path.default.isAbsolute(fileResolvedPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('The***REMOVED***returned***REMOVED***path***REMOVED***from***REMOVED***the***REMOVED***"fileResolve"***REMOVED***option***REMOVED***must***REMOVED***be***REMOVED***absolute.');
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***relativeDir***REMOVED***=***REMOVED***_path.default.dirname(relativeTo);

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rootRelativePath***REMOVED***=***REMOVED***fileResolvedPath***REMOVED***||***REMOVED***_path.default.resolve(relativeDir,***REMOVED***newPath);

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fileRelativePath***REMOVED***=***REMOVED***fileResolvedPath***REMOVED***||***REMOVED***_path.default.resolve(_path.default.resolve(this.root,***REMOVED***relativeDir),***REMOVED***newPath);***REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***path***REMOVED***is***REMOVED***not***REMOVED***relative***REMOVED***or***REMOVED***absolute,***REMOVED***try***REMOVED***to***REMOVED***resolve***REMOVED***it***REMOVED***in***REMOVED***node_modules


***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!useFileResolve***REMOVED***&&***REMOVED***newPath[0]***REMOVED***!==***REMOVED***"."***REMOVED***&&***REMOVED***!_path.default.isAbsolute(newPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileRelativePath***REMOVED***=***REMOVED***require.resolve(newPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{//***REMOVED***noop
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***this.tokensByFile[fileRelativePath];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokens)***REMOVED***return***REMOVED***tokens;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fs.readFile(fileRelativePath,***REMOVED***"utf-8",***REMOVED***async***REMOVED***(err,***REMOVED***source)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***reject(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injectableSource,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***this.core.load(source,***REMOVED***rootRelativePath,***REMOVED***trace,***REMOVED***this.fetch.bind(this));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sources[fileRelativePath]***REMOVED***=***REMOVED***injectableSource;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.traces[trace]***REMOVED***=***REMOVED***fileRelativePath;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tokensByFile[fileRelativePath]***REMOVED***=***REMOVED***exportTokens;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(exportTokens);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***get***REMOVED***finalSource()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traces***REMOVED***=***REMOVED***this.traces;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sources***REMOVED***=***REMOVED***this.sources;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***written***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.keys(traces).sort(traceKeySorter).map(key***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filename***REMOVED***=***REMOVED***traces[key];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(written.has(filename))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***written.add(filename);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sources[filename];
***REMOVED******REMOVED******REMOVED******REMOVED***}).join("");
***REMOVED******REMOVED***}

}

FileSystemLoader$1.default***REMOVED***=***REMOVED***FileSystemLoader;

var***REMOVED***scoping***REMOVED***=***REMOVED***{};

var***REMOVED***src$3***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

const***REMOVED***PERMANENT_MARKER***REMOVED***=***REMOVED***2;
const***REMOVED***TEMPORARY_MARKER***REMOVED***=***REMOVED***1;

function***REMOVED***createError(node,***REMOVED***graph)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***er***REMOVED***=***REMOVED***new***REMOVED***Error("Nondeterministic***REMOVED***import's***REMOVED***order");

***REMOVED******REMOVED***const***REMOVED***related***REMOVED***=***REMOVED***graph[node];
***REMOVED******REMOVED***const***REMOVED***relatedNode***REMOVED***=***REMOVED***related.find(
***REMOVED******REMOVED******REMOVED******REMOVED***(relatedNode)***REMOVED***=>***REMOVED***graph[relatedNode].indexOf(node)***REMOVED***>***REMOVED***-1
***REMOVED******REMOVED***);

***REMOVED******REMOVED***er.nodes***REMOVED***=***REMOVED***[node,***REMOVED***relatedNode];

***REMOVED******REMOVED***return***REMOVED***er;
}

function***REMOVED***walkGraph(node,***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(state[node]***REMOVED***===***REMOVED***PERMANENT_MARKER)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(state[node]***REMOVED***===***REMOVED***TEMPORARY_MARKER)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(strict)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createError(node,***REMOVED***graph);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state[node]***REMOVED***=***REMOVED***TEMPORARY_MARKER;

***REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***graph[node];
***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***children.length;

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***walkGraph(children[i],***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state[node]***REMOVED***=***REMOVED***PERMANENT_MARKER;

***REMOVED******REMOVED***result.push(node);
}

function***REMOVED***topologicalSort$1(graph,***REMOVED***strict)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***Object.keys(graph);
***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***nodes.length;

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***er***REMOVED***=***REMOVED***walkGraph(nodes[i],***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(er***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***er;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***result;
}

var***REMOVED***topologicalSort_1***REMOVED***=***REMOVED***topologicalSort$1;

const***REMOVED***topologicalSort***REMOVED***=***REMOVED***topologicalSort_1;

const***REMOVED***matchImports$1***REMOVED***=***REMOVED***/^(.+?)\s+from\s+(?:"([^"]+)"|'([^']+)'|(global))$/;
const***REMOVED***icssImport***REMOVED***=***REMOVED***/^:import\((?:"([^"]+)"|'([^']+)')\)/;

const***REMOVED***VISITED_MARKER***REMOVED***=***REMOVED***1;

/**
***REMOVED*******REMOVED***:import('G')***REMOVED***{}
***REMOVED****
***REMOVED*******REMOVED***Rule
***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'B'

***REMOVED*******REMOVED***Rule
***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'C'
***REMOVED****
***REMOVED*******REMOVED***Results***REMOVED***in:
***REMOVED****
***REMOVED*******REMOVED***graph:***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***G:***REMOVED***[],
***REMOVED*******REMOVED******REMOVED******REMOVED***A:***REMOVED***[],
***REMOVED*******REMOVED******REMOVED******REMOVED***B:***REMOVED***['A'],
***REMOVED*******REMOVED******REMOVED******REMOVED***C:***REMOVED***['A'],
***REMOVED*******REMOVED***}
***REMOVED****/
function***REMOVED***addImportToGraph(importId,***REMOVED***parentId,***REMOVED***graph,***REMOVED***visited)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***siblingsId***REMOVED***=***REMOVED***parentId***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***"siblings";
***REMOVED******REMOVED***const***REMOVED***visitedId***REMOVED***=***REMOVED***parentId***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***importId;

***REMOVED******REMOVED***if***REMOVED***(visited[visitedId]***REMOVED***!==***REMOVED***VISITED_MARKER)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(visited[siblingsId]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***visited[siblingsId]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***siblings***REMOVED***=***REMOVED***visited[siblingsId];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(graph[importId]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***graph[importId]***REMOVED***=***REMOVED***graph[importId].concat(siblings);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***graph[importId]***REMOVED***=***REMOVED***siblings.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***visited[visitedId]***REMOVED***=***REMOVED***VISITED_MARKER;

***REMOVED******REMOVED******REMOVED******REMOVED***siblings.push(importId);
***REMOVED******REMOVED***}
}

src$3.exports***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***importIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***const***REMOVED***createImportedName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***options.createImportedName***REMOVED***!==***REMOVED***"function"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(importName***REMOVED***/*,***REMOVED***path*/)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`i__imported_${importName.replace(/\W/g,***REMOVED***"_")}_${importIndex++}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***options.createImportedName;
***REMOVED******REMOVED***const***REMOVED***failOnWrongOrder***REMOVED***=***REMOVED***options.failOnWrongOrder;

***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-extract-imports",
***REMOVED******REMOVED******REMOVED******REMOVED***prepare()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***graph***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***visited***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingImports***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importDecls***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***postcss)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Check***REMOVED***the***REMOVED***existing***REMOVED***imports***REMOVED***order***REMOVED***and***REMOVED***save***REMOVED***refs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***icssImport.exec(rule.selector);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***/*match*/***REMOVED***doubleQuotePath,***REMOVED***singleQuotePath]***REMOVED***=***REMOVED***matches;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***doubleQuotePath***REMOVED***||***REMOVED***singleQuotePath;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImportToGraph(importPath,***REMOVED***"root",***REMOVED***graph,***REMOVED***visited);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingImports[importPath]***REMOVED***=***REMOVED***rule;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkDecls(/^composes$/,***REMOVED***(declaration)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***declaration.value.match(matchImports$1);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tmpSymbols;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/*match*/***REMOVED***symbols,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doubleQuotePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***singleQuotePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]***REMOVED***=***REMOVED***matches;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(global)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Composing***REMOVED***globals***REMOVED***simply***REMOVED***means***REMOVED***changing***REMOVED***these***REMOVED***classes***REMOVED***to***REMOVED***wrap***REMOVED***them***REMOVED***in***REMOVED***global(name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpSymbols***REMOVED***=***REMOVED***symbols.split(/\s+/).map((s)***REMOVED***=>***REMOVED***`global(${s})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***doubleQuotePath***REMOVED***||***REMOVED***singleQuotePath;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***declaration.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parentIndexes***REMOVED***=***REMOVED***"";

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parent.type***REMOVED***!==***REMOVED***"root")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentIndexes***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.parent.index(parent)***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***parentIndexes;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***selector***REMOVED***}***REMOVED***=***REMOVED***declaration.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentRule***REMOVED***=***REMOVED***`_${parentIndexes}${selector}`;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImportToGraph(importPath,***REMOVED***parentRule,***REMOVED***graph,***REMOVED***visited);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importDecls[importPath]***REMOVED***=***REMOVED***declaration;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports[importPath]***REMOVED***=***REMOVED***imports[importPath]***REMOVED***||***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpSymbols***REMOVED***=***REMOVED***symbols.split(/\s+/).map((s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!imports[importPath][s])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports[importPath][s]***REMOVED***=***REMOVED***createImportedName(s,***REMOVED***importPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***imports[importPath][s];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***tmpSymbols.join("***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importsOrder***REMOVED***=***REMOVED***topologicalSort(graph,***REMOVED***failOnWrongOrder);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importsOrder***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***importsOrder.nodes.find((importPath)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-prototype-builtins
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importDecls.hasOwnProperty(importPath)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***importDecls[importPath];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***decl.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Failed***REMOVED***to***REMOVED***resolve***REMOVED***order***REMOVED***of***REMOVED***composed***REMOVED***modules***REMOVED***"***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importsOrder.nodes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((importPath)***REMOVED***=>***REMOVED***"`"***REMOVED***+***REMOVED***importPath***REMOVED***+***REMOVED***"`")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(",***REMOVED***")***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***".",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin:***REMOVED***"postcss-modules-extract-imports",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word:***REMOVED***"composes",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastImportRule;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importsOrder.forEach((path)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedSymbols***REMOVED***=***REMOVED***imports[path];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rule***REMOVED***=***REMOVED***existingImports[path];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rule***REMOVED***&&***REMOVED***importedSymbols)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule***REMOVED***=***REMOVED***postcss.rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import("${path}")`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastImportRule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.insertAfter(lastImportRule,***REMOVED***rule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(rule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastImportRule***REMOVED***=***REMOVED***rule;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!importedSymbols)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(importedSymbols).forEach((importedSymbol)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.append(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***importedSymbol,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***importedSymbols[importedSymbol],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED***};
};

src$3.exports.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***srcExports$2***REMOVED***=***REMOVED***src$3.exports;

var***REMOVED***wasmHash***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***hasRequiredWasmHash;

function***REMOVED***requireWasmHash***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredWasmHash)***REMOVED***return***REMOVED***wasmHash.exports;
	hasRequiredWasmHash***REMOVED***=***REMOVED***1;

	//***REMOVED***65536***REMOVED***is***REMOVED***the***REMOVED***size***REMOVED***of***REMOVED***a***REMOVED***wasm***REMOVED***memory***REMOVED***page
	//***REMOVED***64***REMOVED***is***REMOVED***the***REMOVED***maximum***REMOVED***chunk***REMOVED***size***REMOVED***for***REMOVED***every***REMOVED***possible***REMOVED***wasm***REMOVED***hash***REMOVED***implementation
	//***REMOVED***4***REMOVED***is***REMOVED***the***REMOVED***maximum***REMOVED***number***REMOVED***of***REMOVED***bytes***REMOVED***per***REMOVED***char***REMOVED***for***REMOVED***string***REMOVED***encoding***REMOVED***(max***REMOVED***is***REMOVED***utf-8)
	//***REMOVED***~3***REMOVED***makes***REMOVED***sure***REMOVED***that***REMOVED***it's***REMOVED***always***REMOVED***a***REMOVED***block***REMOVED***of***REMOVED***4***REMOVED***chars,***REMOVED***so***REMOVED***avoid***REMOVED***partially***REMOVED***encoded***REMOVED***bytes***REMOVED***for***REMOVED***base64
	const***REMOVED***MAX_SHORT_STRING***REMOVED***=***REMOVED***Math.floor((65536***REMOVED***-***REMOVED***64)***REMOVED***/***REMOVED***4)***REMOVED***&***REMOVED***~3;

	class***REMOVED***WasmHash***REMOVED***{
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{WebAssembly.Instance}***REMOVED***instance***REMOVED***wasm***REMOVED***instance
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{WebAssembly.Instance[]}***REMOVED***instancesPool***REMOVED***pool***REMOVED***of***REMOVED***instances
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***chunkSize***REMOVED***size***REMOVED***of***REMOVED***data***REMOVED***chunks***REMOVED***passed***REMOVED***to***REMOVED***wasm
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***digestSize***REMOVED***size***REMOVED***of***REMOVED***digest***REMOVED***returned***REMOVED***by***REMOVED***wasm
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***constructor(instance,***REMOVED***instancesPool,***REMOVED***chunkSize,***REMOVED***digestSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***/*****REMOVED***@type***REMOVED***{any}***REMOVED****/***REMOVED***(instance.exports);

	***REMOVED******REMOVED******REMOVED******REMOVED***exports.init();

	***REMOVED******REMOVED******REMOVED******REMOVED***this.exports***REMOVED***=***REMOVED***exports;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.mem***REMOVED***=***REMOVED***Buffer.from(exports.memory.buffer,***REMOVED***0,***REMOVED***65536);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.instancesPool***REMOVED***=***REMOVED***instancesPool;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.chunkSize***REMOVED***=***REMOVED***chunkSize;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.digestSize***REMOVED***=***REMOVED***digestSize;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***reset()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.exports.init();
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Buffer***REMOVED***|***REMOVED***string}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{BufferEncoding=}***REMOVED***encoding***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***itself
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***data***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(data.length***REMOVED***>***REMOVED***MAX_SHORT_STRING)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithShortString(data.slice(0,***REMOVED***MAX_SHORT_STRING),***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data***REMOVED***=***REMOVED***data.slice(MAX_SHORT_STRING);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithShortString(data,***REMOVED***encoding);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithBuffer(data);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{BufferEncoding=}***REMOVED***encoding***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{void}
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***_updateWithShortString(data,***REMOVED***encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem,***REMOVED***chunkSize***REMOVED***}***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***endPos;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(data.length***REMOVED***<***REMOVED***70)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!encoding***REMOVED***||***REMOVED***encoding***REMOVED***===***REMOVED***"utf-8"***REMOVED***||***REMOVED***encoding***REMOVED***===***REMOVED***"utf8")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***data.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cc***REMOVED***=***REMOVED***data.charCodeAt(i);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cc***REMOVED***<***REMOVED***0x80)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos++]***REMOVED***=***REMOVED***cc;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(cc***REMOVED***<***REMOVED***0x800)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos]***REMOVED***=***REMOVED***(cc***REMOVED***>>***REMOVED***6)***REMOVED***|***REMOVED***0xc0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos***REMOVED***+***REMOVED***1]***REMOVED***=***REMOVED***(cc***REMOVED***&***REMOVED***0x3f)***REMOVED***|***REMOVED***0x80;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***+=***REMOVED***2;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***bail-out***REMOVED***for***REMOVED***weird***REMOVED***chars
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***+=***REMOVED***mem.write(data.slice(i),***REMOVED***endPos,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(encoding***REMOVED***===***REMOVED***"latin1")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***data.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cc***REMOVED***=***REMOVED***data.charCodeAt(i);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos++]***REMOVED***=***REMOVED***cc;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered***REMOVED***+***REMOVED***mem.write(data,***REMOVED***buffered,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered***REMOVED***+***REMOVED***mem.write(data,***REMOVED***buffered,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endPos***REMOVED***<***REMOVED***chunkSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***endPos;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***l***REMOVED***=***REMOVED***endPos***REMOVED***&***REMOVED***~(this.chunkSize***REMOVED***-***REMOVED***1);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newBuffered***REMOVED***=***REMOVED***endPos***REMOVED***-***REMOVED***l;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***newBuffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newBuffered***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem.copyWithin(0,***REMOVED***l,***REMOVED***endPos);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{void}
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***_updateWithBuffer(data)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem***REMOVED***}***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***data.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(buffered***REMOVED***+***REMOVED***length***REMOVED***<***REMOVED***this.chunkSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***length);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***+=***REMOVED***length;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***l***REMOVED***=***REMOVED***(buffered***REMOVED***+***REMOVED***length)***REMOVED***&***REMOVED***~(this.chunkSize***REMOVED***-***REMOVED***1);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***65536)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***65536***REMOVED***-***REMOVED***buffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***i);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(65536);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stop***REMOVED***=***REMOVED***l***REMOVED***-***REMOVED***buffered***REMOVED***-***REMOVED***65536;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***stop)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***i,***REMOVED***i***REMOVED***+***REMOVED***65536);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(65536);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***65536;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***i,***REMOVED***l***REMOVED***-***REMOVED***buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l***REMOVED***-***REMOVED***buffered***REMOVED***-***REMOVED***i);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***l***REMOVED***-***REMOVED***buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newBuffered***REMOVED***=***REMOVED***length***REMOVED***+***REMOVED***buffered***REMOVED***-***REMOVED***l;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***newBuffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newBuffered***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***length***REMOVED***-***REMOVED***newBuffered,***REMOVED***length);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***digest(type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem,***REMOVED***digestSize***REMOVED***}***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***exports.final(buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED***this.instancesPool.push(this);

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hex***REMOVED***=***REMOVED***mem.toString("latin1",***REMOVED***0,***REMOVED***digestSize);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"hex")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hex;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"binary"***REMOVED***||***REMOVED***!type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Buffer.from(hex,***REMOVED***"hex");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Buffer.from(hex,***REMOVED***"hex").toString(type);
	***REMOVED******REMOVED***}
	}

	const***REMOVED***create***REMOVED***=***REMOVED***(wasmModule,***REMOVED***instancesPool,***REMOVED***chunkSize,***REMOVED***digestSize)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(instancesPool.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***old***REMOVED***=***REMOVED***instancesPool.pop();

	***REMOVED******REMOVED******REMOVED******REMOVED***old.reset();

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***old;
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***WasmHash(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***WebAssembly.Instance(wasmModule),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instancesPool,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkSize,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestSize
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}
	};

	wasmHash.exports***REMOVED***=***REMOVED***create;
	wasmHash.exports.MAX_SHORT_STRING***REMOVED***=***REMOVED***MAX_SHORT_STRING;
	return***REMOVED***wasmHash.exports;
}

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***xxhash64_1;
var***REMOVED***hasRequiredXxhash64;

function***REMOVED***requireXxhash64***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredXxhash64)***REMOVED***return***REMOVED***xxhash64_1;
	hasRequiredXxhash64***REMOVED***=***REMOVED***1;

	const***REMOVED***create***REMOVED***=***REMOVED***requireWasmHash();

	//#region***REMOVED***wasm***REMOVED***code:***REMOVED***xxhash64***REMOVED***(../../../assembly/hash/xxhash64.asm.ts)***REMOVED***--initialMemory***REMOVED***1
	const***REMOVED***xxhash64***REMOVED***=***REMOVED***new***REMOVED***WebAssembly.Module(
	***REMOVED******REMOVED***Buffer.from(
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***1173***REMOVED***bytes
	***REMOVED******REMOVED******REMOVED******REMOVED***"AGFzbQEAAAABCAJgAX8AYAAAAwQDAQAABQMBAAEGGgV+AUIAC34BQgALfgFCAAt+AUIAC34BQgALByIEBGluaXQAAAZ1cGRhdGUAAQVmaW5hbAACBm1lbW9yeQIACrUIAzAAQtbrgu7q/Yn14AAkAELP1tO+0ser2UIkAUIAJAJC+erQ0OfJoeThACQDQgAkBAvUAQIBfwR+IABFBEAPCyMEIACtfCQEIwAhAiMBIQMjAiEEIwMhBQNAIAIgASkDAELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiECIAMgASkDCELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEDIAQgASkDEELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEEIAUgASkDGELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEFIAAgAUEgaiIBSw0ACyACJAAgAyQBIAQkAiAFJAMLqwYCAX8EfiMEQgBSBH4jACICQgGJIwEiA0IHiXwjAiIEQgyJfCMDIgVCEol8IAJCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0gA0LP1tO+0ser2UJ+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSAEQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IAVCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0FQsXP2bLx5brqJwsjBCAArXx8IQIDQCABQQhqIABNBEAgAiABKQMAQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQhuJQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IQIgAUEIaiEBDAELCyABQQRqIABNBEACfyACIAE1AgBCh5Wvr5i23puef36FQheJQs/W077Sx6vZQn5C+fPd8Zn2masWfCECIAFBBGoLIQELA0AgACABRwRAIAIgATEAAELFz9my8eW66id+hUILiUKHla+vmLbem55/fiECIAFBAWohAQwBCwtBACACIAJCIYiFQs/W077Sx6vZQn4iAiACQh2IhUL5893xmfaZqxZ+IgIgAkIgiIUiAkIgiCIDQv//A4NCIIYgA0KAgPz/D4NCEIiEIgNC/4GAgPAfg0IQhiADQoD+g4CA4D+DQgiIhCIDQo+AvIDwgcAHg0IIhiADQvCBwIeAnoD4AINCBIiEIgNChoyYsODAgYMGfEIEiEKBgoSIkKDAgAGDQid+IANCsODAgYOGjJgwhHw3AwBBCCACQv////8PgyICQv//A4NCIIYgAkKAgPz/D4NCEIiEIgJC/4GAgPAfg0IQhiACQoD+g4CA4D+DQgiIhCICQo+AvIDwgcAHg0IIhiACQvCBwIeAnoD4AINCBIiEIgJChoyYsODAgYMGfEIEiEKBgoSIkKDAgAGDQid+IAJCsODAgYOGjJgwhHw3AwAL",
	***REMOVED******REMOVED******REMOVED******REMOVED***"base64"
	***REMOVED******REMOVED***)
	);
	//#endregion

	xxhash64_1***REMOVED***=***REMOVED***create.bind(null,***REMOVED***xxhash64,***REMOVED***[],***REMOVED***32,***REMOVED***16);
	return***REMOVED***xxhash64_1;
}

var***REMOVED***BatchedHash_1;
var***REMOVED***hasRequiredBatchedHash;

function***REMOVED***requireBatchedHash***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBatchedHash)***REMOVED***return***REMOVED***BatchedHash_1;
	hasRequiredBatchedHash***REMOVED***=***REMOVED***1;
	const***REMOVED***MAX_SHORT_STRING***REMOVED***=***REMOVED***requireWasmHash().MAX_SHORT_STRING;

	class***REMOVED***BatchedHash***REMOVED***{
	***REMOVED******REMOVED***constructor(hash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.encoding***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***hash;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Update***REMOVED***hash***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string|Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***inputEncoding***REMOVED***data***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***updated***REMOVED***hash
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***inputEncoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.string***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***data***REMOVED***===***REMOVED***"string"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputEncoding***REMOVED***===***REMOVED***this.encoding***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string.length***REMOVED***+***REMOVED***data.length***REMOVED***<***REMOVED***MAX_SHORT_STRING
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***+=***REMOVED***data;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.string,***REMOVED***this.encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***data***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.length***REMOVED***<***REMOVED***MAX_SHORT_STRING***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***base64***REMOVED***encoding***REMOVED***is***REMOVED***not***REMOVED***valid***REMOVED***since***REMOVED***it***REMOVED***may***REMOVED***contain***REMOVED***padding***REMOVED***chars
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!inputEncoding***REMOVED***||***REMOVED***!inputEncoding.startsWith("ba"))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***data;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.encoding***REMOVED***=***REMOVED***inputEncoding;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data,***REMOVED***inputEncoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Calculates***REMOVED***the***REMOVED***digest***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***encoding***REMOVED***encoding***REMOVED***of***REMOVED***the***REMOVED***return***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string|Buffer}***REMOVED***digest
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***digest(encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.string***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.string,***REMOVED***this.encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hash.digest(encoding);
	***REMOVED******REMOVED***}
	}

	BatchedHash_1***REMOVED***=***REMOVED***BatchedHash;
	return***REMOVED***BatchedHash_1;
}

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***md4_1;
var***REMOVED***hasRequiredMd4;

function***REMOVED***requireMd4***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredMd4)***REMOVED***return***REMOVED***md4_1;
	hasRequiredMd4***REMOVED***=***REMOVED***1;

	const***REMOVED***create***REMOVED***=***REMOVED***requireWasmHash();

	//#region***REMOVED***wasm***REMOVED***code:***REMOVED***md4***REMOVED***(../../../assembly/hash/md4.asm.ts)***REMOVED***--initialMemory***REMOVED***1
	const***REMOVED***md4***REMOVED***=***REMOVED***new***REMOVED***WebAssembly.Module(
	***REMOVED******REMOVED***Buffer.from(
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***2150***REMOVED***bytes
	***REMOVED******REMOVED******REMOVED******REMOVED***"AGFzbQEAAAABCAJgAX8AYAAAAwUEAQAAAAUDAQABBhoFfwFBAAt/AUEAC38BQQALfwFBAAt/AUEACwciBARpbml0AAAGdXBkYXRlAAIFZmluYWwAAwZtZW1vcnkCAAqFEAQmAEGBxpS6BiQBQYnXtv5+JAJB/rnrxXkkA0H2qMmBASQEQQAkAAvMCgEYfyMBIQojAiEGIwMhByMEIQgDQCAAIAVLBEAgBSgCCCINIAcgBiAFKAIEIgsgCCAHIAUoAgAiDCAKIAggBiAHIAhzcXNqakEDdyIDIAYgB3Nxc2pqQQd3IgEgAyAGc3FzampBC3chAiAFKAIUIg8gASACIAUoAhAiCSADIAEgBSgCDCIOIAYgAyACIAEgA3Nxc2pqQRN3IgQgASACc3FzampBA3ciAyACIARzcXNqakEHdyEBIAUoAiAiEiADIAEgBSgCHCIRIAQgAyAFKAIYIhAgAiAEIAEgAyAEc3FzampBC3ciAiABIANzcXNqakETdyIEIAEgAnNxc2pqQQN3IQMgBSgCLCIVIAQgAyAFKAIoIhQgAiAEIAUoAiQiEyABIAIgAyACIARzcXNqakEHdyIBIAMgBHNxc2pqQQt3IgIgASADc3FzampBE3chBCAPIBAgCSAVIBQgEyAFKAI4IhYgAiAEIAUoAjQiFyABIAIgBSgCMCIYIAMgASAEIAEgAnNxc2pqQQN3IgEgAiAEc3FzampBB3ciAiABIARzcXNqakELdyIDIAkgAiAMIAEgBSgCPCIJIAQgASADIAEgAnNxc2pqQRN3IgEgAiADcnEgAiADcXJqakGZ84nUBWpBA3ciAiABIANycSABIANxcmpqQZnzidQFakEFdyIEIAEgAnJxIAEgAnFyaiASakGZ84nUBWpBCXciAyAPIAQgCyACIBggASADIAIgBHJxIAIgBHFyampBmfOJ1AVqQQ13IgEgAyAEcnEgAyAEcXJqakGZ84nUBWpBA3ciAiABIANycSABIANxcmpqQZnzidQFakEFdyIEIAEgAnJxIAEgAnFyampBmfOJ1AVqQQl3IgMgECAEIAIgFyABIAMgAiAEcnEgAiAEcXJqakGZ84nUBWpBDXciASADIARycSADIARxcmogDWpBmfOJ1AVqQQN3IgIgASADcnEgASADcXJqakGZ84nUBWpBBXciBCABIAJycSABIAJxcmpqQZnzidQFakEJdyIDIBEgBCAOIAIgFiABIAMgAiAEcnEgAiAEcXJqakGZ84nUBWpBDXciASADIARycSADIARxcmpqQZnzidQFakEDdyICIAEgA3JxIAEgA3FyampBmfOJ1AVqQQV3IgQgASACcnEgASACcXJqakGZ84nUBWpBCXciAyAMIAIgAyAJIAEgAyACIARycSACIARxcmpqQZnzidQFakENdyIBcyAEc2pqQaHX5/YGakEDdyICIAQgASACcyADc2ogEmpBodfn9gZqQQl3IgRzIAFzampBodfn9gZqQQt3IgMgAiADIBggASADIARzIAJzampBodfn9gZqQQ93IgFzIARzaiANakGh1+f2BmpBA3ciAiAUIAQgASACcyADc2pqQaHX5/YGakEJdyIEcyABc2pqQaHX5/YGakELdyIDIAsgAiADIBYgASADIARzIAJzampBodfn9gZqQQ93IgFzIARzampBodfn9gZqQQN3IgIgEyAEIAEgAnMgA3NqakGh1+f2BmpBCXciBHMgAXNqakGh1+f2BmpBC3chAyAKIA4gAiADIBcgASADIARzIAJzampBodfn9gZqQQ93IgFzIARzampBodfn9gZqQQN3IgJqIQogBiAJIAEgESADIAIgFSAEIAEgAnMgA3NqakGh1+f2BmpBCXciBHMgAXNqakGh1+f2BmpBC3ciAyAEcyACc2pqQaHX5/YGakEPd2ohBiADIAdqIQcgBCAIaiEIIAVBQGshBQwBCwsgCiQBIAYkAiAHJAMgCCQECw0AIAAQASMAIABqJAAL/wQCA38BfiMAIABqrUIDhiEEIABByABqQUBxIgJBCGshAyAAIgFBAWohACABQYABOgAAA0AgACACSUEAIABBB3EbBEAgAEEAOgAAIABBAWohAAwBCwsDQCAAIAJJBEAgAEIANwMAIABBCGohAAwBCwsgAyAENwMAIAIQAUEAIwGtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEIIwKtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEQIwOtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEYIwStIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAAs=",
	***REMOVED******REMOVED******REMOVED******REMOVED***"base64"
	***REMOVED******REMOVED***)
	);
	//#endregion

	md4_1***REMOVED***=***REMOVED***create.bind(null,***REMOVED***md4,***REMOVED***[],***REMOVED***64,***REMOVED***32);
	return***REMOVED***md4_1;
}

var***REMOVED***BulkUpdateDecorator_1;
var***REMOVED***hasRequiredBulkUpdateDecorator;

function***REMOVED***requireBulkUpdateDecorator***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBulkUpdateDecorator)***REMOVED***return***REMOVED***BulkUpdateDecorator_1;
	hasRequiredBulkUpdateDecorator***REMOVED***=***REMOVED***1;
	const***REMOVED***BULK_SIZE***REMOVED***=***REMOVED***2000;

	//***REMOVED***We***REMOVED***are***REMOVED***using***REMOVED***an***REMOVED***object***REMOVED***instead***REMOVED***of***REMOVED***a***REMOVED***Map***REMOVED***as***REMOVED***this***REMOVED***will***REMOVED***stay***REMOVED***static***REMOVED***during***REMOVED***the***REMOVED***runtime
	//***REMOVED***so***REMOVED***access***REMOVED***to***REMOVED***it***REMOVED***can***REMOVED***be***REMOVED***optimized***REMOVED***by***REMOVED***v8
	const***REMOVED***digestCaches***REMOVED***=***REMOVED***{};

	class***REMOVED***BulkUpdateDecorator***REMOVED***{
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Hash***REMOVED***|***REMOVED***function():***REMOVED***Hash}***REMOVED***hashOrFactory***REMOVED***function***REMOVED***to***REMOVED***create***REMOVED***a***REMOVED***hash
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***hashKey***REMOVED***key***REMOVED***for***REMOVED***caching
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***constructor(hashOrFactory,***REMOVED***hashKey)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.hashKey***REMOVED***=***REMOVED***hashKey;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***hashOrFactory***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hashFactory***REMOVED***=***REMOVED***hashOrFactory;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hashFactory***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***hashOrFactory;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Update***REMOVED***hash***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string|Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***inputEncoding***REMOVED***data***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***updated***REMOVED***hash
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***inputEncoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputEncoding***REMOVED***!==***REMOVED***undefined***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***data***REMOVED***!==***REMOVED***"string"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.length***REMOVED***>***REMOVED***BULK_SIZE
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.buffer.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data,***REMOVED***inputEncoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***+=***REMOVED***data;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.buffer.length***REMOVED***>***REMOVED***BULK_SIZE)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Calculates***REMOVED***the***REMOVED***digest***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***encoding***REMOVED***encoding***REMOVED***of***REMOVED***the***REMOVED***return***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string|Buffer}***REMOVED***digest
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***digest(encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***digestCache;

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***buffer***REMOVED***=***REMOVED***this.buffer;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***short***REMOVED***data***REMOVED***for***REMOVED***hash,***REMOVED***we***REMOVED***can***REMOVED***use***REMOVED***caching
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheKey***REMOVED***=***REMOVED***`${this.hashKey}-${encoding}`;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache***REMOVED***=***REMOVED***digestCaches[cacheKey];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(digestCache***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache***REMOVED***=***REMOVED***digestCaches[cacheKey]***REMOVED***=***REMOVED***new***REMOVED***Map();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheEntry***REMOVED***=***REMOVED***digestCache.get(buffer);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cacheEntry***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cacheEntry;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(buffer.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***digestResult***REMOVED***=***REMOVED***this.hash.digest(encoding);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(digestCache***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache.set(buffer,***REMOVED***digestResult);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***digestResult;
	***REMOVED******REMOVED***}
	}

	BulkUpdateDecorator_1***REMOVED***=***REMOVED***BulkUpdateDecorator;
	return***REMOVED***BulkUpdateDecorator_1;
}

const***REMOVED***baseEncodeTables***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***26:***REMOVED***"abcdefghijklmnopqrstuvwxyz",
***REMOVED******REMOVED***32:***REMOVED***"123456789abcdefghjkmnpqrstuvwxyz",***REMOVED***//***REMOVED***no***REMOVED***0lio
***REMOVED******REMOVED***36:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyz",
***REMOVED******REMOVED***49:***REMOVED***"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",***REMOVED***//***REMOVED***no***REMOVED***lIO
***REMOVED******REMOVED***52:***REMOVED***"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
***REMOVED******REMOVED***58:***REMOVED***"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",***REMOVED***//***REMOVED***no***REMOVED***0lIO
***REMOVED******REMOVED***62:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
***REMOVED******REMOVED***64:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",
};

/**
***REMOVED*******REMOVED***@param***REMOVED***{Uint32Array}***REMOVED***uint32Array***REMOVED***Treated***REMOVED***as***REMOVED***a***REMOVED***long***REMOVED***base-0x100000000***REMOVED***number,***REMOVED***little***REMOVED***endian
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***divisor***REMOVED***The***REMOVED***divisor
***REMOVED*******REMOVED***@return***REMOVED***{number}***REMOVED***Modulo***REMOVED***(remainder)***REMOVED***of***REMOVED***the***REMOVED***division
***REMOVED****/
function***REMOVED***divmod32(uint32Array,***REMOVED***divisor)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***carry***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***uint32Array.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***carry***REMOVED*******REMOVED***0x100000000***REMOVED***+***REMOVED***uint32Array[i];
***REMOVED******REMOVED******REMOVED******REMOVED***carry***REMOVED***=***REMOVED***value***REMOVED***%***REMOVED***divisor;
***REMOVED******REMOVED******REMOVED******REMOVED***uint32Array[i]***REMOVED***=***REMOVED***Math.floor(value***REMOVED***/***REMOVED***divisor);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***carry;
}

function***REMOVED***encodeBufferToBase(buffer,***REMOVED***base,***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***encodeTable***REMOVED***=***REMOVED***baseEncodeTables[base];

***REMOVED******REMOVED***if***REMOVED***(!encodeTable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Unknown***REMOVED***encoding***REMOVED***base"***REMOVED***+***REMOVED***base);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Input***REMOVED***bits***REMOVED***are***REMOVED***only***REMOVED***enough***REMOVED***to***REMOVED***generate***REMOVED***this***REMOVED***many***REMOVED***characters
***REMOVED******REMOVED***const***REMOVED***limit***REMOVED***=***REMOVED***Math.ceil((buffer.length***REMOVED*******REMOVED***8)***REMOVED***/***REMOVED***Math.log2(base));
***REMOVED******REMOVED***length***REMOVED***=***REMOVED***Math.min(length,***REMOVED***limit);

***REMOVED******REMOVED***//***REMOVED***Most***REMOVED***of***REMOVED***the***REMOVED***crypto***REMOVED***digests***REMOVED***(if***REMOVED***not***REMOVED***all)***REMOVED***has***REMOVED***length***REMOVED***a***REMOVED***multiple***REMOVED***of***REMOVED***4***REMOVED***bytes.
***REMOVED******REMOVED***//***REMOVED***Fewer***REMOVED***numbers***REMOVED***in***REMOVED***the***REMOVED***array***REMOVED***means***REMOVED***faster***REMOVED***math.
***REMOVED******REMOVED***const***REMOVED***uint32Array***REMOVED***=***REMOVED***new***REMOVED***Uint32Array(Math.ceil(buffer.length***REMOVED***/***REMOVED***4));

***REMOVED******REMOVED***//***REMOVED***Make***REMOVED***sure***REMOVED***the***REMOVED***input***REMOVED***buffer***REMOVED***data***REMOVED***is***REMOVED***copied***REMOVED***and***REMOVED***is***REMOVED***not***REMOVED***mutated***REMOVED***by***REMOVED***reference.
***REMOVED******REMOVED***//***REMOVED***divmod32()***REMOVED***would***REMOVED***corrupt***REMOVED***the***REMOVED***BulkUpdateDecorator***REMOVED***cache***REMOVED***otherwise.
***REMOVED******REMOVED***buffer.copy(Buffer.from(uint32Array.buffer));

***REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***"";

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***encodeTable[divmod32(uint32Array,***REMOVED***base)]***REMOVED***+***REMOVED***output;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***output;
}

let***REMOVED***crypto***REMOVED***=***REMOVED***undefined;
let***REMOVED***createXXHash64***REMOVED***=***REMOVED***undefined;
let***REMOVED***createMd4***REMOVED***=***REMOVED***undefined;
let***REMOVED***BatchedHash***REMOVED***=***REMOVED***undefined;
let***REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***undefined;

function***REMOVED***getHashDigest$1(buffer,***REMOVED***algorithm,***REMOVED***digestType,***REMOVED***maxLength)***REMOVED***{
***REMOVED******REMOVED***algorithm***REMOVED***=***REMOVED***algorithm***REMOVED***||***REMOVED***"xxhash64";
***REMOVED******REMOVED***maxLength***REMOVED***=***REMOVED***maxLength***REMOVED***||***REMOVED***9999;

***REMOVED******REMOVED***let***REMOVED***hash;

***REMOVED******REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"xxhash64")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createXXHash64***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createXXHash64***REMOVED***=***REMOVED***requireXxhash64();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BatchedHash***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BatchedHash***REMOVED***=***REMOVED***requireBatchedHash();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BatchedHash(createXXHash64());
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"md4")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createMd4***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createMd4***REMOVED***=***REMOVED***requireMd4();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BatchedHash***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BatchedHash***REMOVED***=***REMOVED***requireBatchedHash();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BatchedHash(createMd4());
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"native-md4")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***crypto***REMOVED***===***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crypto***REMOVED***=***REMOVED***require$$3;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BulkUpdateDecorator***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***requireBulkUpdateDecorator();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BulkUpdateDecorator(()***REMOVED***=>***REMOVED***crypto.createHash("md4"),***REMOVED***"md4");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***crypto***REMOVED***===***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crypto***REMOVED***=***REMOVED***require$$3;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BulkUpdateDecorator***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***requireBulkUpdateDecorator();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BulkUpdateDecorator(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***()***REMOVED***=>***REMOVED***crypto.createHash(algorithm),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***algorithm
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***hash.update(buffer);

***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base26"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base32"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base36"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base49"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base52"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base58"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base62"
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***encodeBufferToBase(hash.digest(),***REMOVED***digestType.substr(4),***REMOVED***maxLength);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hash.digest(digestType***REMOVED***||***REMOVED***"hex").substr(0,***REMOVED***maxLength);
***REMOVED******REMOVED***}
}

var***REMOVED***getHashDigest_1***REMOVED***=***REMOVED***getHashDigest$1;

const***REMOVED***path$1***REMOVED***=***REMOVED***require$$0$1;
const***REMOVED***getHashDigest***REMOVED***=***REMOVED***getHashDigest_1;

function***REMOVED***interpolateName$1(loaderContext,***REMOVED***name,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***filename;

***REMOVED******REMOVED***const***REMOVED***hasQuery***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***loaderContext.resourceQuery***REMOVED***&&***REMOVED***loaderContext.resourceQuery.length***REMOVED***>***REMOVED***1;

***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***name***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***name(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loaderContext.resourcePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasQuery***REMOVED***?***REMOVED***loaderContext.resourceQuery***REMOVED***:***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***name***REMOVED***||***REMOVED***"[hash].[ext]";
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***options.context;
***REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***options.content;
***REMOVED******REMOVED***const***REMOVED***regExp***REMOVED***=***REMOVED***options.regExp;

***REMOVED******REMOVED***let***REMOVED***ext***REMOVED***=***REMOVED***"bin";
***REMOVED******REMOVED***let***REMOVED***basename***REMOVED***=***REMOVED***"file";
***REMOVED******REMOVED***let***REMOVED***directory***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***folder***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***query***REMOVED***=***REMOVED***"";

***REMOVED******REMOVED***if***REMOVED***(loaderContext.resourcePath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsed***REMOVED***=***REMOVED***path$1.parse(loaderContext.resourcePath);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resourcePath***REMOVED***=***REMOVED***loaderContext.resourcePath;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsed.ext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***parsed.ext.substr(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsed.dir)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***basename***REMOVED***=***REMOVED***parsed.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resourcePath***REMOVED***=***REMOVED***parsed.dir***REMOVED***+***REMOVED***path$1.sep;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***context***REMOVED***!==***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***path$1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.relative(context,***REMOVED***resourcePath***REMOVED***+***REMOVED***"_")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\\/g,***REMOVED***"/")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\.\.(\/)?/g,***REMOVED***"_$1");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***directory.substr(0,***REMOVED***directory.length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***resourcePath.replace(/\\/g,***REMOVED***"/").replace(/\.\.(\/)?/g,***REMOVED***"_$1");
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(directory.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(directory.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***folder***REMOVED***=***REMOVED***path$1.basename(directory);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(loaderContext.resourceQuery***REMOVED***&&***REMOVED***loaderContext.resourceQuery.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***query***REMOVED***=***REMOVED***loaderContext.resourceQuery;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashIdx***REMOVED***=***REMOVED***query.indexOf("#");

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashIdx***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***query***REMOVED***=***REMOVED***query.substr(0,***REMOVED***hashIdx);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***let***REMOVED***url***REMOVED***=***REMOVED***filename;

***REMOVED******REMOVED***if***REMOVED***(content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Match***REMOVED***hash***REMOVED***template
***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***url
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`hash`***REMOVED***and***REMOVED***`contenthash`***REMOVED***are***REMOVED***same***REMOVED***in***REMOVED***`loader-utils`***REMOVED***context
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***let's***REMOVED***keep***REMOVED***`hash`***REMOVED***for***REMOVED***backward***REMOVED***compatibility
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/\[(?:([^:\]]+):)?(?:hash|contenthash)(?::([a-z]+\d*))?(?::(\d+))?\]/gi,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(all,***REMOVED***hashType,***REMOVED***digestType,***REMOVED***maxLength)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHashDigest(content,***REMOVED***hashType,***REMOVED***digestType,***REMOVED***parseInt(maxLength,***REMOVED***10))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***url***REMOVED***=***REMOVED***url
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[ext\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***ext)
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[name\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***basename)
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[path\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***directory)
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[folder\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***folder)
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[query\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***query);

***REMOVED******REMOVED***if***REMOVED***(regExp***REMOVED***&&***REMOVED***loaderContext.resourcePath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***loaderContext.resourcePath.match(new***REMOVED***RegExp(regExp));

***REMOVED******REMOVED******REMOVED******REMOVED***match***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***match.forEach((matched,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***url.replace(new***REMOVED***RegExp("\\["***REMOVED***+***REMOVED***i***REMOVED***+***REMOVED***"\\]",***REMOVED***"ig"),***REMOVED***matched);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***loaderContext.options***REMOVED***===***REMOVED***"object"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***loaderContext.options.customInterpolateName***REMOVED***===***REMOVED***"function"
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***loaderContext.options.customInterpolateName.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loaderContext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***url;
}

var***REMOVED***interpolateName_1***REMOVED***=***REMOVED***interpolateName$1;

var***REMOVED***interpolateName***REMOVED***=***REMOVED***interpolateName_1;
var***REMOVED***path***REMOVED***=***REMOVED***require$$0$1;

/**
***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***pattern
***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{object}***REMOVED***options
***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***options.context
***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***options.hashPrefix
***REMOVED*******REMOVED***@return***REMOVED***{function}
***REMOVED****/
var***REMOVED***genericNames***REMOVED***=***REMOVED***function***REMOVED***createGenerator(pattern,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***var***REMOVED***context***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&***REMOVED***typeof***REMOVED***options.context***REMOVED***===***REMOVED***"string"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.context
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***process.cwd();
***REMOVED******REMOVED***var***REMOVED***hashPrefix***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&***REMOVED***typeof***REMOVED***options.hashPrefix***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***options.hashPrefix***REMOVED***:***REMOVED***"";

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***localName***REMOVED***Usually***REMOVED***a***REMOVED***class***REMOVED***name
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***filepath***REMOVED******REMOVED***Absolute***REMOVED***path
***REMOVED******REMOVED******REMOVED*******REMOVED***@return***REMOVED***{string}
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***return***REMOVED***function***REMOVED***generate(localName,***REMOVED***filepath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***pattern.replace(/\[local\]/gi,***REMOVED***localName);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***loaderContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resourcePath:***REMOVED***filepath,
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***loaderOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashPrefix***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.relative(context,***REMOVED***filepath).replace(/\\/g,***REMOVED***"/")***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"\x00"***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***genericName***REMOVED***=***REMOVED***interpolateName(loaderContext,***REMOVED***name,***REMOVED***loaderOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***genericName
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(new***REMOVED***RegExp("[^a-zA-Z0-9\\-_\u00A0-\uFFFF]",***REMOVED***"g"),***REMOVED***"-")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^((-?[0-9])|--)/,***REMOVED***"_$1");
***REMOVED******REMOVED***};
};

var***REMOVED***src$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***dist***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***processor***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***parser***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***root$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***container***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***node$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***util***REMOVED***=***REMOVED***{};

var***REMOVED***unesc***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***unesc;

	//***REMOVED***Many***REMOVED***thanks***REMOVED***for***REMOVED***this***REMOVED***post***REMOVED***which***REMOVED***made***REMOVED***this***REMOVED***migration***REMOVED***much***REMOVED***easier.
	//***REMOVED***https://mathiasbynens.be/notes/css-escapes

	/**
	***REMOVED*******REMOVED***
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***str***REMOVED***
	***REMOVED*******REMOVED***@returns***REMOVED***{[string,***REMOVED***number]|undefined}
	***REMOVED****/
	function***REMOVED***gobbleHex(str)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***lower***REMOVED***=***REMOVED***str.toLowerCase();
	***REMOVED******REMOVED***var***REMOVED***hex***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED***var***REMOVED***spaceTerminated***REMOVED***=***REMOVED***false;

	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***lower[i]***REMOVED***!==***REMOVED***undefined;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***lower.charCodeAt(i);***REMOVED***//***REMOVED***check***REMOVED***to***REMOVED***see***REMOVED***if***REMOVED***we***REMOVED***are***REMOVED***dealing***REMOVED***with***REMOVED***a***REMOVED***valid***REMOVED***hex***REMOVED***char***REMOVED***[a-f|0-9]

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valid***REMOVED***=***REMOVED***code***REMOVED***>=***REMOVED***97***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***102***REMOVED***||***REMOVED***code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57;***REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#consume-escaped-code-point

	***REMOVED******REMOVED******REMOVED******REMOVED***spaceTerminated***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***32;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!valid)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***hex***REMOVED***+=***REMOVED***lower[i];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(hex.length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***codePoint***REMOVED***=***REMOVED***parseInt(hex,***REMOVED***16);
	***REMOVED******REMOVED***var***REMOVED***isSurrogate***REMOVED***=***REMOVED***codePoint***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***codePoint***REMOVED***<=***REMOVED***0xDFFF;***REMOVED***//***REMOVED***Add***REMOVED***special***REMOVED***case***REMOVED***for
	***REMOVED******REMOVED***//***REMOVED***"If***REMOVED***this***REMOVED***number***REMOVED***is***REMOVED***zero,***REMOVED***or***REMOVED***is***REMOVED***for***REMOVED***a***REMOVED***surrogate,***REMOVED***or***REMOVED***is***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***maximum***REMOVED***allowed***REMOVED***code***REMOVED***point"
	***REMOVED******REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point

	***REMOVED******REMOVED***if***REMOVED***(isSurrogate***REMOVED***||***REMOVED***codePoint***REMOVED***===***REMOVED***0x0000***REMOVED***||***REMOVED***codePoint***REMOVED***>***REMOVED***0x10FFFF)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["\uFFFD",***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***[String.fromCodePoint(codePoint),***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
	}

	var***REMOVED***CONTAINS_ESCAPE***REMOVED***=***REMOVED***/\\/;

	function***REMOVED***unesc(str)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***needToProcess***REMOVED***=***REMOVED***CONTAINS_ESCAPE.test(str);

	***REMOVED******REMOVED***if***REMOVED***(!needToProcess)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***ret***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***str.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i]***REMOVED***===***REMOVED***"\\")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***gobbled***REMOVED***=***REMOVED***gobbleHex(str.slice(i***REMOVED***+***REMOVED***1,***REMOVED***i***REMOVED***+***REMOVED***7));

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(gobbled***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***gobbled[0];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***gobbled[1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***//***REMOVED***Retain***REMOVED***a***REMOVED***pair***REMOVED***of***REMOVED***\\***REMOVED***if***REMOVED***double***REMOVED***escaped***REMOVED***`\\\\`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e


	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***"\\")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***"\\";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***//***REMOVED***if***REMOVED***\\***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***string***REMOVED***retain***REMOVED***it
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb


	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str.length***REMOVED***===***REMOVED***i***REMOVED***+***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***ret;
	}

	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(unesc,***REMOVED***unesc.exports));

var***REMOVED***unescExports***REMOVED***=***REMOVED***unesc.exports;

var***REMOVED***getProp***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***getProp;

	function***REMOVED***getProp(obj)***REMOVED***{
	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***obj;
	}

	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(getProp,***REMOVED***getProp.exports));

var***REMOVED***getPropExports***REMOVED***=***REMOVED***getProp.exports;

var***REMOVED***ensureObject***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***ensureObject;

	function***REMOVED***ensureObject(obj)***REMOVED***{
	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***obj[prop]***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
	***REMOVED******REMOVED***}
	}

	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(ensureObject,***REMOVED***ensureObject.exports));

var***REMOVED***ensureObjectExports***REMOVED***=***REMOVED***ensureObject.exports;

var***REMOVED***stripComments***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***stripComments;

	function***REMOVED***stripComments(str)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***s***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***var***REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*");
	***REMOVED******REMOVED***var***REMOVED***lastEnd***REMOVED***=***REMOVED***0;

	***REMOVED******REMOVED***while***REMOVED***(commentStart***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd,***REMOVED***commentStart);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentEnd***REMOVED***=***REMOVED***str.indexOf("*/",***REMOVED***commentStart***REMOVED***+***REMOVED***2);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentEnd***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***lastEnd***REMOVED***=***REMOVED***commentEnd***REMOVED***+***REMOVED***2;
	***REMOVED******REMOVED******REMOVED******REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*",***REMOVED***lastEnd);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd);
	***REMOVED******REMOVED***return***REMOVED***s;
	}

	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(stripComments,***REMOVED***stripComments.exports));

var***REMOVED***stripCommentsExports***REMOVED***=***REMOVED***stripComments.exports;

util.__esModule***REMOVED***=***REMOVED***true;
util.stripComments***REMOVED***=***REMOVED***util.ensureObject***REMOVED***=***REMOVED***util.getProp***REMOVED***=***REMOVED***util.unesc***REMOVED***=***REMOVED***void***REMOVED***0;

var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault$3(unescExports);

util.unesc***REMOVED***=***REMOVED***_unesc["default"];

var***REMOVED***_getProp***REMOVED***=***REMOVED***_interopRequireDefault$3(getPropExports);

util.getProp***REMOVED***=***REMOVED***_getProp["default"];

var***REMOVED***_ensureObject***REMOVED***=***REMOVED***_interopRequireDefault$3(ensureObjectExports);

util.ensureObject***REMOVED***=***REMOVED***_ensureObject["default"];

var***REMOVED***_stripComments***REMOVED***=***REMOVED***_interopRequireDefault$3(stripCommentsExports);

util.stripComments***REMOVED***=***REMOVED***_stripComments["default"];

function***REMOVED***_interopRequireDefault$3(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_util***REMOVED***=***REMOVED***util;

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	var***REMOVED***cloneNode***REMOVED***=***REMOVED***function***REMOVED***cloneNode(obj,***REMOVED***parent)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***obj***REMOVED***!==***REMOVED***'object'***REMOVED***||***REMOVED***obj***REMOVED***===***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***obj;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***new***REMOVED***obj.constructor();

	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***in***REMOVED***obj)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj.hasOwnProperty(i))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***obj[i];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***value;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***'parent'***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***'object')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***parent;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***instanceof***REMOVED***Array)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***value.map(function***REMOVED***(j)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloneNode(j,***REMOVED***cloned);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***cloneNode(value,***REMOVED***cloned);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***cloned;
	};

	var***REMOVED***Node***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED***function***REMOVED***Node(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this,***REMOVED***opts);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.spaces***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.before***REMOVED***=***REMOVED***this.spaces.before***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.after***REMOVED***=***REMOVED***this.spaces.after***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Node.prototype;

	***REMOVED******REMOVED***_proto.remove***REMOVED***=***REMOVED***function***REMOVED***remove()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.removeChild(this);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.replaceWith***REMOVED***=***REMOVED***function***REMOVED***replaceWith()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***index***REMOVED***in***REMOVED***arguments)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.insertBefore(this,***REMOVED***arguments[index]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.next***REMOVED***=***REMOVED***function***REMOVED***next()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.prev***REMOVED***=***REMOVED***function***REMOVED***prev()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.clone***REMOVED***=***REMOVED***function***REMOVED***clone(overrides)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(overrides***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overrides***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***cloneNode(this);

	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***name***REMOVED***in***REMOVED***overrides)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[name]***REMOVED***=***REMOVED***overrides[name];
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
	***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***non***REMOVED***standard***REMOVED***syntax***REMOVED***to***REMOVED***be***REMOVED***appended***REMOVED***to***REMOVED***an***REMOVED***existing***REMOVED***property
	***REMOVED******REMOVED******REMOVED*******REMOVED***by***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value.***REMOVED***By***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value,
	***REMOVED******REMOVED******REMOVED*******REMOVED***illegal***REMOVED***characters***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***optional.***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.appendToPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***appendToPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalValue***REMOVED***=***REMOVED***this[name];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalEscaped***REMOVED***=***REMOVED***this.raws[name];
	***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***originalValue***REMOVED***+***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalEscaped***REMOVED***||***REMOVED***valueEscaped***REMOVED***!==***REMOVED***value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***(originalEscaped***REMOVED***||***REMOVED***originalValue)***REMOVED***+***REMOVED***valueEscaped;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];***REMOVED***//***REMOVED***delete***REMOVED***any***REMOVED***escaped***REMOVED***value***REMOVED***that***REMOVED***was***REMOVED***created***REMOVED***by***REMOVED***the***REMOVED***setter.
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
	***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***to***REMOVED***be***REMOVED***specified***REMOVED***directly,***REMOVED***allowing***REMOVED***illegal
	***REMOVED******REMOVED******REMOVED*******REMOVED***characters***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.setPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.

	***REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***valueEscaped;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***When***REMOVED***you***REMOVED***want***REMOVED***a***REMOVED***value***REMOVED***to***REMOVED***passed***REMOVED***through***REMOVED***to***REMOVED***CSS***REMOVED***directly.***REMOVED***This***REMOVED***method
	***REMOVED******REMOVED******REMOVED*******REMOVED***deletes***REMOVED***the***REMOVED***corresponding***REMOVED***raw***REMOVED***value***REMOVED***causing***REMOVED***the***REMOVED***stringifier***REMOVED***to***REMOVED***fallback
	***REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***the***REMOVED***unescaped***REMOVED***value.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***that***REMOVED***is***REMOVED***both***REMOVED***escaped***REMOVED***and***REMOVED***unescaped.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.setPropertyWithoutEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyWithoutEscape(name,***REMOVED***value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***column***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.isAtPosition***REMOVED***=***REMOVED***function***REMOVED***isAtPosition(line,***REMOVED***column)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source***REMOVED***&&***REMOVED***this.source.start***REMOVED***&&***REMOVED***this.source.end)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***>***REMOVED***line)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***<***REMOVED***line)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.start.column***REMOVED***>***REMOVED***column)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.end.column***REMOVED***<***REMOVED***column)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.stringifyProperty***REMOVED***=***REMOVED***function***REMOVED***stringifyProperty(name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws[name]***REMOVED***||***REMOVED***this[name];
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(this.stringifyProperty("value"));
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.valueToString(),***REMOVED***this.rawSpaceAfter].join('');
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Node,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceBefore",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.before;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces***REMOVED***&&***REMOVED***this.spaces.before;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.before***REMOVED***=***REMOVED***raw;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceAfter",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.after;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces.after;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.after***REMOVED***=***REMOVED***raw;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Node;
	}();

	exports["default"]***REMOVED***=***REMOVED***Node;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(node$1,***REMOVED***node$1.exports));

var***REMOVED***nodeExports***REMOVED***=***REMOVED***node$1.exports;

var***REMOVED***types***REMOVED***=***REMOVED***{};

types.__esModule***REMOVED***=***REMOVED***true;
types.UNIVERSAL***REMOVED***=***REMOVED***types.ATTRIBUTE***REMOVED***=***REMOVED***types.CLASS***REMOVED***=***REMOVED***types.COMBINATOR***REMOVED***=***REMOVED***types.COMMENT***REMOVED***=***REMOVED***types.ID***REMOVED***=***REMOVED***types.NESTING***REMOVED***=***REMOVED***types.PSEUDO***REMOVED***=***REMOVED***types.ROOT***REMOVED***=***REMOVED***types.SELECTOR***REMOVED***=***REMOVED***types.STRING***REMOVED***=***REMOVED***types.TAG***REMOVED***=***REMOVED***void***REMOVED***0;
var***REMOVED***TAG***REMOVED***=***REMOVED***'tag';
types.TAG***REMOVED***=***REMOVED***TAG;
var***REMOVED***STRING***REMOVED***=***REMOVED***'string';
types.STRING***REMOVED***=***REMOVED***STRING;
var***REMOVED***SELECTOR***REMOVED***=***REMOVED***'selector';
types.SELECTOR***REMOVED***=***REMOVED***SELECTOR;
var***REMOVED***ROOT***REMOVED***=***REMOVED***'root';
types.ROOT***REMOVED***=***REMOVED***ROOT;
var***REMOVED***PSEUDO***REMOVED***=***REMOVED***'pseudo';
types.PSEUDO***REMOVED***=***REMOVED***PSEUDO;
var***REMOVED***NESTING***REMOVED***=***REMOVED***'nesting';
types.NESTING***REMOVED***=***REMOVED***NESTING;
var***REMOVED***ID***REMOVED***=***REMOVED***'id';
types.ID***REMOVED***=***REMOVED***ID;
var***REMOVED***COMMENT***REMOVED***=***REMOVED***'comment';
types.COMMENT***REMOVED***=***REMOVED***COMMENT;
var***REMOVED***COMBINATOR***REMOVED***=***REMOVED***'combinator';
types.COMBINATOR***REMOVED***=***REMOVED***COMBINATOR;
var***REMOVED***CLASS***REMOVED***=***REMOVED***'class';
types.CLASS***REMOVED***=***REMOVED***CLASS;
var***REMOVED***ATTRIBUTE***REMOVED***=***REMOVED***'attribute';
types.ATTRIBUTE***REMOVED***=***REMOVED***ATTRIBUTE;
var***REMOVED***UNIVERSAL***REMOVED***=***REMOVED***'universal';
types.UNIVERSAL***REMOVED***=***REMOVED***UNIVERSAL;

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***types$1***REMOVED***=***REMOVED***_interopRequireWildcard(types);

	function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***return***REMOVED***cache;***REMOVED***};***REMOVED***return***REMOVED***cache;***REMOVED***}

	function***REMOVED***_interopRequireWildcard(obj)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache();***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_createForOfIteratorHelperLoose(o,***REMOVED***allowArrayLike)***REMOVED***{***REMOVED***var***REMOVED***it;***REMOVED***if***REMOVED***(typeof***REMOVED***Symbol***REMOVED***===***REMOVED***"undefined"***REMOVED***||***REMOVED***o[Symbol.iterator]***REMOVED***==***REMOVED***null)***REMOVED***{***REMOVED***if***REMOVED***(Array.isArray(o)***REMOVED***||***REMOVED***(it***REMOVED***=***REMOVED***_unsupportedIterableToArray(o))***REMOVED***||***REMOVED***allowArrayLike***REMOVED***&&***REMOVED***o***REMOVED***&&***REMOVED***typeof***REMOVED***o.length***REMOVED***===***REMOVED***"number")***REMOVED***{***REMOVED***if***REMOVED***(it)***REMOVED***o***REMOVED***=***REMOVED***it;***REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***return***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***o.length)***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***true***REMOVED***};***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***false,***REMOVED***value:***REMOVED***o[i++]***REMOVED***};***REMOVED***};***REMOVED***}***REMOVED***throw***REMOVED***new***REMOVED***TypeError("Invalid***REMOVED***attempt***REMOVED***to***REMOVED***iterate***REMOVED***non-iterable***REMOVED***instance.\nIn***REMOVED***order***REMOVED***to***REMOVED***be***REMOVED***iterable,***REMOVED***non-array***REMOVED***objects***REMOVED***must***REMOVED***have***REMOVED***a***REMOVED***[Symbol.iterator]()***REMOVED***method.");***REMOVED***}***REMOVED***it***REMOVED***=***REMOVED***o[Symbol.iterator]();***REMOVED***return***REMOVED***it.next.bind(it);***REMOVED***}

	function***REMOVED***_unsupportedIterableToArray(o,***REMOVED***minLen)***REMOVED***{***REMOVED***if***REMOVED***(!o)***REMOVED***return;***REMOVED***if***REMOVED***(typeof***REMOVED***o***REMOVED***===***REMOVED***"string")***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***Object.prototype.toString.call(o).slice(8,***REMOVED***-1);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Object"***REMOVED***&&***REMOVED***o.constructor)***REMOVED***n***REMOVED***=***REMOVED***o.constructor.name;***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Map"***REMOVED***||***REMOVED***n***REMOVED***===***REMOVED***"Set")***REMOVED***return***REMOVED***Array.from(o);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Arguments"***REMOVED***||***REMOVED***/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***}

	function***REMOVED***_arrayLikeToArray(arr,***REMOVED***len)***REMOVED***{***REMOVED***if***REMOVED***(len***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***len***REMOVED***>***REMOVED***arr.length)***REMOVED***len***REMOVED***=***REMOVED***arr.length;***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***arr2***REMOVED***=***REMOVED***new***REMOVED***Array(len);***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{***REMOVED***arr2[i]***REMOVED***=***REMOVED***arr[i];***REMOVED***}***REMOVED***return***REMOVED***arr2;***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Container***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Container,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***Container(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_this.nodes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this.nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Container.prototype;

	***REMOVED******REMOVED***_proto.append***REMOVED***=***REMOVED***function***REMOVED***append(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.push(selector);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.prepend***REMOVED***=***REMOVED***function***REMOVED***prepend(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.unshift(selector);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.at***REMOVED***=***REMOVED***function***REMOVED***at(index)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes[index];
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.index***REMOVED***=***REMOVED***function***REMOVED***index(child)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***child***REMOVED***===***REMOVED***'number')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***child;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.indexOf(child);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.removeChild***REMOVED***=***REMOVED***function***REMOVED***removeChild(child)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***child***REMOVED***=***REMOVED***this.index(child);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.at(child).parent***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(child,***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;

	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***child)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.removeAll***REMOVED***=***REMOVED***function***REMOVED***removeAll()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_iterator***REMOVED***=***REMOVED***_createForOfIteratorHelperLoose(this.nodes),***REMOVED***_step;***REMOVED***!(_step***REMOVED***=***REMOVED***_iterator()).done;)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***_step.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parent***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.empty***REMOVED***=***REMOVED***function***REMOVED***empty()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.removeAll();
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.insertAfter***REMOVED***=***REMOVED***function***REMOVED***insertAfter(oldNode,***REMOVED***newNode)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(oldIndex***REMOVED***+***REMOVED***1,***REMOVED***0,***REMOVED***newNode);
	***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;

	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldIndex***REMOVED***<=***REMOVED***index)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.insertBefore***REMOVED***=***REMOVED***function***REMOVED***insertBefore(oldNode,***REMOVED***newNode)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(oldIndex,***REMOVED***0,***REMOVED***newNode);
	***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;

	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***<=***REMOVED***oldIndex)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._findChildAtPosition***REMOVED***=***REMOVED***function***REMOVED***_findChildAtPosition(line,***REMOVED***col)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***found***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.each(function***REMOVED***(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.atPosition)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***foundChild***REMOVED***=***REMOVED***node.atPosition(line,***REMOVED***col);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundChild)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***foundChild;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.isAtPosition(line,***REMOVED***col))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***found;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***most***REMOVED***specific***REMOVED***node***REMOVED***at***REMOVED***the***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***number***REMOVED***given.
	***REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***source***REMOVED***location***REMOVED***is***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***original***REMOVED***parsed***REMOVED***location,***REMOVED***locations***REMOVED***aren't
	***REMOVED******REMOVED******REMOVED*******REMOVED***updated***REMOVED***as***REMOVED***selector***REMOVED***nodes***REMOVED***are***REMOVED***mutated.
	***REMOVED******REMOVED******REMOVED*******REMOVED***
	***REMOVED******REMOVED******REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***location***REMOVED***is***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***first***REMOVED***character
	***REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***selector,***REMOVED***and***REMOVED***not***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***in***REMOVED***the***REMOVED***overall***REMOVED***document
	***REMOVED******REMOVED******REMOVED*******REMOVED***when***REMOVED***used***REMOVED***in***REMOVED***conjunction***REMOVED***with***REMOVED***postcss.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***not***REMOVED***found,***REMOVED***returns***REMOVED***undefined.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***col***REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.atPosition***REMOVED***=***REMOVED***function***REMOVED***atPosition(line,***REMOVED***col)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAtPosition(line,***REMOVED***col))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._findChildAtPosition(line,***REMOVED***col)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._inferEndPosition***REMOVED***=***REMOVED***function***REMOVED***_inferEndPosition()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.last***REMOVED***&&***REMOVED***this.last.source***REMOVED***&&***REMOVED***this.last.source.end)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***this.source***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.end***REMOVED***=***REMOVED***this.source.end***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this.source.end,***REMOVED***this.last.source.end);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.each***REMOVED***=***REMOVED***function***REMOVED***each(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.lastEach)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.indexes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach++;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***id***REMOVED***=***REMOVED***this.lastEach;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***0;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index,***REMOVED***result;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.indexes[id]***REMOVED***<***REMOVED***this.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***callback(this.at(index),***REMOVED***index);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.indexes[id];

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walk***REMOVED***=***REMOVED***function***REMOVED***walk(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.each(function***REMOVED***(node,***REMOVED***i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***callback(node,***REMOVED***i);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***node.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***node.walk(callback);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkAttributes***REMOVED***=***REMOVED***function***REMOVED***walkAttributes(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.ATTRIBUTE)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this2,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkClasses***REMOVED***=***REMOVED***function***REMOVED***walkClasses(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.CLASS)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this3,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkCombinators***REMOVED***=***REMOVED***function***REMOVED***walkCombinators(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.COMBINATOR)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this4,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkComments***REMOVED***=***REMOVED***function***REMOVED***walkComments(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.COMMENT)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this5,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkIds***REMOVED***=***REMOVED***function***REMOVED***walkIds(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this6***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.ID)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this6,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkNesting***REMOVED***=***REMOVED***function***REMOVED***walkNesting(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this7***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.NESTING)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this7,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkPseudos***REMOVED***=***REMOVED***function***REMOVED***walkPseudos(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this8***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.PSEUDO)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this8,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkTags***REMOVED***=***REMOVED***function***REMOVED***walkTags(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this9***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.TAG)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this9,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.walkUniversals***REMOVED***=***REMOVED***function***REMOVED***walkUniversals(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this10***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types$1.UNIVERSAL)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this10,***REMOVED***selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.split***REMOVED***=***REMOVED***function***REMOVED***split(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this11***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***node,***REMOVED***index)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***split***REMOVED***=***REMOVED***callback.call(_this11,***REMOVED***node);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current.push(node);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(split)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***_this11.length***REMOVED***-***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.map***REMOVED***=***REMOVED***function***REMOVED***map(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.map(callback);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.reduce***REMOVED***=***REMOVED***function***REMOVED***reduce(callback,***REMOVED***memo)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.reduce(callback,***REMOVED***memo);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.every***REMOVED***=***REMOVED***function***REMOVED***every(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.every(callback);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.some***REMOVED***=***REMOVED***function***REMOVED***some(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.some(callback);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.filter***REMOVED***=***REMOVED***function***REMOVED***filter(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.filter(callback);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.sort***REMOVED***=***REMOVED***function***REMOVED***sort(callback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.sort(callback);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.map(String).join('');
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Container,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"first",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(0);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"last",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(this.length***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"length",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Container;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***Container;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(container,***REMOVED***container.exports));

var***REMOVED***containerExports***REMOVED***=***REMOVED***container.exports;

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(containerExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Root***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Root,***REMOVED***_Container);

	***REMOVED******REMOVED***function***REMOVED***Root(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ROOT;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Root.prototype;

	***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(String(selector));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]).join(',');
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.trailingComma***REMOVED***?***REMOVED***str***REMOVED***+***REMOVED***','***REMOVED***:***REMOVED***str;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._error)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._error(message,***REMOVED***options);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Root,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"errorGenerator",
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(handler)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._error***REMOVED***=***REMOVED***handler;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Root;
	}(_container["default"]);

	exports["default"]***REMOVED***=***REMOVED***Root;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(root$1,***REMOVED***root$1.exports));

var***REMOVED***rootExports***REMOVED***=***REMOVED***root$1.exports;

var***REMOVED***selector$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(containerExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Selector***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Selector,***REMOVED***_Container);

	***REMOVED******REMOVED***function***REMOVED***Selector(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.SELECTOR;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Selector;
	}(_container["default"]);

	exports["default"]***REMOVED***=***REMOVED***Selector;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(selector$1,***REMOVED***selector$1.exports));

var***REMOVED***selectorExports***REMOVED***=***REMOVED***selector$1.exports;

var***REMOVED***className$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

/*!***REMOVED***https://mths.be/cssesc***REMOVED***v3.0.0***REMOVED***by***REMOVED***@mathias***REMOVED****/

var***REMOVED***object***REMOVED***=***REMOVED***{};
var***REMOVED***hasOwnProperty$1***REMOVED***=***REMOVED***object.hasOwnProperty;
var***REMOVED***merge***REMOVED***=***REMOVED***function***REMOVED***merge(options,***REMOVED***defaults)***REMOVED***{
	if***REMOVED***(!options)***REMOVED***{
		return***REMOVED***defaults;
	}
	var***REMOVED***result***REMOVED***=***REMOVED***{};
	for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***defaults)***REMOVED***{
		//***REMOVED***`if***REMOVED***(defaults.hasOwnProperty(key)***REMOVED***{***REMOVED***…***REMOVED***}`***REMOVED***is***REMOVED***not***REMOVED***needed***REMOVED***here,***REMOVED***since
		//***REMOVED***only***REMOVED***recognized***REMOVED***option***REMOVED***names***REMOVED***are***REMOVED***used.
		result[key]***REMOVED***=***REMOVED***hasOwnProperty$1.call(options,***REMOVED***key)***REMOVED***?***REMOVED***options[key]***REMOVED***:***REMOVED***defaults[key];
	}
	return***REMOVED***result;
};

var***REMOVED***regexAnySingleEscape***REMOVED***=***REMOVED***/[***REMOVED***-,\.\/:-@\[-\^`\{-~]/;
var***REMOVED***regexSingleEscape***REMOVED***=***REMOVED***/[***REMOVED***-,\.\/:-@\[\]\^`\{-~]/;
var***REMOVED***regexExcessiveSpaces***REMOVED***=***REMOVED***/(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;

//***REMOVED***https://mathiasbynens.be/notes/css-escapes#css
var***REMOVED***cssesc***REMOVED***=***REMOVED***function***REMOVED***cssesc(string,***REMOVED***options)***REMOVED***{
	options***REMOVED***=***REMOVED***merge(options,***REMOVED***cssesc.options);
	if***REMOVED***(options.quotes***REMOVED***!=***REMOVED***'single'***REMOVED***&&***REMOVED***options.quotes***REMOVED***!=***REMOVED***'double')***REMOVED***{
		options.quotes***REMOVED***=***REMOVED***'single';
	}
	var***REMOVED***quote***REMOVED***=***REMOVED***options.quotes***REMOVED***==***REMOVED***'double'***REMOVED***?***REMOVED***'"'***REMOVED***:***REMOVED***'\'';
	var***REMOVED***isIdentifier***REMOVED***=***REMOVED***options.isIdentifier;

	var***REMOVED***firstChar***REMOVED***=***REMOVED***string.charAt(0);
	var***REMOVED***output***REMOVED***=***REMOVED***'';
	var***REMOVED***counter***REMOVED***=***REMOVED***0;
	var***REMOVED***length***REMOVED***=***REMOVED***string.length;
	while***REMOVED***(counter***REMOVED***<***REMOVED***length)***REMOVED***{
		var***REMOVED***character***REMOVED***=***REMOVED***string.charAt(counter++);
		var***REMOVED***codePoint***REMOVED***=***REMOVED***character.charCodeAt();
		var***REMOVED***value***REMOVED***=***REMOVED***void***REMOVED***0;
		//***REMOVED***If***REMOVED***it’s***REMOVED***not***REMOVED***a***REMOVED***printable***REMOVED***ASCII***REMOVED***character…
		if***REMOVED***(codePoint***REMOVED***<***REMOVED***0x20***REMOVED***||***REMOVED***codePoint***REMOVED***>***REMOVED***0x7E)***REMOVED***{
			if***REMOVED***(codePoint***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***codePoint***REMOVED***<=***REMOVED***0xDBFF***REMOVED***&&***REMOVED***counter***REMOVED***<***REMOVED***length)***REMOVED***{
				//***REMOVED***It’s***REMOVED***a***REMOVED***high***REMOVED***surrogate,***REMOVED***and***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***next***REMOVED***character.
				var***REMOVED***extra***REMOVED***=***REMOVED***string.charCodeAt(counter++);
				if***REMOVED***((extra***REMOVED***&***REMOVED***0xFC00)***REMOVED***==***REMOVED***0xDC00)***REMOVED***{
					//***REMOVED***next***REMOVED***character***REMOVED***is***REMOVED***low***REMOVED***surrogate
					codePoint***REMOVED***=***REMOVED***((codePoint***REMOVED***&***REMOVED***0x3FF)***REMOVED***<<***REMOVED***10)***REMOVED***+***REMOVED***(extra***REMOVED***&***REMOVED***0x3FF)***REMOVED***+***REMOVED***0x10000;
				}***REMOVED***else***REMOVED***{
					//***REMOVED***It’s***REMOVED***an***REMOVED***unmatched***REMOVED***surrogate;***REMOVED***only***REMOVED***append***REMOVED***this***REMOVED***code***REMOVED***unit,***REMOVED***in***REMOVED***case
					//***REMOVED***the***REMOVED***next***REMOVED***code***REMOVED***unit***REMOVED***is***REMOVED***the***REMOVED***high***REMOVED***surrogate***REMOVED***of***REMOVED***a***REMOVED***surrogate***REMOVED***pair.
					counter--;
				}
			}
			value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
		}***REMOVED***else***REMOVED***{
			if***REMOVED***(options.escapeEverything)***REMOVED***{
				if***REMOVED***(regexAnySingleEscape.test(character))***REMOVED***{
					value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***character;
				}***REMOVED***else***REMOVED***{
					value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
				}
			}***REMOVED***else***REMOVED***if***REMOVED***(/[\t\n\f\r\x0B]/.test(character))***REMOVED***{
				value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
			}***REMOVED***else***REMOVED***if***REMOVED***(character***REMOVED***==***REMOVED***'\\'***REMOVED***||***REMOVED***!isIdentifier***REMOVED***&&***REMOVED***(character***REMOVED***==***REMOVED***'"'***REMOVED***&&***REMOVED***quote***REMOVED***==***REMOVED***character***REMOVED***||***REMOVED***character***REMOVED***==***REMOVED***'\''***REMOVED***&&***REMOVED***quote***REMOVED***==***REMOVED***character)***REMOVED***||***REMOVED***isIdentifier***REMOVED***&&***REMOVED***regexSingleEscape.test(character))***REMOVED***{
				value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***character;
			}***REMOVED***else***REMOVED***{
				value***REMOVED***=***REMOVED***character;
			}
		}
		output***REMOVED***+=***REMOVED***value;
	}

	if***REMOVED***(isIdentifier)***REMOVED***{
		if***REMOVED***(/^-[-\d]/.test(output))***REMOVED***{
			output***REMOVED***=***REMOVED***'\\-'***REMOVED***+***REMOVED***output.slice(1);
		}***REMOVED***else***REMOVED***if***REMOVED***(/\d/.test(firstChar))***REMOVED***{
			output***REMOVED***=***REMOVED***'\\3'***REMOVED***+***REMOVED***firstChar***REMOVED***+***REMOVED***'***REMOVED***'***REMOVED***+***REMOVED***output.slice(1);
		}
	}

	//***REMOVED***Remove***REMOVED***spaces***REMOVED***after***REMOVED***`\HEX`***REMOVED***escapes***REMOVED***that***REMOVED***are***REMOVED***not***REMOVED***followed***REMOVED***by***REMOVED***a***REMOVED***hex***REMOVED***digit,
	//***REMOVED***since***REMOVED***they’re***REMOVED***redundant.***REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***possible***REMOVED***if***REMOVED***the***REMOVED***escape
	//***REMOVED***sequence***REMOVED***isn’t***REMOVED***preceded***REMOVED***by***REMOVED***an***REMOVED***odd***REMOVED***number***REMOVED***of***REMOVED***backslashes.
	output***REMOVED***=***REMOVED***output.replace(regexExcessiveSpaces,***REMOVED***function***REMOVED***($0,***REMOVED***$1,***REMOVED***$2)***REMOVED***{
		if***REMOVED***($1***REMOVED***&&***REMOVED***$1.length***REMOVED***%***REMOVED***2)***REMOVED***{
			//***REMOVED***It’s***REMOVED***not***REMOVED***safe***REMOVED***to***REMOVED***remove***REMOVED***the***REMOVED***space,***REMOVED***so***REMOVED***don’t.
			return***REMOVED***$0;
		}
		//***REMOVED***Strip***REMOVED***the***REMOVED***space.
		return***REMOVED***($1***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***$2;
	});

	if***REMOVED***(!isIdentifier***REMOVED***&&***REMOVED***options.wrap)***REMOVED***{
		return***REMOVED***quote***REMOVED***+***REMOVED***output***REMOVED***+***REMOVED***quote;
	}
	return***REMOVED***output;
};

//***REMOVED***Expose***REMOVED***default***REMOVED***options***REMOVED***(so***REMOVED***they***REMOVED***can***REMOVED***be***REMOVED***overridden***REMOVED***globally).
cssesc.options***REMOVED***=***REMOVED***{
	'escapeEverything':***REMOVED***false,
	'isIdentifier':***REMOVED***false,
	'quotes':***REMOVED***'single',
	'wrap':***REMOVED***false
};

cssesc.version***REMOVED***=***REMOVED***'3.0.0';

var***REMOVED***cssesc_1***REMOVED***=***REMOVED***cssesc;

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(cssesc_1);

	var***REMOVED***_util***REMOVED***=***REMOVED***util;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***ClassName***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(ClassName,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***ClassName(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.CLASS;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ClassName.prototype;

	***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'.'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(ClassName,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(v)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***v)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***escaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***ClassName;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***ClassName;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(className$1,***REMOVED***className$1.exports));

var***REMOVED***classNameExports***REMOVED***=***REMOVED***className$1.exports;

var***REMOVED***comment$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Comment***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Comment,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***Comment(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMMENT;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Comment;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***Comment;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(comment$2,***REMOVED***comment$2.exports));

var***REMOVED***commentExports***REMOVED***=***REMOVED***comment$2.exports;

var***REMOVED***id$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***ID***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(ID,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***ID(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ID;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ID.prototype;

	***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'#'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***return***REMOVED***ID;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***ID;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(id$1,***REMOVED***id$1.exports));

var***REMOVED***idExports***REMOVED***=***REMOVED***id$1.exports;

var***REMOVED***tag$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***namespace***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(cssesc_1);

	var***REMOVED***_util***REMOVED***=***REMOVED***util;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Namespace***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Namespace,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***Namespace()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_Node.apply(this,***REMOVED***arguments)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Namespace.prototype;

	***REMOVED******REMOVED***_proto.qualifiedName***REMOVED***=***REMOVED***function***REMOVED***qualifiedName(value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespaceString***REMOVED***+***REMOVED***"|"***REMOVED***+***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(_Node.prototype.valueToString.call(this));
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Namespace,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespace",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"&")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(namespace,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.namespace***REMOVED***=***REMOVED***escaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"ns",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace***REMOVED***=***REMOVED***namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespaceString",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ns***REMOVED***=***REMOVED***this.stringifyProperty("namespace");

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns***REMOVED***===***REMOVED***true)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ns;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Namespace;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***Namespace;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(namespace,***REMOVED***namespace.exports));

var***REMOVED***namespaceExports***REMOVED***=***REMOVED***namespace.exports;

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(namespaceExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Tag***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Tag,***REMOVED***_Namespace);

	***REMOVED******REMOVED***function***REMOVED***Tag(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.TAG;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Tag;
	}(_namespace["default"]);

	exports["default"]***REMOVED***=***REMOVED***Tag;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(tag$1,***REMOVED***tag$1.exports));

var***REMOVED***tagExports***REMOVED***=***REMOVED***tag$1.exports;

var***REMOVED***string$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***String***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(String,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***String(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.STRING;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***String;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***String;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(string$1,***REMOVED***string$1.exports));

var***REMOVED***stringExports***REMOVED***=***REMOVED***string$1.exports;

var***REMOVED***pseudo$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(containerExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Pseudo***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Pseudo,***REMOVED***_Container);

	***REMOVED******REMOVED***function***REMOVED***Pseudo(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.PSEUDO;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Pseudo.prototype;

	***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***params***REMOVED***=***REMOVED***this.length***REMOVED***?***REMOVED***'('***REMOVED***+***REMOVED***this.map(String).join(',')***REMOVED***+***REMOVED***')'***REMOVED***:***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.stringifyProperty("value"),***REMOVED***params,***REMOVED***this.rawSpaceAfter].join('');
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***return***REMOVED***Pseudo;
	}(_container["default"]);

	exports["default"]***REMOVED***=***REMOVED***Pseudo;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(pseudo$1,***REMOVED***pseudo$1.exports));

var***REMOVED***pseudoExports***REMOVED***=***REMOVED***pseudo$1.exports;

var***REMOVED***attribute$1***REMOVED***=***REMOVED***{};

/**
***REMOVED*******REMOVED***For***REMOVED***Node.js,***REMOVED***simply***REMOVED***re-export***REMOVED***the***REMOVED***core***REMOVED***`util.deprecate`***REMOVED***function.
***REMOVED****/

var***REMOVED***node***REMOVED***=***REMOVED***require$$0$2.deprecate;

(function***REMOVED***(exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports.unescapeValue***REMOVED***=***REMOVED***unescapeValue;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(cssesc_1);

	var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault(unescExports);

	var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(namespaceExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	var***REMOVED***_CSSESC_QUOTE_OPTIONS;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***deprecate***REMOVED***=***REMOVED***node;

	var***REMOVED***WRAPPED_IN_QUOTES***REMOVED***=***REMOVED***/^('|")([^]*)\1$/;
	var***REMOVED***warnOfDeprecatedValueAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***an***REMOVED***attribute***REMOVED***a***REMOVED***value***REMOVED***containing***REMOVED***characters***REMOVED***that***REMOVED***might***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***escaped***REMOVED***is***REMOVED***deprecated.***REMOVED***"***REMOVED***+***REMOVED***"Call***REMOVED***attribute.setValue()***REMOVED***instead.");
	var***REMOVED***warnOfDeprecatedQuotedAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***attr.quoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***Assign***REMOVED***to***REMOVED***attr.quoteMark***REMOVED***instead.");
	var***REMOVED***warnOfDeprecatedConstructor***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Constructing***REMOVED***an***REMOVED***Attribute***REMOVED***selector***REMOVED***with***REMOVED***a***REMOVED***value***REMOVED***without***REMOVED***specifying***REMOVED***quoteMark***REMOVED***is***REMOVED***deprecated.***REMOVED***Note:***REMOVED***The***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unescaped***REMOVED***now.");

	function***REMOVED***unescapeValue(value)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***deprecatedUsage***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***var***REMOVED***unescaped***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED***var***REMOVED***m***REMOVED***=***REMOVED***unescaped.match(WRAPPED_IN_QUOTES);

	***REMOVED******REMOVED***if***REMOVED***(m)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***m[1];
	***REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***m[2];
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_unesc["default"])(unescaped);

	***REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***!==***REMOVED***value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage:***REMOVED***deprecatedUsage,
	***REMOVED******REMOVED******REMOVED******REMOVED***unescaped:***REMOVED***unescaped,
	***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark:***REMOVED***quoteMark
	***REMOVED******REMOVED***};
	}

	function***REMOVED***handleDeprecatedContructorOpts(opts)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(opts.quoteMark***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(opts.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***warnOfDeprecatedConstructor();

	***REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***unescapeValue(opts.value),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped;

	***REMOVED******REMOVED***if***REMOVED***(!opts.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(opts.raws.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws.value***REMOVED***=***REMOVED***opts.value;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***opts.value***REMOVED***=***REMOVED***unescaped;
	***REMOVED******REMOVED***opts.quoteMark***REMOVED***=***REMOVED***quoteMark;
	***REMOVED******REMOVED***return***REMOVED***opts;
	}

	var***REMOVED***Attribute***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Attribute,***REMOVED***_Namespace);

	***REMOVED******REMOVED***function***REMOVED***Attribute(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***handleDeprecatedContructorOpts(opts))***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ATTRIBUTE;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.raws***REMOVED***=***REMOVED***_this.raws***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(_this.raws,***REMOVED***'unquoted',***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"attr.raws.unquoted***REMOVED***is***REMOVED***deprecated.***REMOVED***Call***REMOVED***attr.value***REMOVED***instead."),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"Setting***REMOVED***attr.raws.unquoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***attr.value***REMOVED***is***REMOVED***unescaped***REMOVED***by***REMOVED***default***REMOVED***now.")
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***Attribute's***REMOVED***value***REMOVED***quoted***REMOVED***such***REMOVED***that***REMOVED***it***REMOVED***would***REMOVED***be***REMOVED***legal***REMOVED***to***REMOVED***use
	***REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***a***REMOVED***css***REMOVED***file.***REMOVED***The***REMOVED***original***REMOVED***value's***REMOVED***quotation***REMOVED***setting
	***REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***for***REMOVED***stringification***REMOVED***is***REMOVED***left***REMOVED***unchanged.***REMOVED***See***REMOVED***`setValue(value,***REMOVED***options)`
	***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***control***REMOVED***the***REMOVED***quote***REMOVED***settings***REMOVED***of***REMOVED***a***REMOVED***new***REMOVED***value***REMOVED***for***REMOVED***the***REMOVED***attribute.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***You***REMOVED***can***REMOVED***also***REMOVED***change***REMOVED***the***REMOVED***quotation***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***value***REMOVED***by***REMOVED***setting***REMOVED***quoteMark.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***Options:
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***quoteMark***REMOVED***{'"'***REMOVED***|***REMOVED***"'"***REMOVED***|***REMOVED***null}***REMOVED***-***REMOVED***Use***REMOVED***this***REMOVED***value***REMOVED***to***REMOVED***quote***REMOVED***the***REMOVED***value.***REMOVED***If***REMOVED***this
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***set,***REMOVED***the***REMOVED***original***REMOVED***value***REMOVED***for***REMOVED***quoteMark***REMOVED***will***REMOVED***be***REMOVED***used.***REMOVED***If
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminate,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.***REMOVED***The***REMOVED***legal***REMOVED***values***REMOVED***are:
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`null`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***unquoted***REMOVED***and***REMOVED***characters***REMOVED***will***REMOVED***be***REMOVED***escaped***REMOVED***as***REMOVED***necessary.
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`'`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***single***REMOVED***quote***REMOVED***and***REMOVED***single***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`"`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***and***REMOVED***double***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***preferCurrentQuoteMark***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***prefer***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***over***REMOVED***the***REMOVED***quoteMark***REMOVED***option***REMOVED***value.
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***smart***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***will***REMOVED***select***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***and***REMOVED***the***REMOVED***other***REMOVED***options***REMOVED***specified***REMOVED***here.***REMOVED***See***REMOVED***the***REMOVED***`smartQuoteMark()`
	***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.
	***REMOVED******REMOVED******REMOVED*****/


	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Attribute.prototype;

	***REMOVED******REMOVED***_proto.getQuotedValue***REMOVED***=***REMOVED***function***REMOVED***getQuotedValue(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cssescopts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quoteMark];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***cssescopts);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escaped;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._determineQuoteMark***REMOVED***=***REMOVED***function***REMOVED***_determineQuoteMark(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.smart***REMOVED***?***REMOVED***this.smartQuoteMark(options)***REMOVED***:***REMOVED***this.preferredQuoteMark(options);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***quotation***REMOVED***options.***REMOVED***The***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED***provided***REMOVED***must***REMOVED***not***REMOVED***include***REMOVED***any***REMOVED***wrapping***REMOVED***quote***REMOVED***marks***REMOVED***--***REMOVED***those***REMOVED***quotes***REMOVED***will
	***REMOVED******REMOVED******REMOVED*******REMOVED***be***REMOVED***interpreted***REMOVED***as***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***value***REMOVED***and***REMOVED***escaped***REMOVED***accordingly.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.setValue***REMOVED***=***REMOVED***function***REMOVED***setValue(value,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);

	***REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Intelligently***REMOVED***select***REMOVED***a***REMOVED***quoteMark***REMOVED***value***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value's***REMOVED***contents.***REMOVED***If
	***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***a***REMOVED***legal***REMOVED***CSS***REMOVED***ident,***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***quoted.***REMOVED***Otherwise***REMOVED***a***REMOVED***quote
	***REMOVED******REMOVED******REMOVED*******REMOVED***mark***REMOVED***will***REMOVED***be***REMOVED***picked***REMOVED***that***REMOVED***minimizes***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***escapes.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***there's***REMOVED***no***REMOVED***clear***REMOVED***winner,***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***from***REMOVED***these***REMOVED***options***REMOVED***is***REMOVED***used,
	***REMOVED******REMOVED******REMOVED*******REMOVED***then***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark***REMOVED***(this***REMOVED***is***REMOVED***inverted***REMOVED***if***REMOVED***`preferCurrentQuoteMark`***REMOVED***is
	***REMOVED******REMOVED******REMOVED*******REMOVED***true).***REMOVED***If***REMOVED***the***REMOVED***quoteMark***REMOVED***is***REMOVED***unspecified,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***This***REMOVED***takes***REMOVED***the***REMOVED***quoteMark***REMOVED***and***REMOVED***preferCurrentQuoteMark***REMOVED***options
	***REMOVED******REMOVED******REMOVED*******REMOVED***from***REMOVED***the***REMOVED***quoteValue***REMOVED***method.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.smartQuoteMark***REMOVED***=***REMOVED***function***REMOVED***smartQuoteMark(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***v***REMOVED***=***REMOVED***this.value;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numSingleQuotes***REMOVED***=***REMOVED***v.replace(/[^']/g,***REMOVED***'').length;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numDoubleQuotes***REMOVED***=***REMOVED***v.replace(/[^"]/g,***REMOVED***'').length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(numSingleQuotes***REMOVED***+***REMOVED***numDoubleQuotes***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***===***REMOVED***v)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.NO_QUOTE;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pref***REMOVED***=***REMOVED***this.preferredQuoteMark(options);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pref***REMOVED***===***REMOVED***Attribute.NO_QUOTE)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pick***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***that***REMOVED***isn't***REMOVED***none***REMOVED***and***REMOVED***see***REMOVED***if***REMOVED***it's***REMOVED***smaller
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quote***REMOVED***=***REMOVED***this.quoteMark***REMOVED***||***REMOVED***options.quoteMark***REMOVED***||***REMOVED***Attribute.DOUBLE_QUOTE;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***opts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quote];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***opts);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteValue.length***REMOVED***<***REMOVED***escaped.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quote;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pref;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***===***REMOVED***numSingleQuotes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preferredQuoteMark(options);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***<***REMOVED***numSingleQuotes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.DOUBLE_QUOTE;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.SINGLE_QUOTE;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Selects***REMOVED***the***REMOVED***preferred***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***options***REMOVED***and***REMOVED***the***REMOVED***current***REMOVED***quote***REMOVED***mark***REMOVED***value.
	***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***depend***REMOVED***on***REMOVED***the***REMOVED***attribute***REMOVED***value,***REMOVED***call***REMOVED***`smartQuoteMark(opts)`
	***REMOVED******REMOVED******REMOVED*******REMOVED***instead.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.preferredQuoteMark***REMOVED***=***REMOVED***function***REMOVED***preferredQuoteMark(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***this.quoteMark***REMOVED***:***REMOVED***options.quoteMark;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***options.quoteMark***REMOVED***:***REMOVED***this.quoteMark;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***Attribute.DOUBLE_QUOTE;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quoteMark;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._syncRawValue***REMOVED***=***REMOVED***function***REMOVED***_syncRawValue()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***CSSESC_QUOTE_OPTIONS[this.quoteMark]);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue***REMOVED***===***REMOVED***this._value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***rawValue;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._handleEscapes***REMOVED***=***REMOVED***function***REMOVED***_handleEscapes(prop,***REMOVED***value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(value,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[prop]***REMOVED***=***REMOVED***escaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[prop];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._spacesFor***REMOVED***=***REMOVED***function***REMOVED***_spacesFor(name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***'',
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***this.spaces[name]***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaces***REMOVED***=***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces[name]***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(attrSpaces,***REMOVED***spaces,***REMOVED***rawSpaces);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._stringFor***REMOVED***=***REMOVED***function***REMOVED***_stringFor(name,***REMOVED***spaceName,***REMOVED***concat)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceName***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceName***REMOVED***=***REMOVED***name;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(concat***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***concat***REMOVED***=***REMOVED***defaultAttrConcat;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***this._spacesFor(spaceName);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***concat(this.stringifyProperty(name),***REMOVED***attrSpaces);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***offset***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***part***REMOVED***specified***REMOVED***relative***REMOVED***to***REMOVED***the
	***REMOVED******REMOVED******REMOVED*******REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***of***REMOVED***the***REMOVED***output***REMOVED***string.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"ns"***REMOVED***-***REMOVED***alias***REMOVED***for***REMOVED***"namespace"
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"namespace"***REMOVED***-***REMOVED***the***REMOVED***namespace***REMOVED***if***REMOVED***it***REMOVED***exists.
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attribute"***REMOVED***-***REMOVED***the***REMOVED***attribute***REMOVED***name
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attributeNS"***REMOVED***-***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***or***REMOVED***its***REMOVED***namespace
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"operator"***REMOVED***-***REMOVED***the***REMOVED***match***REMOVED***operator***REMOVED***of***REMOVED***the***REMOVED***attribute
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"value"***REMOVED***-***REMOVED***The***REMOVED***value***REMOVED***(string***REMOVED***or***REMOVED***identifier)
	***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"insensitive"***REMOVED***-***REMOVED***the***REMOVED***case***REMOVED***insensitivity***REMOVED***flag;
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***part***REMOVED***One***REMOVED***of***REMOVED***the***REMOVED***possible***REMOVED***values***REMOVED***inside***REMOVED***an***REMOVED***attribute.
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***-1***REMOVED***if***REMOVED***the***REMOVED***name***REMOVED***is***REMOVED***invalid***REMOVED***or***REMOVED***the***REMOVED***value***REMOVED***doesn't***REMOVED***exist***REMOVED***in***REMOVED***this***REMOVED***attribute.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.offsetOf***REMOVED***=***REMOVED***function***REMOVED***offsetOf(name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***count***REMOVED***=***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attributeSpaces***REMOVED***=***REMOVED***this._spacesFor("attribute");

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.before.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"namespace"***REMOVED***||***REMOVED***name***REMOVED***===***REMOVED***"ns")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attributeNS")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.namespaceString.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attribute")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.stringifyProperty("attribute").length;
	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.after.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operatorSpaces***REMOVED***=***REMOVED***this._spacesFor("operator");

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.before.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operator***REMOVED***=***REMOVED***this.stringifyProperty("operator");

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"operator")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***operator***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operator.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.after.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valueSpaces***REMOVED***=***REMOVED***this._spacesFor("value");

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.before.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***this.stringifyProperty("value");

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"value")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***value.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.after.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitiveSpaces***REMOVED***=***REMOVED***this._spacesFor("insensitive");

	***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***insensitiveSpaces.before.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"insensitive")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***[this.rawSpaceBefore,***REMOVED***'['];
	***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('qualifiedAttribute',***REMOVED***'attribute'));

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***&&***REMOVED***(this.value***REMOVED***||***REMOVED***this.value***REMOVED***===***REMOVED***''))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('operator'));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('value'));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('insensitiveFlag',***REMOVED***'insensitive',***REMOVED***function***REMOVED***(attrValue,***REMOVED***attrSpaces)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrValue.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!_this2.quoted***REMOVED***&&***REMOVED***attrSpaces.before.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***!(_this2.spaces.value***REMOVED***&&***REMOVED***_this2.spaces.value.after))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrSpaces.before***REMOVED***=***REMOVED***"***REMOVED***";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(']');
	***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this.rawSpaceAfter);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selector.join('');
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Attribute,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoted",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***qm***REMOVED***=***REMOVED***this.quoteMark;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***qm***REMOVED***===***REMOVED***"'"***REMOVED***||***REMOVED***qm***REMOVED***===***REMOVED***'"';
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedQuotedAssignment();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***a***REMOVED***single***REMOVED***(`'`)***REMOVED***or***REMOVED***double***REMOVED***(`"`)***REMOVED***quote***REMOVED***character***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***quoted.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***not***REMOVED***quoted.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`undefined`***REMOVED***if***REMOVED***the***REMOVED***quotation***REMOVED***state***REMOVED***is***REMOVED***unknown***REMOVED***(this***REMOVED***can***REMOVED***happen***REMOVED***when
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***constructed***REMOVED***without***REMOVED***specifying***REMOVED***a***REMOVED***quote***REMOVED***mark.)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoteMark",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._quoteMark;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***by***REMOVED***this***REMOVED***attribute's***REMOVED***value.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.value`***REMOVED***of***REMOVED***the***REMOVED***attribute
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***value***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{"'"***REMOVED***|***REMOVED***'"'***REMOVED***|***REMOVED***null}***REMOVED***quoteMark***REMOVED***The***REMOVED***quote***REMOVED***mark***REMOVED***or***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unquoted.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED***,
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(quoteMark)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._constructed)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._quoteMark***REMOVED***!==***REMOVED***quoteMark)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"qualifiedAttribute",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(this.raws.attribute***REMOVED***||***REMOVED***this.attribute);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitiveFlag",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***'i'***REMOVED***:***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:
	***REMOVED******REMOVED******REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Before***REMOVED***3.0,***REMOVED***the***REMOVED***value***REMOVED***had***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***an***REMOVED***escaped***REMOVED***value***REMOVED***including***REMOVED***any***REMOVED***wrapped
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***quote***REMOVED***marks.***REMOVED***In***REMOVED***3.0,***REMOVED***the***REMOVED***semantics***REMOVED***of***REMOVED***`Attribute.value`***REMOVED***changed***REMOVED***so***REMOVED***that***REMOVED***the***REMOVED***value
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***is***REMOVED***unescaped***REMOVED***during***REMOVED***parsing***REMOVED***and***REMOVED***any***REMOVED***quote***REMOVED***marks***REMOVED***are***REMOVED***removed.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Because***REMOVED***the***REMOVED***ambiguity***REMOVED***of***REMOVED***this***REMOVED***semantic***REMOVED***change,***REMOVED***if***REMOVED***you***REMOVED***set***REMOVED***`attr.value***REMOVED***=***REMOVED***newValue`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***deprecation***REMOVED***warning***REMOVED***is***REMOVED***raised***REMOVED***when***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***contains***REMOVED***any***REMOVED***characters***REMOVED***that***REMOVED***would
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***require***REMOVED***escaping***REMOVED***(including***REMOVED***if***REMOVED***it***REMOVED***contains***REMOVED***wrapped***REMOVED***quotes).
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Instead,***REMOVED***you***REMOVED***should***REMOVED***call***REMOVED***`attr.setValue(newValue,***REMOVED***opts)`***REMOVED***and***REMOVED***pass***REMOVED***options***REMOVED***that***REMOVED***describe
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***how***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***is***REMOVED***quoted.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***set(v)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue2***REMOVED***=***REMOVED***unescapeValue(v),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***_unescapeValue2.deprecatedUsage,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue2.unescaped,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue2.quoteMark;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deprecatedUsage)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedValueAssignment();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***===***REMOVED***this._value***REMOVED***&&***REMOVED***quoteMark***REMOVED***===***REMOVED***this._quoteMark)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***unescaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitive",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._insensitive;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.insensitiveFlag`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{true***REMOVED***|***REMOVED***false}***REMOVED***insensitive***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***attribute***REMOVED***should***REMOVED***match***REMOVED***case-insensitively.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED***,
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(insensitive)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***false;***REMOVED***//***REMOVED***"i"***REMOVED***and***REMOVED***"I"***REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***"this.raws.insensitiveFlag"***REMOVED***to***REMOVED***store***REMOVED***the***REMOVED***original***REMOVED***notation.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***setting***REMOVED***`attr.insensitive***REMOVED***=***REMOVED***false`***REMOVED***both***REMOVED***should***REMOVED***be***REMOVED***erased***REMOVED***to***REMOVED***ensure***REMOVED***correct***REMOVED***serialization.

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws***REMOVED***&&***REMOVED***(this.raws.insensitiveFlag***REMOVED***===***REMOVED***'I'***REMOVED***||***REMOVED***this.raws.insensitiveFlag***REMOVED***===***REMOVED***'i'))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.insensitiveFlag***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***insensitive;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"attribute",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._attribute;
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._handleEscapes("attribute",***REMOVED***name);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._attribute***REMOVED***=***REMOVED***name;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Attribute;
	}(_namespace["default"]);

	exports["default"]***REMOVED***=***REMOVED***Attribute;
	Attribute.NO_QUOTE***REMOVED***=***REMOVED***null;
	Attribute.SINGLE_QUOTE***REMOVED***=***REMOVED***"'";
	Attribute.DOUBLE_QUOTE***REMOVED***=***REMOVED***'"';
	var***REMOVED***CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***(_CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***"'":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'single',
	***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
	***REMOVED******REMOVED***},
	***REMOVED******REMOVED***'"':***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'double',
	***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
	***REMOVED******REMOVED***}
	},***REMOVED***_CSSESC_QUOTE_OPTIONS[null]***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***isIdentifier:***REMOVED***true
	},***REMOVED***_CSSESC_QUOTE_OPTIONS);

	function***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***""***REMOVED***+***REMOVED***attrSpaces.before***REMOVED***+***REMOVED***attrValue***REMOVED***+***REMOVED***attrSpaces.after;
	}***REMOVED***
}***REMOVED***(attribute$1));

var***REMOVED***universal$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(namespaceExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Universal***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Universal,***REMOVED***_Namespace);

	***REMOVED******REMOVED***function***REMOVED***Universal(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.UNIVERSAL;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'*';
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Universal;
	}(_namespace["default"]);

	exports["default"]***REMOVED***=***REMOVED***Universal;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(universal$1,***REMOVED***universal$1.exports));

var***REMOVED***universalExports***REMOVED***=***REMOVED***universal$1.exports;

var***REMOVED***combinator$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Combinator***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Combinator,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***Combinator(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMBINATOR;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Combinator;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***Combinator;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(combinator$2,***REMOVED***combinator$2.exports));

var***REMOVED***combinatorExports***REMOVED***=***REMOVED***combinator$2.exports;

var***REMOVED***nesting$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(nodeExports);

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}

	function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***||***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}

	var***REMOVED***Nesting***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
	***REMOVED******REMOVED***_inheritsLoose(Nesting,***REMOVED***_Node);

	***REMOVED******REMOVED***function***REMOVED***Nesting(opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;

	***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.NESTING;
	***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'&';
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***Nesting;
	}(_node["default"]);

	exports["default"]***REMOVED***=***REMOVED***Nesting;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(nesting$1,***REMOVED***nesting$1.exports));

var***REMOVED***nestingExports***REMOVED***=***REMOVED***nesting$1.exports;

var***REMOVED***sortAscending***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***sortAscending;

	function***REMOVED***sortAscending(list)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***list.sort(function***REMOVED***(a,***REMOVED***b)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***-***REMOVED***b;
	***REMOVED******REMOVED***});
	}
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(sortAscending,***REMOVED***sortAscending.exports));

var***REMOVED***sortAscendingExports***REMOVED***=***REMOVED***sortAscending.exports;

var***REMOVED***tokenize***REMOVED***=***REMOVED***{};

var***REMOVED***tokenTypes***REMOVED***=***REMOVED***{};

tokenTypes.__esModule***REMOVED***=***REMOVED***true;
tokenTypes.combinator***REMOVED***=***REMOVED***tokenTypes.word***REMOVED***=***REMOVED***tokenTypes.comment***REMOVED***=***REMOVED***tokenTypes.str***REMOVED***=***REMOVED***tokenTypes.tab***REMOVED***=***REMOVED***tokenTypes.newline***REMOVED***=***REMOVED***tokenTypes.feed***REMOVED***=***REMOVED***tokenTypes.cr***REMOVED***=***REMOVED***tokenTypes.backslash***REMOVED***=***REMOVED***tokenTypes.bang***REMOVED***=***REMOVED***tokenTypes.slash***REMOVED***=***REMOVED***tokenTypes.doubleQuote***REMOVED***=***REMOVED***tokenTypes.singleQuote***REMOVED***=***REMOVED***tokenTypes.space***REMOVED***=***REMOVED***tokenTypes.greaterThan***REMOVED***=***REMOVED***tokenTypes.pipe***REMOVED***=***REMOVED***tokenTypes.equals***REMOVED***=***REMOVED***tokenTypes.plus***REMOVED***=***REMOVED***tokenTypes.caret***REMOVED***=***REMOVED***tokenTypes.tilde***REMOVED***=***REMOVED***tokenTypes.dollar***REMOVED***=***REMOVED***tokenTypes.closeSquare***REMOVED***=***REMOVED***tokenTypes.openSquare***REMOVED***=***REMOVED***tokenTypes.closeParenthesis***REMOVED***=***REMOVED***tokenTypes.openParenthesis***REMOVED***=***REMOVED***tokenTypes.semicolon***REMOVED***=***REMOVED***tokenTypes.colon***REMOVED***=***REMOVED***tokenTypes.comma***REMOVED***=***REMOVED***tokenTypes.at***REMOVED***=***REMOVED***tokenTypes.asterisk***REMOVED***=***REMOVED***tokenTypes.ampersand***REMOVED***=***REMOVED***void***REMOVED***0;
var***REMOVED***ampersand***REMOVED***=***REMOVED***38;***REMOVED***//***REMOVED***`&`.charCodeAt(0);

tokenTypes.ampersand***REMOVED***=***REMOVED***ampersand;
var***REMOVED***asterisk***REMOVED***=***REMOVED***42;***REMOVED***//***REMOVED***`*`.charCodeAt(0);

tokenTypes.asterisk***REMOVED***=***REMOVED***asterisk;
var***REMOVED***at***REMOVED***=***REMOVED***64;***REMOVED***//***REMOVED***`@`.charCodeAt(0);

tokenTypes.at***REMOVED***=***REMOVED***at;
var***REMOVED***comma***REMOVED***=***REMOVED***44;***REMOVED***//***REMOVED***`,`.charCodeAt(0);

tokenTypes.comma***REMOVED***=***REMOVED***comma;
var***REMOVED***colon***REMOVED***=***REMOVED***58;***REMOVED***//***REMOVED***`:`.charCodeAt(0);

tokenTypes.colon***REMOVED***=***REMOVED***colon;
var***REMOVED***semicolon***REMOVED***=***REMOVED***59;***REMOVED***//***REMOVED***`;`.charCodeAt(0);

tokenTypes.semicolon***REMOVED***=***REMOVED***semicolon;
var***REMOVED***openParenthesis***REMOVED***=***REMOVED***40;***REMOVED***//***REMOVED***`(`.charCodeAt(0);

tokenTypes.openParenthesis***REMOVED***=***REMOVED***openParenthesis;
var***REMOVED***closeParenthesis***REMOVED***=***REMOVED***41;***REMOVED***//***REMOVED***`)`.charCodeAt(0);

tokenTypes.closeParenthesis***REMOVED***=***REMOVED***closeParenthesis;
var***REMOVED***openSquare***REMOVED***=***REMOVED***91;***REMOVED***//***REMOVED***`[`.charCodeAt(0);

tokenTypes.openSquare***REMOVED***=***REMOVED***openSquare;
var***REMOVED***closeSquare***REMOVED***=***REMOVED***93;***REMOVED***//***REMOVED***`]`.charCodeAt(0);

tokenTypes.closeSquare***REMOVED***=***REMOVED***closeSquare;
var***REMOVED***dollar***REMOVED***=***REMOVED***36;***REMOVED***//***REMOVED***`$`.charCodeAt(0);

tokenTypes.dollar***REMOVED***=***REMOVED***dollar;
var***REMOVED***tilde***REMOVED***=***REMOVED***126;***REMOVED***//***REMOVED***`~`.charCodeAt(0);

tokenTypes.tilde***REMOVED***=***REMOVED***tilde;
var***REMOVED***caret***REMOVED***=***REMOVED***94;***REMOVED***//***REMOVED***`^`.charCodeAt(0);

tokenTypes.caret***REMOVED***=***REMOVED***caret;
var***REMOVED***plus***REMOVED***=***REMOVED***43;***REMOVED***//***REMOVED***`+`.charCodeAt(0);

tokenTypes.plus***REMOVED***=***REMOVED***plus;
var***REMOVED***equals***REMOVED***=***REMOVED***61;***REMOVED***//***REMOVED***`=`.charCodeAt(0);

tokenTypes.equals***REMOVED***=***REMOVED***equals;
var***REMOVED***pipe***REMOVED***=***REMOVED***124;***REMOVED***//***REMOVED***`|`.charCodeAt(0);

tokenTypes.pipe***REMOVED***=***REMOVED***pipe;
var***REMOVED***greaterThan***REMOVED***=***REMOVED***62;***REMOVED***//***REMOVED***`>`.charCodeAt(0);

tokenTypes.greaterThan***REMOVED***=***REMOVED***greaterThan;
var***REMOVED***space***REMOVED***=***REMOVED***32;***REMOVED***//***REMOVED***`***REMOVED***`.charCodeAt(0);

tokenTypes.space***REMOVED***=***REMOVED***space;
var***REMOVED***singleQuote***REMOVED***=***REMOVED***39;***REMOVED***//***REMOVED***`'`.charCodeAt(0);

tokenTypes.singleQuote***REMOVED***=***REMOVED***singleQuote;
var***REMOVED***doubleQuote***REMOVED***=***REMOVED***34;***REMOVED***//***REMOVED***`"`.charCodeAt(0);

tokenTypes.doubleQuote***REMOVED***=***REMOVED***doubleQuote;
var***REMOVED***slash***REMOVED***=***REMOVED***47;***REMOVED***//***REMOVED***`/`.charCodeAt(0);

tokenTypes.slash***REMOVED***=***REMOVED***slash;
var***REMOVED***bang***REMOVED***=***REMOVED***33;***REMOVED***//***REMOVED***`!`.charCodeAt(0);

tokenTypes.bang***REMOVED***=***REMOVED***bang;
var***REMOVED***backslash***REMOVED***=***REMOVED***92;***REMOVED***//***REMOVED***'\\'.charCodeAt(0);

tokenTypes.backslash***REMOVED***=***REMOVED***backslash;
var***REMOVED***cr***REMOVED***=***REMOVED***13;***REMOVED***//***REMOVED***'\r'.charCodeAt(0);

tokenTypes.cr***REMOVED***=***REMOVED***cr;
var***REMOVED***feed***REMOVED***=***REMOVED***12;***REMOVED***//***REMOVED***'\f'.charCodeAt(0);

tokenTypes.feed***REMOVED***=***REMOVED***feed;
var***REMOVED***newline***REMOVED***=***REMOVED***10;***REMOVED***//***REMOVED***'\n'.charCodeAt(0);

tokenTypes.newline***REMOVED***=***REMOVED***newline;
var***REMOVED***tab***REMOVED***=***REMOVED***9;***REMOVED***//***REMOVED***'\t'.charCodeAt(0);
//***REMOVED***Expose***REMOVED***aliases***REMOVED***primarily***REMOVED***for***REMOVED***readability.

tokenTypes.tab***REMOVED***=***REMOVED***tab;
var***REMOVED***str***REMOVED***=***REMOVED***singleQuote;***REMOVED***//***REMOVED***No***REMOVED***good***REMOVED***single***REMOVED***character***REMOVED***representation!

tokenTypes.str***REMOVED***=***REMOVED***str;
var***REMOVED***comment$1***REMOVED***=***REMOVED***-1;
tokenTypes.comment***REMOVED***=***REMOVED***comment$1;
var***REMOVED***word***REMOVED***=***REMOVED***-2;
tokenTypes.word***REMOVED***=***REMOVED***word;
var***REMOVED***combinator$1***REMOVED***=***REMOVED***-3;
tokenTypes.combinator***REMOVED***=***REMOVED***combinator$1;

(function***REMOVED***(exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***tokenize;
	exports.FIELDS***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***t***REMOVED***=***REMOVED***_interopRequireWildcard(tokenTypes);

	var***REMOVED***_unescapable,***REMOVED***_wordDelimiters;

	function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***return***REMOVED***cache;***REMOVED***};***REMOVED***return***REMOVED***cache;***REMOVED***}

	function***REMOVED***_interopRequireWildcard(obj)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache();***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}

	var***REMOVED***unescapable***REMOVED***=***REMOVED***(_unescapable***REMOVED***=***REMOVED***{},***REMOVED***_unescapable[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable);
	var***REMOVED***wordDelimiters***REMOVED***=***REMOVED***(_wordDelimiters***REMOVED***=***REMOVED***{},***REMOVED***_wordDelimiters[t.space]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.ampersand]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.asterisk]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.bang]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.comma]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.colon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.semicolon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.singleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.doubleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.plus]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.pipe]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tilde]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.greaterThan]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.equals]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.dollar]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.caret]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.slash]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters);
	var***REMOVED***hex***REMOVED***=***REMOVED***{};
	var***REMOVED***hexChars***REMOVED***=***REMOVED***"0123456789abcdefABCDEF";

	for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***hexChars.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED***hex[hexChars.charCodeAt(i)]***REMOVED***=***REMOVED***true;
	}
	/**
	***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***bar***REMOVED***css***REMOVED***word
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***word***REMOVED***begins
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***word's***REMOVED***first***REMOVED***letter***REMOVED***occurs
	***REMOVED****/


	function***REMOVED***consumeWord(css,***REMOVED***start)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
	***REMOVED******REMOVED***var***REMOVED***code;

	***REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(wordDelimiters[code])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeEscape(css,***REMOVED***next)***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***other***REMOVED***characters***REMOVED***are***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***word
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(next***REMOVED***<***REMOVED***css.length);

	***REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
	}
	/**
	***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***escape***REMOVED***sequence
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***sequence***REMOVED***begins
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***escape***REMOVED***character***REMOVED***(`\`)***REMOVED***occurs.
	***REMOVED****/


	function***REMOVED***consumeEscape(css,***REMOVED***start)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
	***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);

	***REMOVED******REMOVED***if***REMOVED***(unescapable[code])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(hex[code])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hexDigits***REMOVED***=***REMOVED***0;***REMOVED***//***REMOVED***consume***REMOVED***up***REMOVED***to***REMOVED***6***REMOVED***hex***REMOVED***chars

	***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hexDigits++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hex[code]***REMOVED***&&***REMOVED***hexDigits***REMOVED***<***REMOVED***6);***REMOVED***//***REMOVED***if***REMOVED***fewer***REMOVED***than***REMOVED***6***REMOVED***hex***REMOVED***chars,***REMOVED***a***REMOVED***trailing***REMOVED***space***REMOVED***ends***REMOVED***the***REMOVED***escape


	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hexDigits***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***t.space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***next***REMOVED***char***REMOVED***is***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***word
	***REMOVED******REMOVED******REMOVED******REMOVED***next++;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***next;
	}

	var***REMOVED***FIELDS***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***TYPE:***REMOVED***0,
	***REMOVED******REMOVED***START_LINE:***REMOVED***1,
	***REMOVED******REMOVED***START_COL:***REMOVED***2,
	***REMOVED******REMOVED***END_LINE:***REMOVED***3,
	***REMOVED******REMOVED***END_COL:***REMOVED***4,
	***REMOVED******REMOVED***START_POS:***REMOVED***5,
	***REMOVED******REMOVED***END_POS:***REMOVED***6
	};
	exports.FIELDS***REMOVED***=***REMOVED***FIELDS;

	function***REMOVED***tokenize(input)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***tokens***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***var***REMOVED***css***REMOVED***=***REMOVED***input.css.valueOf();
	***REMOVED******REMOVED***var***REMOVED***_css***REMOVED***=***REMOVED***css,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***_css.length;
	***REMOVED******REMOVED***var***REMOVED***offset***REMOVED***=***REMOVED***-1;
	***REMOVED******REMOVED***var***REMOVED***line***REMOVED***=***REMOVED***1;
	***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***end***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***code,***REMOVED***content,***REMOVED***endColumn,***REMOVED***endLine,***REMOVED***escaped,***REMOVED***escapePos,***REMOVED***last,***REMOVED***lines,***REMOVED***next,***REMOVED***nextLine,***REMOVED***nextOffset,***REMOVED***quote,***REMOVED***tokenType;

	***REMOVED******REMOVED***function***REMOVED***unclosed(what,***REMOVED***fix)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(input.safe)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fyi:***REMOVED***this***REMOVED***is***REMOVED***never***REMOVED***set***REMOVED***to***REMOVED***true.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css***REMOVED***+=***REMOVED***fix;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.length***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***input.error('Unclosed***REMOVED***'***REMOVED***+***REMOVED***what,***REMOVED***line,***REMOVED***start***REMOVED***-***REMOVED***offset,***REMOVED***start);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***while***REMOVED***(start***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(start);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***start;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.space:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tab:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.newline:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.cr:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.feed:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.space***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.newline***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tab***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.cr***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.feed);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.space;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.plus:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.greaterThan:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tilde:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.pipe:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.plus***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.greaterThan***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tilde***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.pipe);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.combinator;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Consume***REMOVED***these***REMOVED***characters***REMOVED***as***REMOVED***single***REMOVED***tokens.

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.asterisk:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.ampersand:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.bang:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.comma:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.equals:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.dollar:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.caret:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openSquare:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeSquare:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.colon:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.semicolon:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openParenthesis:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeParenthesis:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.singleQuote:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.doubleQuote:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quote***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***t.singleQuote***REMOVED***?***REMOVED***"'"***REMOVED***:***REMOVED***'"';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf(quote,***REMOVED***next***REMOVED***+***REMOVED***1);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('quote',***REMOVED***quote);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***=***REMOVED***next;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(css.charCodeAt(escapePos***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***!escaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(escaped);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.str;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash***REMOVED***&&***REMOVED***css.charCodeAt(start***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***t.asterisk)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf('*/',***REMOVED***start***REMOVED***+***REMOVED***2)***REMOVED***+***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('comment',***REMOVED***'*/');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***css.slice(start,***REMOVED***next***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lines***REMOVED***=***REMOVED***content.split('\n');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last***REMOVED***=***REMOVED***lines.length***REMOVED***-***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line***REMOVED***+***REMOVED***last;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***lines[last].length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.comment;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***=***REMOVED***nextLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***nextLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***nextOffset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeWord(css,***REMOVED***start);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.word;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***token***REMOVED***structure***REMOVED***remains***REMOVED***consistent


	***REMOVED******REMOVED******REMOVED******REMOVED***tokens.push([tokenType,***REMOVED***//***REMOVED***[0]***REMOVED***Token***REMOVED***type
	***REMOVED******REMOVED******REMOVED******REMOVED***line,***REMOVED***//***REMOVED***[1]***REMOVED***Starting***REMOVED***line
	***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***-***REMOVED***offset,***REMOVED***//***REMOVED***[2]***REMOVED***Starting***REMOVED***column
	***REMOVED******REMOVED******REMOVED******REMOVED***endLine,***REMOVED***//***REMOVED***[3]***REMOVED***Ending***REMOVED***line
	***REMOVED******REMOVED******REMOVED******REMOVED***endColumn,***REMOVED***//***REMOVED***[4]***REMOVED***Ending***REMOVED***column
	***REMOVED******REMOVED******REMOVED******REMOVED***start,***REMOVED***//***REMOVED***[5]***REMOVED***Start***REMOVED***position***REMOVED***/***REMOVED***Source***REMOVED***index
	***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***//***REMOVED***[6]***REMOVED***End***REMOVED***position
	***REMOVED******REMOVED******REMOVED******REMOVED***]);***REMOVED***//***REMOVED***Reset***REMOVED***offset***REMOVED***for***REMOVED***the***REMOVED***next***REMOVED***token

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextOffset)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***nextOffset;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***end;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***tokens;
	}***REMOVED***
}***REMOVED***(tokenize));

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault(rootExports);

	var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault(selectorExports);

	var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault(classNameExports);

	var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault(commentExports);

	var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault(idExports);

	var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault(tagExports);

	var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault(stringExports);

	var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault(pseudoExports);

	var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireWildcard(attribute$1);

	var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault(universalExports);

	var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault(combinatorExports);

	var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault(nestingExports);

	var***REMOVED***_sortAscending***REMOVED***=***REMOVED***_interopRequireDefault(sortAscendingExports);

	var***REMOVED***_tokenize***REMOVED***=***REMOVED***_interopRequireWildcard(tokenize);

	var***REMOVED***tokens***REMOVED***=***REMOVED***_interopRequireWildcard(tokenTypes);

	var***REMOVED***types$1***REMOVED***=***REMOVED***_interopRequireWildcard(types);

	var***REMOVED***_util***REMOVED***=***REMOVED***util;

	var***REMOVED***_WHITESPACE_TOKENS,***REMOVED***_Object$assign;

	function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***return***REMOVED***cache;***REMOVED***};***REMOVED***return***REMOVED***cache;***REMOVED***}

	function***REMOVED***_interopRequireWildcard(obj)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache();***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}

	function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***if***REMOVED***(staticProps)***REMOVED***_defineProperties(Constructor,***REMOVED***staticProps);***REMOVED***return***REMOVED***Constructor;***REMOVED***}

	var***REMOVED***WHITESPACE_TOKENS***REMOVED***=***REMOVED***(_WHITESPACE_TOKENS***REMOVED***=***REMOVED***{},***REMOVED***_WHITESPACE_TOKENS[tokens.space]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.cr]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.feed]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.newline]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.tab]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS);
	var***REMOVED***WHITESPACE_EQUIV_TOKENS***REMOVED***=***REMOVED***Object.assign({},***REMOVED***WHITESPACE_TOKENS,***REMOVED***(_Object$assign***REMOVED***=***REMOVED***{},***REMOVED***_Object$assign[tokens.comment]***REMOVED***=***REMOVED***true,***REMOVED***_Object$assign));

	function***REMOVED***tokenStart(token)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.START_LINE],
	***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.START_COL]
	***REMOVED******REMOVED***};
	}

	function***REMOVED***tokenEnd(token)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.END_LINE],
	***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.END_COL]
	***REMOVED******REMOVED***};
	}

	function***REMOVED***getSource(startLine,***REMOVED***startColumn,***REMOVED***endLine,***REMOVED***endColumn)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***startLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***startColumn
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***endLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***endColumn
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};
	}

	function***REMOVED***getTokenSource(token)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***getSource(token[_tokenize.FIELDS.START_LINE],***REMOVED***token[_tokenize.FIELDS.START_COL],***REMOVED***token[_tokenize.FIELDS.END_LINE],***REMOVED***token[_tokenize.FIELDS.END_COL]);
	}

	function***REMOVED***getTokenSourceSpan(startToken,***REMOVED***endToken)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!startToken)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***getSource(startToken[_tokenize.FIELDS.START_LINE],***REMOVED***startToken[_tokenize.FIELDS.START_COL],***REMOVED***endToken[_tokenize.FIELDS.END_LINE],***REMOVED***endToken[_tokenize.FIELDS.END_COL]);
	}

	function***REMOVED***unescapeProp(node,***REMOVED***prop)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***node[prop];

	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(value.indexOf("\\")***REMOVED***!==***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
	***REMOVED******REMOVED******REMOVED******REMOVED***node[prop]***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(value);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws[prop]***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[prop]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***node;
	}

	function***REMOVED***indexesOf(array,***REMOVED***item)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***-1;
	***REMOVED******REMOVED***var***REMOVED***indexes***REMOVED***=***REMOVED***[];

	***REMOVED******REMOVED***while***REMOVED***((i***REMOVED***=***REMOVED***array.indexOf(item,***REMOVED***i***REMOVED***+***REMOVED***1))***REMOVED***!==***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***indexes.push(i);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***indexes;
	}

	function***REMOVED***uniqs()***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***list***REMOVED***=***REMOVED***Array.prototype.concat.apply([],***REMOVED***arguments);
	***REMOVED******REMOVED***return***REMOVED***list.filter(function***REMOVED***(item,***REMOVED***i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***===***REMOVED***list.indexOf(item);
	***REMOVED******REMOVED***});
	}

	var***REMOVED***Parser***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED***function***REMOVED***Parser(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.rule***REMOVED***=***REMOVED***rule;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***Object.assign({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***false
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***options);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.css***REMOVED***=***REMOVED***typeof***REMOVED***this.rule***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***this.rule***REMOVED***:***REMOVED***this.rule.selector;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens***REMOVED***=***REMOVED***(0,***REMOVED***_tokenize["default"])({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css:***REMOVED***this.css,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***this._errorGenerator(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***this.options.safe
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rootSource***REMOVED***=***REMOVED***getTokenSourceSpan(this.tokens[0],***REMOVED***this.tokens[this.tokens.length***REMOVED***-***REMOVED***1]);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***new***REMOVED***_root["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***rootSource
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***this.root.errorGenerator***REMOVED***=***REMOVED***this._errorGenerator();
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***this.root.append(selector);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.loop();
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Parser.prototype;

	***REMOVED******REMOVED***_proto._errorGenerator***REMOVED***=***REMOVED***function***REMOVED***_errorGenerator()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(message,***REMOVED***errorOptions)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***_this.rule***REMOVED***===***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.rule.error(message,***REMOVED***errorOptions);
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.attribute***REMOVED***=***REMOVED***function***REMOVED***attribute()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attr***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.push(this.currToken);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***attr.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(startingToken[1],***REMOVED***startingToken[2],***REMOVED***this.currToken[3],***REMOVED***this.currToken[4]),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(len***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***attr[0][_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastAdded***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***len)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***token***REMOVED***=***REMOVED***attr[pos];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***attr[pos***REMOVED***+***REMOVED***1];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(token[_tokenize.FIELDS.TYPE])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***===***REMOVED***1***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[TOKEN.START_POS],***REMOVED***content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***true;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***lastAdded);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prevContent***REMOVED***=***REMOVED***node.spaces[lastAdded].after***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces[lastAdded].after***REMOVED***=***REMOVED***prevContent***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***existingComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingComment)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***existingComment***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***spaceBefore***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((!node.namespace***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"namespace"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***&&***REMOVED***next)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***(node.namespace***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'namespace')***REMOVED***||***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.namespace***REMOVED***+=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded***REMOVED***===***REMOVED***"value")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***"$";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldRawValue)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***oldRawValue***REMOVED***+***REMOVED***"$";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Falls***REMOVED***through

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***===***REMOVED***'~'***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!==***REMOVED***'|')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.namespace***REMOVED***&&***REMOVED***!node.attribute)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.equals***REMOVED***&&***REMOVED***//***REMOVED***this***REMOVED***look-ahead***REMOVED***probably***REMOVED***fails***REMOVED***with***REMOVED***comment***REMOVED***nodes***REMOVED***involved.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!node.operator***REMOVED***&&***REMOVED***!node.namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"attribute"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***commentBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attribute***REMOVED***=***REMOVED***(node.attribute***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'attribute')***REMOVED***||***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_rawValue)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.attribute***REMOVED***+=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'attribute';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.value***REMOVED***&&***REMOVED***node.value***REMOVED***!==***REMOVED***""***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"value"***REMOVED***&&***REMOVED***!(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***node.quoteMark))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(content);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value')***REMOVED***||***REMOVED***'';

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldValue***REMOVED***=***REMOVED***node.value***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***oldValue***REMOVED***+***REMOVED***_unescaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_unescaped***REMOVED***!==***REMOVED***content***REMOVED***||***REMOVED***_oldRawValue)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***(_oldRawValue***REMOVED***||***REMOVED***oldValue)***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitive***REMOVED***=***REMOVED***content***REMOVED***===***REMOVED***'i'***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***&&***REMOVED***(node.quoteMark***REMOVED***||***REMOVED***spaceAfterMeaningfulToken))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.insensitive***REMOVED***=***REMOVED***insensitive;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.insensitiveFlag***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'insensitive';

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'insensitive');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.insensitive.before***REMOVED***=***REMOVED***spaceBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'insensitive');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.insensitive.before***REMOVED***=***REMOVED***commentBefore;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***content;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws.value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***+=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***!node.operator)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***an***REMOVED***attribute***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***operator***REMOVED***preceding***REMOVED***the***REMOVED***string.",***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***(0,***REMOVED***_attribute.unescapeValue)(content),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***unescaped;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***quoteMark;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[_tokenize.FIELDS.START_POS],***REMOVED***content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Unexpected***REMOVED***"="***REMOVED***found;***REMOVED***an***REMOVED***operator***REMOVED***was***REMOVED***already***REMOVED***defined.',***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***node.operator***REMOVED***?***REMOVED***node.operator***REMOVED***+***REMOVED***content***REMOVED***:***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***'insensitive')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***lastComment;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***rawLastComment***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastValue***REMOVED***=***REMOVED***node[lastAdded]***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***lastAdded)***REMOVED***||***REMOVED***lastValue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[lastAdded]***REMOVED***=***REMOVED***rawLastValue***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***\""***REMOVED***+***REMOVED***content***REMOVED***+***REMOVED***"\"***REMOVED***found.",***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"attribute");
	***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
	***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_attribute["default"](node));
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***return***REMOVED***a***REMOVED***node***REMOVED***containing***REMOVED***meaningless***REMOVED***garbage***REMOVED***up***REMOVED***to***REMOVED***(but***REMOVED***not***REMOVED***including)***REMOVED***the***REMOVED***specified***REMOVED***token***REMOVED***position.
	***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***the***REMOVED***token***REMOVED***position***REMOVED***is***REMOVED***negative,***REMOVED***all***REMOVED***remaining***REMOVED***tokens***REMOVED***are***REMOVED***consumed.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***returns***REMOVED***an***REMOVED***array***REMOVED***containing***REMOVED***a***REMOVED***single***REMOVED***string***REMOVED***node***REMOVED***if***REMOVED***all***REMOVED***whitespace,
	***REMOVED******REMOVED******REMOVED*******REMOVED***otherwise***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***comment***REMOVED***nodes***REMOVED***with***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***These***REMOVED***tokens***REMOVED***are***REMOVED***not***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***selector,***REMOVED***the***REMOVED***caller***REMOVED***can***REMOVED***add***REMOVED***them***REMOVED***or***REMOVED***use***REMOVED***them***REMOVED***to***REMOVED***amend
	***REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***previous***REMOVED***node's***REMOVED***space***REMOVED***metadata.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***In***REMOVED***lossy***REMOVED***mode,***REMOVED***this***REMOVED***returns***REMOVED***only***REMOVED***comments.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.parseWhitespaceEquivalentTokens***REMOVED***=***REMOVED***function***REMOVED***parseWhitespaceEquivalentTokens(stopPosition)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stopPosition***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopPosition***REMOVED***=***REMOVED***this.tokens.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startPosition***REMOVED***=***REMOVED***this.position;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***undefined;

	***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***this.content();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comment)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***space;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment***REMOVED***=***REMOVED***new***REMOVED***_comment["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(lastComment);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(++this.position***REMOVED***<***REMOVED***stopPosition);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastComment)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment.spaces.after***REMOVED***=***REMOVED***space;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.tokens[startPosition];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastToken***REMOVED***=***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(new***REMOVED***_string["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'',
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(firstToken[_tokenize.FIELDS.START_LINE],***REMOVED***firstToken[_tokenize.FIELDS.START_COL],***REMOVED***lastToken[_tokenize.FIELDS.END_LINE],***REMOVED***lastToken[_tokenize.FIELDS.END_COL]),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***space,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***nodes
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.convertWhitespaceNodesToSpace***REMOVED***=***REMOVED***function***REMOVED***convertWhitespaceNodesToSpace(nodes,***REMOVED***requiredSpace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredSpace***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredSpace***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.spaces.before,***REMOVED***requiredSpace);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.rawSpaceBefore,***REMOVED***requiredSpace);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***_this2.lossySpace(n.spaces.after,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***spaceBefore.length***REMOVED***===***REMOVED***0);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***n.value***REMOVED***+***REMOVED***_this2.lossySpace(n.rawSpaceAfter,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***rawSpaceBefore.length***REMOVED***===***REMOVED***0);
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space:***REMOVED***space,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace:***REMOVED***rawSpace
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.isNamedCombinator***REMOVED***=***REMOVED***function***REMOVED***isNamedCombinator(position)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position***REMOVED***=***REMOVED***this.position;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.namedCombinator***REMOVED***=***REMOVED***function***REMOVED***namedCombinator()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nameRaw***REMOVED***=***REMOVED***this.content(this.tokens[this.position***REMOVED***+***REMOVED***1]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(nameRaw).toLowerCase();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***nameRaw)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***"/"***REMOVED***+***REMOVED***nameRaw***REMOVED***+***REMOVED***"/";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"/"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"/",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(this.currToken[_tokenize.FIELDS.START_LINE],***REMOVED***this.currToken[_tokenize.FIELDS.START_COL],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_LINE],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_COL]),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***3;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.combinator***REMOVED***=***REMOVED***function***REMOVED***combinator()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.content()***REMOVED***===***REMOVED***'|')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***decide***REMOVED***between***REMOVED***a***REMOVED***space***REMOVED***that's***REMOVED***a***REMOVED***descendant***REMOVED***combinator***REMOVED***and***REMOVED***meaningless***REMOVED***whitespace***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***selector.


	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextSigTokenPos***REMOVED***=***REMOVED***this.locateNextMeaningfulToken(this.position);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodes.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(nodes),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***_this$convertWhitespa.space,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa.rawSpace;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.rawSpaceAfter***REMOVED***+=***REMOVED***rawSpace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.spaces.after***REMOVED***+=***REMOVED***space;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this3.newNode(n);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***undefined;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***>***REMOVED***this.position)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.namedCombinator();
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.combinator)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(!spaceOrDescendantSelectorNodes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceOrDescendantSelectorNodes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa2***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space***REMOVED***=***REMOVED***_this$convertWhitespa2.space,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa2.rawSpace;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***_space;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rawSpaceBefore***REMOVED***=***REMOVED***_rawSpace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***descendant***REMOVED***combinator
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa3***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes,***REMOVED***true),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space2***REMOVED***=***REMOVED***_this$convertWhitespa3.space,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_this$convertWhitespa3.rawSpace;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_rawSpace2)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_space2;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_space2.endsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.endsWith('***REMOVED***'))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***_space2.slice(0,***REMOVED***_space2.length***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.before***REMOVED***=***REMOVED***_rawSpace2.slice(0,***REMOVED***_rawSpace2.length***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_space2.startsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.startsWith('***REMOVED***'))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.after***REMOVED***=***REMOVED***_space2.slice(1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.after***REMOVED***=***REMOVED***_rawSpace2.slice(1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***_rawSpace2;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'***REMOVED***',
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(firstToken,***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1]),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(this.content());
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.newNode(node);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.comma***REMOVED***=***REMOVED***function***REMOVED***comma()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.trailingComma***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position***REMOVED***+***REMOVED***1])
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.append(selector);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.comment***REMOVED***=***REMOVED***function***REMOVED***comment()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_comment["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***opts)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.root.error(message,***REMOVED***opts);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.missingBackslash***REMOVED***=***REMOVED***function***REMOVED***missingBackslash()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Expected***REMOVED***a***REMOVED***backslash***REMOVED***preceding***REMOVED***the***REMOVED***semicolon.',***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.missingParenthesis***REMOVED***=***REMOVED***function***REMOVED***missingParenthesis()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.missingSquareBracket***REMOVED***=***REMOVED***function***REMOVED***missingSquareBracket()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.unexpected***REMOVED***=***REMOVED***function***REMOVED***unexpected()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***'"***REMOVED***+***REMOVED***this.content()***REMOVED***+***REMOVED***"'.***REMOVED***Escaping***REMOVED***special***REMOVED***characters***REMOVED***with***REMOVED***\\***REMOVED***may***REMOVED***help.",***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.namespace***REMOVED***=***REMOVED***function***REMOVED***namespace()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***before***REMOVED***=***REMOVED***this.prevToken***REMOVED***&&***REMOVED***this.content(this.prevToken)***REMOVED***||***REMOVED***true;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.word(before);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.asterisk)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.universal(before);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.nesting***REMOVED***=***REMOVED***function***REMOVED***nesting()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextContent***REMOVED***=***REMOVED***this.content(this.nextToken);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextContent***REMOVED***===***REMOVED***"|")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_nesting["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.parentheses***REMOVED***=***REMOVED***function***REMOVED***parentheses()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***unbalanced***REMOVED***=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last.type***REMOVED***===***REMOVED***types$1.PSEUDO)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position***REMOVED***-***REMOVED***1])
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***this.current;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.append(selector);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***cache;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***I***REMOVED***think***REMOVED***this***REMOVED***case***REMOVED***should***REMOVED***be***REMOVED***an***REMOVED***error.***REMOVED***It's***REMOVED***used***REMOVED***to***REMOVED***implement***REMOVED***a***REMOVED***basic***REMOVED***parse***REMOVED***of***REMOVED***media***REMOVED***queries
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***I***REMOVED***don't***REMOVED***think***REMOVED***it's***REMOVED***a***REMOVED***good***REMOVED***idea.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenStart***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenValue***REMOVED***=***REMOVED***"(";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenEnd;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenEnd***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenValue***REMOVED***+=***REMOVED***this.parseParenthesisToken(this.currToken);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.appendToPropertyAndEscape("value",***REMOVED***parenValue,***REMOVED***parenValue);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***parenValue,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(parenStart[_tokenize.FIELDS.START_LINE],***REMOVED***parenStart[_tokenize.FIELDS.START_COL],***REMOVED***parenEnd[_tokenize.FIELDS.END_LINE],***REMOVED***parenEnd[_tokenize.FIELDS.END_COL]),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***parenStart[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pseudoStr***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.colon)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***this.content();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.currToken)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.position***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.splitWord(false,***REMOVED***function***REMOVED***(first,***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***first;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.newNode(new***REMOVED***_pseudo["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***pseudoStr,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(startingToken,***REMOVED***_this4.currToken),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***_this4.nextToken***REMOVED***&&***REMOVED***_this4.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.error('Misplaced***REMOVED***parenthesis.',***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***_this4.nextToken[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.space***REMOVED***=***REMOVED***function***REMOVED***space()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content();***REMOVED***//***REMOVED***Handle***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after***REMOVED***the***REMOVED***selector

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis***REMOVED***||***REMOVED***this.current.nodes.every(function***REMOVED***(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***'comment';
	***REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.optionalSpace(content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.last.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.string***REMOVED***=***REMOVED***function***REMOVED***string()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.universal***REMOVED***=***REMOVED***function***REMOVED***universal(namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_universal["default"]({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
	***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***namespace);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.splitWord***REMOVED***=***REMOVED***function***REMOVED***splitWord(namespace,***REMOVED***firstCallback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***word***REMOVED***=***REMOVED***this.content();

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(nextToken***REMOVED***&&***REMOVED***~[tokens.dollar,***REMOVED***tokens.caret,***REMOVED***tokens.equals,***REMOVED***tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.content();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***current;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.lastIndexOf('\\')***REMOVED***===***REMOVED***current.length***REMOVED***-***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.nextToken;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***this.requiredSpace(this.content(next));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasClass***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'.').filter(function***REMOVED***(i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***escaped***REMOVED***dot***REMOVED***within***REMOVED***class***REMOVED***name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escapedDot***REMOVED***=***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'\\';***REMOVED***//***REMOVED***Allow***REMOVED***decimal***REMOVED***numbers***REMOVED***percent***REMOVED***in***REMOVED***@keyframes

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isKeyframesPercent***REMOVED***=***REMOVED***/^\d+\.\d+%$/.test(word);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!escapedDot***REMOVED***&&***REMOVED***!isKeyframesPercent;
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasId***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#').filter(function***REMOVED***(i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***'\\';
	***REMOVED******REMOVED******REMOVED******REMOVED***});***REMOVED***//***REMOVED***Eliminate***REMOVED***Sass***REMOVED***interpolations***REMOVED***from***REMOVED***the***REMOVED***list***REMOVED***of***REMOVED***id***REMOVED***indexes

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***interpolations***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#{');

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interpolations.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasId***REMOVED***=***REMOVED***hasId.filter(function***REMOVED***(hashIndex)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!~interpolations.indexOf(hashIndex);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***indices***REMOVED***=***REMOVED***(0,***REMOVED***_sortAscending["default"])(uniqs([0].concat(hasClass,***REMOVED***hasId)));
	***REMOVED******REMOVED******REMOVED******REMOVED***indices.forEach(function***REMOVED***(ind,***REMOVED***i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***indices[i***REMOVED***+***REMOVED***1]***REMOVED***||***REMOVED***word.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***word.slice(ind,***REMOVED***index);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***firstCallback)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***firstCallback.call(_this5,***REMOVED***value,***REMOVED***indices.length);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***_this5.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceIndex***REMOVED***=***REMOVED***current[_tokenize.FIELDS.START_POS]***REMOVED***+***REMOVED***indices[i];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***getSource(current[1],***REMOVED***current[2]***REMOVED***+***REMOVED***ind,***REMOVED***current[3],***REMOVED***current[2]***REMOVED***+***REMOVED***(index***REMOVED***-***REMOVED***1));

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(~hasClass.indexOf(ind))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***classNameOpts***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_className["default"](unescapeProp(classNameOpts,***REMOVED***"value"));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(~hasId.indexOf(ind))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***idOpts***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_id["default"](unescapeProp(idOpts,***REMOVED***"value"));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tagOpts***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(tagOpts,***REMOVED***"value");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_tag["default"](tagOpts);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this5.newNode(node,***REMOVED***namespace);***REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***namespace***REMOVED***is***REMOVED***used***REMOVED***only***REMOVED***once


	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.word***REMOVED***=***REMOVED***function***REMOVED***word(namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.splitWord(namespace);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.loop***REMOVED***=***REMOVED***function***REMOVED***loop()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse(true);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.root;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.parse***REMOVED***=***REMOVED***function***REMOVED***parse(throwOnParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.space();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comment();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openParenthesis:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parentheses();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeParenthesis:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwOnParenthesis)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingParenthesis();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openSquare:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.attribute();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.word();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.colon:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pseudo();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comma:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comma();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.universal();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.ampersand:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nesting();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.slash:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***cases***REMOVED***throw;***REMOVED***no***REMOVED***break***REMOVED***needed.

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeSquare:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingSquareBracket();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.semicolon:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingBackslash();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Helpers
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.expected***REMOVED***=***REMOVED***function***REMOVED***expected(description,***REMOVED***index,***REMOVED***found)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(description))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***description.pop();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***description***REMOVED***=***REMOVED***description.join(',***REMOVED***')***REMOVED***+***REMOVED***"***REMOVED***or***REMOVED***"***REMOVED***+***REMOVED***last;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***an***REMOVED***=***REMOVED***/^[aeiou]/.test(description[0])***REMOVED***?***REMOVED***'an'***REMOVED***:***REMOVED***'a';

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!found)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***".",***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***",***REMOVED***found***REMOVED***\""***REMOVED***+***REMOVED***found***REMOVED***+***REMOVED***"\"***REMOVED***instead.",***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.requiredSpace***REMOVED***=***REMOVED***function***REMOVED***requiredSpace(space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***space;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.optionalSpace***REMOVED***=***REMOVED***function***REMOVED***optionalSpace(space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***space;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.lossySpace***REMOVED***=***REMOVED***function***REMOVED***lossySpace(space,***REMOVED***required)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***required***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***space;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.parseParenthesisToken***REMOVED***=***REMOVED***function***REMOVED***parseParenthesisToken(token)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.requiredSpace(content);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.newNode***REMOVED***=***REMOVED***function***REMOVED***newNode(node,***REMOVED***namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/^***REMOVED***+$/.test(namespace))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***(this.spaces***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***namespace;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.spaces)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***this.spaces;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.current.append(node);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto.content***REMOVED***=***REMOVED***function***REMOVED***content(token)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***this.currToken;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.css.slice(token[_tokenize.FIELDS.START_POS],***REMOVED***token[_tokenize.FIELDS.END_POS]);
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***next***REMOVED***non-whitespace,***REMOVED***non-comment***REMOVED***token.
	***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***-1***REMOVED***if***REMOVED***no***REMOVED***meaningful***REMOVED***token***REMOVED***is***REMOVED***found.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***_proto.locateNextMeaningfulToken***REMOVED***=***REMOVED***function***REMOVED***locateNextMeaningfulToken(startPosition)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startPosition***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startPosition***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***searchPosition***REMOVED***=***REMOVED***startPosition;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(searchPosition***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchPosition++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchPosition;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_createClass(Parser,***REMOVED***[{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"currToken",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position];
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"nextToken",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***1];
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***},***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"prevToken",
	***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}]);

	***REMOVED******REMOVED***return***REMOVED***Parser;
	}();

	exports["default"]***REMOVED***=***REMOVED***Parser;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(parser,***REMOVED***parser.exports));

var***REMOVED***parserExports***REMOVED***=***REMOVED***parser.exports;

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_parser***REMOVED***=***REMOVED***_interopRequireDefault(parserExports);

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	var***REMOVED***Processor***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED***function***REMOVED***Processor(func,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.func***REMOVED***=***REMOVED***func***REMOVED***||***REMOVED***function***REMOVED***noop()***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED***this.funcRes***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Processor.prototype;

	***REMOVED******REMOVED***_proto._shouldUpdateSelector***REMOVED***=***REMOVED***function***REMOVED***_shouldUpdateSelector(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.updateSelector***REMOVED***===***REMOVED***false)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string";
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._isLossy***REMOVED***=***REMOVED***function***REMOVED***_isLossy(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.lossless***REMOVED***===***REMOVED***false)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._root***REMOVED***=***REMOVED***function***REMOVED***_root(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_parser["default"](rule,***REMOVED***this._parseOptions(options));
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser.root;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._parseOptions***REMOVED***=***REMOVED***function***REMOVED***_parseOptions(options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***this._isLossy(options)
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._run***REMOVED***=***REMOVED***function***REMOVED***_run(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise(function***REMOVED***(resolve,***REMOVED***reject)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***_this._root(rule,***REMOVED***options);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Promise.resolve(_this.func(root)).then(function***REMOVED***(transform)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_this._shouldUpdateSelector(rule,***REMOVED***options))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).then(resolve,***REMOVED***reject);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(e);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***_proto._runSync***REMOVED***=***REMOVED***function***REMOVED***_runSync(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***this._root(rule,***REMOVED***options);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***transform***REMOVED***=***REMOVED***this.func(root);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transform***REMOVED***&&***REMOVED***typeof***REMOVED***transform.then***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Selector***REMOVED***processor***REMOVED***returned***REMOVED***a***REMOVED***promise***REMOVED***to***REMOVED***a***REMOVED***synchronous***REMOVED***call.");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.updateSelector***REMOVED***&&***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<parser.Root>}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.ast***REMOVED***=***REMOVED***function***REMOVED***ast(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.root;
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST***REMOVED***synchronously.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{parser.Root}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.astSync***REMOVED***=***REMOVED***function***REMOVED***astSync(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).root;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***asynchronously
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<any>}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.transform***REMOVED***=***REMOVED***function***REMOVED***transform(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.transform;
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***synchronously.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{any}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.transformSync***REMOVED***=***REMOVED***function***REMOVED***transformSync(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).transform;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***asynchronously.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.process***REMOVED***=***REMOVED***function***REMOVED***process(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***synchronously.
	***REMOVED******REMOVED******REMOVED****
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***;

	***REMOVED******REMOVED***_proto.processSync***REMOVED***=***REMOVED***function***REMOVED***processSync(rule,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this._runSync(rule,***REMOVED***options);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***return***REMOVED***Processor;
	}();

	exports["default"]***REMOVED***=***REMOVED***Processor;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(processor,***REMOVED***processor.exports));

var***REMOVED***processorExports***REMOVED***=***REMOVED***processor.exports;

var***REMOVED***selectors***REMOVED***=***REMOVED***{};

var***REMOVED***constructors***REMOVED***=***REMOVED***{};

constructors.__esModule***REMOVED***=***REMOVED***true;
constructors.universal***REMOVED***=***REMOVED***constructors.tag***REMOVED***=***REMOVED***constructors.string***REMOVED***=***REMOVED***constructors.selector***REMOVED***=***REMOVED***constructors.root***REMOVED***=***REMOVED***constructors.pseudo***REMOVED***=***REMOVED***constructors.nesting***REMOVED***=***REMOVED***constructors.id***REMOVED***=***REMOVED***constructors.comment***REMOVED***=***REMOVED***constructors.combinator***REMOVED***=***REMOVED***constructors.className***REMOVED***=***REMOVED***constructors.attribute***REMOVED***=***REMOVED***void***REMOVED***0;

var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireDefault$2(attribute$1);

var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault$2(classNameExports);

var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault$2(combinatorExports);

var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault$2(commentExports);

var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault$2(idExports);

var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault$2(nestingExports);

var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault$2(pseudoExports);

var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault$2(rootExports);

var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault$2(selectorExports);

var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault$2(stringExports);

var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault$2(tagExports);

var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault$2(universalExports);

function***REMOVED***_interopRequireDefault$2(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

var***REMOVED***attribute***REMOVED***=***REMOVED***function***REMOVED***attribute(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_attribute["default"](opts);
};

constructors.attribute***REMOVED***=***REMOVED***attribute;

var***REMOVED***className***REMOVED***=***REMOVED***function***REMOVED***className(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_className["default"](opts);
};

constructors.className***REMOVED***=***REMOVED***className;

var***REMOVED***combinator***REMOVED***=***REMOVED***function***REMOVED***combinator(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_combinator["default"](opts);
};

constructors.combinator***REMOVED***=***REMOVED***combinator;

var***REMOVED***comment***REMOVED***=***REMOVED***function***REMOVED***comment(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_comment["default"](opts);
};

constructors.comment***REMOVED***=***REMOVED***comment;

var***REMOVED***id***REMOVED***=***REMOVED***function***REMOVED***id(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_id["default"](opts);
};

constructors.id***REMOVED***=***REMOVED***id;

var***REMOVED***nesting***REMOVED***=***REMOVED***function***REMOVED***nesting(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_nesting["default"](opts);
};

constructors.nesting***REMOVED***=***REMOVED***nesting;

var***REMOVED***pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_pseudo["default"](opts);
};

constructors.pseudo***REMOVED***=***REMOVED***pseudo;

var***REMOVED***root***REMOVED***=***REMOVED***function***REMOVED***root(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_root["default"](opts);
};

constructors.root***REMOVED***=***REMOVED***root;

var***REMOVED***selector***REMOVED***=***REMOVED***function***REMOVED***selector(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_selector["default"](opts);
};

constructors.selector***REMOVED***=***REMOVED***selector;

var***REMOVED***string***REMOVED***=***REMOVED***function***REMOVED***string(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_string["default"](opts);
};

constructors.string***REMOVED***=***REMOVED***string;

var***REMOVED***tag***REMOVED***=***REMOVED***function***REMOVED***tag(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_tag["default"](opts);
};

constructors.tag***REMOVED***=***REMOVED***tag;

var***REMOVED***universal***REMOVED***=***REMOVED***function***REMOVED***universal(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_universal["default"](opts);
};

constructors.universal***REMOVED***=***REMOVED***universal;

var***REMOVED***guards***REMOVED***=***REMOVED***{};

guards.__esModule***REMOVED***=***REMOVED***true;
guards.isNode***REMOVED***=***REMOVED***isNode;
guards.isPseudoElement***REMOVED***=***REMOVED***isPseudoElement;
guards.isPseudoClass***REMOVED***=***REMOVED***isPseudoClass;
guards.isContainer***REMOVED***=***REMOVED***isContainer;
guards.isNamespace***REMOVED***=***REMOVED***isNamespace;
guards.isUniversal***REMOVED***=***REMOVED***guards.isTag***REMOVED***=***REMOVED***guards.isString***REMOVED***=***REMOVED***guards.isSelector***REMOVED***=***REMOVED***guards.isRoot***REMOVED***=***REMOVED***guards.isPseudo***REMOVED***=***REMOVED***guards.isNesting***REMOVED***=***REMOVED***guards.isIdentifier***REMOVED***=***REMOVED***guards.isComment***REMOVED***=***REMOVED***guards.isCombinator***REMOVED***=***REMOVED***guards.isClassName***REMOVED***=***REMOVED***guards.isAttribute***REMOVED***=***REMOVED***void***REMOVED***0;

var***REMOVED***_types***REMOVED***=***REMOVED***types;

var***REMOVED***_IS_TYPE;

var***REMOVED***IS_TYPE***REMOVED***=***REMOVED***(_IS_TYPE***REMOVED***=***REMOVED***{},***REMOVED***_IS_TYPE[_types.ATTRIBUTE]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.CLASS]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMBINATOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMMENT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ID]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.NESTING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.PSEUDO]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ROOT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.SELECTOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.STRING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.TAG]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.UNIVERSAL]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE);

function***REMOVED***isNode(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***node***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***IS_TYPE[node.type];
}

function***REMOVED***isNodeType(type,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isNode(node)***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***type;
}

var***REMOVED***isAttribute***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ATTRIBUTE);
guards.isAttribute***REMOVED***=***REMOVED***isAttribute;
var***REMOVED***isClassName***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.CLASS);
guards.isClassName***REMOVED***=***REMOVED***isClassName;
var***REMOVED***isCombinator***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMBINATOR);
guards.isCombinator***REMOVED***=***REMOVED***isCombinator;
var***REMOVED***isComment***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMMENT);
guards.isComment***REMOVED***=***REMOVED***isComment;
var***REMOVED***isIdentifier***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ID);
guards.isIdentifier***REMOVED***=***REMOVED***isIdentifier;
var***REMOVED***isNesting***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.NESTING);
guards.isNesting***REMOVED***=***REMOVED***isNesting;
var***REMOVED***isPseudo***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.PSEUDO);
guards.isPseudo***REMOVED***=***REMOVED***isPseudo;
var***REMOVED***isRoot***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ROOT);
guards.isRoot***REMOVED***=***REMOVED***isRoot;
var***REMOVED***isSelector***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.SELECTOR);
guards.isSelector***REMOVED***=***REMOVED***isSelector;
var***REMOVED***isString***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.STRING);
guards.isString***REMOVED***=***REMOVED***isString;
var***REMOVED***isTag***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.TAG);
guards.isTag***REMOVED***=***REMOVED***isTag;
var***REMOVED***isUniversal***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.UNIVERSAL);
guards.isUniversal***REMOVED***=***REMOVED***isUniversal;

function***REMOVED***isPseudoElement(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***node.value***REMOVED***&&***REMOVED***(node.value.startsWith("::")***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":before"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":after"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-letter"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-line");
}

function***REMOVED***isPseudoClass(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***!isPseudoElement(node);
}

function***REMOVED***isContainer(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(isNode(node)***REMOVED***&&***REMOVED***node.walk);
}

function***REMOVED***isNamespace(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isAttribute(node)***REMOVED***||***REMOVED***isTag(node);
}

(function***REMOVED***(exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;

	var***REMOVED***_types***REMOVED***=***REMOVED***types;

	Object.keys(_types).forEach(function***REMOVED***(key)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_types[key])***REMOVED***return;
	***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_types[key];
	});

	var***REMOVED***_constructors***REMOVED***=***REMOVED***constructors;

	Object.keys(_constructors).forEach(function***REMOVED***(key)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_constructors[key])***REMOVED***return;
	***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_constructors[key];
	});

	var***REMOVED***_guards***REMOVED***=***REMOVED***guards;

	Object.keys(_guards).forEach(function***REMOVED***(key)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
	***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_guards[key])***REMOVED***return;
	***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_guards[key];
	});***REMOVED***
}***REMOVED***(selectors));

(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

	exports.__esModule***REMOVED***=***REMOVED***true;
	exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_processor***REMOVED***=***REMOVED***_interopRequireDefault(processorExports);

	var***REMOVED***selectors$1***REMOVED***=***REMOVED***_interopRequireWildcard(selectors);

	function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache()***REMOVED***{***REMOVED***return***REMOVED***cache;***REMOVED***};***REMOVED***return***REMOVED***cache;***REMOVED***}

	function***REMOVED***_interopRequireWildcard(obj)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache();***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}

	var***REMOVED***parser***REMOVED***=***REMOVED***function***REMOVED***parser(processor)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_processor["default"](processor);
	};

	Object.assign(parser,***REMOVED***selectors$1);
	delete***REMOVED***parser.__esModule;
	var***REMOVED***_default***REMOVED***=***REMOVED***parser;
	exports["default"]***REMOVED***=***REMOVED***_default;
	module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
}***REMOVED***(dist,***REMOVED***dist.exports));

var***REMOVED***distExports***REMOVED***=***REMOVED***dist.exports;

const***REMOVED***selectorParser$1***REMOVED***=***REMOVED***distExports;
const***REMOVED***valueParser***REMOVED***=***REMOVED***lib;
const***REMOVED***{***REMOVED***extractICSS***REMOVED***}***REMOVED***=***REMOVED***src$4;

const***REMOVED***isSpacing***REMOVED***=***REMOVED***(node)***REMOVED***=>***REMOVED***node.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&***REMOVED***node.value***REMOVED***===***REMOVED***"***REMOVED***";

function***REMOVED***normalizeNodeArray(nodes)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***array***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***nodes.forEach((x)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(x))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeNodeArray(x).forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(x)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array.push(x);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});

***REMOVED******REMOVED***if***REMOVED***(array.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***isSpacing(array[array.length***REMOVED***-***REMOVED***1]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***array.pop();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***array;
}

function***REMOVED***localizeNode(rule,***REMOVED***mode,***REMOVED***localAliasMap)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***transform***REMOVED***=***REMOVED***(node,***REMOVED***context)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.ignoreNextSpacing***REMOVED***&&***REMOVED***!isSpacing(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Missing***REMOVED***whitespace***REMOVED***after***REMOVED***"***REMOVED***+***REMOVED***context.ignoreNextSpacing);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.enforceNoSpacing***REMOVED***&&***REMOVED***isSpacing(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Missing***REMOVED***whitespace***REMOVED***before***REMOVED***"***REMOVED***+***REMOVED***context.enforceNoSpacing);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newNodes;

***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"root":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resultingGlobal;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasPureGlobals***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.nodes.map((n)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastWasSpacing:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n***REMOVED***=***REMOVED***transform(n,***REMOVED***nContext);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resultingGlobal***REMOVED***===***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultingGlobal***REMOVED***=***REMOVED***nContext.global;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(resultingGlobal***REMOVED***!==***REMOVED***nContext.global)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Inconsistent***REMOVED***rule***REMOVED***global/local***REMOVED***result***REMOVED***in***REMOVED***rule***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***(multiple***REMOVED***selectors***REMOVED***must***REMOVED***result***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***mode***REMOVED***for***REMOVED***the***REMOVED***rule)'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nContext.hasLocals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasPureGlobals***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global***REMOVED***=***REMOVED***resultingGlobal;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.map((childNode)***REMOVED***=>***REMOVED***transform(childNode,***REMOVED***context));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"combinator":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSpacing(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.ignoreNextSpacing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"pseudo":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***childContext;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isNested***REMOVED***=***REMOVED***!!node.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isScoped***REMOVED***=***REMOVED***node.value***REMOVED***===***REMOVED***":local"***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***":global";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportExport***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***===***REMOVED***":import"***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***":export";

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImportExport)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***:local(.foo)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isNested)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isScoped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.nodes.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`${node.value}()***REMOVED***can't***REMOVED***be***REMOVED***empty`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.inside)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***${node.value}***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***inside***REMOVED***of***REMOVED***a***REMOVED***${context.inside}(...)`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***node.value***REMOVED***===***REMOVED***":global",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inside:***REMOVED***node.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((childNode)***REMOVED***=>***REMOVED***transform(childNode,***REMOVED***childContext))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.reduce((acc,***REMOVED***next)***REMOVED***=>***REMOVED***acc.concat(next.nodes),***REMOVED***[]);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newNodes.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***before,***REMOVED***after***REMOVED***}***REMOVED***=***REMOVED***node.spaces;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***first***REMOVED***=***REMOVED***newNodes[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***newNodes[newNodes.length***REMOVED***-***REMOVED***1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first.spaces***REMOVED***=***REMOVED***{***REMOVED***before,***REMOVED***after:***REMOVED***first.spaces.after***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.spaces***REMOVED***=***REMOVED***{***REMOVED***before:***REMOVED***last.spaces.before,***REMOVED***after***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***newNodes;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inside:***REMOVED***context.inside,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastWasSpacing:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***context.explicit,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.map((childNode)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform(childNode,***REMOVED***childContext)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(childContext.hasLocals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//:local***REMOVED***.foo***REMOVED***.bar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isScoped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.inside)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***${node.value}***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***inside***REMOVED***of***REMOVED***a***REMOVED***${context.inside}(...)`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***addBackSpacing***REMOVED***=***REMOVED***!!node.spaces.before;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***context.lastWasSpacing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***false;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***context.lastWasSpacing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***node.value;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global***REMOVED***=***REMOVED***node.value***REMOVED***===***REMOVED***":global";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.explicit***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***because***REMOVED***this***REMOVED***node***REMOVED***has***REMOVED***spacing***REMOVED***that***REMOVED***is***REMOVED***lost***REMOVED***when***REMOVED***we***REMOVED***remove***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***make***REMOVED***up***REMOVED***for***REMOVED***it***REMOVED***by***REMOVED***adding***REMOVED***an***REMOVED***extra***REMOVED***combinator***REMOVED***in***REMOVED***since***REMOVED***adding
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***spacing***REMOVED***on***REMOVED***the***REMOVED***parent***REMOVED***selector***REMOVED***doesn't***REMOVED***work
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***addBackSpacing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***selectorParser$1.combinator({***REMOVED***value:***REMOVED***"***REMOVED***"***REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***class***REMOVED***or***REMOVED***id***REMOVED***selector***REMOVED***syntax");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.global)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportedValue***REMOVED***=***REMOVED***localAliasMap.has(node.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportedWithExplicitScope***REMOVED***=***REMOVED***isImportedValue***REMOVED***&&***REMOVED***context.explicit;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isImportedValue***REMOVED***||***REMOVED***isImportedWithExplicitScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerNode***REMOVED***=***REMOVED***node.clone();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***innerNode.spaces***REMOVED***=***REMOVED***{***REMOVED***before:***REMOVED***"",***REMOVED***after:***REMOVED***""***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***selectorParser$1.pseudo({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***":local",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes:***REMOVED***[innerNode],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***node.spaces,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED***};

***REMOVED******REMOVED***const***REMOVED***rootContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***mode***REMOVED***===***REMOVED***"global",
***REMOVED******REMOVED******REMOVED******REMOVED***hasPureGlobals:***REMOVED***false,
***REMOVED******REMOVED***};

***REMOVED******REMOVED***rootContext.selector***REMOVED***=***REMOVED***selectorParser$1((root)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***transform(root,***REMOVED***rootContext);
***REMOVED******REMOVED***}).processSync(rule,***REMOVED***{***REMOVED***updateSelector:***REMOVED***false,***REMOVED***lossless:***REMOVED***true***REMOVED***});

***REMOVED******REMOVED***return***REMOVED***rootContext;
}

function***REMOVED***localizeDeclNode(node,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"word":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.localizeNextItem)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.localAliasMap.has(node.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***":local("***REMOVED***+***REMOVED***node.value***REMOVED***+***REMOVED***")";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.localizeNextItem***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"function":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options.rewriteUrl***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***"url"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes.map((nestedNode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.type***REMOVED***!==***REMOVED***"string"***REMOVED***&&***REMOVED***nestedNode.type***REMOVED***!==***REMOVED***"word")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newUrl***REMOVED***=***REMOVED***context.options.rewriteUrl(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nestedNode.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(nestedNode.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.quote***REMOVED***===***REMOVED***"'")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/(\\)/g,***REMOVED***"\\$1").replace(/'/g,***REMOVED***"\\'");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.quote***REMOVED***===***REMOVED***'"')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/(\\)/g,***REMOVED***"\\$1").replace(/"/g,***REMOVED***'\\"');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"word":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/("|'|\)|\\)/g,***REMOVED***"\\$1");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nestedNode.value***REMOVED***=***REMOVED***newUrl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node;
}

function***REMOVED***isWordAFunctionArgument(wordNode,***REMOVED***functionNode)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***functionNode
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***functionNode.nodes.some(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(functionNodeChild)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***functionNodeChild.sourceIndex***REMOVED***===***REMOVED***wordNode.sourceIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***false;
}

function***REMOVED***localizeDeclarationValues(localize,***REMOVED***declaration,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***valueNodes***REMOVED***=***REMOVED***valueParser(declaration.value);

***REMOVED******REMOVED***valueNodes.walk((node,***REMOVED***index,***REMOVED***nodes)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***context.options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeNextItem:***REMOVED***localize***REMOVED***&&***REMOVED***!context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap:***REMOVED***context.localAliasMap,
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***nodes[index]***REMOVED***=***REMOVED***localizeDeclNode(node,***REMOVED***subContext);
***REMOVED******REMOVED***});

***REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***valueNodes.toString();
}

function***REMOVED***localizeDeclaration(declaration,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isAnimation***REMOVED***=***REMOVED***/animation$/i.test(declaration.prop);

***REMOVED******REMOVED***if***REMOVED***(isAnimation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validIdent***REMOVED***=***REMOVED***/^-?[_a-z][_a-z0-9-]*$/i;

***REMOVED******REMOVED******REMOVED******REMOVED***/*
***REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***spec***REMOVED***defines***REMOVED***some***REMOVED***keywords***REMOVED***that***REMOVED***you***REMOVED***can***REMOVED***use***REMOVED***to***REMOVED***describe***REMOVED***properties***REMOVED***such***REMOVED***as***REMOVED***the***REMOVED***timing
***REMOVED******REMOVED******REMOVED******REMOVED***function.***REMOVED***These***REMOVED***are***REMOVED***still***REMOVED***valid***REMOVED***animation***REMOVED***names,***REMOVED***so***REMOVED***as***REMOVED***long***REMOVED***as***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***property***REMOVED***that***REMOVED***accepts
***REMOVED******REMOVED******REMOVED******REMOVED***a***REMOVED***keyword,***REMOVED***it***REMOVED***is***REMOVED***given***REMOVED***priority.***REMOVED***Only***REMOVED***when***REMOVED***all***REMOVED***the***REMOVED***properties***REMOVED***that***REMOVED***can***REMOVED***take***REMOVED***a***REMOVED***keyword***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED***exhausted***REMOVED***can***REMOVED***the***REMOVED***animation***REMOVED***name***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***the***REMOVED***keyword.***REMOVED***I.e.
***REMOVED******REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED***animation:***REMOVED***infinite***REMOVED***infinite;
***REMOVED******REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***animation***REMOVED***will***REMOVED***repeat***REMOVED***an***REMOVED***infinite***REMOVED***number***REMOVED***of***REMOVED***times***REMOVED***from***REMOVED***the***REMOVED***first***REMOVED***argument,***REMOVED***and***REMOVED***will***REMOVED***have***REMOVED***an
***REMOVED******REMOVED******REMOVED******REMOVED***animation***REMOVED***name***REMOVED***of***REMOVED***infinite***REMOVED***from***REMOVED***the***REMOVED***second.
***REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***animationKeywords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$alternate:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$alternate-reverse":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$backwards:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$both:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$ease:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-in":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-in-out":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-out":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$forwards:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$infinite:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$linear:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$none:***REMOVED***Infinity,***REMOVED***//***REMOVED***No***REMOVED***matter***REMOVED***how***REMOVED***many***REMOVED***times***REMOVED***you***REMOVED***write***REMOVED***none,***REMOVED***it***REMOVED***will***REMOVED***never***REMOVED***be***REMOVED***an***REMOVED***animation***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$normal:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$paused:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$reverse:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$running:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$step-end":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$step-start":***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$initial:***REMOVED***Infinity,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$inherit:***REMOVED***Infinity,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$unset:***REMOVED***Infinity,
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedAnimationKeywords***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***stepsFunctionNode***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valueNodes***REMOVED***=***REMOVED***valueParser(declaration.value).walk((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***If***REMOVED***div-token***REMOVED***appeared***REMOVED***(represents***REMOVED***as***REMOVED***comma***REMOVED***','),***REMOVED***a***REMOVED***possibility***REMOVED***of***REMOVED***an***REMOVED***animation-keywords***REMOVED***should***REMOVED***be***REMOVED***reflesh.***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"div")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"function"***REMOVED***&&***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***"steps")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stepsFunctionNode***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"word"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isWordAFunctionArgument(node,***REMOVED***stepsFunctionNode)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node.value.toLowerCase()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shouldParseAnimationName***REMOVED***=***REMOVED***false;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***&&***REMOVED***validIdent.test(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("$"***REMOVED***+***REMOVED***value***REMOVED***in***REMOVED***animationKeywords)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$"***REMOVED***+***REMOVED***value***REMOVED***in***REMOVED***parsedAnimationKeywords
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParseAnimationName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***>=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***animationKeywords["$"***REMOVED***+***REMOVED***value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParseAnimationName***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subContext***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***context.options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeNextItem:***REMOVED***shouldParseAnimationName***REMOVED***&&***REMOVED***!context.global,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap:***REMOVED***context.localAliasMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclNode(node,***REMOVED***subContext);
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***valueNodes.toString();

***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***isAnimationName***REMOVED***=***REMOVED***/animation(-name)?$/i.test(declaration.prop);

***REMOVED******REMOVED***if***REMOVED***(isAnimationName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclarationValues(true,***REMOVED***declaration,***REMOVED***context);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***hasUrl***REMOVED***=***REMOVED***/url\(/i.test(declaration.value);

***REMOVED******REMOVED***if***REMOVED***(hasUrl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclarationValues(false,***REMOVED***declaration,***REMOVED***context);
***REMOVED******REMOVED***}
}

src$2.exports***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"global"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"local"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"pure"
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'options.mode***REMOVED***must***REMOVED***be***REMOVED***either***REMOVED***"global",***REMOVED***"local"***REMOVED***or***REMOVED***"pure"***REMOVED***(default***REMOVED***"local")'
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***pureMode***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.mode***REMOVED***===***REMOVED***"pure";
***REMOVED******REMOVED***const***REMOVED***globalMode***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.mode***REMOVED***===***REMOVED***"global";

***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-local-by-default",
***REMOVED******REMOVED******REMOVED******REMOVED***prepare()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localAliasMap***REMOVED***=***REMOVED***new***REMOVED***Map();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***icssImports***REMOVED***}***REMOVED***=***REMOVED***extractICSS(root,***REMOVED***false);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(icssImports).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(icssImports[key]).forEach((prop)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap.set(prop,***REMOVED***icssImports[key][prop]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules((atRule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/keyframes$/i.test(atRule.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalMatch***REMOVED***=***REMOVED***/^\s*:global\s*\((.+)\)\s*$/.exec(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/^\s*:local\s*\((.+)\)\s*$/.exec(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***globalKeyframes***REMOVED***=***REMOVED***globalMode;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalMatch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pureMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***atRule.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"@keyframes***REMOVED***:global(...)***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***pure***REMOVED***mode"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***globalMatch[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalKeyframes***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(localMatch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***localMatch[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalKeyframes***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!globalMode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(atRule.params***REMOVED***&&***REMOVED***!localAliasMap.has(atRule.params))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***":local("***REMOVED***+***REMOVED***atRule.params***REMOVED***+***REMOVED***")";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.walkDecls((declaration)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***globalKeyframes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(atRule.nodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.nodes.forEach((declaration)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.type***REMOVED***===***REMOVED***"decl")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***globalMode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.parent***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.parent.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/keyframes$/i.test(rule.parent.name)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ignore***REMOVED***keyframe***REMOVED***rules
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***localizeNode(rule,***REMOVED***options.mode,***REMOVED***localAliasMap);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.localAliasMap***REMOVED***=***REMOVED***localAliasMap;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pureMode***REMOVED***&&***REMOVED***context.hasPureGlobals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***rule.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Selector***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***pure***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"(pure***REMOVED***selectors***REMOVED***must***REMOVED***contain***REMOVED***at***REMOVED***least***REMOVED***one***REMOVED***local***REMOVED***class***REMOVED***or***REMOVED***id)"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***context.selector;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Less-syntax***REMOVED***mixins***REMOVED***parse***REMOVED***as***REMOVED***rules***REMOVED***with***REMOVED***no***REMOVED***nodes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rule.nodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.nodes.forEach((declaration)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***context)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED***};
};
src$2.exports.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***srcExports$1***REMOVED***=***REMOVED***src$2.exports;

const***REMOVED***selectorParser***REMOVED***=***REMOVED***distExports;

const***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;

function***REMOVED***getSingleLocalNamesForComposes(root)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***root.nodes.map((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"selector"***REMOVED***||***REMOVED***node.nodes.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"${root}"`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.nodes[0];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***!==***REMOVED***"pseudo"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***!==***REMOVED***":local"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes.length***REMOVED***!==***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.first;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"selector"***REMOVED***||***REMOVED***node.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.first;

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"class")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'id'***REMOVED***is***REMOVED***not***REMOVED***possible,***REMOVED***because***REMOVED***you***REMOVED***can't***REMOVED***compose***REMOVED***ids
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.value;
***REMOVED******REMOVED***});
}

const***REMOVED***whitespace***REMOVED***=***REMOVED***"[\\x20\\t\\r\\n\\f]";
const***REMOVED***unescapeRegExp***REMOVED***=***REMOVED***new***REMOVED***RegExp(
***REMOVED******REMOVED***"\\\\([\\da-f]{1,6}"***REMOVED***+***REMOVED***whitespace***REMOVED***+***REMOVED***"?|("***REMOVED***+***REMOVED***whitespace***REMOVED***+***REMOVED***")|.)",
***REMOVED******REMOVED***"ig"
);

function***REMOVED***unescape(str)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str.replace(unescapeRegExp,***REMOVED***(_,***REMOVED***escaped,***REMOVED***escapedWhitespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***high***REMOVED***=***REMOVED***"0x"***REMOVED***+***REMOVED***escaped***REMOVED***-***REMOVED***0x10000;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***NaN***REMOVED***means***REMOVED***non-codepoint
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Workaround***REMOVED***erroneous***REMOVED***numeric***REMOVED***interpretation***REMOVED***of***REMOVED***+"0x"
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***high***REMOVED***!==***REMOVED***high***REMOVED***||***REMOVED***escapedWhitespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***escaped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***high***REMOVED***<***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***//***REMOVED***BMP***REMOVED***codepoint
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***String.fromCharCode(high***REMOVED***+***REMOVED***0x10000)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***//***REMOVED***Supplemental***REMOVED***Plane***REMOVED***codepoint***REMOVED***(surrogate***REMOVED***pair)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***String.fromCharCode((high***REMOVED***>>***REMOVED***10)***REMOVED***|***REMOVED***0xd800,***REMOVED***(high***REMOVED***&***REMOVED***0x3ff)***REMOVED***|***REMOVED***0xdc00);
***REMOVED******REMOVED***});
}

const***REMOVED***plugin***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***generateScopedName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.generateScopedName)***REMOVED***||***REMOVED***plugin.generateScopedName;
***REMOVED******REMOVED***const***REMOVED***generateExportEntry***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.generateExportEntry)***REMOVED***||***REMOVED***plugin.generateExportEntry;
***REMOVED******REMOVED***const***REMOVED***exportGlobals***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.exportGlobals;

***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-scope",
***REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***{***REMOVED***rule***REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***Object.create(null);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***exportScopedName(name,***REMOVED***rawName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scopedName***REMOVED***=***REMOVED***generateScopedName(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawName***REMOVED***?***REMOVED***rawName***REMOVED***:***REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.css
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportEntry***REMOVED***=***REMOVED***generateExportEntry(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawName***REMOVED***?***REMOVED***rawName***REMOVED***:***REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scopedName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.from,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.css
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***key,***REMOVED***value***REMOVED***}***REMOVED***=***REMOVED***exportEntry;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***exports[key]***REMOVED***||***REMOVED***[];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exports[key].indexOf(value)***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[key].push(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scopedName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***localizeNode(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***node.map(localizeNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selectorParser.className({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exportScopedName(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws***REMOVED***&&***REMOVED***node.raws.value***REMOVED***?***REMOVED***node.raws.value***REMOVED***:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selectorParser.id({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exportScopedName(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws***REMOVED***&&***REMOVED***node.raws.value***REMOVED***?***REMOVED***node.raws.value***REMOVED***:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${node.type}***REMOVED***("${node}")***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***a***REMOVED***:local***REMOVED***block`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***traverseNode(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"pseudo":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value***REMOVED***===***REMOVED***":local")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.nodes.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unexpected***REMOVED***comma***REMOVED***(",")***REMOVED***in***REMOVED***:local***REMOVED***block');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***selector***REMOVED***=***REMOVED***localizeNode(node.first);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***move***REMOVED***the***REMOVED***spaces***REMOVED***that***REMOVED***were***REMOVED***around***REMOVED***the***REMOVED***psuedo***REMOVED***selector***REMOVED***to***REMOVED***the***REMOVED***first
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***non-container***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.first.spaces***REMOVED***=***REMOVED***node.spaces;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextNode***REMOVED***=***REMOVED***node.next();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode.value***REMOVED***===***REMOVED***"***REMOVED***"***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/\\[A-F0-9]{1,6}$/.test(selector.last.value)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.last.spaces.after***REMOVED***=***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.replaceWith(selector);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***falls***REMOVED***through***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"root":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.each(traverseNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportGlobals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[node.value]***REMOVED***=***REMOVED***[node.value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:import***REMOVED***and***REMOVED***remember***REMOVED***imported***REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedNames***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules(/^:import\(.+\)$/,***REMOVED***(rule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedNames[decl.prop]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***selectors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedSelector***REMOVED***=***REMOVED***selectorParser().astSync(rule);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***traverseNode(parsedSelector.clone()).toString();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls(/composes|compose-with/i,***REMOVED***(decl)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localNames***REMOVED***=***REMOVED***getSingleLocalNamesForComposes(parsedSelector);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***classes***REMOVED***=***REMOVED***decl.value.split(/\s+/);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classes.forEach((className)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***global***REMOVED***=***REMOVED***/^global\(([^)]+)\)$/.exec(className);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(global)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(global[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwnProperty.call(importedNames,***REMOVED***className))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(className);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwnProperty.call(exports,***REMOVED***className))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[className].forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***decl.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`referenced***REMOVED***class***REMOVED***name***REMOVED***"${className}"***REMOVED***in***REMOVED***${decl.prop}***REMOVED***not***REMOVED***found`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.remove();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***values
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/:local\s*\((.+?)\)/.test(decl.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tokens***REMOVED***=***REMOVED***decl.value.split(/(,|'[^']*'|"[^"]*")/);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens***REMOVED***=***REMOVED***tokens.map((token,***REMOVED***idx)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***tokens[idx***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***",")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result***REMOVED***=***REMOVED***token;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/:local\s*\((.+?)\)/.exec(token);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(localMatch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***input***REMOVED***=***REMOVED***localMatch.input;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchPattern***REMOVED***=***REMOVED***localMatch[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchVal***REMOVED***=***REMOVED***localMatch[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newVal***REMOVED***=***REMOVED***exportScopedName(matchVal);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***input.replace(matchPattern,***REMOVED***newVal);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***token;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***tokens.join("");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***keyframes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules(/keyframes$/i,***REMOVED***(atRule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/^\s*:local\s*\((.+?)\)\s*$/.exec(atRule.params);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!localMatch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***exportScopedName(localMatch[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***we***REMOVED***found***REMOVED***any***REMOVED***:locals,***REMOVED***insert***REMOVED***an***REMOVED***:export***REMOVED***rule
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportedNames***REMOVED***=***REMOVED***Object.keys(exports);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedNames.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportRule***REMOVED***=***REMOVED***rule({***REMOVED***selector:***REMOVED***":export"***REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedNames.forEach((exportedName)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportRule.append({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***exportedName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exports[exportedName].join("***REMOVED***"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.append(exportRule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED***};
};

plugin.postcss***REMOVED***=***REMOVED***true;

plugin.generateScopedName***REMOVED***=***REMOVED***function***REMOVED***(name,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***sanitisedPath***REMOVED***=***REMOVED***path
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\.[^./\\]+$/,***REMOVED***"")
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/[\W_]+/g,***REMOVED***"_")
***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^_|_$/g,***REMOVED***"");

***REMOVED******REMOVED***return***REMOVED***`_${sanitisedPath}__${name}`.trim();
};

plugin.generateExportEntry***REMOVED***=***REMOVED***function***REMOVED***(name,***REMOVED***scopedName)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***unescape(name),
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***unescape(scopedName),
***REMOVED******REMOVED***};
};

var***REMOVED***src$1***REMOVED***=***REMOVED***plugin;

function***REMOVED***hash(str)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***hash***REMOVED***=***REMOVED***5381,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED******REMOVED******REMOVED******REMOVED***=***REMOVED***str.length;

***REMOVED******REMOVED***while(i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***(hash***REMOVED*******REMOVED***33)***REMOVED***^***REMOVED***str.charCodeAt(--i);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/****REMOVED***JavaScript***REMOVED***does***REMOVED***bitwise***REMOVED***operations***REMOVED***(like***REMOVED***XOR,***REMOVED***above)***REMOVED***on***REMOVED***32-bit***REMOVED***signed
***REMOVED******REMOVED******REMOVED*******REMOVED***integers.***REMOVED***Since***REMOVED***we***REMOVED***want***REMOVED***the***REMOVED***results***REMOVED***to***REMOVED***be***REMOVED***always***REMOVED***positive,***REMOVED***convert***REMOVED***the
***REMOVED******REMOVED******REMOVED*******REMOVED***signed***REMOVED***int***REMOVED***to***REMOVED***an***REMOVED***unsigned***REMOVED***by***REMOVED***doing***REMOVED***an***REMOVED***unsigned***REMOVED***bitshift.***REMOVED****/
***REMOVED******REMOVED***return***REMOVED***hash***REMOVED***>>>***REMOVED***0;
}

var***REMOVED***stringHash***REMOVED***=***REMOVED***hash;

var***REMOVED***src***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

const***REMOVED***ICSSUtils***REMOVED***=***REMOVED***src$4;

const***REMOVED***matchImports***REMOVED***=***REMOVED***/^(.+?|\([\s\S]+?\))\s+from\s+("[^"]*"|'[^']*'|[\w-]+)$/;
const***REMOVED***matchValueDefinition***REMOVED***=***REMOVED***/(?:\s+|^)([\w-]+):?(.*?)$/;
const***REMOVED***matchImport***REMOVED***=***REMOVED***/^([\w-]+)(?:\s+as\s+([\w-]+))?/;

src.exports***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***importIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***const***REMOVED***createImportedName***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.createImportedName)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***((importName***REMOVED***/*,***REMOVED***path*/)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`i__const_${importName.replace(/\W/g,***REMOVED***"_")}_${importIndex++}`);

***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-values",
***REMOVED******REMOVED******REMOVED******REMOVED***prepare(result)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importAliases***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***definitions***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***postcss)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules(/value/i,***REMOVED***(atRule)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***atRule.params.match(matchImports);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[,***REMOVED***/*match*/***REMOVED***aliases,***REMOVED***path]***REMOVED***=***REMOVED***matches;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***can***REMOVED***use***REMOVED***constants***REMOVED***for***REMOVED***path***REMOVED***names
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(definitions[path])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***definitions[path];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***aliases
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^\(\s*([\s\S]+)\s*\)$/,***REMOVED***"$1")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.split(/\s*,\s*/)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((alias)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***matchImport.exec(alias);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokens)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***/*match*/***REMOVED***theirName,***REMOVED***myName***REMOVED***=***REMOVED***theirName]***REMOVED***=***REMOVED***tokens;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedName***REMOVED***=***REMOVED***createImportedName(myName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions[myName]***REMOVED***=***REMOVED***importedName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***theirName,***REMOVED***importedName***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`@import***REMOVED***statement***REMOVED***"${alias}"***REMOVED***is***REMOVED***invalid!`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importAliases.push({***REMOVED***path,***REMOVED***imports***REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(atRule.params.indexOf("@value")***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.warn("Invalid***REMOVED***value***REMOVED***definition:***REMOVED***"***REMOVED***+***REMOVED***atRule.params);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[,***REMOVED***key,***REMOVED***value]***REMOVED***=***REMOVED***`${atRule.params}${atRule.raws.between}`.match(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchValueDefinition
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedValue***REMOVED***=***REMOVED***value.replace(/\/\*((?!\*\/).*?)\*\//g,***REMOVED***"");

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalizedValue.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.warn("Invalid***REMOVED***value***REMOVED***definition:***REMOVED***"***REMOVED***+***REMOVED***atRule.params);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isOnlySpace***REMOVED***=***REMOVED***/^\s+$/.test(normalizedValue);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isOnlySpace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value.trim();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Add***REMOVED***to***REMOVED***the***REMOVED***definitions,***REMOVED***knowing***REMOVED***that***REMOVED***values***REMOVED***can***REMOVED***refer***REMOVED***to***REMOVED***each***REMOVED***other
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions[key]***REMOVED***=***REMOVED***ICSSUtils.replaceValueSymbols(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***If***REMOVED***we***REMOVED***have***REMOVED***no***REMOVED***definitions,***REMOVED***don't***REMOVED***continue***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Object.keys(definitions).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Perform***REMOVED***replacements***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ICSSUtils.replaceSymbols(root,***REMOVED***definitions);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***We***REMOVED***want***REMOVED***to***REMOVED***export***REMOVED***anything***REMOVED***defined***REMOVED***by***REMOVED***now,***REMOVED***but***REMOVED***don't***REMOVED***add***REMOVED***it***REMOVED***to***REMOVED***the***REMOVED***CSS***REMOVED***yet***REMOVED***or***REMOVED***it***REMOVED***well***REMOVED***get***REMOVED***picked***REMOVED***up***REMOVED***by***REMOVED***the***REMOVED***replacement***REMOVED***stuff***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportDeclarations***REMOVED***=***REMOVED***Object.keys(definitions).map((key)***REMOVED***=>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***definitions[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Add***REMOVED***export***REMOVED***rules***REMOVED***if***REMOVED***any***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportDeclarations.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportRule***REMOVED***=***REMOVED***postcss.rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***":export",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportRule.append(exportDeclarations);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(exportRule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Add***REMOVED***import***REMOVED***rules***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importAliases.reverse().forEach(({***REMOVED***path,***REMOVED***imports***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importRule***REMOVED***=***REMOVED***postcss.rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import(${path})`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports.forEach(({***REMOVED***theirName,***REMOVED***importedName***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importRule.append({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***theirName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***importedName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(importRule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED***};
};

src.exports.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***srcExports***REMOVED***=***REMOVED***src.exports;

Object.defineProperty(scoping,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
scoping.behaviours***REMOVED***=***REMOVED***void***REMOVED***0;
scoping.getDefaultPlugins***REMOVED***=***REMOVED***getDefaultPlugins;
scoping.getDefaultScopeBehaviour***REMOVED***=***REMOVED***getDefaultScopeBehaviour;
scoping.getScopedNameGenerator***REMOVED***=***REMOVED***getScopedNameGenerator;

var***REMOVED***_postcssModulesExtractImports***REMOVED***=***REMOVED***_interopRequireDefault$1(srcExports$2);

var***REMOVED***_genericNames***REMOVED***=***REMOVED***_interopRequireDefault$1(genericNames);

var***REMOVED***_postcssModulesLocalByDefault***REMOVED***=***REMOVED***_interopRequireDefault$1(srcExports$1);

var***REMOVED***_postcssModulesScope***REMOVED***=***REMOVED***_interopRequireDefault$1(src$1);

var***REMOVED***_stringHash***REMOVED***=***REMOVED***_interopRequireDefault$1(stringHash);

var***REMOVED***_postcssModulesValues***REMOVED***=***REMOVED***_interopRequireDefault$1(srcExports);

function***REMOVED***_interopRequireDefault$1(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

const***REMOVED***behaviours***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***LOCAL:***REMOVED***"local",
***REMOVED******REMOVED***GLOBAL:***REMOVED***"global"
};
scoping.behaviours***REMOVED***=***REMOVED***behaviours;

function***REMOVED***getDefaultPlugins({
***REMOVED******REMOVED***behaviour,
***REMOVED******REMOVED***generateScopedName,
***REMOVED******REMOVED***exportGlobals
})***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***(0,***REMOVED***_postcssModulesScope.default)({
***REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
***REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[behaviours.LOCAL]:***REMOVED***[_postcssModulesValues.default,***REMOVED***(0,***REMOVED***_postcssModulesLocalByDefault.default)({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***"local"
***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***_postcssModulesExtractImports.default,***REMOVED***scope],
***REMOVED******REMOVED******REMOVED******REMOVED***[behaviours.GLOBAL]:***REMOVED***[_postcssModulesValues.default,***REMOVED***(0,***REMOVED***_postcssModulesLocalByDefault.default)({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***"global"
***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***_postcssModulesExtractImports.default,***REMOVED***scope]
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***plugins[behaviour];
}

function***REMOVED***isValidBehaviour(behaviour)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***Object.keys(behaviours).map(key***REMOVED***=>***REMOVED***behaviours[key]).indexOf(behaviour)***REMOVED***>***REMOVED***-1;
}

function***REMOVED***getDefaultScopeBehaviour(scopeBehaviour)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***scopeBehaviour***REMOVED***&&***REMOVED***isValidBehaviour(scopeBehaviour)***REMOVED***?***REMOVED***scopeBehaviour***REMOVED***:***REMOVED***behaviours.LOCAL;
}

function***REMOVED***generateScopedNameDefault(name,***REMOVED***filename,***REMOVED***css)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***css.indexOf(`.${name}`);
***REMOVED******REMOVED***const***REMOVED***lineNumber***REMOVED***=***REMOVED***css.substr(0,***REMOVED***i).split(/[\r\n]/).length;
***REMOVED******REMOVED***const***REMOVED***hash***REMOVED***=***REMOVED***(0,***REMOVED***_stringHash.default)(css).toString(36).substr(0,***REMOVED***5);
***REMOVED******REMOVED***return***REMOVED***`_${name}_${hash}_${lineNumber}`;
}

function***REMOVED***getScopedNameGenerator(generateScopedName,***REMOVED***hashPrefix)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***scopedNameGenerator***REMOVED***=***REMOVED***generateScopedName***REMOVED***||***REMOVED***generateScopedNameDefault;

***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***scopedNameGenerator***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scopedNameGenerator;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_genericNames.default)(scopedNameGenerator,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***process.cwd(),
***REMOVED******REMOVED******REMOVED******REMOVED***hashPrefix:***REMOVED***hashPrefix
***REMOVED******REMOVED***});
}

Object.defineProperty(pluginFactory,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
pluginFactory.makePlugin***REMOVED***=***REMOVED***makePlugin;

var***REMOVED***_postcss***REMOVED***=***REMOVED***_interopRequireDefault(require$$0);

var***REMOVED***_unquote***REMOVED***=***REMOVED***_interopRequireDefault(unquote$1);

var***REMOVED***_Parser***REMOVED***=***REMOVED***_interopRequireDefault(Parser$1);

var***REMOVED***_saveJSON***REMOVED***=***REMOVED***_interopRequireDefault(saveJSON$1);

var***REMOVED***_localsConvention***REMOVED***=***REMOVED***localsConvention;

var***REMOVED***_FileSystemLoader***REMOVED***=***REMOVED***_interopRequireDefault(FileSystemLoader$1);

var***REMOVED***_scoping***REMOVED***=***REMOVED***scoping;

function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

const***REMOVED***PLUGIN_NAME***REMOVED***=***REMOVED***"postcss-modules";

function***REMOVED***isGlobalModule(globalModules,***REMOVED***inputFile)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***globalModules.some(regex***REMOVED***=>***REMOVED***inputFile.match(regex));
}

function***REMOVED***getDefaultPluginsList(opts,***REMOVED***inputFile)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***globalModulesList***REMOVED***=***REMOVED***opts.globalModulePaths***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***exportGlobals***REMOVED***=***REMOVED***opts.exportGlobals***REMOVED***||***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***defaultBehaviour***REMOVED***=***REMOVED***(0,***REMOVED***_scoping.getDefaultScopeBehaviour)(opts.scopeBehaviour);
***REMOVED******REMOVED***const***REMOVED***generateScopedName***REMOVED***=***REMOVED***(0,***REMOVED***_scoping.getScopedNameGenerator)(opts.generateScopedName,***REMOVED***opts.hashPrefix);

***REMOVED******REMOVED***if***REMOVED***(globalModulesList***REMOVED***&&***REMOVED***isGlobalModule(globalModulesList,***REMOVED***inputFile))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_scoping.getDefaultPlugins)({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***behaviour:***REMOVED***_scoping.behaviours.GLOBAL,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_scoping.getDefaultPlugins)({
***REMOVED******REMOVED******REMOVED******REMOVED***behaviour:***REMOVED***defaultBehaviour,
***REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
***REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
***REMOVED******REMOVED***});
}

function***REMOVED***getLoader(opts,***REMOVED***plugins)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***root***REMOVED***=***REMOVED***typeof***REMOVED***opts.root***REMOVED***===***REMOVED***"undefined"***REMOVED***?***REMOVED***"/"***REMOVED***:***REMOVED***opts.root;
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***opts.Loader***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***new***REMOVED***opts.Loader(root,***REMOVED***plugins,***REMOVED***opts.resolve)***REMOVED***:***REMOVED***new***REMOVED***_FileSystemLoader.default(root,***REMOVED***plugins,***REMOVED***opts.resolve);
}

function***REMOVED***isOurPlugin(plugin)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***plugin.postcssPlugin***REMOVED***===***REMOVED***PLUGIN_NAME;
}

function***REMOVED***makePlugin(opts)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***PLUGIN_NAME,

***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***OnceExit(css,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result
***REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getJSON***REMOVED***=***REMOVED***opts.getJSON***REMOVED***||***REMOVED***_saveJSON.default;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inputFile***REMOVED***=***REMOVED***css.source.input.file;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pluginList***REMOVED***=***REMOVED***getDefaultPluginsList(opts,***REMOVED***inputFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resultPluginIndex***REMOVED***=***REMOVED***result.processor.plugins.findIndex(plugin***REMOVED***=>***REMOVED***isOurPlugin(plugin));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resultPluginIndex***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Plugin***REMOVED***missing***REMOVED***from***REMOVED***options.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***earlierPlugins***REMOVED***=***REMOVED***result.processor.plugins.slice(0,***REMOVED***resultPluginIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loaderPlugins***REMOVED***=***REMOVED***[...earlierPlugins,***REMOVED***...pluginList];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loader***REMOVED***=***REMOVED***getLoader(opts,***REMOVED***loaderPlugins);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fetcher***REMOVED***=***REMOVED***async***REMOVED***(file,***REMOVED***relativeTo,***REMOVED***depTrace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unquoteFile***REMOVED***=***REMOVED***(0,***REMOVED***_unquote.default)(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***loader.fetch.call(loader,***REMOVED***unquoteFile,***REMOVED***relativeTo,***REMOVED***depTrace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_Parser.default(fetcher);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***(0,***REMOVED***_postcss.default)([...pluginList,***REMOVED***parser.plugin()]).process(css,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***inputFile
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***loader.finalSource;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(out)***REMOVED***css.prepend(out);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.localsConvention)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reducer***REMOVED***=***REMOVED***(0,***REMOVED***_localsConvention.makeLocalsConventionReducer)(opts.localsConvention,***REMOVED***inputFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parser.exportTokens***REMOVED***=***REMOVED***Object.entries(parser.exportTokens).reduce(reducer,***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.messages.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"export",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin:***REMOVED***"postcss-modules",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens:***REMOVED***parser.exportTokens
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});***REMOVED***//***REMOVED***getJSON***REMOVED***may***REMOVED***return***REMOVED***a***REMOVED***promise

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getJSON(css.source.input.file,***REMOVED***parser.exportTokens,***REMOVED***result.opts.to);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED***};
}

var***REMOVED***_fs***REMOVED***=***REMOVED***require$$0__default;

var***REMOVED***_fs2***REMOVED***=***REMOVED***fs;

var***REMOVED***_pluginFactory***REMOVED***=***REMOVED***pluginFactory;

(0,***REMOVED***_fs2.setFileSystem)({
***REMOVED******REMOVED***readFile:***REMOVED***_fs.readFile,
***REMOVED******REMOVED***writeFile:***REMOVED***_fs.writeFile
});

build.exports***REMOVED***=***REMOVED***(opts***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***(0,***REMOVED***_pluginFactory.makePlugin)(opts);

var***REMOVED***postcss***REMOVED***=***REMOVED***build.exports.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***buildExports***REMOVED***=***REMOVED***build.exports;
var***REMOVED***index***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(buildExports);

var***REMOVED***index$1***REMOVED***=***REMOVED***/*#__PURE__*/_mergeNamespaces({
***REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED***default:***REMOVED***index,
***REMOVED******REMOVED***postcss:***REMOVED***postcss
},***REMOVED***[buildExports]);

export***REMOVED***{***REMOVED***index$1***REMOVED***as***REMOVED***i***REMOVED***};
