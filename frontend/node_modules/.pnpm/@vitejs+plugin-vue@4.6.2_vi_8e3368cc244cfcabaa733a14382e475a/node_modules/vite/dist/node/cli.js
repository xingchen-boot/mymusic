import***REMOVED***path***REMOVED***from***REMOVED***'node:path';
import***REMOVED***fs***REMOVED***from***REMOVED***'node:fs';
import***REMOVED***{***REMOVED***performance***REMOVED***}***REMOVED***from***REMOVED***'node:perf_hooks';
import***REMOVED***{***REMOVED***EventEmitter***REMOVED***}***REMOVED***from***REMOVED***'events';
import***REMOVED***{***REMOVED***D***REMOVED***as***REMOVED***colors,***REMOVED***E***REMOVED***as***REMOVED***bindShortcuts,***REMOVED***x***REMOVED***as***REMOVED***createLogger,***REMOVED***h***REMOVED***as***REMOVED***resolveConfig***REMOVED***}***REMOVED***from***REMOVED***'./chunks/dep-827b23df.js';
import***REMOVED***{***REMOVED***VERSION***REMOVED***}***REMOVED***from***REMOVED***'./constants.js';
import***REMOVED***'node:fs/promises';
import***REMOVED***'node:url';
import***REMOVED***'node:util';
import***REMOVED***'node:module';
import***REMOVED***'node:crypto';
import***REMOVED***'tty';
import***REMOVED***'esbuild';
import***REMOVED***'path';
import***REMOVED***'fs';
import***REMOVED***'assert';
import***REMOVED***'util';
import***REMOVED***'net';
import***REMOVED***'url';
import***REMOVED***'http';
import***REMOVED***'stream';
import***REMOVED***'os';
import***REMOVED***'child_process';
import***REMOVED***'node:os';
import***REMOVED***'node:child_process';
import***REMOVED***'node:dns';
import***REMOVED***'crypto';
import***REMOVED***'node:buffer';
import***REMOVED***'module';
import***REMOVED***'node:assert';
import***REMOVED***'node:process';
import***REMOVED***'node:v8';
import***REMOVED***'rollup';
import***REMOVED***'worker_threads';
import***REMOVED***'node:http';
import***REMOVED***'node:https';
import***REMOVED***'zlib';
import***REMOVED***'buffer';
import***REMOVED***'https';
import***REMOVED***'tls';
import***REMOVED***'node:net';
import***REMOVED***'querystring';
import***REMOVED***'node:readline';
import***REMOVED***'node:zlib';

function***REMOVED***toArr(any)***REMOVED***{
	return***REMOVED***any***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***Array.isArray(any)***REMOVED***?***REMOVED***any***REMOVED***:***REMOVED***[any];
}

function***REMOVED***toVal(out,***REMOVED***key,***REMOVED***val,***REMOVED***opts)***REMOVED***{
	var***REMOVED***x,***REMOVED***old=out[key],***REMOVED***nxt=(
		!!~opts.string.indexOf(key)***REMOVED***?***REMOVED***(val***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***val***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***String(val))
		:***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***'boolean'***REMOVED***?***REMOVED***val
		:***REMOVED***!!~opts.boolean.indexOf(key)***REMOVED***?***REMOVED***(val***REMOVED***===***REMOVED***'false'***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***val***REMOVED***===***REMOVED***'true'***REMOVED***||***REMOVED***(out._.push((x***REMOVED***=***REMOVED***+val,x***REMOVED*******REMOVED***0***REMOVED***===***REMOVED***0)***REMOVED***?***REMOVED***x***REMOVED***:***REMOVED***val),!!val))
		:***REMOVED***(x***REMOVED***=***REMOVED***+val,x***REMOVED*******REMOVED***0***REMOVED***===***REMOVED***0)***REMOVED***?***REMOVED***x***REMOVED***:***REMOVED***val
	);
	out[key]***REMOVED***=***REMOVED***old***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***nxt***REMOVED***:***REMOVED***(Array.isArray(old)***REMOVED***?***REMOVED***old.concat(nxt)***REMOVED***:***REMOVED***[old,***REMOVED***nxt]);
}

function***REMOVED***mri2***REMOVED***(args,***REMOVED***opts)***REMOVED***{
	args***REMOVED***=***REMOVED***args***REMOVED***||***REMOVED***[];
	opts***REMOVED***=***REMOVED***opts***REMOVED***||***REMOVED***{};

	var***REMOVED***k,***REMOVED***arr,***REMOVED***arg,***REMOVED***name,***REMOVED***val,***REMOVED***out={***REMOVED***_:[]***REMOVED***};
	var***REMOVED***i=0,***REMOVED***j=0,***REMOVED***idx=0,***REMOVED***len=args.length;

	const***REMOVED***alibi***REMOVED***=***REMOVED***opts.alias***REMOVED***!==***REMOVED***void***REMOVED***0;
	const***REMOVED***strict***REMOVED***=***REMOVED***opts.unknown***REMOVED***!==***REMOVED***void***REMOVED***0;
	const***REMOVED***defaults***REMOVED***=***REMOVED***opts.default***REMOVED***!==***REMOVED***void***REMOVED***0;

	opts.alias***REMOVED***=***REMOVED***opts.alias***REMOVED***||***REMOVED***{};
	opts.string***REMOVED***=***REMOVED***toArr(opts.string);
	opts.boolean***REMOVED***=***REMOVED***toArr(opts.boolean);

	if***REMOVED***(alibi)***REMOVED***{
		for***REMOVED***(k***REMOVED***in***REMOVED***opts.alias)***REMOVED***{
			arr***REMOVED***=***REMOVED***opts.alias[k]***REMOVED***=***REMOVED***toArr(opts.alias[k]);
			for***REMOVED***(i=0;***REMOVED***i***REMOVED***<***REMOVED***arr.length;***REMOVED***i++)***REMOVED***{
				(opts.alias[arr[i]]***REMOVED***=***REMOVED***arr.concat(k)).splice(i,***REMOVED***1);
			}
		}
	}

	for***REMOVED***(i=opts.boolean.length;***REMOVED***i--***REMOVED***>***REMOVED***0;)***REMOVED***{
		arr***REMOVED***=***REMOVED***opts.alias[opts.boolean[i]]***REMOVED***||***REMOVED***[];
		for***REMOVED***(j=arr.length;***REMOVED***j--***REMOVED***>***REMOVED***0;)***REMOVED***opts.boolean.push(arr[j]);
	}

	for***REMOVED***(i=opts.string.length;***REMOVED***i--***REMOVED***>***REMOVED***0;)***REMOVED***{
		arr***REMOVED***=***REMOVED***opts.alias[opts.string[i]]***REMOVED***||***REMOVED***[];
		for***REMOVED***(j=arr.length;***REMOVED***j--***REMOVED***>***REMOVED***0;)***REMOVED***opts.string.push(arr[j]);
	}

	if***REMOVED***(defaults)***REMOVED***{
		for***REMOVED***(k***REMOVED***in***REMOVED***opts.default)***REMOVED***{
			name***REMOVED***=***REMOVED***typeof***REMOVED***opts.default[k];
			arr***REMOVED***=***REMOVED***opts.alias[k]***REMOVED***=***REMOVED***opts.alias[k]***REMOVED***||***REMOVED***[];
			if***REMOVED***(opts[name]***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
				opts[name].push(k);
				for***REMOVED***(i=0;***REMOVED***i***REMOVED***<***REMOVED***arr.length;***REMOVED***i++)***REMOVED***{
					opts[name].push(arr[i]);
				}
			}
		}
	}

	const***REMOVED***keys***REMOVED***=***REMOVED***strict***REMOVED***?***REMOVED***Object.keys(opts.alias)***REMOVED***:***REMOVED***[];

	for***REMOVED***(i=0;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
		arg***REMOVED***=***REMOVED***args[i];

		if***REMOVED***(arg***REMOVED***===***REMOVED***'--')***REMOVED***{
			out._***REMOVED***=***REMOVED***out._.concat(args.slice(++i));
			break;
		}

		for***REMOVED***(j=0;***REMOVED***j***REMOVED***<***REMOVED***arg.length;***REMOVED***j++)***REMOVED***{
			if***REMOVED***(arg.charCodeAt(j)***REMOVED***!==***REMOVED***45)***REMOVED***break;***REMOVED***//***REMOVED***"-"
		}

		if***REMOVED***(j***REMOVED***===***REMOVED***0)***REMOVED***{
			out._.push(arg);
		}***REMOVED***else***REMOVED***if***REMOVED***(arg.substring(j,***REMOVED***j***REMOVED***+***REMOVED***3)***REMOVED***===***REMOVED***'no-')***REMOVED***{
			name***REMOVED***=***REMOVED***arg.substring(j***REMOVED***+***REMOVED***3);
			if***REMOVED***(strict***REMOVED***&&***REMOVED***!~keys.indexOf(name))***REMOVED***{
				return***REMOVED***opts.unknown(arg);
			}
			out[name]***REMOVED***=***REMOVED***false;
		}***REMOVED***else***REMOVED***{
			for***REMOVED***(idx=j+1;***REMOVED***idx***REMOVED***<***REMOVED***arg.length;***REMOVED***idx++)***REMOVED***{
				if***REMOVED***(arg.charCodeAt(idx)***REMOVED***===***REMOVED***61)***REMOVED***break;***REMOVED***//***REMOVED***"="
			}

			name***REMOVED***=***REMOVED***arg.substring(j,***REMOVED***idx);
			val***REMOVED***=***REMOVED***arg.substring(++idx)***REMOVED***||***REMOVED***(i+1***REMOVED***===***REMOVED***len***REMOVED***||***REMOVED***(''+args[i+1]).charCodeAt(0)***REMOVED***===***REMOVED***45***REMOVED***||***REMOVED***args[++i]);
			arr***REMOVED***=***REMOVED***(j***REMOVED***===***REMOVED***2***REMOVED***?***REMOVED***[name]***REMOVED***:***REMOVED***name);

			for***REMOVED***(idx=0;***REMOVED***idx***REMOVED***<***REMOVED***arr.length;***REMOVED***idx++)***REMOVED***{
				name***REMOVED***=***REMOVED***arr[idx];
				if***REMOVED***(strict***REMOVED***&&***REMOVED***!~keys.indexOf(name))***REMOVED***return***REMOVED***opts.unknown('-'.repeat(j)***REMOVED***+***REMOVED***name);
				toVal(out,***REMOVED***name,***REMOVED***(idx***REMOVED***+***REMOVED***1***REMOVED***<***REMOVED***arr.length)***REMOVED***||***REMOVED***val,***REMOVED***opts);
			}
		}
	}

	if***REMOVED***(defaults)***REMOVED***{
		for***REMOVED***(k***REMOVED***in***REMOVED***opts.default)***REMOVED***{
			if***REMOVED***(out[k]***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
				out[k]***REMOVED***=***REMOVED***opts.default[k];
			}
		}
	}

	if***REMOVED***(alibi)***REMOVED***{
		for***REMOVED***(k***REMOVED***in***REMOVED***out)***REMOVED***{
			arr***REMOVED***=***REMOVED***opts.alias[k]***REMOVED***||***REMOVED***[];
			while***REMOVED***(arr.length***REMOVED***>***REMOVED***0)***REMOVED***{
				out[arr.shift()]***REMOVED***=***REMOVED***out[k];
			}
		}
	}

	return***REMOVED***out;
}

const***REMOVED***removeBrackets***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***v.replace(/[<[].+/,***REMOVED***"").trim();
const***REMOVED***findAllBrackets***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ANGLED_BRACKET_RE_GLOBAL***REMOVED***=***REMOVED***/<([^>]+)>/g;
***REMOVED******REMOVED***const***REMOVED***SQUARE_BRACKET_RE_GLOBAL***REMOVED***=***REMOVED***/\[([^\]]+)\]/g;
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***parse***REMOVED***=***REMOVED***(match)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***variadic***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***match[1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value.startsWith("..."))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value.slice(3);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variadic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***required:***REMOVED***match[0].startsWith("<"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***variadic
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};
***REMOVED******REMOVED***let***REMOVED***angledMatch;
***REMOVED******REMOVED***while***REMOVED***(angledMatch***REMOVED***=***REMOVED***ANGLED_BRACKET_RE_GLOBAL.exec(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res.push(parse(angledMatch));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***squareMatch;
***REMOVED******REMOVED***while***REMOVED***(squareMatch***REMOVED***=***REMOVED***SQUARE_BRACKET_RE_GLOBAL.exec(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res.push(parse(squareMatch));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
};
const***REMOVED***getMriOptions***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***{alias:***REMOVED***{},***REMOVED***boolean:***REMOVED***[]};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[index,***REMOVED***option]***REMOVED***of***REMOVED***options.entries())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option.names.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.alias[option.names[0]]***REMOVED***=***REMOVED***option.names.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option.isBoolean)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option.negated)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasStringTypeOption***REMOVED***=***REMOVED***options.some((o,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***!==***REMOVED***index***REMOVED***&&***REMOVED***o.names.some((name)***REMOVED***=>***REMOVED***option.names.includes(name))***REMOVED***&&***REMOVED***typeof***REMOVED***o.required***REMOVED***===***REMOVED***"boolean";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasStringTypeOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.boolean.push(option.names[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.boolean.push(option.names[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
};
const***REMOVED***findLongest***REMOVED***=***REMOVED***(arr)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***arr.sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a.length***REMOVED***>***REMOVED***b.length***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***})[0];
};
const***REMOVED***padRight***REMOVED***=***REMOVED***(str,***REMOVED***length)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str.length***REMOVED***>=***REMOVED***length***REMOVED***?***REMOVED***str***REMOVED***:***REMOVED***`${str}${"***REMOVED***".repeat(length***REMOVED***-***REMOVED***str.length)}`;
};
const***REMOVED***camelcase***REMOVED***=***REMOVED***(input)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***input.replace(/([a-z])-([a-z])/g,***REMOVED***(_,***REMOVED***p1,***REMOVED***p2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p1***REMOVED***+***REMOVED***p2.toUpperCase();
***REMOVED******REMOVED***});
};
const***REMOVED***setDotProp***REMOVED***=***REMOVED***(obj,***REMOVED***keys,***REMOVED***val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***length***REMOVED***=***REMOVED***keys.length;
***REMOVED******REMOVED***let***REMOVED***t***REMOVED***=***REMOVED***obj;
***REMOVED******REMOVED***let***REMOVED***x;
***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x***REMOVED***=***REMOVED***t[keys[i]];
***REMOVED******REMOVED******REMOVED******REMOVED***t***REMOVED***=***REMOVED***t[keys[i]]***REMOVED***=***REMOVED***i***REMOVED***===***REMOVED***length***REMOVED***-***REMOVED***1***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***x***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***x***REMOVED***:***REMOVED***!!~keys[i***REMOVED***+***REMOVED***1].indexOf(".")***REMOVED***||***REMOVED***!(+keys[i***REMOVED***+***REMOVED***1]***REMOVED***>***REMOVED***-1)***REMOVED***?***REMOVED***{}***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED***}
};
const***REMOVED***setByType***REMOVED***=***REMOVED***(obj,***REMOVED***transforms)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(transforms))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***transform***REMOVED***=***REMOVED***transforms[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transform.shouldTransform)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***obj[key]***REMOVED***=***REMOVED***Array.prototype.concat.call([],***REMOVED***obj[key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***transform.transformFunction***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***obj[key]***REMOVED***=***REMOVED***obj[key].map(transform.transformFunction);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
const***REMOVED***getFileName***REMOVED***=***REMOVED***(input)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***/([^\\\/]+)$/.exec(input);
***REMOVED******REMOVED***return***REMOVED***m***REMOVED***?***REMOVED***m[1]***REMOVED***:***REMOVED***"";
};
const***REMOVED***camelcaseOptionName***REMOVED***=***REMOVED***(name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***name.split(".").map((v,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***camelcase(v)***REMOVED***:***REMOVED***v;
***REMOVED******REMOVED***}).join(".");
};
class***REMOVED***CACError***REMOVED***extends***REMOVED***Error***REMOVED***{
***REMOVED******REMOVED***constructor(message)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(message);
***REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***this.constructor.name;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***Error.captureStackTrace***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Error.captureStackTrace(this,***REMOVED***this.constructor);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.stack***REMOVED***=***REMOVED***new***REMOVED***Error(message).stack;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

class***REMOVED***Option***REMOVED***{
***REMOVED******REMOVED***constructor(rawName,***REMOVED***description,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.rawName***REMOVED***=***REMOVED***rawName;
***REMOVED******REMOVED******REMOVED******REMOVED***this.description***REMOVED***=***REMOVED***description;
***REMOVED******REMOVED******REMOVED******REMOVED***this.config***REMOVED***=***REMOVED***Object.assign({},***REMOVED***config);
***REMOVED******REMOVED******REMOVED******REMOVED***rawName***REMOVED***=***REMOVED***rawName.replace(/\.\*/g,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***this.negated***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.names***REMOVED***=***REMOVED***removeBrackets(rawName).split(",").map((v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name***REMOVED***=***REMOVED***v.trim().replace(/^-{1,2}/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name.startsWith("no-"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.negated***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***name.replace(/^no-/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***camelcaseOptionName(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a.length***REMOVED***>***REMOVED***b.length***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***this.names[this.names.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.negated***REMOVED***&&***REMOVED***this.config.default***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.config.default***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawName.includes("<"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.required***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(rawName.includes("["))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.required***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isBoolean***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***processArgs***REMOVED***=***REMOVED***process.argv;
const***REMOVED***platformInfo***REMOVED***=***REMOVED***`${process.platform}-${process.arch}***REMOVED***node-${process.version}`;

class***REMOVED***Command***REMOVED***{
***REMOVED******REMOVED***constructor(rawName,***REMOVED***description,***REMOVED***config***REMOVED***=***REMOVED***{},***REMOVED***cli)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.rawName***REMOVED***=***REMOVED***rawName;
***REMOVED******REMOVED******REMOVED******REMOVED***this.description***REMOVED***=***REMOVED***description;
***REMOVED******REMOVED******REMOVED******REMOVED***this.config***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED******REMOVED******REMOVED***this.cli***REMOVED***=***REMOVED***cli;
***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.aliasNames***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***removeBrackets(rawName);
***REMOVED******REMOVED******REMOVED******REMOVED***this.args***REMOVED***=***REMOVED***findAllBrackets(rawName);
***REMOVED******REMOVED******REMOVED******REMOVED***this.examples***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***usage(text)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.usageText***REMOVED***=***REMOVED***text;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***allowUnknownOptions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.config.allowUnknownOptions***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ignoreOptionDefaultValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.config.ignoreOptionDefaultValue***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***version(version,***REMOVED***customFlags***REMOVED***=***REMOVED***"-v,***REMOVED***--version")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.versionNumber***REMOVED***=***REMOVED***version;
***REMOVED******REMOVED******REMOVED******REMOVED***this.option(customFlags,***REMOVED***"Display***REMOVED***version***REMOVED***number");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***example(example)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.examples.push(example);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***option(rawName,***REMOVED***description,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***option***REMOVED***=***REMOVED***new***REMOVED***Option(rawName,***REMOVED***description,***REMOVED***config);
***REMOVED******REMOVED******REMOVED******REMOVED***this.options.push(option);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***alias(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.aliasNames.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***action(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.commandAction***REMOVED***=***REMOVED***callback;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***isMatched(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.name***REMOVED***===***REMOVED***name***REMOVED***||***REMOVED***this.aliasNames.includes(name);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***isDefaultCommand()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.name***REMOVED***===***REMOVED***""***REMOVED***||***REMOVED***this.aliasNames.includes("!");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***isGlobalCommand()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this***REMOVED***instanceof***REMOVED***GlobalCommand;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***hasOption(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***name.split(".")[0];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.find((option)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***option.names.includes(name);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***outputHelp()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{name,***REMOVED***commands}***REMOVED***=***REMOVED***this.cli;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***versionNumber,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***globalOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***helpCallback
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***this.cli.globalCommand;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sections***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***`${name}${versionNumber***REMOVED***?***REMOVED***`/${versionNumber}`***REMOVED***:***REMOVED***""}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***sections.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Usage",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***`***REMOVED******REMOVED***$***REMOVED***${name}***REMOVED***${this.usageText***REMOVED***||***REMOVED***this.rawName}`
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***showCommands***REMOVED***=***REMOVED***(this.isGlobalCommand***REMOVED***||***REMOVED***this.isDefaultCommand)***REMOVED***&&***REMOVED***commands.length***REMOVED***>***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(showCommands)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***longestCommandName***REMOVED***=***REMOVED***findLongest(commands.map((command)***REMOVED***=>***REMOVED***command.rawName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sections.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Commands",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***commands.map((command)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`***REMOVED******REMOVED***${padRight(command.rawName,***REMOVED***longestCommandName.length)}***REMOVED******REMOVED***${command.description}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).join("\n")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sections.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***`For***REMOVED***more***REMOVED***info,***REMOVED***run***REMOVED***any***REMOVED***command***REMOVED***with***REMOVED***the***REMOVED***\`--help\`***REMOVED***flag`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***commands.map((command)***REMOVED***=>***REMOVED***`***REMOVED******REMOVED***$***REMOVED***${name}${command.name***REMOVED***===***REMOVED***""***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***`***REMOVED***${command.name}`}***REMOVED***--help`).join("\n")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***options***REMOVED***=***REMOVED***this.isGlobalCommand***REMOVED***?***REMOVED***globalOptions***REMOVED***:***REMOVED***[...this.options,***REMOVED***...globalOptions***REMOVED***||***REMOVED***[]];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.isGlobalCommand***REMOVED***&&***REMOVED***!this.isDefaultCommand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***options.filter((option)***REMOVED***=>***REMOVED***option.name***REMOVED***!==***REMOVED***"version");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***longestOptionName***REMOVED***=***REMOVED***findLongest(options.map((option)***REMOVED***=>***REMOVED***option.rawName));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sections.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Options",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***options.map((option)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`***REMOVED******REMOVED***${padRight(option.rawName,***REMOVED***longestOptionName.length)}***REMOVED******REMOVED***${option.description}***REMOVED***${option.config.default***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***`(default:***REMOVED***${option.config.default})`}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).join("\n")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.examples.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sections.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***title:***REMOVED***"Examples",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***this.examples.map((example)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***example***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***example(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***example;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).join("\n")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(helpCallback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sections***REMOVED***=***REMOVED***helpCallback(sections)***REMOVED***||***REMOVED***sections;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***console.log(sections.map((section)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***section.title***REMOVED***?***REMOVED***`${section.title}:
${section.body}`***REMOVED***:***REMOVED***section.body;
***REMOVED******REMOVED******REMOVED******REMOVED***}).join("\n\n"));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***outputVersion()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{name}***REMOVED***=***REMOVED***this.cli;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{versionNumber}***REMOVED***=***REMOVED***this.cli.globalCommand;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(versionNumber)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log(`${name}/${versionNumber}***REMOVED***${platformInfo}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkRequiredArgs()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minimalArgsCount***REMOVED***=***REMOVED***this.args.filter((arg)***REMOVED***=>***REMOVED***arg.required).length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.cli.args.length***REMOVED***<***REMOVED***minimalArgsCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***CACError(`missing***REMOVED***required***REMOVED***args***REMOVED***for***REMOVED***command***REMOVED***\`${this.rawName}\``);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkUnknownOptions()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{options,***REMOVED***globalCommand}***REMOVED***=***REMOVED***this.cli;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.config.allowUnknownOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***Object.keys(options))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***"--"***REMOVED***&&***REMOVED***!this.hasOption(name)***REMOVED***&&***REMOVED***!globalCommand.hasOption(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***CACError(`Unknown***REMOVED***option***REMOVED***\`${name.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***`--${name}`***REMOVED***:***REMOVED***`-${name}`}\``);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkOptionValue()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{options:***REMOVED***parsedOptions,***REMOVED***globalCommand}***REMOVED***=***REMOVED***this.cli;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***[...globalCommand.options,***REMOVED***...this.options];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***option***REMOVED***of***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***parsedOptions[option.name.split(".")[0]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(option.required)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasNegated***REMOVED***=***REMOVED***options.some((o)***REMOVED***=>***REMOVED***o.negated***REMOVED***&&***REMOVED***o.names.includes(option.name));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***false***REMOVED***&&***REMOVED***!hasNegated)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***CACError(`option***REMOVED***\`${option.rawName}\`***REMOVED***value***REMOVED***is***REMOVED***missing`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
class***REMOVED***GlobalCommand***REMOVED***extends***REMOVED***Command***REMOVED***{
***REMOVED******REMOVED***constructor(cli)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super("@@global@@",***REMOVED***"",***REMOVED***{},***REMOVED***cli);
***REMOVED******REMOVED***}
}

var***REMOVED***__assign***REMOVED***=***REMOVED***Object.assign;
class***REMOVED***CAC***REMOVED***extends***REMOVED***EventEmitter***REMOVED***{
***REMOVED******REMOVED***constructor(name***REMOVED***=***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super();
***REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***this.commands***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.rawArgs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.args***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand***REMOVED***=***REMOVED***new***REMOVED***GlobalCommand(this);
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.usage("<command>***REMOVED***[options]");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***usage(text)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.usage(text);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***command(rawName,***REMOVED***description,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***command***REMOVED***=***REMOVED***new***REMOVED***Command(rawName,***REMOVED***description***REMOVED***||***REMOVED***"",***REMOVED***config,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED***command.globalCommand***REMOVED***=***REMOVED***this.globalCommand;
***REMOVED******REMOVED******REMOVED******REMOVED***this.commands.push(command);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***command;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***option(rawName,***REMOVED***description,***REMOVED***config)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.option(rawName,***REMOVED***description,***REMOVED***config);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***help(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.option("-h,***REMOVED***--help",***REMOVED***"Display***REMOVED***this***REMOVED***message");
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.helpCallback***REMOVED***=***REMOVED***callback;
***REMOVED******REMOVED******REMOVED******REMOVED***this.showHelpOnExit***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***version(version,***REMOVED***customFlags***REMOVED***=***REMOVED***"-v,***REMOVED***--version")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.version(version,***REMOVED***customFlags);
***REMOVED******REMOVED******REMOVED******REMOVED***this.showVersionOnExit***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***example(example)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.example(example);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***outputHelp()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.matchedCommand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.matchedCommand.outputHelp();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.outputHelp();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***outputVersion()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalCommand.outputVersion();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setParsedInfo({args,***REMOVED***options},***REMOVED***matchedCommand,***REMOVED***matchedCommandName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.args***REMOVED***=***REMOVED***args;
***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matchedCommand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.matchedCommand***REMOVED***=***REMOVED***matchedCommand;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matchedCommandName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.matchedCommandName***REMOVED***=***REMOVED***matchedCommandName;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***unsetMatchedCommand()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.matchedCommand***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.matchedCommandName***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***parse(argv***REMOVED***=***REMOVED***processArgs,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***run***REMOVED***=***REMOVED***true
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.rawArgs***REMOVED***=***REMOVED***argv;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***argv[1]***REMOVED***?***REMOVED***getFileName(argv[1])***REMOVED***:***REMOVED***"cli";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shouldParse***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***command***REMOVED***of***REMOVED***this.commands)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsed***REMOVED***=***REMOVED***this.mri(argv.slice(2),***REMOVED***command);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commandName***REMOVED***=***REMOVED***parsed.args[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(command.isMatched(commandName))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParse***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsedInfo***REMOVED***=***REMOVED***__assign(__assign({},***REMOVED***parsed),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args:***REMOVED***parsed.args.slice(1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setParsedInfo(parsedInfo,***REMOVED***command,***REMOVED***commandName);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emit(`command:${commandName}`,***REMOVED***command);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***command***REMOVED***of***REMOVED***this.commands)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(command.name***REMOVED***===***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParse***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsed***REMOVED***=***REMOVED***this.mri(argv.slice(2),***REMOVED***command);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setParsedInfo(parsed,***REMOVED***command);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emit(`command:!`,***REMOVED***command);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldParse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsed***REMOVED***=***REMOVED***this.mri(argv.slice(2));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setParsedInfo(parsed);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.help***REMOVED***&&***REMOVED***this.showHelpOnExit)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputHelp();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unsetMatchedCommand();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.version***REMOVED***&&***REMOVED***this.showVersionOnExit***REMOVED***&&***REMOVED***this.matchedCommandName***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.outputVersion();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unsetMatchedCommand();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsedArgv***REMOVED***=***REMOVED***{args:***REMOVED***this.args,***REMOVED***options:***REMOVED***this.options};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(run)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.runMatchedCommand();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.matchedCommand***REMOVED***&&***REMOVED***this.args[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.emit("command:*");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parsedArgv;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***mri(argv,***REMOVED***command)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cliOptions***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...this.globalCommand.options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...command***REMOVED***?***REMOVED***command.options***REMOVED***:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mriOptions***REMOVED***=***REMOVED***getMriOptions(cliOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***argsAfterDoubleDashes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***doubleDashesIndex***REMOVED***=***REMOVED***argv.indexOf("--");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doubleDashesIndex***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argsAfterDoubleDashes***REMOVED***=***REMOVED***argv.slice(doubleDashesIndex***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***argv***REMOVED***=***REMOVED***argv.slice(0,***REMOVED***doubleDashesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsed***REMOVED***=***REMOVED***mri2(argv,***REMOVED***mriOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***parsed***REMOVED***=***REMOVED***Object.keys(parsed).reduce((res,***REMOVED***name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***__assign(__assign({},***REMOVED***res),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[camelcaseOptionName(name)]:***REMOVED***parsed[name]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{_:***REMOVED***[]});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***args***REMOVED***=***REMOVED***parsed._;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"--":***REMOVED***argsAfterDoubleDashes
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ignoreDefault***REMOVED***=***REMOVED***command***REMOVED***&&***REMOVED***command.config.ignoreOptionDefaultValue***REMOVED***?***REMOVED***command.config.ignoreOptionDefaultValue***REMOVED***:***REMOVED***this.globalCommand.config.ignoreOptionDefaultValue;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***transforms***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***cliOption***REMOVED***of***REMOVED***cliOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ignoreDefault***REMOVED***&&***REMOVED***cliOption.config.default***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***of***REMOVED***cliOption.names)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options[name]***REMOVED***=***REMOVED***cliOption.config.default;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(cliOption.config.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transforms[cliOption.name]***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transforms[cliOption.name]***REMOVED***=***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transforms[cliOption.name]["shouldTransform"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transforms[cliOption.name]["transformFunction"]***REMOVED***=***REMOVED***cliOption.config.type[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(parsed))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"_")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***key.split(".");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setDotProp(options,***REMOVED***keys,***REMOVED***parsed[key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setByType(options,***REMOVED***transforms);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***runMatchedCommand()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{args,***REMOVED***options,***REMOVED***matchedCommand:***REMOVED***command}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!command***REMOVED***||***REMOVED***!command.commandAction)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***command.checkUnknownOptions();
***REMOVED******REMOVED******REMOVED******REMOVED***command.checkOptionValue();
***REMOVED******REMOVED******REMOVED******REMOVED***command.checkRequiredArgs();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***actionArgs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***command.args.forEach((arg,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arg.variadic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***actionArgs.push(args.slice(index));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***actionArgs.push(args[index]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***actionArgs.push(options);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***command.commandAction.apply(this,***REMOVED***actionArgs);
***REMOVED******REMOVED***}
}

const***REMOVED***cac***REMOVED***=***REMOVED***(name***REMOVED***=***REMOVED***"")***REMOVED***=>***REMOVED***new***REMOVED***CAC(name);

const***REMOVED***cli***REMOVED***=***REMOVED***cac('vite');
let***REMOVED***profileSession***REMOVED***=***REMOVED***global.__vite_profile_session;
let***REMOVED***profileCount***REMOVED***=***REMOVED***0;
const***REMOVED***stopProfiler***REMOVED***=***REMOVED***(log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!profileSession)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((res,***REMOVED***rej)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession.post('Profiler.stop',***REMOVED***(err,***REMOVED***{***REMOVED***profile***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Write***REMOVED***profile***REMOVED***to***REMOVED***disk,***REMOVED***upload,***REMOVED***etc.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***outPath***REMOVED***=***REMOVED***path.resolve(`./vite-profile-${profileCount++}.cpuprofile`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fs.writeFileSync(outPath,***REMOVED***JSON.stringify(profile));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***log(colors.yellow(`CPU***REMOVED***profile***REMOVED***written***REMOVED***to***REMOVED***${colors.white(colors.dim(outPath))}`));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rej(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
};
const***REMOVED***filterDuplicateOptions***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***value]***REMOVED***of***REMOVED***Object.entries(options))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options[key]***REMOVED***=***REMOVED***value[value.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
};
/**
***REMOVED*******REMOVED***removing***REMOVED***global***REMOVED***flags***REMOVED***before***REMOVED***passing***REMOVED***as***REMOVED***command***REMOVED***specific***REMOVED***sub-configs
***REMOVED****/
function***REMOVED***cleanOptions(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{***REMOVED***...options***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret['--'];
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.c;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.config;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.base;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.l;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.logLevel;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.clearScreen;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.d;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.debug;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.f;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.filter;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.m;
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***ret.mode;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***convert***REMOVED***the***REMOVED***sourcemap***REMOVED***option***REMOVED***to***REMOVED***a***REMOVED***boolean***REMOVED***if***REMOVED***necessary
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***('sourcemap'***REMOVED***in***REMOVED***ret)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourcemap***REMOVED***=***REMOVED***ret.sourcemap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.sourcemap***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcemap***REMOVED***===***REMOVED***'true'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***sourcemap***REMOVED***===***REMOVED***'false'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***ret.sourcemap;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
}
/**
***REMOVED*******REMOVED***host***REMOVED***may***REMOVED***be***REMOVED***a***REMOVED***number***REMOVED***(like***REMOVED***0),***REMOVED***should***REMOVED***convert***REMOVED***to***REMOVED***string
***REMOVED****/
const***REMOVED***convertHost***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***v***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(v);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
};
/**
***REMOVED*******REMOVED***base***REMOVED***may***REMOVED***be***REMOVED***a***REMOVED***number***REMOVED***(like***REMOVED***0),***REMOVED***should***REMOVED***convert***REMOVED***to***REMOVED***empty***REMOVED***string
***REMOVED****/
const***REMOVED***convertBase***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
};
cli
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-c,***REMOVED***--config***REMOVED***<file>',***REMOVED***`[string]***REMOVED***use***REMOVED***specified***REMOVED***config***REMOVED***file`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--base***REMOVED***<path>',***REMOVED***`[string]***REMOVED***public***REMOVED***base***REMOVED***path***REMOVED***(default:***REMOVED***/)`,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***[convertBase],
})
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-l,***REMOVED***--logLevel***REMOVED***<level>',***REMOVED***`[string]***REMOVED***info***REMOVED***|***REMOVED***warn***REMOVED***|***REMOVED***error***REMOVED***|***REMOVED***silent`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--clearScreen',***REMOVED***`[boolean]***REMOVED***allow/disable***REMOVED***clear***REMOVED***screen***REMOVED***when***REMOVED***logging`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-d,***REMOVED***--debug***REMOVED***[feat]',***REMOVED***`[string***REMOVED***|***REMOVED***boolean]***REMOVED***show***REMOVED***debug***REMOVED***logs`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-f,***REMOVED***--filter***REMOVED***<filter>',***REMOVED***`[string]***REMOVED***filter***REMOVED***debug***REMOVED***logs`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-m,***REMOVED***--mode***REMOVED***<mode>',***REMOVED***`[string]***REMOVED***set***REMOVED***env***REMOVED***mode`);
//***REMOVED***dev
cli
***REMOVED******REMOVED******REMOVED******REMOVED***.command('[root]',***REMOVED***'start***REMOVED***dev***REMOVED***server')***REMOVED***//***REMOVED***default***REMOVED***command
***REMOVED******REMOVED******REMOVED******REMOVED***.alias('serve')***REMOVED***//***REMOVED***the***REMOVED***command***REMOVED***is***REMOVED***called***REMOVED***'serve'***REMOVED***in***REMOVED***Vite's***REMOVED***API
***REMOVED******REMOVED******REMOVED******REMOVED***.alias('dev')***REMOVED***//***REMOVED***alias***REMOVED***to***REMOVED***align***REMOVED***with***REMOVED***the***REMOVED***script***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--host***REMOVED***[host]',***REMOVED***`[string]***REMOVED***specify***REMOVED***hostname`,***REMOVED***{***REMOVED***type:***REMOVED***[convertHost]***REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--port***REMOVED***<port>',***REMOVED***`[number]***REMOVED***specify***REMOVED***port`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--https',***REMOVED***`[boolean]***REMOVED***use***REMOVED***TLS***REMOVED***+***REMOVED***HTTP/2`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--open***REMOVED***[path]',***REMOVED***`[boolean***REMOVED***|***REMOVED***string]***REMOVED***open***REMOVED***browser***REMOVED***on***REMOVED***startup`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--cors',***REMOVED***`[boolean]***REMOVED***enable***REMOVED***CORS`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--strictPort',***REMOVED***`[boolean]***REMOVED***exit***REMOVED***if***REMOVED***specified***REMOVED***port***REMOVED***is***REMOVED***already***REMOVED***in***REMOVED***use`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--force',***REMOVED***`[boolean]***REMOVED***force***REMOVED***the***REMOVED***optimizer***REMOVED***to***REMOVED***ignore***REMOVED***the***REMOVED***cache***REMOVED***and***REMOVED***re-bundle`)
***REMOVED******REMOVED******REMOVED******REMOVED***.action(async***REMOVED***(root,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filterDuplicateOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***output***REMOVED***structure***REMOVED***is***REMOVED***preserved***REMOVED***even***REMOVED***after***REMOVED***bundling***REMOVED***so***REMOVED***require()
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***is***REMOVED***ok***REMOVED***here
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***createServer***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('./chunks/dep-827b23df.js').then(function***REMOVED***(n)***REMOVED***{***REMOVED***return***REMOVED***n.J;***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***server***REMOVED***=***REMOVED***await***REMOVED***createServer({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base:***REMOVED***options.base,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***options.mode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFile:***REMOVED***options.config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel:***REMOVED***options.logLevel,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearScreen:***REMOVED***options.clearScreen,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimizeDeps:***REMOVED***{***REMOVED***force:***REMOVED***options.force***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***server:***REMOVED***cleanOptions(options),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!server.httpServer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('HTTP***REMOVED***server***REMOVED***not***REMOVED***available');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***server.listen();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***server.config.logger.info;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***viteStartTime***REMOVED***=***REMOVED***global.__vite_start_time***REMOVED***??***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startupDurationString***REMOVED***=***REMOVED***viteStartTime
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***colors.dim(`ready***REMOVED***in***REMOVED***${colors.reset(colors.bold(Math.ceil(performance.now()***REMOVED***-***REMOVED***viteStartTime)))}***REMOVED***ms`)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***info(`\n***REMOVED******REMOVED***${colors.green(`${colors.bold('VITE')}***REMOVED***v${VERSION}`)}***REMOVED******REMOVED***${startupDurationString}\n`,***REMOVED***{***REMOVED***clear:***REMOVED***!server.config.logger.hasWarned***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***server.printUrls();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindShortcuts(server,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***print:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***customShortcuts:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession***REMOVED***&&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***'p',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***description:***REMOVED***'start/stop***REMOVED***the***REMOVED***profiler',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***action(server)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(profileSession)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***stopProfiler(server.config.logger.info);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inspector***REMOVED***=***REMOVED***await***REMOVED***import('node:inspector').then((r)***REMOVED***=>***REMOVED***r.default);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***new***REMOVED***Promise((res)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession***REMOVED***=***REMOVED***new***REMOVED***inspector.Session();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession.connect();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession.post('Profiler.enable',***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***profileSession.post('Profiler.start',***REMOVED***()***REMOVED***=>***REMOVED***{
server.config.logger.info('Profiler***REMOVED***started');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***logger***REMOVED***=***REMOVED***createLogger(options.logLevel);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logger.error(colors.red(`error***REMOVED***when***REMOVED***starting***REMOVED***dev***REMOVED***server:\n${e.stack}`),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***e,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopProfiler(logger.info);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.exit(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
});
//***REMOVED***build
cli
***REMOVED******REMOVED******REMOVED******REMOVED***.command('build***REMOVED***[root]',***REMOVED***'build***REMOVED***for***REMOVED***production')
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--target***REMOVED***<target>',***REMOVED***`[string]***REMOVED***transpile***REMOVED***target***REMOVED***(default:***REMOVED***'modules')`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--outDir***REMOVED***<dir>',***REMOVED***`[string]***REMOVED***output***REMOVED***directory***REMOVED***(default:***REMOVED***dist)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--assetsDir***REMOVED***<dir>',***REMOVED***`[string]***REMOVED***directory***REMOVED***under***REMOVED***outDir***REMOVED***to***REMOVED***place***REMOVED***assets***REMOVED***in***REMOVED***(default:***REMOVED***assets)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--assetsInlineLimit***REMOVED***<number>',***REMOVED***`[number]***REMOVED***static***REMOVED***asset***REMOVED***base64***REMOVED***inline***REMOVED***threshold***REMOVED***in***REMOVED***bytes***REMOVED***(default:***REMOVED***4096)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--ssr***REMOVED***[entry]',***REMOVED***`[string]***REMOVED***build***REMOVED***specified***REMOVED***entry***REMOVED***for***REMOVED***server-side***REMOVED***rendering`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--sourcemap***REMOVED***[output]',***REMOVED***`[boolean***REMOVED***|***REMOVED***"inline"***REMOVED***|***REMOVED***"hidden"]***REMOVED***output***REMOVED***source***REMOVED***maps***REMOVED***for***REMOVED***build***REMOVED***(default:***REMOVED***false)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--minify***REMOVED***[minifier]',***REMOVED***`[boolean***REMOVED***|***REMOVED***"terser"***REMOVED***|***REMOVED***"esbuild"]***REMOVED***enable/disable***REMOVED***minification,***REMOVED***`***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED***`or***REMOVED***specify***REMOVED***minifier***REMOVED***to***REMOVED***use***REMOVED***(default:***REMOVED***esbuild)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--manifest***REMOVED***[name]',***REMOVED***`[boolean***REMOVED***|***REMOVED***string]***REMOVED***emit***REMOVED***build***REMOVED***manifest***REMOVED***json`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--ssrManifest***REMOVED***[name]',***REMOVED***`[boolean***REMOVED***|***REMOVED***string]***REMOVED***emit***REMOVED***ssr***REMOVED***manifest***REMOVED***json`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--force',***REMOVED***`[boolean]***REMOVED***force***REMOVED***the***REMOVED***optimizer***REMOVED***to***REMOVED***ignore***REMOVED***the***REMOVED***cache***REMOVED***and***REMOVED***re-bundle***REMOVED***(experimental)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--emptyOutDir',***REMOVED***`[boolean]***REMOVED***force***REMOVED***empty***REMOVED***outDir***REMOVED***when***REMOVED***it's***REMOVED***outside***REMOVED***of***REMOVED***root`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('-w,***REMOVED***--watch',***REMOVED***`[boolean]***REMOVED***rebuilds***REMOVED***when***REMOVED***modules***REMOVED***have***REMOVED***changed***REMOVED***on***REMOVED***disk`)
***REMOVED******REMOVED******REMOVED******REMOVED***.action(async***REMOVED***(root,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filterDuplicateOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***build***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('./chunks/dep-827b23df.js').then(function***REMOVED***(n)***REMOVED***{***REMOVED***return***REMOVED***n.I;***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***buildOptions***REMOVED***=***REMOVED***cleanOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***build({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base:***REMOVED***options.base,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***options.mode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFile:***REMOVED***options.config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel:***REMOVED***options.logLevel,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearScreen:***REMOVED***options.clearScreen,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimizeDeps:***REMOVED***{***REMOVED***force:***REMOVED***options.force***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***build:***REMOVED***buildOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createLogger(options.logLevel).error(colors.red(`error***REMOVED***during***REMOVED***build:\n${e.stack}`),***REMOVED***{***REMOVED***error:***REMOVED***e***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.exit(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopProfiler((message)***REMOVED***=>***REMOVED***createLogger(options.logLevel).info(message));
***REMOVED******REMOVED******REMOVED******REMOVED***}
});
//***REMOVED***optimize
cli
***REMOVED******REMOVED******REMOVED******REMOVED***.command('optimize***REMOVED***[root]',***REMOVED***'pre-bundle***REMOVED***dependencies')
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--force',***REMOVED***`[boolean]***REMOVED***force***REMOVED***the***REMOVED***optimizer***REMOVED***to***REMOVED***ignore***REMOVED***the***REMOVED***cache***REMOVED***and***REMOVED***re-bundle`)
***REMOVED******REMOVED******REMOVED******REMOVED***.action(async***REMOVED***(root,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filterDuplicateOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***optimizeDeps***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('./chunks/dep-827b23df.js').then(function***REMOVED***(n)***REMOVED***{***REMOVED***return***REMOVED***n.H;***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***config***REMOVED***=***REMOVED***await***REMOVED***resolveConfig({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base:***REMOVED***options.base,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFile:***REMOVED***options.config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel:***REMOVED***options.logLevel,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***options.mode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***'serve');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***optimizeDeps(config,***REMOVED***options.force,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createLogger(options.logLevel).error(colors.red(`error***REMOVED***when***REMOVED***optimizing***REMOVED***deps:\n${e.stack}`),***REMOVED***{***REMOVED***error:***REMOVED***e***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.exit(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
});
//***REMOVED***preview
cli
***REMOVED******REMOVED******REMOVED******REMOVED***.command('preview***REMOVED***[root]',***REMOVED***'locally***REMOVED***preview***REMOVED***production***REMOVED***build')
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--host***REMOVED***[host]',***REMOVED***`[string]***REMOVED***specify***REMOVED***hostname`,***REMOVED***{***REMOVED***type:***REMOVED***[convertHost]***REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--port***REMOVED***<port>',***REMOVED***`[number]***REMOVED***specify***REMOVED***port`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--strictPort',***REMOVED***`[boolean]***REMOVED***exit***REMOVED***if***REMOVED***specified***REMOVED***port***REMOVED***is***REMOVED***already***REMOVED***in***REMOVED***use`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--https',***REMOVED***`[boolean]***REMOVED***use***REMOVED***TLS***REMOVED***+***REMOVED***HTTP/2`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--open***REMOVED***[path]',***REMOVED***`[boolean***REMOVED***|***REMOVED***string]***REMOVED***open***REMOVED***browser***REMOVED***on***REMOVED***startup`)
***REMOVED******REMOVED******REMOVED******REMOVED***.option('--outDir***REMOVED***<dir>',***REMOVED***`[string]***REMOVED***output***REMOVED***directory***REMOVED***(default:***REMOVED***dist)`)
***REMOVED******REMOVED******REMOVED******REMOVED***.action(async***REMOVED***(root,***REMOVED***options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filterDuplicateOptions(options);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***preview***REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***import('./chunks/dep-827b23df.js').then(function***REMOVED***(n)***REMOVED***{***REMOVED***return***REMOVED***n.K;***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***server***REMOVED***=***REMOVED***await***REMOVED***preview({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base:***REMOVED***options.base,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configFile:***REMOVED***options.config,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***logLevel:***REMOVED***options.logLevel,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***options.mode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***build:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outDir:***REMOVED***options.outDir,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***preview:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***port:***REMOVED***options.port,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictPort:***REMOVED***options.strictPort,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***host:***REMOVED***options.host,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***https:***REMOVED***options.https,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***open:***REMOVED***options.open,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***server.printUrls();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindShortcuts(server,***REMOVED***{***REMOVED***print:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createLogger(options.logLevel).error(colors.red(`error***REMOVED***when***REMOVED***starting***REMOVED***preview***REMOVED***server:\n${e.stack}`),***REMOVED***{***REMOVED***error:***REMOVED***e***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.exit(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopProfiler((message)***REMOVED***=>***REMOVED***createLogger(options.logLevel).info(message));
***REMOVED******REMOVED******REMOVED******REMOVED***}
});
cli.help();
cli.version(VERSION);
cli.parse();

export***REMOVED***{***REMOVED***stopProfiler***REMOVED***};
