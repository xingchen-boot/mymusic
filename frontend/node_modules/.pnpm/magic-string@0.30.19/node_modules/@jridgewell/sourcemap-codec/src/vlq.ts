import***REMOVED***type***REMOVED***{***REMOVED***StringReader,***REMOVED***StringWriter***REMOVED***}***REMOVED***from***REMOVED***'./strings';

export***REMOVED***const***REMOVED***comma***REMOVED***=***REMOVED***','.charCodeAt(0);
export***REMOVED***const***REMOVED***semicolon***REMOVED***=***REMOVED***';'.charCodeAt(0);

const***REMOVED***chars***REMOVED***=***REMOVED***'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const***REMOVED***intToChar***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(64);***REMOVED***//***REMOVED***64***REMOVED***possible***REMOVED***chars.
const***REMOVED***charToInt***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(128);***REMOVED***//***REMOVED***z***REMOVED***is***REMOVED***122***REMOVED***in***REMOVED***ASCII

for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***chars.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***chars.charCodeAt(i);
***REMOVED******REMOVED***intToChar[i]***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED***charToInt[c]***REMOVED***=***REMOVED***i;
}

export***REMOVED***function***REMOVED***decodeInteger(reader:***REMOVED***StringReader,***REMOVED***relative:***REMOVED***number):***REMOVED***number***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***shift***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***integer***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***reader.next();
***REMOVED******REMOVED******REMOVED******REMOVED***integer***REMOVED***=***REMOVED***charToInt[c];
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***|=***REMOVED***(integer***REMOVED***&***REMOVED***31)***REMOVED***<<***REMOVED***shift;
***REMOVED******REMOVED******REMOVED******REMOVED***shift***REMOVED***+=***REMOVED***5;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(integer***REMOVED***&***REMOVED***32);

***REMOVED******REMOVED***const***REMOVED***shouldNegate***REMOVED***=***REMOVED***value***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED***value***REMOVED***>>>=***REMOVED***1;

***REMOVED******REMOVED***if***REMOVED***(shouldNegate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***-0x80000000***REMOVED***|***REMOVED***-value;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***relative***REMOVED***+***REMOVED***value;
}

export***REMOVED***function***REMOVED***encodeInteger(builder:***REMOVED***StringWriter,***REMOVED***num:***REMOVED***number,***REMOVED***relative:***REMOVED***number):***REMOVED***number***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***delta***REMOVED***=***REMOVED***num***REMOVED***-***REMOVED***relative;

***REMOVED******REMOVED***delta***REMOVED***=***REMOVED***delta***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***(-delta***REMOVED***<<***REMOVED***1)***REMOVED***|***REMOVED***1***REMOVED***:***REMOVED***delta***REMOVED***<<***REMOVED***1;
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***clamped***REMOVED***=***REMOVED***delta***REMOVED***&***REMOVED***0b011111;
***REMOVED******REMOVED******REMOVED******REMOVED***delta***REMOVED***>>>=***REMOVED***5;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(delta***REMOVED***>***REMOVED***0)***REMOVED***clamped***REMOVED***|=***REMOVED***0b100000;
***REMOVED******REMOVED******REMOVED******REMOVED***builder.write(intToChar[clamped]);
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(delta***REMOVED***>***REMOVED***0);

***REMOVED******REMOVED***return***REMOVED***num;
}

export***REMOVED***function***REMOVED***hasMoreVlq(reader:***REMOVED***StringReader,***REMOVED***max:***REMOVED***number)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(reader.pos***REMOVED***>=***REMOVED***max)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***return***REMOVED***reader.peek()***REMOVED***!==***REMOVED***comma;
}
