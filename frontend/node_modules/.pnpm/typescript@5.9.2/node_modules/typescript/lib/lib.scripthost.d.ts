/*!***REMOVED********************************************************************************
Copyright***REMOVED***(c)***REMOVED***Microsoft***REMOVED***Corporation.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
Licensed***REMOVED***under***REMOVED***the***REMOVED***Apache***REMOVED***License,***REMOVED***Version***REMOVED***2.0***REMOVED***(the***REMOVED***"License");***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***use
this***REMOVED***file***REMOVED***except***REMOVED***in***REMOVED***compliance***REMOVED***with***REMOVED***the***REMOVED***License.***REMOVED***You***REMOVED***may***REMOVED***obtain***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the
License***REMOVED***at***REMOVED***http://www.apache.org/licenses/LICENSE-2.0

THIS***REMOVED***CODE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***ON***REMOVED***AN***REMOVED****AS***REMOVED***IS****REMOVED***BASIS,***REMOVED***WITHOUT***REMOVED***WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***ANY
KIND,***REMOVED***EITHER***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED,***REMOVED***INCLUDING***REMOVED***WITHOUT***REMOVED***LIMITATION***REMOVED***ANY***REMOVED***IMPLIED
WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***TITLE,***REMOVED***FITNESS***REMOVED***FOR***REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE,
MERCHANTABLITY***REMOVED***OR***REMOVED***NON-INFRINGEMENT.

See***REMOVED***the***REMOVED***Apache***REMOVED***Version***REMOVED***2.0***REMOVED***License***REMOVED***for***REMOVED***specific***REMOVED***language***REMOVED***governing***REMOVED***permissions
and***REMOVED***limitations***REMOVED***under***REMOVED***the***REMOVED***License.
********************************************************************************REMOVED****/


///***REMOVED***<reference***REMOVED***no-default-lib="true"/>

/////////////////////////////
///***REMOVED***Windows***REMOVED***Script***REMOVED***Host***REMOVED***APIS
/////////////////////////////

interface***REMOVED***ActiveXObject***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***(s:***REMOVED***string):***REMOVED***any;
}
declare***REMOVED***var***REMOVED***ActiveXObject:***REMOVED***ActiveXObject;

interface***REMOVED***ITextWriter***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Write(s:***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***WriteLine(s:***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***Close():***REMOVED***void;
}

interface***REMOVED***TextStreamBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***character***REMOVED***position***REMOVED***in***REMOVED***an***REMOVED***input***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Column:***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***current***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***an***REMOVED***input***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Line:***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Closes***REMOVED***a***REMOVED***text***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***It***REMOVED***is***REMOVED***not***REMOVED***necessary***REMOVED***to***REMOVED***close***REMOVED***standard***REMOVED***streams;***REMOVED***they***REMOVED***close***REMOVED***automatically***REMOVED***when***REMOVED***the***REMOVED***process***REMOVED***ends.***REMOVED***If
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***you***REMOVED***close***REMOVED***a***REMOVED***standard***REMOVED***stream,***REMOVED***be***REMOVED***aware***REMOVED***that***REMOVED***any***REMOVED***other***REMOVED***pointers***REMOVED***to***REMOVED***that***REMOVED***standard***REMOVED***stream***REMOVED***become***REMOVED***invalid.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Close():***REMOVED***void;
}

interface***REMOVED***TextStreamWriter***REMOVED***extends***REMOVED***TextStreamBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Sends***REMOVED***a***REMOVED***string***REMOVED***to***REMOVED***an***REMOVED***output***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Write(s:***REMOVED***string):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Sends***REMOVED***a***REMOVED***specified***REMOVED***number***REMOVED***of***REMOVED***blank***REMOVED***lines***REMOVED***(newline***REMOVED***characters)***REMOVED***to***REMOVED***an***REMOVED***output***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***WriteBlankLines(intLines:***REMOVED***number):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Sends***REMOVED***a***REMOVED***string***REMOVED***followed***REMOVED***by***REMOVED***a***REMOVED***newline***REMOVED***character***REMOVED***to***REMOVED***an***REMOVED***output***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***WriteLine(s:***REMOVED***string):***REMOVED***void;
}

interface***REMOVED***TextStreamReader***REMOVED***extends***REMOVED***TextStreamBase***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***specified***REMOVED***number***REMOVED***of***REMOVED***characters***REMOVED***from***REMOVED***an***REMOVED***input***REMOVED***stream,***REMOVED***starting***REMOVED***at***REMOVED***the***REMOVED***current***REMOVED***pointer***REMOVED***position.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Does***REMOVED***not***REMOVED***return***REMOVED***until***REMOVED***the***REMOVED***ENTER***REMOVED***key***REMOVED***is***REMOVED***pressed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***stream***REMOVED***in***REMOVED***reading***REMOVED***mode;***REMOVED***causes***REMOVED***an***REMOVED***error***REMOVED***in***REMOVED***writing***REMOVED***or***REMOVED***appending***REMOVED***mode.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Read(characters:***REMOVED***number):***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***all***REMOVED***characters***REMOVED***from***REMOVED***an***REMOVED***input***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***stream***REMOVED***in***REMOVED***reading***REMOVED***mode;***REMOVED***causes***REMOVED***an***REMOVED***error***REMOVED***in***REMOVED***writing***REMOVED***or***REMOVED***appending***REMOVED***mode.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ReadAll():***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***an***REMOVED***entire***REMOVED***line***REMOVED***from***REMOVED***an***REMOVED***input***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Although***REMOVED***this***REMOVED***method***REMOVED***extracts***REMOVED***the***REMOVED***newline***REMOVED***character,***REMOVED***it***REMOVED***does***REMOVED***not***REMOVED***add***REMOVED***it***REMOVED***to***REMOVED***the***REMOVED***returned***REMOVED***string.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***stream***REMOVED***in***REMOVED***reading***REMOVED***mode;***REMOVED***causes***REMOVED***an***REMOVED***error***REMOVED***in***REMOVED***writing***REMOVED***or***REMOVED***appending***REMOVED***mode.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ReadLine():***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Skips***REMOVED***a***REMOVED***specified***REMOVED***number***REMOVED***of***REMOVED***characters***REMOVED***when***REMOVED***reading***REMOVED***from***REMOVED***an***REMOVED***input***REMOVED***text***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***stream***REMOVED***in***REMOVED***reading***REMOVED***mode;***REMOVED***causes***REMOVED***an***REMOVED***error***REMOVED***in***REMOVED***writing***REMOVED***or***REMOVED***appending***REMOVED***mode.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***characters***REMOVED***Positive***REMOVED***number***REMOVED***of***REMOVED***characters***REMOVED***to***REMOVED***skip***REMOVED***forward.***REMOVED***(Backward***REMOVED***skipping***REMOVED***is***REMOVED***not***REMOVED***supported.)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Skip(characters:***REMOVED***number):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Skips***REMOVED***the***REMOVED***next***REMOVED***line***REMOVED***when***REMOVED***reading***REMOVED***from***REMOVED***an***REMOVED***input***REMOVED***text***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***stream***REMOVED***in***REMOVED***reading***REMOVED***mode,***REMOVED***not***REMOVED***writing***REMOVED***or***REMOVED***appending***REMOVED***mode.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SkipLine():***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***whether***REMOVED***the***REMOVED***stream***REMOVED***pointer***REMOVED***position***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***line.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***AtEndOfLine:***REMOVED***boolean;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***whether***REMOVED***the***REMOVED***stream***REMOVED***pointer***REMOVED***position***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***stream.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***AtEndOfStream:***REMOVED***boolean;
}

declare***REMOVED***var***REMOVED***WScript:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Outputs***REMOVED***text***REMOVED***to***REMOVED***either***REMOVED***a***REMOVED***message***REMOVED***box***REMOVED***(under***REMOVED***WScript.exe)***REMOVED***or***REMOVED***the***REMOVED***command***REMOVED***console***REMOVED***window***REMOVED***followed***REMOVED***by
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***newline***REMOVED***(under***REMOVED***CScript.exe).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Echo(s:***REMOVED***any):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Exposes***REMOVED***the***REMOVED***write-only***REMOVED***error***REMOVED***output***REMOVED***stream***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***script.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***be***REMOVED***accessed***REMOVED***only***REMOVED***while***REMOVED***using***REMOVED***CScript.exe.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***StdErr:***REMOVED***TextStreamWriter;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Exposes***REMOVED***the***REMOVED***write-only***REMOVED***output***REMOVED***stream***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***script.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***be***REMOVED***accessed***REMOVED***only***REMOVED***while***REMOVED***using***REMOVED***CScript.exe.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***StdOut:***REMOVED***TextStreamWriter;
***REMOVED******REMOVED******REMOVED******REMOVED***Arguments:***REMOVED***{***REMOVED***length:***REMOVED***number;***REMOVED***Item(n:***REMOVED***number):***REMOVED***string;***REMOVED***};

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED***The***REMOVED***full***REMOVED***path***REMOVED***of***REMOVED***the***REMOVED***currently***REMOVED***running***REMOVED***script.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ScriptFullName:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Forces***REMOVED***the***REMOVED***script***REMOVED***to***REMOVED***stop***REMOVED***immediately,***REMOVED***with***REMOVED***an***REMOVED***optional***REMOVED***exit***REMOVED***code.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Quit(exitCode?:***REMOVED***number):***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***Windows***REMOVED***Script***REMOVED***Host***REMOVED***build***REMOVED***version***REMOVED***number.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***BuildVersion:***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Fully***REMOVED***qualified***REMOVED***path***REMOVED***of***REMOVED***the***REMOVED***host***REMOVED***executable.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***FullName:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Gets/sets***REMOVED***the***REMOVED***script***REMOVED***mode***REMOVED***-***REMOVED***interactive(true)***REMOVED***or***REMOVED***batch(false).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Interactive:***REMOVED***boolean;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***host***REMOVED***executable***REMOVED***(WScript.exe***REMOVED***or***REMOVED***CScript.exe).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Name:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Path***REMOVED***of***REMOVED***the***REMOVED***directory***REMOVED***containing***REMOVED***the***REMOVED***host***REMOVED***executable.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Path:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***currently***REMOVED***running***REMOVED***script.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ScriptName:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Exposes***REMOVED***the***REMOVED***read-only***REMOVED***input***REMOVED***stream***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***script.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Can***REMOVED***be***REMOVED***accessed***REMOVED***only***REMOVED***while***REMOVED***using***REMOVED***CScript.exe.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***StdIn:***REMOVED***TextStreamReader;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Windows***REMOVED***Script***REMOVED***Host***REMOVED***version
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Version:***REMOVED***string;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Connects***REMOVED***a***REMOVED***COM***REMOVED***object's***REMOVED***event***REMOVED***sources***REMOVED***to***REMOVED***functions***REMOVED***named***REMOVED***with***REMOVED***a***REMOVED***given***REMOVED***prefix,***REMOVED***in***REMOVED***the***REMOVED***form***REMOVED***prefix_event.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ConnectObject(objEventSource:***REMOVED***any,***REMOVED***strPrefix:***REMOVED***string):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***COM***REMOVED***object.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***strProgiID
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***strPrefix***REMOVED***Function***REMOVED***names***REMOVED***in***REMOVED***the***REMOVED***form***REMOVED***prefix_event***REMOVED***will***REMOVED***be***REMOVED***bound***REMOVED***to***REMOVED***this***REMOVED***object's***REMOVED***COM***REMOVED***events.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***CreateObject(strProgID:***REMOVED***string,***REMOVED***strPrefix?:***REMOVED***string):***REMOVED***any;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Disconnects***REMOVED***a***REMOVED***COM***REMOVED***object***REMOVED***from***REMOVED***its***REMOVED***event***REMOVED***sources.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***DisconnectObject(obj:***REMOVED***any):***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Retrieves***REMOVED***an***REMOVED***existing***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***ProgID***REMOVED***from***REMOVED***memory,***REMOVED***or***REMOVED***creates***REMOVED***a***REMOVED***new***REMOVED***one***REMOVED***from***REMOVED***a***REMOVED***file.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***strPathname***REMOVED***Fully***REMOVED***qualified***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***file***REMOVED***containing***REMOVED***the***REMOVED***object***REMOVED***persisted***REMOVED***to***REMOVED***disk.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***For***REMOVED***objects***REMOVED***in***REMOVED***memory,***REMOVED***pass***REMOVED***a***REMOVED***zero-length***REMOVED***string.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***strProgID
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***strPrefix***REMOVED***Function***REMOVED***names***REMOVED***in***REMOVED***the***REMOVED***form***REMOVED***prefix_event***REMOVED***will***REMOVED***be***REMOVED***bound***REMOVED***to***REMOVED***this***REMOVED***object's***REMOVED***COM***REMOVED***events.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***GetObject(strPathname:***REMOVED***string,***REMOVED***strProgID?:***REMOVED***string,***REMOVED***strPrefix?:***REMOVED***string):***REMOVED***any;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Suspends***REMOVED***script***REMOVED***execution***REMOVED***for***REMOVED***a***REMOVED***specified***REMOVED***length***REMOVED***of***REMOVED***time,***REMOVED***then***REMOVED***continues***REMOVED***execution.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***intTime***REMOVED***Interval***REMOVED***(in***REMOVED***milliseconds)***REMOVED***to***REMOVED***suspend***REMOVED***script***REMOVED***execution.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***Sleep(intTime:***REMOVED***number):***REMOVED***void;
};

/**
***REMOVED*******REMOVED***WSH***REMOVED***is***REMOVED***an***REMOVED***alias***REMOVED***for***REMOVED***WScript***REMOVED***under***REMOVED***Windows***REMOVED***Script***REMOVED***Host
***REMOVED****/
declare***REMOVED***var***REMOVED***WSH:***REMOVED***typeof***REMOVED***WScript;

/**
***REMOVED*******REMOVED***Represents***REMOVED***an***REMOVED***Automation***REMOVED***SAFEARRAY
***REMOVED****/
declare***REMOVED***class***REMOVED***SafeArray<T***REMOVED***=***REMOVED***any>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***private***REMOVED***constructor();
***REMOVED******REMOVED******REMOVED******REMOVED***private***REMOVED***SafeArray_typekey:***REMOVED***SafeArray<T>;
}

/**
***REMOVED*******REMOVED***Allows***REMOVED***enumerating***REMOVED***over***REMOVED***a***REMOVED***COM***REMOVED***collection,***REMOVED***which***REMOVED***may***REMOVED***not***REMOVED***have***REMOVED***indexed***REMOVED***item***REMOVED***access.
***REMOVED****/
interface***REMOVED***Enumerator<T***REMOVED***=***REMOVED***any>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***is***REMOVED***the***REMOVED***last***REMOVED***one***REMOVED***in***REMOVED***the***REMOVED***collection,***REMOVED***or***REMOVED***the***REMOVED***collection***REMOVED***is***REMOVED***empty,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***or***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***is***REMOVED***undefined.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***atEnd():***REMOVED***boolean;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***in***REMOVED***the***REMOVED***collection
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***item():***REMOVED***T;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Resets***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***in***REMOVED***the***REMOVED***collection***REMOVED***to***REMOVED***the***REMOVED***first***REMOVED***item.***REMOVED***If***REMOVED***there***REMOVED***are***REMOVED***no***REMOVED***items***REMOVED***in***REMOVED***the***REMOVED***collection,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***undefined.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***moveFirst():***REMOVED***void;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Moves***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***to***REMOVED***the***REMOVED***next***REMOVED***item***REMOVED***in***REMOVED***the***REMOVED***collection.***REMOVED***If***REMOVED***the***REMOVED***enumerator***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***collection***REMOVED***or***REMOVED***the***REMOVED***collection***REMOVED***is***REMOVED***empty,***REMOVED***the***REMOVED***current***REMOVED***item***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***undefined.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***moveNext():***REMOVED***void;
}

interface***REMOVED***EnumeratorConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***=***REMOVED***any>(safearray:***REMOVED***SafeArray<T>):***REMOVED***Enumerator<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***=***REMOVED***any>(collection:***REMOVED***{***REMOVED***Item(index:***REMOVED***any):***REMOVED***T;***REMOVED***}):***REMOVED***Enumerator<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***=***REMOVED***any>(collection:***REMOVED***any):***REMOVED***Enumerator<T>;
}

declare***REMOVED***var***REMOVED***Enumerator:***REMOVED***EnumeratorConstructor;

/**
***REMOVED*******REMOVED***Enables***REMOVED***reading***REMOVED***from***REMOVED***a***REMOVED***COM***REMOVED***safe***REMOVED***array,***REMOVED***which***REMOVED***might***REMOVED***have***REMOVED***an***REMOVED***alternate***REMOVED***lower***REMOVED***bound,***REMOVED***or***REMOVED***multiple***REMOVED***dimensions.
***REMOVED****/
interface***REMOVED***VBArray<T***REMOVED***=***REMOVED***any>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***dimensions***REMOVED***(1-based).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***dimensions():***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Takes***REMOVED***an***REMOVED***index***REMOVED***for***REMOVED***each***REMOVED***dimension***REMOVED***in***REMOVED***the***REMOVED***array,***REMOVED***and***REMOVED***returns***REMOVED***the***REMOVED***item***REMOVED***at***REMOVED***the***REMOVED***corresponding***REMOVED***location.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***getItem(dimension1Index:***REMOVED***number,***REMOVED***...dimensionNIndexes:***REMOVED***number[]):***REMOVED***T;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***smallest***REMOVED***available***REMOVED***index***REMOVED***for***REMOVED***a***REMOVED***given***REMOVED***dimension.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***dimension***REMOVED***1-based***REMOVED***dimension***REMOVED***(defaults***REMOVED***to***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***lbound(dimension?:***REMOVED***number):***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***largest***REMOVED***available***REMOVED***index***REMOVED***for***REMOVED***a***REMOVED***given***REMOVED***dimension.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***dimension***REMOVED***1-based***REMOVED***dimension***REMOVED***(defaults***REMOVED***to***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ubound(dimension?:***REMOVED***number):***REMOVED***number;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***Javascript***REMOVED***array***REMOVED***with***REMOVED***all***REMOVED***the***REMOVED***elements***REMOVED***in***REMOVED***the***REMOVED***VBArray.***REMOVED***If***REMOVED***there***REMOVED***are***REMOVED***multiple***REMOVED***dimensions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***each***REMOVED***successive***REMOVED***dimension***REMOVED***is***REMOVED***appended***REMOVED***to***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***array.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Example:***REMOVED***[[1,2,3],[4,5,6]]***REMOVED***becomes***REMOVED***[1,2,3,4,5,6]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***toArray():***REMOVED***T[];
}

interface***REMOVED***VBArrayConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***<T***REMOVED***=***REMOVED***any>(safeArray:***REMOVED***SafeArray<T>):***REMOVED***VBArray<T>;
}

declare***REMOVED***var***REMOVED***VBArray:***REMOVED***VBArrayConstructor;

/**
***REMOVED*******REMOVED***Automation***REMOVED***date***REMOVED***(VT_DATE)
***REMOVED****/
declare***REMOVED***class***REMOVED***VarDate***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***private***REMOVED***constructor();
***REMOVED******REMOVED******REMOVED******REMOVED***private***REMOVED***VarDate_typekey:***REMOVED***VarDate;
}

interface***REMOVED***DateConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***(vd:***REMOVED***VarDate):***REMOVED***Date;
}

interface***REMOVED***Date***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getVarDate:***REMOVED***()***REMOVED***=>***REMOVED***VarDate;
}
