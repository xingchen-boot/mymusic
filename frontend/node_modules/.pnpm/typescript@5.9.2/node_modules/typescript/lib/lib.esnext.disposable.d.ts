/*!***REMOVED********************************************************************************
Copyright***REMOVED***(c)***REMOVED***Microsoft***REMOVED***Corporation.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
Licensed***REMOVED***under***REMOVED***the***REMOVED***Apache***REMOVED***License,***REMOVED***Version***REMOVED***2.0***REMOVED***(the***REMOVED***"License");***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***use
this***REMOVED***file***REMOVED***except***REMOVED***in***REMOVED***compliance***REMOVED***with***REMOVED***the***REMOVED***License.***REMOVED***You***REMOVED***may***REMOVED***obtain***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the
License***REMOVED***at***REMOVED***http://www.apache.org/licenses/LICENSE-2.0

THIS***REMOVED***CODE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***ON***REMOVED***AN***REMOVED****AS***REMOVED***IS****REMOVED***BASIS,***REMOVED***WITHOUT***REMOVED***WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***ANY
KIND,***REMOVED***EITHER***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED,***REMOVED***INCLUDING***REMOVED***WITHOUT***REMOVED***LIMITATION***REMOVED***ANY***REMOVED***IMPLIED
WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***TITLE,***REMOVED***FITNESS***REMOVED***FOR***REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE,
MERCHANTABLITY***REMOVED***OR***REMOVED***NON-INFRINGEMENT.

See***REMOVED***the***REMOVED***Apache***REMOVED***Version***REMOVED***2.0***REMOVED***License***REMOVED***for***REMOVED***specific***REMOVED***language***REMOVED***governing***REMOVED***permissions
and***REMOVED***limitations***REMOVED***under***REMOVED***the***REMOVED***License.
********************************************************************************REMOVED****/


///***REMOVED***<reference***REMOVED***no-default-lib="true"/>

///***REMOVED***<reference***REMOVED***lib="es2015.symbol"***REMOVED***/>
///***REMOVED***<reference***REMOVED***lib="es2015.iterable"***REMOVED***/>
///***REMOVED***<reference***REMOVED***lib="es2018.asynciterable"***REMOVED***/>

interface***REMOVED***SymbolConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***A***REMOVED***method***REMOVED***that***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***release***REMOVED***resources***REMOVED***held***REMOVED***by***REMOVED***an***REMOVED***object.***REMOVED***Called***REMOVED***by***REMOVED***the***REMOVED***semantics***REMOVED***of***REMOVED***the***REMOVED***`using`***REMOVED***statement.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***dispose:***REMOVED***unique***REMOVED***symbol;

***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***A***REMOVED***method***REMOVED***that***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***asynchronously***REMOVED***release***REMOVED***resources***REMOVED***held***REMOVED***by***REMOVED***an***REMOVED***object.***REMOVED***Called***REMOVED***by***REMOVED***the***REMOVED***semantics***REMOVED***of***REMOVED***the***REMOVED***`await***REMOVED***using`***REMOVED***statement.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***asyncDispose:***REMOVED***unique***REMOVED***symbol;
}

interface***REMOVED***Disposable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.dispose]():***REMOVED***void;
}

interface***REMOVED***AsyncDisposable***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.asyncDispose]():***REMOVED***PromiseLike<void>;
}

interface***REMOVED***SuppressedError***REMOVED***extends***REMOVED***Error***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***any;
***REMOVED******REMOVED******REMOVED******REMOVED***suppressed:***REMOVED***any;
}

interface***REMOVED***SuppressedErrorConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***(error:***REMOVED***any,***REMOVED***suppressed:***REMOVED***any,***REMOVED***message?:***REMOVED***string):***REMOVED***SuppressedError;
***REMOVED******REMOVED******REMOVED******REMOVED***(error:***REMOVED***any,***REMOVED***suppressed:***REMOVED***any,***REMOVED***message?:***REMOVED***string):***REMOVED***SuppressedError;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***SuppressedError;
}
declare***REMOVED***var***REMOVED***SuppressedError:***REMOVED***SuppressedErrorConstructor;

interface***REMOVED***DisposableStack***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***value***REMOVED***indicating***REMOVED***whether***REMOVED***this***REMOVED***stack***REMOVED***has***REMOVED***been***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***disposed:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Disposes***REMOVED***each***REMOVED***resource***REMOVED***in***REMOVED***the***REMOVED***stack***REMOVED***in***REMOVED***the***REMOVED***reverse***REMOVED***order***REMOVED***that***REMOVED***they***REMOVED***were***REMOVED***added.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***dispose():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***disposable***REMOVED***resource***REMOVED***to***REMOVED***the***REMOVED***stack,***REMOVED***returning***REMOVED***the***REMOVED***resource.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***The***REMOVED***resource***REMOVED***to***REMOVED***add.***REMOVED***`null`***REMOVED***and***REMOVED***`undefined`***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***added,***REMOVED***but***REMOVED***will***REMOVED***be***REMOVED***returned.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***The***REMOVED***provided***REMOVED***{@link***REMOVED***value}.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***use<T***REMOVED***extends***REMOVED***Disposable***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***undefined>(value:***REMOVED***T):***REMOVED***T;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***value***REMOVED***and***REMOVED***associated***REMOVED***disposal***REMOVED***callback***REMOVED***as***REMOVED***a***REMOVED***resource***REMOVED***to***REMOVED***the***REMOVED***stack.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***add.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***onDispose***REMOVED***The***REMOVED***callback***REMOVED***to***REMOVED***use***REMOVED***in***REMOVED***place***REMOVED***of***REMOVED***a***REMOVED***`[Symbol.dispose]()`***REMOVED***method.***REMOVED***Will***REMOVED***be***REMOVED***invoked***REMOVED***with***REMOVED***`value`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***as***REMOVED***the***REMOVED***first***REMOVED***parameter.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***The***REMOVED***provided***REMOVED***{@link***REMOVED***value}.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***adopt<T>(value:***REMOVED***T,***REMOVED***onDispose:***REMOVED***(value:***REMOVED***T)***REMOVED***=>***REMOVED***void):***REMOVED***T;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***callback***REMOVED***to***REMOVED***be***REMOVED***invoked***REMOVED***when***REMOVED***the***REMOVED***stack***REMOVED***is***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***defer(onDispose:***REMOVED***()***REMOVED***=>***REMOVED***void):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Move***REMOVED***all***REMOVED***resources***REMOVED***out***REMOVED***of***REMOVED***this***REMOVED***stack***REMOVED***and***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***`DisposableStack`,***REMOVED***and***REMOVED***marks***REMOVED***this***REMOVED***stack***REMOVED***as***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@example
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```ts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***class***REMOVED***C***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#res1:***REMOVED***Disposable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#res2:***REMOVED***Disposable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#disposables:***REMOVED***DisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***stack***REMOVED***will***REMOVED***be***REMOVED***disposed***REMOVED***when***REMOVED***exiting***REMOVED***constructor***REMOVED***for***REMOVED***any***REMOVED***reason
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***using***REMOVED***stack***REMOVED***=***REMOVED***new***REMOVED***DisposableStack();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***first***REMOVED***resource
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#res1***REMOVED***=***REMOVED***stack.use(getResource1());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***second***REMOVED***resource.***REMOVED***If***REMOVED***this***REMOVED***fails,***REMOVED***both***REMOVED***`stack`***REMOVED***and***REMOVED***`#res1`***REMOVED***will***REMOVED***be***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#res2***REMOVED***=***REMOVED***stack.use(getResource2());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***all***REMOVED***operations***REMOVED***succeeded,***REMOVED***move***REMOVED***resources***REMOVED***out***REMOVED***of***REMOVED***`stack`***REMOVED***so***REMOVED***that***REMOVED***they***REMOVED***aren't***REMOVED***disposed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***constructor***REMOVED***exits
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposables***REMOVED***=***REMOVED***stack.move();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***[Symbol.dispose]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposables.dispose();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***move():***REMOVED***DisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.dispose]():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***[Symbol.toStringTag]:***REMOVED***string;
}

interface***REMOVED***DisposableStackConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***():***REMOVED***DisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***DisposableStack;
}
declare***REMOVED***var***REMOVED***DisposableStack:***REMOVED***DisposableStackConstructor;

interface***REMOVED***AsyncDisposableStack***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***value***REMOVED***indicating***REMOVED***whether***REMOVED***this***REMOVED***stack***REMOVED***has***REMOVED***been***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***disposed:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Disposes***REMOVED***each***REMOVED***resource***REMOVED***in***REMOVED***the***REMOVED***stack***REMOVED***in***REMOVED***the***REMOVED***reverse***REMOVED***order***REMOVED***that***REMOVED***they***REMOVED***were***REMOVED***added.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***disposeAsync():***REMOVED***Promise<void>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***disposable***REMOVED***resource***REMOVED***to***REMOVED***the***REMOVED***stack,***REMOVED***returning***REMOVED***the***REMOVED***resource.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***The***REMOVED***resource***REMOVED***to***REMOVED***add.***REMOVED***`null`***REMOVED***and***REMOVED***`undefined`***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***added,***REMOVED***but***REMOVED***will***REMOVED***be***REMOVED***returned.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***The***REMOVED***provided***REMOVED***{@link***REMOVED***value}.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***use<T***REMOVED***extends***REMOVED***AsyncDisposable***REMOVED***|***REMOVED***Disposable***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***undefined>(value:***REMOVED***T):***REMOVED***T;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***value***REMOVED***and***REMOVED***associated***REMOVED***disposal***REMOVED***callback***REMOVED***as***REMOVED***a***REMOVED***resource***REMOVED***to***REMOVED***the***REMOVED***stack.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***add.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***onDisposeAsync***REMOVED***The***REMOVED***callback***REMOVED***to***REMOVED***use***REMOVED***in***REMOVED***place***REMOVED***of***REMOVED***a***REMOVED***`[Symbol.asyncDispose]()`***REMOVED***method.***REMOVED***Will***REMOVED***be***REMOVED***invoked***REMOVED***with***REMOVED***`value`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***as***REMOVED***the***REMOVED***first***REMOVED***parameter.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***The***REMOVED***provided***REMOVED***{@link***REMOVED***value}.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***adopt<T>(value:***REMOVED***T,***REMOVED***onDisposeAsync:***REMOVED***(value:***REMOVED***T)***REMOVED***=>***REMOVED***PromiseLike<void>***REMOVED***|***REMOVED***void):***REMOVED***T;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Adds***REMOVED***a***REMOVED***callback***REMOVED***to***REMOVED***be***REMOVED***invoked***REMOVED***when***REMOVED***the***REMOVED***stack***REMOVED***is***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***defer(onDisposeAsync:***REMOVED***()***REMOVED***=>***REMOVED***PromiseLike<void>***REMOVED***|***REMOVED***void):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Move***REMOVED***all***REMOVED***resources***REMOVED***out***REMOVED***of***REMOVED***this***REMOVED***stack***REMOVED***and***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***`DisposableStack`,***REMOVED***and***REMOVED***marks***REMOVED***this***REMOVED***stack***REMOVED***as***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@example
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```ts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***class***REMOVED***C***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#res1:***REMOVED***Disposable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#res2:***REMOVED***Disposable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***#disposables:***REMOVED***DisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***stack***REMOVED***will***REMOVED***be***REMOVED***disposed***REMOVED***when***REMOVED***exiting***REMOVED***constructor***REMOVED***for***REMOVED***any***REMOVED***reason
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***using***REMOVED***stack***REMOVED***=***REMOVED***new***REMOVED***DisposableStack();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***first***REMOVED***resource
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#res1***REMOVED***=***REMOVED***stack.use(getResource1());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***second***REMOVED***resource.***REMOVED***If***REMOVED***this***REMOVED***fails,***REMOVED***both***REMOVED***`stack`***REMOVED***and***REMOVED***`#res1`***REMOVED***will***REMOVED***be***REMOVED***disposed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#res2***REMOVED***=***REMOVED***stack.use(getResource2());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***all***REMOVED***operations***REMOVED***succeeded,***REMOVED***move***REMOVED***resources***REMOVED***out***REMOVED***of***REMOVED***`stack`***REMOVED***so***REMOVED***that***REMOVED***they***REMOVED***aren't***REMOVED***disposed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***constructor***REMOVED***exits
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposables***REMOVED***=***REMOVED***stack.move();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***[Symbol.dispose]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposables.dispose();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***move():***REMOVED***AsyncDisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.asyncDispose]():***REMOVED***Promise<void>;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***[Symbol.toStringTag]:***REMOVED***string;
}

interface***REMOVED***AsyncDisposableStackConstructor***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***():***REMOVED***AsyncDisposableStack;
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***prototype:***REMOVED***AsyncDisposableStack;
}
declare***REMOVED***var***REMOVED***AsyncDisposableStack:***REMOVED***AsyncDisposableStackConstructor;

interface***REMOVED***IteratorObject<T,***REMOVED***TReturn,***REMOVED***TNext>***REMOVED***extends***REMOVED***Disposable***REMOVED***{
}

interface***REMOVED***AsyncIteratorObject<T,***REMOVED***TReturn,***REMOVED***TNext>***REMOVED***extends***REMOVED***AsyncDisposable***REMOVED***{
}
