/*!***REMOVED********************************************************************************
Copyright***REMOVED***(c)***REMOVED***Microsoft***REMOVED***Corporation.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
Licensed***REMOVED***under***REMOVED***the***REMOVED***Apache***REMOVED***License,***REMOVED***Version***REMOVED***2.0***REMOVED***(the***REMOVED***"License");***REMOVED***you***REMOVED***may***REMOVED***not***REMOVED***use
this***REMOVED***file***REMOVED***except***REMOVED***in***REMOVED***compliance***REMOVED***with***REMOVED***the***REMOVED***License.***REMOVED***You***REMOVED***may***REMOVED***obtain***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the
License***REMOVED***at***REMOVED***http://www.apache.org/licenses/LICENSE-2.0

THIS***REMOVED***CODE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***ON***REMOVED***AN***REMOVED****AS***REMOVED***IS****REMOVED***BASIS,***REMOVED***WITHOUT***REMOVED***WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***ANY
KIND,***REMOVED***EITHER***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED,***REMOVED***INCLUDING***REMOVED***WITHOUT***REMOVED***LIMITATION***REMOVED***ANY***REMOVED***IMPLIED
WARRANTIES***REMOVED***OR***REMOVED***CONDITIONS***REMOVED***OF***REMOVED***TITLE,***REMOVED***FITNESS***REMOVED***FOR***REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE,
MERCHANTABLITY***REMOVED***OR***REMOVED***NON-INFRINGEMENT.

See***REMOVED***the***REMOVED***Apache***REMOVED***Version***REMOVED***2.0***REMOVED***License***REMOVED***for***REMOVED***specific***REMOVED***language***REMOVED***governing***REMOVED***permissions
and***REMOVED***limitations***REMOVED***under***REMOVED***the***REMOVED***License.
********************************************************************************REMOVED****/


"use***REMOVED***strict";
var***REMOVED***__create***REMOVED***=***REMOVED***Object.create;
var***REMOVED***__defProp***REMOVED***=***REMOVED***Object.defineProperty;
var***REMOVED***__getOwnPropDesc***REMOVED***=***REMOVED***Object.getOwnPropertyDescriptor;
var***REMOVED***__getOwnPropNames***REMOVED***=***REMOVED***Object.getOwnPropertyNames;
var***REMOVED***__getProtoOf***REMOVED***=***REMOVED***Object.getPrototypeOf;
var***REMOVED***__hasOwnProp***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
var***REMOVED***__copyProps***REMOVED***=***REMOVED***(to,***REMOVED***from,***REMOVED***except,***REMOVED***desc)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(from***REMOVED***&&***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"object"***REMOVED***||***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***key***REMOVED***of***REMOVED***__getOwnPropNames(from))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!__hasOwnProp.call(to,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***except)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__defProp(to,***REMOVED***key,***REMOVED***{***REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***from[key],***REMOVED***enumerable:***REMOVED***!(desc***REMOVED***=***REMOVED***__getOwnPropDesc(from,***REMOVED***key))***REMOVED***||***REMOVED***desc.enumerable***REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***to;
};
var***REMOVED***__toESM***REMOVED***=***REMOVED***(mod,***REMOVED***isNodeMode,***REMOVED***target)***REMOVED***=>***REMOVED***(target***REMOVED***=***REMOVED***mod***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***__create(__getProtoOf(mod))***REMOVED***:***REMOVED***{},***REMOVED***__copyProps(
***REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***importer***REMOVED***is***REMOVED***in***REMOVED***node***REMOVED***compatibility***REMOVED***mode***REMOVED***or***REMOVED***this***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***ESM
***REMOVED******REMOVED***//***REMOVED***file***REMOVED***that***REMOVED***has***REMOVED***been***REMOVED***converted***REMOVED***to***REMOVED***a***REMOVED***CommonJS***REMOVED***file***REMOVED***using***REMOVED***a***REMOVED***Babel-
***REMOVED******REMOVED***//***REMOVED***compatible***REMOVED***transform***REMOVED***(i.e.***REMOVED***"__esModule"***REMOVED***has***REMOVED***not***REMOVED***been***REMOVED***set),***REMOVED***then***REMOVED***set
***REMOVED******REMOVED***//***REMOVED***"default"***REMOVED***to***REMOVED***the***REMOVED***CommonJS***REMOVED***"module.exports"***REMOVED***for***REMOVED***node***REMOVED***compatibility.
***REMOVED******REMOVED***isNodeMode***REMOVED***||***REMOVED***!mod***REMOVED***||***REMOVED***!mod.__esModule***REMOVED***?***REMOVED***__defProp(target,***REMOVED***"default",***REMOVED***{***REMOVED***value:***REMOVED***mod,***REMOVED***enumerable:***REMOVED***true***REMOVED***})***REMOVED***:***REMOVED***target,
***REMOVED******REMOVED***mod
));

//***REMOVED***src/watchGuard/watchGuard.ts
var***REMOVED***fs***REMOVED***=***REMOVED***__toESM(require("fs"));
if***REMOVED***(process.argv.length***REMOVED***<***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED***process.exit(1);
}
var***REMOVED***directoryName***REMOVED***=***REMOVED***process.argv[2];
try***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***watcher***REMOVED***=***REMOVED***fs.watch(directoryName,***REMOVED***{***REMOVED***recursive:***REMOVED***true***REMOVED***},***REMOVED***()***REMOVED***=>***REMOVED***({}));
***REMOVED******REMOVED***watcher.close();
}***REMOVED***catch***REMOVED***{
}
process.exit(0);
//#***REMOVED***sourceMappingURL=watchGuard.js.map
