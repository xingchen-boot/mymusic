var***REMOVED***mapping***REMOVED***=***REMOVED***require('./_mapping'),
***REMOVED******REMOVED******REMOVED******REMOVED***fallbackHolder***REMOVED***=***REMOVED***require('./placeholder');

/*****REMOVED***Built-in***REMOVED***value***REMOVED***reference.***REMOVED****/
var***REMOVED***push***REMOVED***=***REMOVED***Array.prototype.push;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function,***REMOVED***with***REMOVED***an***REMOVED***arity***REMOVED***of***REMOVED***`n`,***REMOVED***that***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***the
***REMOVED*******REMOVED***arguments***REMOVED***it***REMOVED***receives.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***wrap.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***of***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED****/
function***REMOVED***baseArity(func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***n***REMOVED***==***REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***function(a,***REMOVED***b)***REMOVED***{***REMOVED***return***REMOVED***func.apply(undefined,***REMOVED***arguments);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***function(a)***REMOVED***{***REMOVED***return***REMOVED***func.apply(undefined,***REMOVED***arguments);***REMOVED***};
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***invokes***REMOVED***`func`,***REMOVED***with***REMOVED***up***REMOVED***to***REMOVED***`n`***REMOVED***arguments,***REMOVED***ignoring
***REMOVED*******REMOVED***any***REMOVED***additional***REMOVED***arguments.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***cap***REMOVED***arguments***REMOVED***for.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***cap.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED****/
function***REMOVED***baseAry(func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***n***REMOVED***==***REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***function(a,***REMOVED***b)***REMOVED***{***REMOVED***return***REMOVED***func(a,***REMOVED***b);***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***function(a)***REMOVED***{***REMOVED***return***REMOVED***func(a);***REMOVED***};
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***clone***REMOVED***of***REMOVED***`array`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***clone.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***cloned***REMOVED***array.
***REMOVED****/
function***REMOVED***cloneArray(array)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***?***REMOVED***array.length***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***Array(length);

***REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result[length]***REMOVED***=***REMOVED***array[length];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***clones***REMOVED***a***REMOVED***given***REMOVED***object***REMOVED***using***REMOVED***the***REMOVED***assignment***REMOVED***`func`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***assignment***REMOVED***function.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***cloner***REMOVED***function.
***REMOVED****/
function***REMOVED***createCloner(func)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(object)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func({},***REMOVED***object);
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`_.spread`***REMOVED***which***REMOVED***flattens***REMOVED***the***REMOVED***spread***REMOVED***array***REMOVED***into
***REMOVED*******REMOVED***the***REMOVED***arguments***REMOVED***of***REMOVED***the***REMOVED***invoked***REMOVED***`func`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***spread***REMOVED***arguments***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***start***REMOVED***position***REMOVED***of***REMOVED***the***REMOVED***spread.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED****/
function***REMOVED***flatSpread(func,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***arguments.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***length***REMOVED***-***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args***REMOVED***=***REMOVED***Array(length);

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[length]***REMOVED***=***REMOVED***arguments[length];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***array***REMOVED***=***REMOVED***args[start],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***otherArgs***REMOVED***=***REMOVED***args.slice(0,***REMOVED***start);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(array)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push.apply(otherArgs,***REMOVED***array);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***!=***REMOVED***lastIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push.apply(otherArgs,***REMOVED***args.slice(start***REMOVED***+***REMOVED***1));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func.apply(this,***REMOVED***otherArgs);
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***wraps***REMOVED***`func`***REMOVED***and***REMOVED***uses***REMOVED***`cloner`***REMOVED***to***REMOVED***clone***REMOVED***the***REMOVED***first
***REMOVED*******REMOVED***argument***REMOVED***it***REMOVED***receives.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***wrap.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***cloner***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***clone***REMOVED***arguments.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***immutable***REMOVED***function.
***REMOVED****/
function***REMOVED***wrapImmutable(func,***REMOVED***cloner)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***arguments.length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***args***REMOVED***=***REMOVED***Array(length);
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[length]***REMOVED***=***REMOVED***arguments[length];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***args[0]***REMOVED***=***REMOVED***cloner.apply(undefined,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***func.apply(undefined,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`convert`***REMOVED***which***REMOVED***accepts***REMOVED***a***REMOVED***`util`***REMOVED***object***REMOVED***of***REMOVED***methods
***REMOVED*******REMOVED***required***REMOVED***to***REMOVED***perform***REMOVED***conversions.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***util***REMOVED***The***REMOVED***util***REMOVED***object.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***convert.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[options]***REMOVED***The***REMOVED***options***REMOVED***object.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[options.cap=true]***REMOVED***Specify***REMOVED***capping***REMOVED***iteratee***REMOVED***arguments.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[options.curry=true]***REMOVED***Specify***REMOVED***currying.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[options.fixed=true]***REMOVED***Specify***REMOVED***fixed***REMOVED***arity.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[options.immutable=true]***REMOVED***Specify***REMOVED***immutable***REMOVED***operations.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[options.rearg=true]***REMOVED***Specify***REMOVED***rearranging***REMOVED***arguments.
***REMOVED*******REMOVED***@returns***REMOVED***{Function|Object}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***function***REMOVED***or***REMOVED***object.
***REMOVED****/
function***REMOVED***baseConvert(util,***REMOVED***name,***REMOVED***func,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isLib***REMOVED***=***REMOVED***typeof***REMOVED***name***REMOVED***==***REMOVED***'function',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isObj***REMOVED***=***REMOVED***name***REMOVED***===***REMOVED***Object(name);

***REMOVED******REMOVED***if***REMOVED***(isObj)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***func;
***REMOVED******REMOVED******REMOVED******REMOVED***func***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(func***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***options***REMOVED***||***REMOVED***(options***REMOVED***=***REMOVED***{});

***REMOVED******REMOVED***var***REMOVED***config***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'cap':***REMOVED***'cap'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.cap***REMOVED***:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***'curry':***REMOVED***'curry'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.curry***REMOVED***:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***'fixed':***REMOVED***'fixed'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.fixed***REMOVED***:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***'immutable':***REMOVED***'immutable'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.immutable***REMOVED***:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***'rearg':***REMOVED***'rearg'***REMOVED***in***REMOVED***options***REMOVED***?***REMOVED***options.rearg***REMOVED***:***REMOVED***true
***REMOVED******REMOVED***};

***REMOVED******REMOVED***var***REMOVED***defaultHolder***REMOVED***=***REMOVED***isLib***REMOVED***?***REMOVED***func***REMOVED***:***REMOVED***fallbackHolder,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceCurry***REMOVED***=***REMOVED***('curry'***REMOVED***in***REMOVED***options)***REMOVED***&&***REMOVED***options.curry,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceFixed***REMOVED***=***REMOVED***('fixed'***REMOVED***in***REMOVED***options)***REMOVED***&&***REMOVED***options.fixed,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***forceRearg***REMOVED***=***REMOVED***('rearg'***REMOVED***in***REMOVED***options)***REMOVED***&&***REMOVED***options.rearg,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pristine***REMOVED***=***REMOVED***isLib***REMOVED***?***REMOVED***func.runInContext()***REMOVED***:***REMOVED***undefined;

***REMOVED******REMOVED***var***REMOVED***helpers***REMOVED***=***REMOVED***isLib***REMOVED***?***REMOVED***func***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'ary':***REMOVED***util.ary,
***REMOVED******REMOVED******REMOVED******REMOVED***'assign':***REMOVED***util.assign,
***REMOVED******REMOVED******REMOVED******REMOVED***'clone':***REMOVED***util.clone,
***REMOVED******REMOVED******REMOVED******REMOVED***'curry':***REMOVED***util.curry,
***REMOVED******REMOVED******REMOVED******REMOVED***'forEach':***REMOVED***util.forEach,
***REMOVED******REMOVED******REMOVED******REMOVED***'isArray':***REMOVED***util.isArray,
***REMOVED******REMOVED******REMOVED******REMOVED***'isError':***REMOVED***util.isError,
***REMOVED******REMOVED******REMOVED******REMOVED***'isFunction':***REMOVED***util.isFunction,
***REMOVED******REMOVED******REMOVED******REMOVED***'isWeakMap':***REMOVED***util.isWeakMap,
***REMOVED******REMOVED******REMOVED******REMOVED***'iteratee':***REMOVED***util.iteratee,
***REMOVED******REMOVED******REMOVED******REMOVED***'keys':***REMOVED***util.keys,
***REMOVED******REMOVED******REMOVED******REMOVED***'rearg':***REMOVED***util.rearg,
***REMOVED******REMOVED******REMOVED******REMOVED***'toInteger':***REMOVED***util.toInteger,
***REMOVED******REMOVED******REMOVED******REMOVED***'toPath':***REMOVED***util.toPath
***REMOVED******REMOVED***};

***REMOVED******REMOVED***var***REMOVED***ary***REMOVED***=***REMOVED***helpers.ary,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assign***REMOVED***=***REMOVED***helpers.assign,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clone***REMOVED***=***REMOVED***helpers.clone,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***curry***REMOVED***=***REMOVED***helpers.curry,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each***REMOVED***=***REMOVED***helpers.forEach,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isArray***REMOVED***=***REMOVED***helpers.isArray,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isError***REMOVED***=***REMOVED***helpers.isError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFunction***REMOVED***=***REMOVED***helpers.isFunction,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isWeakMap***REMOVED***=***REMOVED***helpers.isWeakMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***helpers.keys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rearg***REMOVED***=***REMOVED***helpers.rearg,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toInteger***REMOVED***=***REMOVED***helpers.toInteger,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toPath***REMOVED***=***REMOVED***helpers.toPath;

***REMOVED******REMOVED***var***REMOVED***aryMethodKeys***REMOVED***=***REMOVED***keys(mapping.aryMethod);

***REMOVED******REMOVED***var***REMOVED***wrappers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'castArray':***REMOVED***function(castArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***arguments[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isArray(value)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***castArray(cloneArray(value))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***castArray.apply(undefined,***REMOVED***arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***'iteratee':***REMOVED***function(iteratee)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***func***REMOVED***=***REMOVED***arguments[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arity***REMOVED***=***REMOVED***arguments[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***iteratee(func,***REMOVED***arity),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***result.length;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(config.cap***REMOVED***&&***REMOVED***typeof***REMOVED***arity***REMOVED***==***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arity***REMOVED***=***REMOVED***arity***REMOVED***>***REMOVED***2***REMOVED***?***REMOVED***(arity***REMOVED***-***REMOVED***2)***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(length***REMOVED***&&***REMOVED***length***REMOVED***<=***REMOVED***arity)***REMOVED***?***REMOVED***result***REMOVED***:***REMOVED***baseAry(result,***REMOVED***arity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***'mixin':***REMOVED***function(mixin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function(source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***func***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFunction(func))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mixin(func,***REMOVED***Object(source));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pairs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each(keys(source),***REMOVED***function(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(source[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pairs.push([key,***REMOVED***func.prototype[key]]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mixin(func,***REMOVED***Object(source));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each(pairs,***REMOVED***function(pair)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***pair[1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***func.prototype[pair[0]]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***func.prototype[pair[0]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***'nthArg':***REMOVED***function(nthArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function(n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***arity***REMOVED***=***REMOVED***n***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***(toInteger(n)***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***curry(nthArg(n),***REMOVED***arity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***'rearg':***REMOVED***function(rearg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function(func,***REMOVED***indexes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***arity***REMOVED***=***REMOVED***indexes***REMOVED***?***REMOVED***indexes.length***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***curry(rearg(func,***REMOVED***indexes),***REMOVED***arity);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***'runInContext':***REMOVED***function(runInContext)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function(context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***baseConvert(util,***REMOVED***runInContext(context),***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

***REMOVED******REMOVED***/*--------------------------------------------------------------------------*/

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Casts***REMOVED***`func`***REMOVED***to***REMOVED***a***REMOVED***function***REMOVED***with***REMOVED***an***REMOVED***arity***REMOVED***capped***REMOVED***iteratee***REMOVED***if***REMOVED***needed.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***castCap(name,***REMOVED***func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(config.cap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***indexes***REMOVED***=***REMOVED***mapping.iterateeRearg[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(indexes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterateeRearg(func,***REMOVED***indexes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***!isLib***REMOVED***&&***REMOVED***mapping.iterateeAry[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterateeAry(func,***REMOVED***n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Casts***REMOVED***`func`***REMOVED***to***REMOVED***a***REMOVED***curried***REMOVED***function***REMOVED***if***REMOVED***needed.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***of***REMOVED***`func`.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***castCurry(name,***REMOVED***func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(forceCurry***REMOVED***||***REMOVED***(config.curry***REMOVED***&&***REMOVED***n***REMOVED***>***REMOVED***1))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***curry(func,***REMOVED***n)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***func;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Casts***REMOVED***`func`***REMOVED***to***REMOVED***a***REMOVED***fixed***REMOVED***arity***REMOVED***function***REMOVED***if***REMOVED***needed.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***cap.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***castFixed(name,***REMOVED***func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(config.fixed***REMOVED***&&***REMOVED***(forceFixed***REMOVED***||***REMOVED***!mapping.skipFixed[name]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***data***REMOVED***=***REMOVED***mapping.methodSpread[name],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***data***REMOVED***&&***REMOVED***data.start;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***start***REMOVED******REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***ary(func,***REMOVED***n)***REMOVED***:***REMOVED***flatSpread(func,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Casts***REMOVED***`func`***REMOVED***to***REMOVED***an***REMOVED***rearged***REMOVED***function***REMOVED***if***REMOVED***needed.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***inspect.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***of***REMOVED***`func`.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***castRearg(name,***REMOVED***func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(config.rearg***REMOVED***&&***REMOVED***n***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***(forceRearg***REMOVED***||***REMOVED***!mapping.skipRearg[name]))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***rearg(func,***REMOVED***mapping.methodRearg[name]***REMOVED***||***REMOVED***mapping.aryRearg[n])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***func;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***clone***REMOVED***of***REMOVED***`object`***REMOVED***by***REMOVED***`path`.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***clone.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Array|string}***REMOVED***path***REMOVED***The***REMOVED***path***REMOVED***to***REMOVED***clone***REMOVED***by.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Object}***REMOVED***Returns***REMOVED***the***REMOVED***cloned***REMOVED***object.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***cloneByPath(object,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***toPath(path);

***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***path.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***length***REMOVED***-***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***clone(Object(object)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nested***REMOVED***=***REMOVED***result;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(nested***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***path[index],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***nested[key];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!=***REMOVED***null***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(isFunction(value)***REMOVED***||***REMOVED***isError(value)***REMOVED***||***REMOVED***isWeakMap(value)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nested[key]***REMOVED***=***REMOVED***clone(index***REMOVED***==***REMOVED***lastIndex***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***Object(value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nested***REMOVED***=***REMOVED***nested[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Converts***REMOVED***`lodash`***REMOVED***to***REMOVED***an***REMOVED***immutable***REMOVED***auto-curried***REMOVED***iteratee-first***REMOVED***data-last
***REMOVED******REMOVED******REMOVED*******REMOVED***version***REMOVED***with***REMOVED***conversion***REMOVED***`options`***REMOVED***applied.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[options]***REMOVED***The***REMOVED***options***REMOVED***object.***REMOVED***See***REMOVED***`baseConvert`***REMOVED***for***REMOVED***more***REMOVED***details.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***`lodash`.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***convertLib(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_.runInContext.convert(options)(undefined);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***converter***REMOVED***function***REMOVED***for***REMOVED***`func`***REMOVED***of***REMOVED***`name`.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***convert.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***convert.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***converter***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***createConverter(name,***REMOVED***func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***realName***REMOVED***=***REMOVED***mapping.aliasToReal[name]***REMOVED***||***REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***methodName***REMOVED***=***REMOVED***mapping.remap[realName]***REMOVED***||***REMOVED***realName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldOptions***REMOVED***=***REMOVED***options;

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newUtil***REMOVED***=***REMOVED***isLib***REMOVED***?***REMOVED***pristine***REMOVED***:***REMOVED***helpers,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newFunc***REMOVED***=***REMOVED***isLib***REMOVED***?***REMOVED***pristine[methodName]***REMOVED***:***REMOVED***func,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newOptions***REMOVED***=***REMOVED***assign(assign({},***REMOVED***oldOptions),***REMOVED***options);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***baseConvert(newUtil,***REMOVED***realName,***REMOVED***newFunc,***REMOVED***newOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***wraps***REMOVED***`func`***REMOVED***to***REMOVED***invoke***REMOVED***its***REMOVED***iteratee,***REMOVED***with***REMOVED***up***REMOVED***to***REMOVED***`n`
***REMOVED******REMOVED******REMOVED*******REMOVED***arguments,***REMOVED***ignoring***REMOVED***any***REMOVED***additional***REMOVED***arguments.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***cap***REMOVED***iteratee***REMOVED***arguments***REMOVED***for.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***n***REMOVED***The***REMOVED***arity***REMOVED***cap.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***iterateeAry(func,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***overArg(func,***REMOVED***function(func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***func***REMOVED***==***REMOVED***'function'***REMOVED***?***REMOVED***baseAry(func,***REMOVED***n)***REMOVED***:***REMOVED***func;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***wraps***REMOVED***`func`***REMOVED***to***REMOVED***invoke***REMOVED***its***REMOVED***iteratee***REMOVED***with***REMOVED***arguments
***REMOVED******REMOVED******REMOVED*******REMOVED***arranged***REMOVED***according***REMOVED***to***REMOVED***the***REMOVED***specified***REMOVED***`indexes`***REMOVED***where***REMOVED***the***REMOVED***argument***REMOVED***value***REMOVED***at
***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***first***REMOVED***index***REMOVED***is***REMOVED***provided***REMOVED***as***REMOVED***the***REMOVED***first***REMOVED***argument,***REMOVED***the***REMOVED***argument***REMOVED***value***REMOVED***at
***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***second***REMOVED***index***REMOVED***is***REMOVED***provided***REMOVED***as***REMOVED***the***REMOVED***second***REMOVED***argument,***REMOVED***and***REMOVED***so***REMOVED***on.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***rearrange***REMOVED***iteratee***REMOVED***arguments***REMOVED***for.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number[]}***REMOVED***indexes***REMOVED***The***REMOVED***arranged***REMOVED***argument***REMOVED***indexes.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***iterateeRearg(func,***REMOVED***indexes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***overArg(func,***REMOVED***function(func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***indexes.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***baseArity(rearg(baseAry(func,***REMOVED***n),***REMOVED***indexes),***REMOVED***n);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***its***REMOVED***first***REMOVED***argument***REMOVED***transformed.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***wrap.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***transform***REMOVED***The***REMOVED***argument***REMOVED***transform.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***overArg(func,***REMOVED***transform)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***arguments.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***args***REMOVED***=***REMOVED***Array(length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[length]***REMOVED***=***REMOVED***arguments[length];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***config.rearg***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***(length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args[index]***REMOVED***=***REMOVED***transform(args[index]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func.apply(undefined,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***wraps***REMOVED***`func`***REMOVED***and***REMOVED***applys***REMOVED***the***REMOVED***conversions
***REMOVED******REMOVED******REMOVED*******REMOVED***rules***REMOVED***by***REMOVED***`name`.
***REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED*******REMOVED***@private
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***wrap.
***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***wrap.
***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***function.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***function***REMOVED***wrap(name,***REMOVED***func,***REMOVED***placeholder)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***realName***REMOVED***=***REMOVED***mapping.aliasToReal[name]***REMOVED***||***REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapped***REMOVED***=***REMOVED***func,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapper***REMOVED***=***REMOVED***wrappers[realName];

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(wrapper)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapped***REMOVED***=***REMOVED***wrapper(func);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(config.immutable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.mutate.array[realName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapped***REMOVED***=***REMOVED***wrapImmutable(func,***REMOVED***cloneArray);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(mapping.mutate.object[realName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapped***REMOVED***=***REMOVED***wrapImmutable(func,***REMOVED***createCloner(func));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(mapping.mutate.set[realName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrapped***REMOVED***=***REMOVED***wrapImmutable(func,***REMOVED***cloneByPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***each(aryMethodKeys,***REMOVED***function(aryKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each(mapping.aryMethod[aryKey],***REMOVED***function(otherName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(realName***REMOVED***==***REMOVED***otherName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***data***REMOVED***=***REMOVED***mapping.methodSpread[realName],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterRearg***REMOVED***=***REMOVED***data***REMOVED***&&***REMOVED***data.afterRearg;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***afterRearg
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***castFixed(realName,***REMOVED***castRearg(realName,***REMOVED***wrapped,***REMOVED***aryKey),***REMOVED***aryKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***castRearg(realName,***REMOVED***castFixed(realName,***REMOVED***wrapped,***REMOVED***aryKey),***REMOVED***aryKey);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***castCap(realName,***REMOVED***result);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***castCurry(realName,***REMOVED***result,***REMOVED***aryKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!result;
***REMOVED******REMOVED******REMOVED******REMOVED***});

***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***||***REMOVED***(result***REMOVED***=***REMOVED***wrapped);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***==***REMOVED***func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***forceCurry***REMOVED***?***REMOVED***curry(result,***REMOVED***1)***REMOVED***:***REMOVED***function()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***func.apply(this,***REMOVED***arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***result.convert***REMOVED***=***REMOVED***createConverter(realName,***REMOVED***func);
***REMOVED******REMOVED******REMOVED******REMOVED***result.placeholder***REMOVED***=***REMOVED***func.placeholder***REMOVED***=***REMOVED***placeholder;

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***/*--------------------------------------------------------------------------*/

***REMOVED******REMOVED***if***REMOVED***(!isObj)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrap(name,***REMOVED***func,***REMOVED***defaultHolder);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***_***REMOVED***=***REMOVED***func;

***REMOVED******REMOVED***//***REMOVED***Convert***REMOVED***methods***REMOVED***by***REMOVED***ary***REMOVED***cap.
***REMOVED******REMOVED***var***REMOVED***pairs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***each(aryMethodKeys,***REMOVED***function(aryKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***each(mapping.aryMethod[aryKey],***REMOVED***function(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***func***REMOVED***=***REMOVED***_[mapping.remap[key]***REMOVED***||***REMOVED***key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(func)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pairs.push([key,***REMOVED***wrap(key,***REMOVED***func,***REMOVED***_)]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});

***REMOVED******REMOVED***//***REMOVED***Convert***REMOVED***remaining***REMOVED***methods.
***REMOVED******REMOVED***each(keys(_),***REMOVED***function(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***func***REMOVED***=***REMOVED***_[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***func***REMOVED***==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***pairs.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(length--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pairs[length][0]***REMOVED***==***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***func.convert***REMOVED***=***REMOVED***createConverter(key,***REMOVED***func);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pairs.push([key,***REMOVED***func]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});

***REMOVED******REMOVED***//***REMOVED***Assign***REMOVED***to***REMOVED***`_`***REMOVED***leaving***REMOVED***`_.prototype`***REMOVED***unchanged***REMOVED***to***REMOVED***allow***REMOVED***chaining.
***REMOVED******REMOVED***each(pairs,***REMOVED***function(pair)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_[pair[0]]***REMOVED***=***REMOVED***pair[1];
***REMOVED******REMOVED***});

***REMOVED******REMOVED***_.convert***REMOVED***=***REMOVED***convertLib;
***REMOVED******REMOVED***_.placeholder***REMOVED***=***REMOVED***_;

***REMOVED******REMOVED***//***REMOVED***Assign***REMOVED***aliases.
***REMOVED******REMOVED***each(keys(_),***REMOVED***function(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***each(mapping.realToAlias[key]***REMOVED***||***REMOVED***[],***REMOVED***function(alias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_[alias]***REMOVED***=***REMOVED***_[key];
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});

***REMOVED******REMOVED***return***REMOVED***_;
}

module.exports***REMOVED***=***REMOVED***baseConvert;
