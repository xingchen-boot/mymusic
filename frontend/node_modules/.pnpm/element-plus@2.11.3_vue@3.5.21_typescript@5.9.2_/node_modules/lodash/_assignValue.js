var***REMOVED***baseAssignValue***REMOVED***=***REMOVED***require('./_baseAssignValue'),
***REMOVED******REMOVED******REMOVED******REMOVED***eq***REMOVED***=***REMOVED***require('./eq');

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/**
***REMOVED*******REMOVED***Assigns***REMOVED***`value`***REMOVED***to***REMOVED***`key`***REMOVED***of***REMOVED***`object`***REMOVED***if***REMOVED***the***REMOVED***existing***REMOVED***value***REMOVED***is***REMOVED***not***REMOVED***equivalent
***REMOVED*******REMOVED***using***REMOVED***[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
***REMOVED*******REMOVED***for***REMOVED***equality***REMOVED***comparisons.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***modify.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***key***REMOVED***The***REMOVED***key***REMOVED***of***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***assign.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***assign.
***REMOVED****/
function***REMOVED***assignValue(object,***REMOVED***key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***objValue***REMOVED***=***REMOVED***object[key];
***REMOVED******REMOVED***if***REMOVED***(!(hasOwnProperty.call(object,***REMOVED***key)***REMOVED***&&***REMOVED***eq(objValue,***REMOVED***value))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(value***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***!(key***REMOVED***in***REMOVED***object)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***baseAssignValue(object,***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED***}
}

module.exports***REMOVED***=***REMOVED***assignValue;
