var***REMOVED***isSymbol***REMOVED***=***REMOVED***require('./isSymbol');

/*****REMOVED***Used***REMOVED***as***REMOVED***references***REMOVED***for***REMOVED***various***REMOVED***`Number`***REMOVED***constants.***REMOVED****/
var***REMOVED***NAN***REMOVED***=***REMOVED***0***REMOVED***/***REMOVED***0;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.toNumber`***REMOVED***which***REMOVED***doesn't***REMOVED***ensure***REMOVED***correct
***REMOVED*******REMOVED***conversions***REMOVED***of***REMOVED***binary,***REMOVED***hexadecimal,***REMOVED***or***REMOVED***octal***REMOVED***string***REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***process.
***REMOVED*******REMOVED***@returns***REMOVED***{number}***REMOVED***Returns***REMOVED***the***REMOVED***number.
***REMOVED****/
function***REMOVED***baseToNumber(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***==***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isSymbol(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***NAN;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***+value;
}

module.exports***REMOVED***=***REMOVED***baseToNumber;
