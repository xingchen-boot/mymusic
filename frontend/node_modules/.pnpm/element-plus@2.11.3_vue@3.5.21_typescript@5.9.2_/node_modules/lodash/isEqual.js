var***REMOVED***baseIsEqual***REMOVED***=***REMOVED***require('./_baseIsEqual');

/**
***REMOVED*******REMOVED***Performs***REMOVED***a***REMOVED***deep***REMOVED***comparison***REMOVED***between***REMOVED***two***REMOVED***values***REMOVED***to***REMOVED***determine***REMOVED***if***REMOVED***they***REMOVED***are
***REMOVED*******REMOVED***equivalent.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***method***REMOVED***supports***REMOVED***comparing***REMOVED***arrays,***REMOVED***array***REMOVED***buffers,***REMOVED***booleans,
***REMOVED*******REMOVED***date***REMOVED***objects,***REMOVED***error***REMOVED***objects,***REMOVED***maps,***REMOVED***numbers,***REMOVED***`Object`***REMOVED***objects,***REMOVED***regexes,
***REMOVED*******REMOVED***sets,***REMOVED***strings,***REMOVED***symbols,***REMOVED***and***REMOVED***typed***REMOVED***arrays.***REMOVED***`Object`***REMOVED***objects***REMOVED***are***REMOVED***compared
***REMOVED*******REMOVED***by***REMOVED***their***REMOVED***own,***REMOVED***not***REMOVED***inherited,***REMOVED***enumerable***REMOVED***properties.***REMOVED***Functions***REMOVED***and***REMOVED***DOM
***REMOVED*******REMOVED***nodes***REMOVED***are***REMOVED***compared***REMOVED***by***REMOVED***strict***REMOVED***equality,***REMOVED***i.e.***REMOVED***`===`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.1.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***other***REMOVED***The***REMOVED***other***REMOVED***value***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***the***REMOVED***values***REMOVED***are***REMOVED***equivalent,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***object***REMOVED***=***REMOVED***{***REMOVED***'a':***REMOVED***1***REMOVED***};
***REMOVED*******REMOVED***var***REMOVED***other***REMOVED***=***REMOVED***{***REMOVED***'a':***REMOVED***1***REMOVED***};
***REMOVED****
***REMOVED*******REMOVED***_.isEqual(object,***REMOVED***other);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***object***REMOVED***===***REMOVED***other;
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****/
function***REMOVED***isEqual(value,***REMOVED***other)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***baseIsEqual(value,***REMOVED***other);
}

module.exports***REMOVED***=***REMOVED***isEqual;
