{"version":3,"file":"store.mjs","sources":["../../../../../../packages/components/cascader-panel/src/store.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***isEqual***REMOVED***}***REMOVED***from***REMOVED***'lodash-unified'\nimport***REMOVED***{***REMOVED***isPropAbsent***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/utils'\nimport***REMOVED***Node***REMOVED***from***REMOVED***'./node'\n\nimport***REMOVED***type***REMOVED***{***REMOVED***Nullable***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/utils'\nimport***REMOVED***type***REMOVED***{\n***REMOVED******REMOVED***CascaderConfig,\n***REMOVED******REMOVED***CascaderNodePathValue,\n***REMOVED******REMOVED***CascaderNodeValue,\n***REMOVED******REMOVED***CascaderOption,\n}***REMOVED***from***REMOVED***'./types'\n\nconst***REMOVED***flatNodes***REMOVED***=***REMOVED***(nodes:***REMOVED***Node[],***REMOVED***leafOnly:***REMOVED***boolean)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***nodes.reduce((res,***REMOVED***node)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.isLeaf)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.push(node)\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!leafOnly***REMOVED***&&***REMOVED***res.push(node)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***res.concat(flatNodes(node.children,***REMOVED***leafOnly))\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res\n***REMOVED******REMOVED***},***REMOVED***[]***REMOVED***as***REMOVED***Node[])\n}\n\nexport***REMOVED***default***REMOVED***class***REMOVED***Store***REMOVED***{\n***REMOVED******REMOVED***readonly***REMOVED***nodes:***REMOVED***Node[]\n***REMOVED******REMOVED***readonly***REMOVED***allNodes:***REMOVED***Node[]\n***REMOVED******REMOVED***readonly***REMOVED***leafNodes:***REMOVED***Node[]\n\n***REMOVED******REMOVED***constructor(data:***REMOVED***CascaderOption[],***REMOVED***readonly***REMOVED***config:***REMOVED***CascaderConfig)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***(data***REMOVED***||***REMOVED***[]).map(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(nodeData)***REMOVED***=>***REMOVED***new***REMOVED***Node(nodeData,***REMOVED***this.config)\n***REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes***REMOVED***=***REMOVED***nodes\n***REMOVED******REMOVED******REMOVED******REMOVED***this.allNodes***REMOVED***=***REMOVED***flatNodes(nodes,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED***this.leafNodes***REMOVED***=***REMOVED***flatNodes(nodes,***REMOVED***true)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getNodes()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getFlattedNodes(leafOnly:***REMOVED***boolean)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***leafOnly***REMOVED***?***REMOVED***this.leafNodes***REMOVED***:***REMOVED***this.allNodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***appendNode(nodeData:***REMOVED***CascaderOption,***REMOVED***parentNode?:***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***parentNode\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***parentNode.appendChild(nodeData)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***Node(nodeData,***REMOVED***this.config)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parentNode)***REMOVED***this.nodes.push(node)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***this.appendAllNodesAndLeafNodes(node)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***appendNodes(nodeDataList:***REMOVED***CascaderOption[],***REMOVED***parentNode:***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeDataList.length***REMOVED***>***REMOVED***0)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodeDataList.forEach((nodeData)***REMOVED***=>***REMOVED***this.appendNode(nodeData,***REMOVED***parentNode))\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentNode***REMOVED***&&***REMOVED***parentNode.isLeaf***REMOVED***&&***REMOVED***this.leafNodes.push(parentNode)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***appendAllNodesAndLeafNodes(node:***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***this.allNodes.push(node)\n***REMOVED******REMOVED******REMOVED******REMOVED***node.isLeaf***REMOVED***&&***REMOVED***this.leafNodes.push(node)\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.children.forEach((subNode)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.appendAllNodesAndLeafNodes(subNode)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***when***REMOVED***checkStrictly,***REMOVED***leaf***REMOVED***node***REMOVED***first\n***REMOVED******REMOVED***getNodeByValue(\n***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***CascaderNodeValue***REMOVED***|***REMOVED***CascaderNodePathValue,\n***REMOVED******REMOVED******REMOVED******REMOVED***leafOnly***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***):***REMOVED***Nullable<Node>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPropAbsent(value))***REMOVED***return***REMOVED***null\n\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.getFlattedNodes(leafOnly).find(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node)***REMOVED***=>***REMOVED***isEqual(node.value,***REMOVED***value)***REMOVED***||***REMOVED***isEqual(node.pathValues,***REMOVED***value)\n***REMOVED******REMOVED******REMOVED******REMOVED***)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node***REMOVED***||***REMOVED***null\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getSameNode(node:***REMOVED***Node):***REMOVED***Nullable<Node>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***return***REMOVED***null\n\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node_***REMOVED***=***REMOVED***this.getFlattedNodes(false).find(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***value,***REMOVED***level***REMOVED***})***REMOVED***=>***REMOVED***isEqual(node.value,***REMOVED***value)***REMOVED***&&***REMOVED***node.level***REMOVED***===***REMOVED***level\n***REMOVED******REMOVED******REMOVED******REMOVED***)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node_***REMOVED***||***REMOVED***null\n***REMOVED******REMOVED***}\n}\n"],"names":[],"mappings":"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"}