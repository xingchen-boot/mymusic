{"version":3,"file":"useCheck.mjs","sources":["../../../../../../../packages/components/tree-v2/src/composables/useCheck.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***getCurrentInstance,***REMOVED***nextTick,***REMOVED***ref,***REMOVED***watch***REMOVED***}***REMOVED***from***REMOVED***'vue'\nimport***REMOVED***{\n***REMOVED******REMOVED***NODE_CHECK,\n***REMOVED******REMOVED***NODE_CHECK_CHANGE,\n***REMOVED******REMOVED***SetOperationEnum,\n}***REMOVED***from***REMOVED***'../virtual-tree'\n\nimport***REMOVED***type***REMOVED***{***REMOVED***CheckboxValueType***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/components/checkbox'\nimport***REMOVED***type***REMOVED***{***REMOVED***Ref***REMOVED***}***REMOVED***from***REMOVED***'vue'\nimport***REMOVED***type***REMOVED***{***REMOVED***Tree,***REMOVED***TreeKey,***REMOVED***TreeNode,***REMOVED***TreeNodeData,***REMOVED***TreeProps***REMOVED***}***REMOVED***from***REMOVED***'../types'\n\nexport***REMOVED***function***REMOVED***useCheck(props:***REMOVED***TreeProps,***REMOVED***tree:***REMOVED***Ref<Tree***REMOVED***|***REMOVED***undefined>)***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***checkedKeys***REMOVED***=***REMOVED***ref<Set<TreeKey>>(new***REMOVED***Set())\n***REMOVED******REMOVED***const***REMOVED***indeterminateKeys***REMOVED***=***REMOVED***ref<Set<TreeKey>>(new***REMOVED***Set())\n***REMOVED******REMOVED***const***REMOVED***{***REMOVED***emit***REMOVED***}***REMOVED***=***REMOVED***getCurrentInstance()!\n\n***REMOVED******REMOVED***watch(\n***REMOVED******REMOVED******REMOVED******REMOVED***[()***REMOVED***=>***REMOVED***tree.value,***REMOVED***()***REMOVED***=>***REMOVED***props.defaultCheckedKeys],\n***REMOVED******REMOVED******REMOVED******REMOVED***()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nextTick(()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_setCheckedKeys(props.defaultCheckedKeys)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***immediate:***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***)\n\n***REMOVED******REMOVED***const***REMOVED***updateCheckedKeys***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tree.value***REMOVED***||***REMOVED***!props.showCheckbox***REMOVED***||***REMOVED***props.checkStrictly)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***levelTreeNodeMap,***REMOVED***maxLevel***REMOVED***}***REMOVED***=***REMOVED***tree.value\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeySet***REMOVED***=***REMOVED***checkedKeys.value\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indeterminateKeySet***REMOVED***=***REMOVED***new***REMOVED***Set<TreeKey>()\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It***REMOVED***is***REMOVED***easier***REMOVED***to***REMOVED***determine***REMOVED***the***REMOVED***indeterminate***REMOVED***state***REMOVED***by\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***traversing***REMOVED***from***REMOVED***bottom***REMOVED***to***REMOVED***top\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***leaf***REMOVED***nodes***REMOVED***not***REMOVED***have***REMOVED***indeterminate***REMOVED***status***REMOVED***and***REMOVED***can***REMOVED***be***REMOVED***skipped\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***level***REMOVED***=***REMOVED***maxLevel***REMOVED***-***REMOVED***1;***REMOVED***level***REMOVED***>=***REMOVED***1;***REMOVED***--level)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***levelTreeNodeMap.get(level)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nodes)***REMOVED***continue\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach((node)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node.children\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Whether***REMOVED***all***REMOVED***child***REMOVED***nodes***REMOVED***are***REMOVED***selected\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allChecked***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Whether***REMOVED***a***REMOVED***child***REMOVED***node***REMOVED***is***REMOVED***selected\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasChecked***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***childNode***REMOVED***of***REMOVED***children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***childNode.key\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkedKeySet.has(key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChecked***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(indeterminateKeySet.has(key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allChecked***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChecked***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allChecked***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allChecked)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.add(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChecked)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeySet.add(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.delete(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.delete(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeySet.delete(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value***REMOVED***=***REMOVED***indeterminateKeySet\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***const***REMOVED***isChecked***REMOVED***=***REMOVED***(node:***REMOVED***TreeNode)***REMOVED***=>***REMOVED***checkedKeys.value.has(node.key)\n\n***REMOVED******REMOVED***const***REMOVED***isIndeterminate***REMOVED***=***REMOVED***(node:***REMOVED***TreeNode)***REMOVED***=>\n***REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value.has(node.key)\n\n***REMOVED******REMOVED***const***REMOVED***toggleCheckbox***REMOVED***=***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***TreeNode,\n***REMOVED******REMOVED******REMOVED******REMOVED***isChecked:***REMOVED***CheckboxValueType,\n***REMOVED******REMOVED******REMOVED******REMOVED***nodeClick***REMOVED***=***REMOVED***true,\n***REMOVED******REMOVED******REMOVED******REMOVED***immediateUpdate***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED***)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeySet***REMOVED***=***REMOVED***checkedKeys.value\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toggle***REMOVED***=***REMOVED***(node:***REMOVED***TreeNode,***REMOVED***checked:***REMOVED***CheckboxValueType)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet[checked***REMOVED***?***REMOVED***SetOperationEnum.ADD***REMOVED***:***REMOVED***SetOperationEnum.DELETE](\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.key\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node.children\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.checkStrictly***REMOVED***&&***REMOVED***children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.forEach((childNode)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!childNode.disabled)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggle(childNode,***REMOVED***checked)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***toggle(node,***REMOVED***isChecked)\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(immediateUpdate)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys()\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeClick)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterNodeCheck(node,***REMOVED***isChecked)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***const***REMOVED***afterNodeCheck***REMOVED***=***REMOVED***(node:***REMOVED***TreeNode,***REMOVED***checked:***REMOVED***CheckboxValueType)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***checkedNodes,***REMOVED***checkedKeys***REMOVED***}***REMOVED***=***REMOVED***getChecked()\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***halfCheckedNodes,***REMOVED***halfCheckedKeys***REMOVED***}***REMOVED***=***REMOVED***getHalfChecked()\n***REMOVED******REMOVED******REMOVED******REMOVED***emit(NODE_CHECK,***REMOVED***node.data,***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***emit(NODE_CHECK_CHANGE,***REMOVED***node.data,***REMOVED***checked)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***expose\n***REMOVED******REMOVED***function***REMOVED***getCheckedKeys(leafOnly***REMOVED***=***REMOVED***false):***REMOVED***TreeKey[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChecked(leafOnly).checkedKeys\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***getCheckedNodes(leafOnly***REMOVED***=***REMOVED***false):***REMOVED***TreeNodeData[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChecked(leafOnly).checkedNodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***getHalfCheckedKeys():***REMOVED***TreeKey[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getHalfChecked().halfCheckedKeys\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***getHalfCheckedNodes():***REMOVED***TreeNodeData[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getHalfChecked().halfCheckedNodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***getChecked(leafOnly***REMOVED***=***REMOVED***false):***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***TreeKey[]\n***REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes:***REMOVED***TreeNodeData[]\n***REMOVED******REMOVED***}***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedNodes:***REMOVED***TreeNodeData[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys:***REMOVED***TreeKey[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tree?.value***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys.value.forEach((key)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***(!leafOnly***REMOVED***||***REMOVED***(leafOnly***REMOVED***&&***REMOVED***node.isLeaf)))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys.push(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes.push(node.data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***keys,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***getHalfChecked():***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys:***REMOVED***TreeKey[]\n***REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes:***REMOVED***TreeNodeData[]\n***REMOVED******REMOVED***}***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***halfCheckedNodes:***REMOVED***TreeNodeData[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***halfCheckedKeys:***REMOVED***TreeKey[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tree?.value***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value.forEach((key)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys.push(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes.push(node.data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***setCheckedKeys(keys:***REMOVED***TreeKey[])***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys.value.clear()\n***REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value.clear()\n***REMOVED******REMOVED******REMOVED******REMOVED***nextTick(()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_setCheckedKeys(keys)\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***setChecked(key:***REMOVED***TreeKey,***REMOVED***isChecked:***REMOVED***boolean)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tree?.value***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***tree.value.treeNodeMap.get(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox(node,***REMOVED***isChecked,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***_setCheckedKeys(keys:***REMOVED***TreeKey[])***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tree?.value)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.showCheckbox***REMOVED***&&***REMOVED***treeNodeMap***REMOVED***&&***REMOVED***keys?.length***REMOVED***>***REMOVED***0)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***!isChecked(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox(node,***REMOVED***true,***REMOVED***false,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox,\n***REMOVED******REMOVED******REMOVED******REMOVED***isChecked,\n***REMOVED******REMOVED******REMOVED******REMOVED***isIndeterminate,\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***expose\n***REMOVED******REMOVED******REMOVED******REMOVED***getCheckedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED***getCheckedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedKeys,\n***REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedNodes,\n***REMOVED******REMOVED******REMOVED******REMOVED***setChecked,\n***REMOVED******REMOVED******REMOVED******REMOVED***setCheckedKeys,\n***REMOVED******REMOVED***}\n}\n"],"names":[],"mappings":"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"}