import***REMOVED***{***REMOVED***ref,***REMOVED***computed***REMOVED***}***REMOVED***from***REMOVED***'vue';
import***REMOVED***{***REMOVED***isFunction***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';

function***REMOVED***useFilter(props,***REMOVED***tree)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***hiddenNodeKeySet***REMOVED***=***REMOVED***ref(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set([]));
***REMOVED******REMOVED***const***REMOVED***hiddenExpandIconKeySet***REMOVED***=***REMOVED***ref(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set([]));
***REMOVED******REMOVED***const***REMOVED***filterable***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isFunction(props.filterMethod);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***function***REMOVED***doFilter(query)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!filterable.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expandKeySet***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hiddenExpandIconKeys***REMOVED***=***REMOVED***hiddenExpandIconKeySet.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hiddenKeys***REMOVED***=***REMOVED***hiddenNodeKeySet.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***family***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***((_a***REMOVED***=***REMOVED***tree.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.treeNodes)***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filter***REMOVED***=***REMOVED***props.filterMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.clear();
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***traverse(nodes2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes2.forEach((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.push(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(filter***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***filter(query,***REMOVED***node.data,***REMOVED***node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.forEach((member)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expandKeySet.add(member.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***member.expanded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expanded***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.isLeaf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.add(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node.children;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(children);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.isLeaf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!expandKeySet.has(node.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.add(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allHidden***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***childNode***REMOVED***of***REMOVED***children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hiddenKeys.has(childNode.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allHidden***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allHidden)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeys.add(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeys.delete(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***traverse(nodes);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expandKeySet;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***isForceHiddenExpandIcon(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hiddenExpandIconKeySet.value.has(node.key);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeySet,
***REMOVED******REMOVED******REMOVED******REMOVED***hiddenNodeKeySet,
***REMOVED******REMOVED******REMOVED******REMOVED***doFilter,
***REMOVED******REMOVED******REMOVED******REMOVED***isForceHiddenExpandIcon
***REMOVED******REMOVED***};
}

export***REMOVED***{***REMOVED***useFilter***REMOVED***};
//#***REMOVED***sourceMappingURL=useFilter.mjs.map
