import***REMOVED***{***REMOVED***computed,***REMOVED***watch***REMOVED***}***REMOVED***from***REMOVED***'vue';
import***REMOVED***{***REMOVED***CHECKED_CHANGE_EVENT***REMOVED***}***REMOVED***from***REMOVED***'../transfer-panel2.mjs';
import***REMOVED***{***REMOVED***usePropsAlias***REMOVED***}***REMOVED***from***REMOVED***'./use-props-alias.mjs';
import***REMOVED***{***REMOVED***isFunction***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';

const***REMOVED***useCheck***REMOVED***=***REMOVED***(props,***REMOVED***panelState,***REMOVED***emit)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***propsAlias***REMOVED***=***REMOVED***usePropsAlias(props);
***REMOVED******REMOVED***const***REMOVED***filteredData***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props.data.filter((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(props.filterMethod))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props.filterMethod(panelState.query,***REMOVED***item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***label***REMOVED***=***REMOVED***String(item[propsAlias.value.label]***REMOVED***||***REMOVED***item[propsAlias.value.key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***label.toLowerCase().includes(panelState.query.toLowerCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***checkableData***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***filteredData.value.filter((item)***REMOVED***=>***REMOVED***!item[propsAlias.value.disabled]));
***REMOVED******REMOVED***const***REMOVED***checkedSummary***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedLength***REMOVED***=***REMOVED***panelState.checked.length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dataLength***REMOVED***=***REMOVED***props.data.length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***noChecked,***REMOVED***hasChecked***REMOVED***}***REMOVED***=***REMOVED***props.format;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noChecked***REMOVED***&&***REMOVED***hasChecked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***checkedLength***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***hasChecked.replace(/\${checked}/g,***REMOVED***checkedLength.toString()).replace(/\${total}/g,***REMOVED***dataLength.toString())***REMOVED***:***REMOVED***noChecked.replace(/\${total}/g,***REMOVED***dataLength.toString());
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${checkedLength}/${dataLength}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***isIndeterminate***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedLength***REMOVED***=***REMOVED***panelState.checked.length;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***checkedLength***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***checkedLength***REMOVED***<***REMOVED***checkableData.value.length;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***updateAllChecked***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkableDataKeys***REMOVED***=***REMOVED***checkableData.value.map((item)***REMOVED***=>***REMOVED***item[propsAlias.value.key]);
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.allChecked***REMOVED***=***REMOVED***checkableDataKeys.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***checkableDataKeys.every((item)***REMOVED***=>***REMOVED***panelState.checked.includes(item));
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***handleAllCheckedChange***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checked***REMOVED***=***REMOVED***value***REMOVED***?***REMOVED***checkableData.value.map((item)***REMOVED***=>***REMOVED***item[propsAlias.value.key])***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED***};
***REMOVED******REMOVED***watch(()***REMOVED***=>***REMOVED***panelState.checked,***REMOVED***(val,***REMOVED***oldVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***updateAllChecked();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(panelState.checkChangeByUser)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***movedKeys***REMOVED***=***REMOVED***val.concat(oldVal).filter((v)***REMOVED***=>***REMOVED***!val.includes(v)***REMOVED***||***REMOVED***!oldVal.includes(v));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(CHECKED_CHANGE_EVENT,***REMOVED***val,***REMOVED***movedKeys);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit(CHECKED_CHANGE_EVENT,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***panelState.checkChangeByUser***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***watch(checkableData,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***updateAllChecked();
***REMOVED******REMOVED***});
***REMOVED******REMOVED***watch(()***REMOVED***=>***REMOVED***props.data,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checked***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filteredDataKeys***REMOVED***=***REMOVED***filteredData.value.map((item)***REMOVED***=>***REMOVED***item[propsAlias.value.key]);
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checked.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(filteredDataKeys.includes(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checked.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checkChangeByUser***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checked***REMOVED***=***REMOVED***checked;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***watch(()***REMOVED***=>***REMOVED***props.defaultChecked,***REMOVED***(val,***REMOVED***oldVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldVal***REMOVED***&&***REMOVED***val.length***REMOVED***===***REMOVED***oldVal.length***REMOVED***&&***REMOVED***val.every((item)***REMOVED***=>***REMOVED***oldVal.includes(item)))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checked***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkableDataKeys***REMOVED***=***REMOVED***checkableData.value.map((item)***REMOVED***=>***REMOVED***item[propsAlias.value.key]);
***REMOVED******REMOVED******REMOVED******REMOVED***val.forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkableDataKeys.includes(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checked.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checkChangeByUser***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***panelState.checked***REMOVED***=***REMOVED***checked;
***REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***immediate:***REMOVED***true
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filteredData,
***REMOVED******REMOVED******REMOVED******REMOVED***checkableData,
***REMOVED******REMOVED******REMOVED******REMOVED***checkedSummary,
***REMOVED******REMOVED******REMOVED******REMOVED***isIndeterminate,
***REMOVED******REMOVED******REMOVED******REMOVED***updateAllChecked,
***REMOVED******REMOVED******REMOVED******REMOVED***handleAllCheckedChange
***REMOVED******REMOVED***};
};

export***REMOVED***{***REMOVED***useCheck***REMOVED***};
//#***REMOVED***sourceMappingURL=use-check.mjs.map
