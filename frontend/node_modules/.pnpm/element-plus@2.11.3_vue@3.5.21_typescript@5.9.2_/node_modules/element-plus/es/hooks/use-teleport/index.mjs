import***REMOVED***{***REMOVED***ref,***REMOVED***onUnmounted,***REMOVED***h,***REMOVED***Teleport***REMOVED***}***REMOVED***from***REMOVED***'vue';
import***REMOVED***{***REMOVED***createGlobalNode,***REMOVED***removeGlobalNode***REMOVED***}***REMOVED***from***REMOVED***'../../utils/vue/global-node.mjs';
import***REMOVED***{***REMOVED***isClient***REMOVED***}***REMOVED***from***REMOVED***'@vueuse/core';
import***REMOVED***{***REMOVED***NOOP***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';

const***REMOVED***useTeleport***REMOVED***=***REMOVED***(contentRenderer,***REMOVED***appendToBody)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isTeleportVisible***REMOVED***=***REMOVED***ref(false);
***REMOVED******REMOVED***if***REMOVED***(!isClient)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***showTeleport:***REMOVED***NOOP,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hideTeleport:***REMOVED***NOOP,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderTeleport:***REMOVED***NOOP
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***$el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***showTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible.value***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***($el***REMOVED***!==***REMOVED***null)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***$el***REMOVED***=***REMOVED***createGlobalNode();
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***hideTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible.value***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***($el***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeGlobalNode($el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***renderTeleport***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***appendToBody.value***REMOVED***!==***REMOVED***true***REMOVED***?***REMOVED***contentRenderer()***REMOVED***:***REMOVED***isTeleportVisible.value***REMOVED***?***REMOVED***[h(Teleport,***REMOVED***{***REMOVED***to:***REMOVED***$el***REMOVED***},***REMOVED***contentRenderer())]***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***onUnmounted(hideTeleport);
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isTeleportVisible,
***REMOVED******REMOVED******REMOVED******REMOVED***showTeleport,
***REMOVED******REMOVED******REMOVED******REMOVED***hideTeleport,
***REMOVED******REMOVED******REMOVED******REMOVED***renderTeleport
***REMOVED******REMOVED***};
};

export***REMOVED***{***REMOVED***useTeleport***REMOVED***};
//#***REMOVED***sourceMappingURL=index.mjs.map
