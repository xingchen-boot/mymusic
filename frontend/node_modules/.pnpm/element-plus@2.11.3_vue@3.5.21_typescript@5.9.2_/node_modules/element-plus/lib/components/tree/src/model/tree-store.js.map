{"version":3,"file":"tree-store.js","sources":["../../../../../../../packages/components/tree/src/model/tree-store.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***nextTick***REMOVED***}***REMOVED***from***REMOVED***'vue'\nimport***REMOVED***{***REMOVED***isNil***REMOVED***}***REMOVED***from***REMOVED***'lodash-unified'\nimport***REMOVED***{***REMOVED***NOOP,***REMOVED***hasOwn,***REMOVED***isObject,***REMOVED***isPropAbsent***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/utils'\nimport***REMOVED***Node***REMOVED***from***REMOVED***'./node'\nimport***REMOVED***{***REMOVED***getNodeKey***REMOVED***}***REMOVED***from***REMOVED***'./util'\n\nimport***REMOVED***type***REMOVED***{\n***REMOVED******REMOVED***FilterNodeMethodFunction,\n***REMOVED******REMOVED***FilterValue,\n***REMOVED******REMOVED***LoadFunction,\n***REMOVED******REMOVED***TreeData,\n***REMOVED******REMOVED***TreeKey,\n***REMOVED******REMOVED***TreeNodeData,\n***REMOVED******REMOVED***TreeOptionProps,\n***REMOVED******REMOVED***TreeStoreNodesMap,\n***REMOVED******REMOVED***TreeStoreOptions,\n}***REMOVED***from***REMOVED***'../tree.type'\n\nexport***REMOVED***default***REMOVED***class***REMOVED***TreeStore***REMOVED***{\n***REMOVED******REMOVED***currentNode:***REMOVED***Node***REMOVED***|***REMOVED***null\n***REMOVED******REMOVED***currentNodeKey:***REMOVED***TreeKey***REMOVED***|***REMOVED***null\n***REMOVED******REMOVED***nodesMap:***REMOVED***TreeStoreNodesMap\n***REMOVED******REMOVED***root!:***REMOVED***Node\n***REMOVED******REMOVED***data!:***REMOVED***TreeData\n***REMOVED******REMOVED***lazy***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***load?:***REMOVED***LoadFunction\n***REMOVED******REMOVED***filterNodeMethod?:***REMOVED***FilterNodeMethodFunction\n***REMOVED******REMOVED***key!:***REMOVED***TreeKey\n***REMOVED******REMOVED***defaultCheckedKeys?:***REMOVED***TreeKey[]\n***REMOVED******REMOVED***checkStrictly***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***defaultExpandedKeys?:***REMOVED***TreeKey[]\n***REMOVED******REMOVED***autoExpandParent***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***defaultExpandAll***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***checkDescendants***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***props!:***REMOVED***TreeOptionProps\n\n***REMOVED******REMOVED***constructor(options:***REMOVED***TreeStoreOptions)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***=***REMOVED***null\n***REMOVED******REMOVED******REMOVED******REMOVED***this.currentNodeKey***REMOVED***=***REMOVED***null\n\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***option***REMOVED***in***REMOVED***options)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(options,***REMOVED***option))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this[option]***REMOVED***=***REMOVED***options[option]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***this.nodesMap***REMOVED***=***REMOVED***{}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***initialize()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***new***REMOVED***Node({\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***this.data,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store:***REMOVED***this,\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***this.root.initialize()\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.lazy***REMOVED***&&***REMOVED***this.load)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loadFn***REMOVED***=***REMOVED***this.load\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loadFn(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(data)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.doCreateChildren(data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._initDefaultCheckedNodes()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***NOOP\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._initDefaultCheckedNodes()\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***filter(value:***REMOVED***FilterValue):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filterNodeMethod***REMOVED***=***REMOVED***this.filterNodeMethod\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lazy***REMOVED***=***REMOVED***this.lazy\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traverse***REMOVED***=***REMOVED***async***REMOVED***function***REMOVED***(node:***REMOVED***TreeStore***REMOVED***|***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childNodes***REMOVED***=***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root.childNodes\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(node***REMOVED***as***REMOVED***Node).childNodes\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[index,***REMOVED***child]***REMOVED***of***REMOVED***childNodes.entries())***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child.visible***REMOVED***=***REMOVED***!!filterNodeMethod?.call(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child.data,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***%***REMOVED***80***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***index***REMOVED***>***REMOVED***0)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***nextTick()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***traverse(child)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(node***REMOVED***as***REMOVED***Node).visible***REMOVED***&&***REMOVED***childNodes.length)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allHidden***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allHidden***REMOVED***=***REMOVED***!childNodes.some((child)***REMOVED***=>***REMOVED***child.visible)\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node***REMOVED***as***REMOVED***TreeStore).root)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;(node***REMOVED***as***REMOVED***TreeStore).root.visible***REMOVED***=***REMOVED***allHidden***REMOVED***===***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;(node***REMOVED***as***REMOVED***Node).visible***REMOVED***=***REMOVED***allHidden***REMOVED***===***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!value)***REMOVED***return\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node***REMOVED***as***REMOVED***Node).visible***REMOVED***&&***REMOVED***!(node***REMOVED***as***REMOVED***Node).isLeaf)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!lazy***REMOVED***||***REMOVED***(node***REMOVED***as***REMOVED***Node).loaded)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;(node***REMOVED***as***REMOVED***Node).expand()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***traverse(this)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setData(newVal:***REMOVED***TreeData):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instanceChanged***REMOVED***=***REMOVED***newVal***REMOVED***!==***REMOVED***this.root.data\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instanceChanged)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nodesMap***REMOVED***=***REMOVED***{}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.setData(newVal)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._initDefaultCheckedNodes()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setCurrentNodeKey(this.currentNodeKey)\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.updateChildren()\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getNode(data:***REMOVED***TreeKey***REMOVED***|***REMOVED***TreeNodeData***REMOVED***|***REMOVED***Node):***REMOVED***Node***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(data***REMOVED***instanceof***REMOVED***Node)***REMOVED***return***REMOVED***data\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***isObject(data)***REMOVED***?***REMOVED***getNodeKey(this.key,***REMOVED***data)***REMOVED***:***REMOVED***data\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodesMap[key]***REMOVED***||***REMOVED***null\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***insertBefore(\n***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***TreeNodeData,\n***REMOVED******REMOVED******REMOVED******REMOVED***refData:***REMOVED***TreeKey***REMOVED***|***REMOVED***TreeNodeData***REMOVED***|***REMOVED***Node\n***REMOVED******REMOVED***):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refNode***REMOVED***=***REMOVED***this.getNode(refData)\n***REMOVED******REMOVED******REMOVED******REMOVED***refNode.parent?.insertBefore({***REMOVED***data***REMOVED***},***REMOVED***refNode)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***insertAfter(\n***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***TreeNodeData,\n***REMOVED******REMOVED******REMOVED******REMOVED***refData:***REMOVED***TreeKey***REMOVED***|***REMOVED***TreeNodeData***REMOVED***|***REMOVED***Node\n***REMOVED******REMOVED***):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refNode***REMOVED***=***REMOVED***this.getNode(refData)\n***REMOVED******REMOVED******REMOVED******REMOVED***refNode.parent?.insertAfter({***REMOVED***data***REMOVED***},***REMOVED***refNode)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***remove(data:***REMOVED***TreeNodeData***REMOVED***|***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.getNode(data)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***node.parent)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***===***REMOVED***this.currentNode)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***=***REMOVED***null\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parent.removeChild(node)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***append(data:***REMOVED***TreeNodeData,***REMOVED***parentData:***REMOVED***TreeNodeData***REMOVED***|***REMOVED***TreeKey***REMOVED***|***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentNode***REMOVED***=***REMOVED***!isPropAbsent(parentData)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.getNode(parentData)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.root\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentNode)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentNode.insertChild({***REMOVED***data***REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***_initDefaultCheckedNodes():***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultCheckedKeys***REMOVED***=***REMOVED***this.defaultCheckedKeys***REMOVED***||***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodesMap***REMOVED***=***REMOVED***this.nodesMap\n\n***REMOVED******REMOVED******REMOVED******REMOVED***defaultCheckedKeys.forEach((checkedKey)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***nodesMap[checkedKey]\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(true,***REMOVED***!this.checkStrictly)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***_initDefaultCheckedNode(node:***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultCheckedKeys***REMOVED***=***REMOVED***this.defaultCheckedKeys***REMOVED***||***REMOVED***[]\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isNil(node.key)***REMOVED***&&***REMOVED***defaultCheckedKeys.includes(node.key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(true,***REMOVED***!this.checkStrictly)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setDefaultCheckedKey(newVal:***REMOVED***TreeKey[]):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newVal***REMOVED***!==***REMOVED***this.defaultCheckedKeys)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.defaultCheckedKeys***REMOVED***=***REMOVED***newVal\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._initDefaultCheckedNodes()\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***registerNode(node:***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.key\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node***REMOVED***||***REMOVED***!node.data)***REMOVED***return\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!key)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nodesMap[node.id]***REMOVED***=***REMOVED***node\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeKey***REMOVED***=***REMOVED***node.key\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isNil(nodeKey))***REMOVED***this.nodesMap[nodeKey]***REMOVED***=***REMOVED***node\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***deregisterNode(node:***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.key\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!key***REMOVED***||***REMOVED***!node***REMOVED***||***REMOVED***!node.data)***REMOVED***return\n\n***REMOVED******REMOVED******REMOVED******REMOVED***node.childNodes.forEach((child)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deregisterNode(child)\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n\n***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.nodesMap[node.key!]\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getCheckedNodes(\n***REMOVED******REMOVED******REMOVED******REMOVED***leafOnly***REMOVED***=***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***includeHalfChecked***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED***):***REMOVED***TreeNodeData[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedNodes:***REMOVED***TreeNodeData[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traverse***REMOVED***=***REMOVED***function***REMOVED***(node:***REMOVED***TreeStore***REMOVED***|***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childNodes***REMOVED***=***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root.childNodes\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(node***REMOVED***as***REMOVED***Node).childNodes\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childNodes.forEach((child)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(child.checked***REMOVED***||***REMOVED***(includeHalfChecked***REMOVED***&&***REMOVED***child.indeterminate))***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!leafOnly***REMOVED***||***REMOVED***(leafOnly***REMOVED***&&***REMOVED***child.isLeaf))\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes.push(child.data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(child)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***traverse(this)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***checkedNodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getCheckedKeys(leafOnly***REMOVED***=***REMOVED***false):***REMOVED***TreeKey[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getCheckedNodes(leafOnly).map((data)***REMOVED***=>***REMOVED***(data***REMOVED***||***REMOVED***{})[this.key])\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getHalfCheckedNodes():***REMOVED***TreeNodeData[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes:***REMOVED***TreeNodeData[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traverse***REMOVED***=***REMOVED***function***REMOVED***(node:***REMOVED***TreeStore***REMOVED***|***REMOVED***Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childNodes***REMOVED***=***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(node***REMOVED***as***REMOVED***TreeStore).root.childNodes\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(node***REMOVED***as***REMOVED***Node).childNodes\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childNodes.forEach((child)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.indeterminate)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(child.data)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(child)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***traverse(this)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getHalfCheckedKeys():***REMOVED***TreeKey[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.getHalfCheckedNodes().map((data)***REMOVED***=>***REMOVED***(data***REMOVED***||***REMOVED***{})[this.key])\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***_getAllNodes():***REMOVED***Node[]***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allNodes:***REMOVED***Node[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodesMap***REMOVED***=***REMOVED***this.nodesMap\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***nodeKey***REMOVED***in***REMOVED***nodesMap)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(nodesMap,***REMOVED***nodeKey))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allNodes.push(nodesMap[nodeKey])\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***allNodes\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***updateChildren(key:***REMOVED***TreeKey,***REMOVED***data:***REMOVED***TreeData):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.nodesMap[key]\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***return\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childNodes***REMOVED***=***REMOVED***node.childNodes\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***childNodes.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***childNodes[i]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.remove(child.data)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***j***REMOVED***=***REMOVED***data.length;***REMOVED***i***REMOVED***<***REMOVED***j;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***data[i]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.append(child,***REMOVED***node.data)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***_setCheckedKeys(\n***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***TreeKey,\n***REMOVED******REMOVED******REMOVED******REMOVED***leafOnly***REMOVED***=***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***{***REMOVED***[key:***REMOVED***string]:***REMOVED***boolean***REMOVED***}\n***REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allNodes***REMOVED***=***REMOVED***this._getAllNodes().sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a.level***REMOVED***-***REMOVED***b.level)\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cache:***REMOVED***Record<TreeKey,***REMOVED***boolean>***REMOVED***=***REMOVED***Object.create(null)\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(checkedKeys)\n***REMOVED******REMOVED******REMOVED******REMOVED***allNodes.forEach((node)***REMOVED***=>***REMOVED***node.setChecked(false,***REMOVED***false))\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheCheckedChild***REMOVED***=***REMOVED***(node:***REMOVED***Node)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.childNodes.forEach((child)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache[child.data[key]]***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.childNodes?.length)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheCheckedChild(child)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***j***REMOVED***=***REMOVED***allNodes.length;***REMOVED***i***REMOVED***<***REMOVED***j;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***allNodes[i]\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodeKey:***REMOVED***string***REMOVED***=***REMOVED***node.data[key].toString()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checked***REMOVED***=***REMOVED***keys.includes(nodeKey)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!checked)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.checked***REMOVED***&&***REMOVED***!cache[nodeKey])***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(false,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.childNodes.length)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheCheckedChild(node)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.isLeaf***REMOVED***||***REMOVED***this.checkStrictly)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(true,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(true,***REMOVED***true)\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(leafOnly)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(false,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traverse***REMOVED***=***REMOVED***function***REMOVED***(node:***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childNodes***REMOVED***=***REMOVED***node.childNodes\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childNodes.forEach((child)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!child.isLeaf)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child.setChecked(false,***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(child)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(node)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setCheckedNodes(array:***REMOVED***Node[],***REMOVED***leafOnly***REMOVED***=***REMOVED***false):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.key\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeys:***REMOVED***Record<TreeKey,***REMOVED***boolean>***REMOVED***=***REMOVED***{}\n***REMOVED******REMOVED******REMOVED******REMOVED***array.forEach((item)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys[((item***REMOVED***||***REMOVED***{})***REMOVED***as***REMOVED***any)[key]]***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n\n***REMOVED******REMOVED******REMOVED******REMOVED***this._setCheckedKeys(key,***REMOVED***leafOnly,***REMOVED***checkedKeys)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setCheckedKeys(keys:***REMOVED***TreeKey[],***REMOVED***leafOnly***REMOVED***=***REMOVED***false):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***this.defaultCheckedKeys***REMOVED***=***REMOVED***keys\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.key\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeys:***REMOVED***Record<TreeKey,***REMOVED***boolean>***REMOVED***=***REMOVED***{}\n***REMOVED******REMOVED******REMOVED******REMOVED***keys.forEach((key)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys[key]***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n\n***REMOVED******REMOVED******REMOVED******REMOVED***this._setCheckedKeys(key,***REMOVED***leafOnly,***REMOVED***checkedKeys)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setDefaultExpandedKeys(keys:***REMOVED***TreeKey[])***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***keys***REMOVED***||***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***this.defaultExpandedKeys***REMOVED***=***REMOVED***keys\n***REMOVED******REMOVED******REMOVED******REMOVED***keys.forEach((key)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.getNode(key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***node.expand(null,***REMOVED***this.autoExpandParent)\n***REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setChecked(\n***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***TreeKey***REMOVED***|***REMOVED***TreeNodeData,\n***REMOVED******REMOVED******REMOVED******REMOVED***checked:***REMOVED***boolean,\n***REMOVED******REMOVED******REMOVED******REMOVED***deep:***REMOVED***boolean\n***REMOVED******REMOVED***):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.getNode(data)\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setChecked(!!checked,***REMOVED***deep)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***getCurrentNode()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.currentNode\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setCurrentNode(currentNode:***REMOVED***Node):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevCurrentNode***REMOVED***=***REMOVED***this.currentNode\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevCurrentNode)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prevCurrentNode.isCurrent***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***=***REMOVED***currentNode\n***REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode.isCurrent***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setUserCurrentNode(node:***REMOVED***Node,***REMOVED***shouldAutoExpandParent***REMOVED***=***REMOVED***true):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***(node***REMOVED***as***REMOVED***any)[this.key]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currNode***REMOVED***=***REMOVED***this.nodesMap[key]\n***REMOVED******REMOVED******REMOVED******REMOVED***this.setCurrentNode(currNode)\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldAutoExpandParent***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode.level***REMOVED***>***REMOVED***1\n***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode.parent?.expand(null,***REMOVED***true)\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***setCurrentNodeKey(key:***REMOVED***TreeKey***REMOVED***|***REMOVED***null,***REMOVED***shouldAutoExpandParent***REMOVED***=***REMOVED***true):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***this.currentNodeKey***REMOVED***=***REMOVED***key\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPropAbsent(key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***&&***REMOVED***(this.currentNode.isCurrent***REMOVED***=***REMOVED***false)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***=***REMOVED***null\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***this.getNode(key)\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setCurrentNode(node)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldAutoExpandParent***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode.level***REMOVED***>***REMOVED***1\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.currentNode.parent?.expand(null,***REMOVED***true)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n}\n"],"names":["hasOwn","Node","NOOP","nextTick","isObject","getNodeKey","isPropAbsent","isNil"],"mappings":"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"}