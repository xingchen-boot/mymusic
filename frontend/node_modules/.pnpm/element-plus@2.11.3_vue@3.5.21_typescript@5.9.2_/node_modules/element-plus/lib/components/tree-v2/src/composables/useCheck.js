'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***virtualTree***REMOVED***=***REMOVED***require('../virtual-tree.js');

function***REMOVED***useCheck(props,***REMOVED***tree)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***checkedKeys***REMOVED***=***REMOVED***vue.ref(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set());
***REMOVED******REMOVED***const***REMOVED***indeterminateKeys***REMOVED***=***REMOVED***vue.ref(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set());
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***emit***REMOVED***}***REMOVED***=***REMOVED***vue.getCurrentInstance();
***REMOVED******REMOVED***vue.watch([()***REMOVED***=>***REMOVED***tree.value,***REMOVED***()***REMOVED***=>***REMOVED***props.defaultCheckedKeys],***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***vue.nextTick(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_setCheckedKeys(props.defaultCheckedKeys);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***immediate:***REMOVED***true
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***updateCheckedKeys***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!tree.value***REMOVED***||***REMOVED***!props.showCheckbox***REMOVED***||***REMOVED***props.checkStrictly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***levelTreeNodeMap,***REMOVED***maxLevel***REMOVED***}***REMOVED***=***REMOVED***tree.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeySet***REMOVED***=***REMOVED***checkedKeys.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indeterminateKeySet***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***level***REMOVED***=***REMOVED***maxLevel***REMOVED***-***REMOVED***1;***REMOVED***level***REMOVED***>=***REMOVED***1;***REMOVED***--level)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***levelTreeNodeMap.get(level);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nodes)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node.children;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allChecked***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasChecked***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***childNode***REMOVED***of***REMOVED***children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***childNode.key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkedKeySet.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChecked***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(indeterminateKeySet.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allChecked***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChecked***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allChecked***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allChecked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.add(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChecked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeySet.add(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.delete(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet.delete(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeySet.delete(node.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value***REMOVED***=***REMOVED***indeterminateKeySet;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***isChecked***REMOVED***=***REMOVED***(node)***REMOVED***=>***REMOVED***checkedKeys.value.has(node.key);
***REMOVED******REMOVED***const***REMOVED***isIndeterminate***REMOVED***=***REMOVED***(node)***REMOVED***=>***REMOVED***indeterminateKeys.value.has(node.key);
***REMOVED******REMOVED***const***REMOVED***toggleCheckbox***REMOVED***=***REMOVED***(node,***REMOVED***isChecked2,***REMOVED***nodeClick***REMOVED***=***REMOVED***true,***REMOVED***immediateUpdate***REMOVED***=***REMOVED***true)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedKeySet***REMOVED***=***REMOVED***checkedKeys.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toggle***REMOVED***=***REMOVED***(node2,***REMOVED***checked)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeySet[checked***REMOVED***?***REMOVED***virtualTree.SetOperationEnum.ADD***REMOVED***:***REMOVED***virtualTree.SetOperationEnum.DELETE](node2.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node2.children;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.checkStrictly***REMOVED***&&***REMOVED***children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children.forEach((childNode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!childNode.disabled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggle(childNode,***REMOVED***checked);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***toggle(node,***REMOVED***isChecked2);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(immediateUpdate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodeClick)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterNodeCheck(node,***REMOVED***isChecked2);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***afterNodeCheck***REMOVED***=***REMOVED***(node,***REMOVED***checked)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***checkedNodes,***REMOVED***checkedKeys:***REMOVED***checkedKeys2***REMOVED***}***REMOVED***=***REMOVED***getChecked();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***halfCheckedNodes,***REMOVED***halfCheckedKeys***REMOVED***}***REMOVED***=***REMOVED***getHalfChecked();
***REMOVED******REMOVED******REMOVED******REMOVED***emit(virtualTree.NODE_CHECK,***REMOVED***node.data,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***checkedKeys2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***emit(virtualTree.NODE_CHECK_CHANGE,***REMOVED***node.data,***REMOVED***checked);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***function***REMOVED***getCheckedKeys(leafOnly***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChecked(leafOnly).checkedKeys;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getCheckedNodes(leafOnly***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChecked(leafOnly).checkedNodes;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getHalfCheckedKeys()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getHalfChecked().halfCheckedKeys;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getHalfCheckedNodes()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getHalfChecked().halfCheckedNodes;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getChecked(leafOnly***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***checkedNodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((tree***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tree.value)***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys.value.forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***(!leafOnly***REMOVED***||***REMOVED***leafOnly***REMOVED***&&***REMOVED***node.isLeaf))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys.push(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes.push(node.data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys:***REMOVED***keys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkedNodes
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***getHalfChecked()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***halfCheckedNodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***halfCheckedKeys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((tree***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tree.value)***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value.forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys.push(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes.push(node.data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***halfCheckedKeys
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***setCheckedKeys(keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***checkedKeys.value.clear();
***REMOVED******REMOVED******REMOVED******REMOVED***indeterminateKeys.value.clear();
***REMOVED******REMOVED******REMOVED******REMOVED***vue.nextTick(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_setCheckedKeys(keys);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***setChecked(key,***REMOVED***isChecked2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((tree***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tree.value)***REMOVED***&&***REMOVED***props.showCheckbox)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***tree.value.treeNodeMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox(node,***REMOVED***isChecked2,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***_setCheckedKeys(keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tree***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***tree.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***treeNodeMap***REMOVED***}***REMOVED***=***REMOVED***tree.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.showCheckbox***REMOVED***&&***REMOVED***treeNodeMap***REMOVED***&&***REMOVED***(keys***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***keys.length)***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***treeNodeMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node***REMOVED***&&***REMOVED***!isChecked(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox(node,***REMOVED***true,***REMOVED***false,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***updateCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED***toggleCheckbox,
***REMOVED******REMOVED******REMOVED******REMOVED***isChecked,
***REMOVED******REMOVED******REMOVED******REMOVED***isIndeterminate,
***REMOVED******REMOVED******REMOVED******REMOVED***getCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED***getCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED***setChecked,
***REMOVED******REMOVED******REMOVED******REMOVED***setCheckedKeys
***REMOVED******REMOVED***};
}

exports.useCheck***REMOVED***=***REMOVED***useCheck;
//#***REMOVED***sourceMappingURL=useCheck.js.map
