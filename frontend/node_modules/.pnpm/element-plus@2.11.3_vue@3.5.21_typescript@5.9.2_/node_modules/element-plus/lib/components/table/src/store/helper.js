'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***lodashUnified***REMOVED***=***REMOVED***require('lodash-unified');
var***REMOVED***index***REMOVED***=***REMOVED***require('./index.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');

const***REMOVED***InitialStateMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***rowKey:***REMOVED***"rowKey",
***REMOVED******REMOVED***defaultExpandAll:***REMOVED***"defaultExpandAll",
***REMOVED******REMOVED***selectOnIndeterminate:***REMOVED***"selectOnIndeterminate",
***REMOVED******REMOVED***indent:***REMOVED***"indent",
***REMOVED******REMOVED***lazy:***REMOVED***"lazy",
***REMOVED******REMOVED***data:***REMOVED***"data",
***REMOVED******REMOVED***["treeProps.hasChildren"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"lazyColumnIdentifier",
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"hasChildren"
***REMOVED******REMOVED***},
***REMOVED******REMOVED***["treeProps.children"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"childrenColumnName",
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"children"
***REMOVED******REMOVED***},
***REMOVED******REMOVED***["treeProps.checkStrictly"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"checkStrictly",
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***}
};
function***REMOVED***createStore(table,***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!table)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Table***REMOVED***is***REMOVED***required.");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***store***REMOVED***=***REMOVED***index["default"]();
***REMOVED******REMOVED***store.toggleAllSelection***REMOVED***=***REMOVED***lodashUnified.debounce(store._toggleAllSelection,***REMOVED***10);
***REMOVED******REMOVED***Object.keys(InitialStateMap).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handleValue(getArrKeysValue(props,***REMOVED***key),***REMOVED***key,***REMOVED***store);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***proxyTableProps(store,***REMOVED***props);
***REMOVED******REMOVED***return***REMOVED***store;
}
function***REMOVED***proxyTableProps(store,***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED***Object.keys(InitialStateMap).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***getArrKeysValue(props,***REMOVED***key),***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleValue(value,***REMOVED***key,***REMOVED***store);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});
}
function***REMOVED***handleValue(value,***REMOVED***propsKey,***REMOVED***store)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***newVal***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***let***REMOVED***storeKey***REMOVED***=***REMOVED***InitialStateMap[propsKey];
***REMOVED******REMOVED***if***REMOVED***(shared.isObject(storeKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***newVal***REMOVED***=***REMOVED***newVal***REMOVED***||***REMOVED***storeKey.default;
***REMOVED******REMOVED******REMOVED******REMOVED***storeKey***REMOVED***=***REMOVED***storeKey.key;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***store.states[storeKey].value***REMOVED***=***REMOVED***newVal;
}
function***REMOVED***getArrKeysValue(props,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(key.includes("."))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyList***REMOVED***=***REMOVED***key.split(".");
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED******REMOVED******REMOVED***keyList.forEach((k)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value[k];
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props[key];
***REMOVED******REMOVED***}
}

exports.createStore***REMOVED***=***REMOVED***createStore;
//#***REMOVED***sourceMappingURL=helper.js.map
