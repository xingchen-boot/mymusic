{"version":3,"file":"useFilter.js","sources":["../../../../../../../packages/components/tree-v2/src/composables/useFilter.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***computed,***REMOVED***ref***REMOVED***}***REMOVED***from***REMOVED***'vue'\nimport***REMOVED***{***REMOVED***isFunction***REMOVED***}***REMOVED***from***REMOVED***'@element-plus/utils'\n\nimport***REMOVED***type***REMOVED***{***REMOVED***Ref***REMOVED***}***REMOVED***from***REMOVED***'vue'\nimport***REMOVED***type***REMOVED***{***REMOVED***Tree,***REMOVED***TreeKey,***REMOVED***TreeNode,***REMOVED***TreeProps***REMOVED***}***REMOVED***from***REMOVED***'../types'\n\n//***REMOVED***When***REMOVED***the***REMOVED***data***REMOVED***volume***REMOVED***is***REMOVED***very***REMOVED***large***REMOVED***using***REMOVED***filter***REMOVED***will***REMOVED***cause***REMOVED***lag\n//***REMOVED***I***REMOVED***haven't***REMOVED***found***REMOVED***a***REMOVED***better***REMOVED***way***REMOVED***to***REMOVED***optimize***REMOVED***it***REMOVED***for***REMOVED***now\n//***REMOVED***Maybe***REMOVED***this***REMOVED***problem***REMOVED***should***REMOVED***be***REMOVED***left***REMOVED***to***REMOVED***the***REMOVED***server***REMOVED***side\nexport***REMOVED***function***REMOVED***useFilter(props:***REMOVED***TreeProps,***REMOVED***tree:***REMOVED***Ref<Tree***REMOVED***|***REMOVED***undefined>)***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***hiddenNodeKeySet***REMOVED***=***REMOVED***ref<Set<TreeKey>>(new***REMOVED***Set([]))\n***REMOVED******REMOVED***const***REMOVED***hiddenExpandIconKeySet***REMOVED***=***REMOVED***ref<Set<TreeKey>>(new***REMOVED***Set([]))\n\n***REMOVED******REMOVED***const***REMOVED***filterable***REMOVED***=***REMOVED***computed(()***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isFunction(props.filterMethod)\n***REMOVED******REMOVED***})\n\n***REMOVED******REMOVED***function***REMOVED***doFilter(query:***REMOVED***string)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!filterable.value)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expandKeySet***REMOVED***=***REMOVED***new***REMOVED***Set<TreeKey>()\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hiddenExpandIconKeys***REMOVED***=***REMOVED***hiddenExpandIconKeySet.value\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hiddenKeys***REMOVED***=***REMOVED***hiddenNodeKeySet.value\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***family:***REMOVED***TreeNode[]***REMOVED***=***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***tree.value?.treeNodes***REMOVED***||***REMOVED***[]\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filter***REMOVED***=***REMOVED***props.filterMethod\n***REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.clear()\n***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***traverse(nodes:***REMOVED***TreeNode[])***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach((node)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.push(node)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(filter?.(query,***REMOVED***node.data,***REMOVED***node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.forEach((member)***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expandKeySet.add(member.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***member.expanded***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expanded***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.isLeaf)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.add(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***node.children\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(children)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.isLeaf)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!expandKeySet.has(node.key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenKeys.add(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***all***REMOVED***child***REMOVED***nodes***REMOVED***are***REMOVED***hidden,***REMOVED***then***REMOVED***the***REMOVED***expand***REMOVED***icon***REMOVED***will***REMOVED***be***REMOVED***hidden\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***allHidden***REMOVED***=***REMOVED***true\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***childNode***REMOVED***of***REMOVED***children)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hiddenKeys.has(childNode.key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allHidden***REMOVED***=***REMOVED***false\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allHidden)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeys.add(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeys.delete(node.key)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***family.pop()\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***traverse(nodes)\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expandKeySet\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***function***REMOVED***isForceHiddenExpandIcon(node:***REMOVED***TreeNode):***REMOVED***boolean***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hiddenExpandIconKeySet.value.has(node.key)\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***hiddenExpandIconKeySet,\n***REMOVED******REMOVED******REMOVED******REMOVED***hiddenNodeKeySet,\n***REMOVED******REMOVED******REMOVED******REMOVED***doFilter,\n***REMOVED******REMOVED******REMOVED******REMOVED***isForceHiddenExpandIcon,\n***REMOVED******REMOVED***}\n}\n"],"names":["ref","computed","isFunction"],"mappings":"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"}