'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***constants***REMOVED***=***REMOVED***require('./constants.js');
var***REMOVED***lodashUnified***REMOVED***=***REMOVED***require('lodash-unified');
var***REMOVED***event***REMOVED***=***REMOVED***require('../../../constants/event.js');
var***REMOVED***index***REMOVED***=***REMOVED***require('../../../hooks/use-namespace/index.js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');
var***REMOVED***types***REMOVED***=***REMOVED***require('../../../utils/types.js');
var***REMOVED***error***REMOVED***=***REMOVED***require('../../../utils/error.js');

const***REMOVED***SCOPE***REMOVED***=***REMOVED***"ElCollapse";
const***REMOVED***useCollapse***REMOVED***=***REMOVED***(props,***REMOVED***emit)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***activeNames***REMOVED***=***REMOVED***vue.ref(lodashUnified.castArray(props.modelValue));
***REMOVED******REMOVED***const***REMOVED***setActiveNames***REMOVED***=***REMOVED***(_activeNames)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeNames.value***REMOVED***=***REMOVED***_activeNames;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***props.accordion***REMOVED***?***REMOVED***activeNames.value[0]***REMOVED***:***REMOVED***activeNames.value;
***REMOVED******REMOVED******REMOVED******REMOVED***emit(event.UPDATE_MODEL_EVENT,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***emit(event.CHANGE_EVENT,***REMOVED***value);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***handleChange***REMOVED***=***REMOVED***(name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.accordion)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setActiveNames([activeNames.value[0]***REMOVED***===***REMOVED***name***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***name]);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_activeNames***REMOVED***=***REMOVED***[...activeNames.value];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***_activeNames.indexOf(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_activeNames.splice(index,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_activeNames.push(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setActiveNames(_activeNames);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***handleItemClick***REMOVED***=***REMOVED***async***REMOVED***(name)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***beforeCollapse***REMOVED***}***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!beforeCollapse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleChange(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldChange***REMOVED***=***REMOVED***beforeCollapse(name);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPromiseOrBool***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shared.isPromise(shouldChange),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.isBoolean(shouldChange)
***REMOVED******REMOVED******REMOVED******REMOVED***].includes(true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPromiseOrBool)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error.throwError(SCOPE,***REMOVED***"beforeCollapse***REMOVED***must***REMOVED***return***REMOVED***type***REMOVED***`Promise<boolean>`***REMOVED***or***REMOVED***`boolean`");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shared.isPromise(shouldChange))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldChange.then((result)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleChange(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).catch((e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shouldChange)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleChange(name);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.modelValue,***REMOVED***()***REMOVED***=>***REMOVED***activeNames.value***REMOVED***=***REMOVED***lodashUnified.castArray(props.modelValue),***REMOVED***{***REMOVED***deep:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED***vue.provide(constants.collapseContextKey,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeNames,
***REMOVED******REMOVED******REMOVED******REMOVED***handleItemClick
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeNames,
***REMOVED******REMOVED******REMOVED******REMOVED***setActiveNames
***REMOVED******REMOVED***};
};
const***REMOVED***useCollapseDOM***REMOVED***=***REMOVED***(props)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ns***REMOVED***=***REMOVED***index.useNamespace("collapse");
***REMOVED******REMOVED***const***REMOVED***rootKls***REMOVED***=***REMOVED***vue.computed(()***REMOVED***=>***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***ns.b(),
***REMOVED******REMOVED******REMOVED******REMOVED***ns.b(`icon-position-${props.expandIconPosition}`)
***REMOVED******REMOVED***]);
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***rootKls
***REMOVED******REMOVED***};
};

exports.useCollapse***REMOVED***=***REMOVED***useCollapse;
exports.useCollapseDOM***REMOVED***=***REMOVED***useCollapseDOM;
//#***REMOVED***sourceMappingURL=use-collapse.js.map
