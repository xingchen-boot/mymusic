'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***vue***REMOVED***=***REMOVED***require('vue');
var***REMOVED***token***REMOVED***=***REMOVED***require('../../select/src/token.js');
var***REMOVED***treeStore***REMOVED***=***REMOVED***require('./model/tree-store.js');
var***REMOVED***util***REMOVED***=***REMOVED***require('./model/util.js');
var***REMOVED***treeNode***REMOVED***=***REMOVED***require('./tree-node.js');
var***REMOVED***useNodeExpandEventBroadcast***REMOVED***=***REMOVED***require('./model/useNodeExpandEventBroadcast.js');
var***REMOVED***useDragNode***REMOVED***=***REMOVED***require('./model/useDragNode.js');
var***REMOVED***useKeydown***REMOVED***=***REMOVED***require('./model/useKeydown.js');
var***REMOVED***tokens***REMOVED***=***REMOVED***require('./tokens.js');
var***REMOVED***lodashUnified***REMOVED***=***REMOVED***require('lodash-unified');
var***REMOVED***pluginVue_exportHelper***REMOVED***=***REMOVED***require('../../../_virtual/plugin-vue_export-helper.js');
var***REMOVED***runtime***REMOVED***=***REMOVED***require('../../../utils/vue/props/runtime.js');
var***REMOVED***icon***REMOVED***=***REMOVED***require('../../../utils/vue/icon.js');
var***REMOVED***index***REMOVED***=***REMOVED***require('../../../hooks/use-locale/index.js');
var***REMOVED***index$1***REMOVED***=***REMOVED***require('../../../hooks/use-namespace/index.js');
var***REMOVED***constants***REMOVED***=***REMOVED***require('../../form/src/constants.js');

const***REMOVED***_sfc_main***REMOVED***=***REMOVED***vue.defineComponent({
***REMOVED******REMOVED***name:***REMOVED***"ElTree",
***REMOVED******REMOVED***components:***REMOVED***{***REMOVED***ElTreeNode:***REMOVED***treeNode["default"]***REMOVED***},
***REMOVED******REMOVED***props:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***runtime.definePropType(Array),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***()***REMOVED***=>***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***emptyText:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***String
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***renderAfterExpand:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***nodeKey:***REMOVED***String,
***REMOVED******REMOVED******REMOVED******REMOVED***checkStrictly:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultExpandAll:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***expandOnClickNode:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***checkOnClickNode:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***checkOnClickLeaf:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***checkDescendants:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***autoExpandParent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***defaultCheckedKeys:***REMOVED***Array,
***REMOVED******REMOVED******REMOVED******REMOVED***defaultExpandedKeys:***REMOVED***Array,
***REMOVED******REMOVED******REMOVED******REMOVED***currentNodeKey:***REMOVED***[String,***REMOVED***Number],
***REMOVED******REMOVED******REMOVED******REMOVED***renderContent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***runtime.definePropType(Function)
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***showCheckbox:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***draggable:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***allowDrag:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***runtime.definePropType(Function)
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***allowDrop:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***runtime.definePropType(Function)
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Object,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***"children",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***"label",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***disabled:***REMOVED***"disabled"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***lazy:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***highlightCurrent:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***load:***REMOVED***Function,
***REMOVED******REMOVED******REMOVED******REMOVED***filterNodeMethod:***REMOVED***Function,
***REMOVED******REMOVED******REMOVED******REMOVED***accordion:***REMOVED***Boolean,
***REMOVED******REMOVED******REMOVED******REMOVED***indent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Number,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***18
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***icon:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***icon.iconPropType
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***emits:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***"check-change",
***REMOVED******REMOVED******REMOVED******REMOVED***"current-change",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-click",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-contextmenu",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-collapse",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-expand",
***REMOVED******REMOVED******REMOVED******REMOVED***"check",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drag-start",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drag-end",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drop",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drag-leave",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drag-enter",
***REMOVED******REMOVED******REMOVED******REMOVED***"node-drag-over"
***REMOVED******REMOVED***],
***REMOVED******REMOVED***setup(props,***REMOVED***ctx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***t***REMOVED***}***REMOVED***=***REMOVED***index.useLocale();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ns***REMOVED***=***REMOVED***index$1.useNamespace("tree");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***selectInfo***REMOVED***=***REMOVED***vue.inject(token.selectKey,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***store***REMOVED***=***REMOVED***vue.ref(new***REMOVED***treeStore["default"]({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***props.nodeKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***props.data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lazy:***REMOVED***props.lazy,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***props.props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***load:***REMOVED***props.load,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNodeKey:***REMOVED***props.currentNodeKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkStrictly:***REMOVED***props.checkStrictly,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDescendants:***REMOVED***props.checkDescendants,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultCheckedKeys:***REMOVED***props.defaultCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultExpandedKeys:***REMOVED***props.defaultExpandedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***autoExpandParent:***REMOVED***props.autoExpandParent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultExpandAll:***REMOVED***props.defaultExpandAll,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filterNodeMethod:***REMOVED***props.filterNodeMethod
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***store.value.initialize();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***root***REMOVED***=***REMOVED***vue.ref(store.value.root);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentNode***REMOVED***=***REMOVED***vue.ref(null);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el$***REMOVED***=***REMOVED***vue.ref(null);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dropIndicator$***REMOVED***=***REMOVED***vue.ref(null);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***broadcastExpanded***REMOVED***}***REMOVED***=***REMOVED***useNodeExpandEventBroadcast.useNodeExpandEventBroadcast(props);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***dragState***REMOVED***}***REMOVED***=***REMOVED***useDragNode.useDragNodeHandler({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el$,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dropIndicator$,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***useKeydown.useKeydown({***REMOVED***el$***REMOVED***},***REMOVED***store);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isEmpty***REMOVED***=***REMOVED***vue.computed(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***childNodes***REMOVED***}***REMOVED***=***REMOVED***root.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasFilteredOptions***REMOVED***=***REMOVED***selectInfo***REMOVED***?***REMOVED***selectInfo.hasFilteredOptions***REMOVED***!==***REMOVED***0***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!childNodes***REMOVED***||***REMOVED***childNodes.length***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***childNodes.every(({***REMOVED***visible***REMOVED***})***REMOVED***=>***REMOVED***!visible))***REMOVED***&&***REMOVED***!hasFilteredOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.currentNodeKey,***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setCurrentNodeKey(newVal***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***newVal***REMOVED***:***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.defaultCheckedKeys,***REMOVED***(newVal,***REMOVED***oldVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lodashUnified.isEqual(newVal,***REMOVED***oldVal))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setDefaultCheckedKey(newVal***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***newVal***REMOVED***:***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.defaultExpandedKeys,***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setDefaultExpandedKeys(newVal***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***newVal***REMOVED***:***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.data,***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setData(newVal);
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{***REMOVED***deep:***REMOVED***true***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.watch(()***REMOVED***=>***REMOVED***props.checkStrictly,***REMOVED***(newVal)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.checkStrictly***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filter***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.filterNodeMethod)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***filterNodeMethod***REMOVED***is***REMOVED***required***REMOVED***when***REMOVED***filter");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.filter(value);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getNodeKey***REMOVED***=***REMOVED***(node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***util.getNodeKey(props.nodeKey,***REMOVED***node.data);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getNodePath***REMOVED***=***REMOVED***(data)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***getNodePath");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***store.value.getNode(data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***path***REMOVED***=***REMOVED***[node.data];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***node.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parent***REMOVED***&&***REMOVED***parent***REMOVED***!==***REMOVED***root.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.push(parent.data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***path.reverse();
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getCheckedNodes***REMOVED***=***REMOVED***(leafOnly,***REMOVED***includeHalfChecked)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***store.value.getCheckedNodes(leafOnly,***REMOVED***includeHalfChecked);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getCheckedKeys***REMOVED***=***REMOVED***(leafOnly)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***store.value.getCheckedKeys(leafOnly);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getCurrentNode***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentNode2***REMOVED***=***REMOVED***store.value.getCurrentNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentNode2***REMOVED***?***REMOVED***currentNode2.data***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getCurrentKey***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***getCurrentKey");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentNode2***REMOVED***=***REMOVED***getCurrentNode();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentNode2***REMOVED***?***REMOVED***currentNode2[props.nodeKey]***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setCheckedNodes***REMOVED***=***REMOVED***(nodes,***REMOVED***leafOnly)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***setCheckedNodes");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setCheckedNodes(nodes,***REMOVED***leafOnly);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setCheckedKeys***REMOVED***=***REMOVED***(keys,***REMOVED***leafOnly)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***setCheckedKeys");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setCheckedKeys(keys,***REMOVED***leafOnly);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setChecked***REMOVED***=***REMOVED***(data,***REMOVED***checked,***REMOVED***deep)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setChecked(data,***REMOVED***checked,***REMOVED***deep);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getHalfCheckedNodes***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***store.value.getHalfCheckedNodes();
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getHalfCheckedKeys***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***store.value.getHalfCheckedKeys();
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setCurrentNode***REMOVED***=***REMOVED***(node,***REMOVED***shouldAutoExpandParent***REMOVED***=***REMOVED***true)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***setCurrentNode");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.handleCurrentChange(store,***REMOVED***ctx.emit,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***broadcastExpanded(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setUserCurrentNode(node,***REMOVED***shouldAutoExpandParent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setCurrentKey***REMOVED***=***REMOVED***(key,***REMOVED***shouldAutoExpandParent***REMOVED***=***REMOVED***true)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***setCurrentKey");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.handleCurrentChange(store,***REMOVED***ctx.emit,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***broadcastExpanded();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.setCurrentNodeKey(key***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***null,***REMOVED***shouldAutoExpandParent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getNode***REMOVED***=***REMOVED***(data)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***store.value.getNode(data);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***remove***REMOVED***=***REMOVED***(data)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.remove(data);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***append***REMOVED***=***REMOVED***(data,***REMOVED***parentNode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.append(data,***REMOVED***parentNode);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***insertBefore***REMOVED***=***REMOVED***(data,***REMOVED***refNode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.insertBefore(data,***REMOVED***refNode);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***insertAfter***REMOVED***=***REMOVED***(data,***REMOVED***refNode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.insertAfter(data,***REMOVED***refNode);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handleNodeExpand***REMOVED***=***REMOVED***(nodeData,***REMOVED***node,***REMOVED***instance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***broadcastExpanded(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.emit("node-expand",***REMOVED***nodeData,***REMOVED***node,***REMOVED***instance);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***updateKeyChildren***REMOVED***=***REMOVED***(key,***REMOVED***data)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!props.nodeKey)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[Tree]***REMOVED***nodeKey***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***updateKeyChild");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store.value.updateChildren(key,***REMOVED***data);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***vue.provide(tokens.ROOT_TREE_INJECTION_KEY,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance:***REMOVED***vue.getCurrentInstance()
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***vue.provide(constants.formItemContextKey,***REMOVED***void***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ns,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***store,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dragState,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el$,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dropIndicator$,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEmpty,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filter,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNodeKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNodePath,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getCurrentNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getCurrentKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setChecked,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedNodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHalfCheckedKeys,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCurrentNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCurrentKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***append,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***insertBefore,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***insertAfter,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleNodeExpand,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateKeyChildren
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
});
function***REMOVED***_sfc_render(_ctx,***REMOVED***_cache,***REMOVED***$props,***REMOVED***$setup,***REMOVED***$data,***REMOVED***$options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***_component_el_tree_node***REMOVED***=***REMOVED***vue.resolveComponent("el-tree-node");
***REMOVED******REMOVED***return***REMOVED***vue.openBlock(),***REMOVED***vue.createElementBlock("div",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ref:***REMOVED***"el$",
***REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***vue.normalizeClass([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ctx.ns.b(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ctx.ns.is("dragging",***REMOVED***!!_ctx.dragState.draggingNode),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ctx.ns.is("drop-not-allow",***REMOVED***!_ctx.dragState.allowDrop),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ctx.ns.is("drop-inner",***REMOVED***_ctx.dragState.dropType***REMOVED***===***REMOVED***"inner"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***[_ctx.ns.m("highlight-current")]:***REMOVED***_ctx.highlightCurrent***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***]),
***REMOVED******REMOVED******REMOVED******REMOVED***role:***REMOVED***"tree"
***REMOVED******REMOVED***},***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***(vue.openBlock(true),***REMOVED***vue.createElementBlock(vue.Fragment,***REMOVED***null,***REMOVED***vue.renderList(_ctx.root.childNodes,***REMOVED***(child)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***vue.openBlock(),***REMOVED***vue.createBlock(_component_el_tree_node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***_ctx.getNodeKey(child),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***child,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***_ctx.props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accordion:***REMOVED***_ctx.accordion,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"render-after-expand":***REMOVED***_ctx.renderAfterExpand,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"show-checkbox":***REMOVED***_ctx.showCheckbox,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"render-content":***REMOVED***_ctx.renderContent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onNodeExpand:***REMOVED***_ctx.handleNodeExpand
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***null,***REMOVED***8,***REMOVED***["node",***REMOVED***"props",***REMOVED***"accordion",***REMOVED***"render-after-expand",***REMOVED***"show-checkbox",***REMOVED***"render-content",***REMOVED***"onNodeExpand"]);
***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***128)),
***REMOVED******REMOVED******REMOVED******REMOVED***_ctx.isEmpty***REMOVED***?***REMOVED***(vue.openBlock(),***REMOVED***vue.createElementBlock("div",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***vue.normalizeClass(_ctx.ns.e("empty-block"))
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vue.renderSlot(_ctx.$slots,***REMOVED***"empty",***REMOVED***{},***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vue.createElementVNode("span",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***vue.normalizeClass(_ctx.ns.e("empty-text"))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***vue.toDisplayString((_a***REMOVED***=***REMOVED***_ctx.emptyText)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_a***REMOVED***:***REMOVED***_ctx.t("el.tree.emptyText")),***REMOVED***3)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***],***REMOVED***2))***REMOVED***:***REMOVED***vue.createCommentVNode("v-if",***REMOVED***true),
***REMOVED******REMOVED******REMOVED******REMOVED***vue.withDirectives(vue.createElementVNode("div",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref:***REMOVED***"dropIndicator$",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***class:***REMOVED***vue.normalizeClass(_ctx.ns.e("drop-indicator"))
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***null,***REMOVED***2),***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[vue.vShow,***REMOVED***_ctx.dragState.showDropIndicator]
***REMOVED******REMOVED******REMOVED******REMOVED***])
***REMOVED******REMOVED***],***REMOVED***2);
}
var***REMOVED***Tree***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***pluginVue_exportHelper["default"](_sfc_main,***REMOVED***[["render",***REMOVED***_sfc_render],***REMOVED***["__file",***REMOVED***"tree.vue"]]);

exports["default"]***REMOVED***=***REMOVED***Tree;
//#***REMOVED***sourceMappingURL=tree.js.map
