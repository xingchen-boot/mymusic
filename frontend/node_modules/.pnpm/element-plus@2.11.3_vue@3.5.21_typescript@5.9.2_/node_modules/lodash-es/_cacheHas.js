/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***a***REMOVED***`cache`***REMOVED***value***REMOVED***for***REMOVED***`key`***REMOVED***exists.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***cache***REMOVED***The***REMOVED***cache***REMOVED***to***REMOVED***query.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***key***REMOVED***The***REMOVED***key***REMOVED***of***REMOVED***the***REMOVED***entry***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***an***REMOVED***entry***REMOVED***for***REMOVED***`key`***REMOVED***exists,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***cacheHas(cache,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***cache.has(key);
}

export***REMOVED***default***REMOVED***cacheHas;
