import***REMOVED***baseIndexOf***REMOVED***from***REMOVED***'./_baseIndexOf.js';
import***REMOVED***toInteger***REMOVED***from***REMOVED***'./toInteger.js';

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMax***REMOVED***=***REMOVED***Math.max;

/**
***REMOVED*******REMOVED***Gets***REMOVED***the***REMOVED***index***REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***first***REMOVED***occurrence***REMOVED***of***REMOVED***`value`***REMOVED***is***REMOVED***found***REMOVED***in***REMOVED***`array`
***REMOVED*******REMOVED***using***REMOVED***[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
***REMOVED*******REMOVED***for***REMOVED***equality***REMOVED***comparisons.***REMOVED***If***REMOVED***`fromIndex`***REMOVED***is***REMOVED***negative,***REMOVED***it's***REMOVED***used***REMOVED***as***REMOVED***the
***REMOVED*******REMOVED***offset***REMOVED***from***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***`array`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.1.0
***REMOVED*******REMOVED***@category***REMOVED***Array
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***search***REMOVED***for.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[fromIndex=0]***REMOVED***The***REMOVED***index***REMOVED***to***REMOVED***search***REMOVED***from.
***REMOVED*******REMOVED***@returns***REMOVED***{number}***REMOVED***Returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***matched***REMOVED***value,***REMOVED***else***REMOVED***`-1`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.indexOf([1,***REMOVED***2,***REMOVED***1,***REMOVED***2],***REMOVED***2);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***1
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***Search***REMOVED***from***REMOVED***the***REMOVED***`fromIndex`.
***REMOVED*******REMOVED***_.indexOf([1,***REMOVED***2,***REMOVED***1,***REMOVED***2],***REMOVED***2,***REMOVED***2);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***3
***REMOVED****/
function***REMOVED***indexOf(array,***REMOVED***value,***REMOVED***fromIndex)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***array.length;
***REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***fromIndex***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***toInteger(fromIndex);
***REMOVED******REMOVED***if***REMOVED***(index***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***nativeMax(length***REMOVED***+***REMOVED***index,***REMOVED***0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***baseIndexOf(array,***REMOVED***value,***REMOVED***index);
}

export***REMOVED***default***REMOVED***indexOf;
