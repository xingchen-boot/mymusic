/**
***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`_.map`***REMOVED***for***REMOVED***arrays***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***iteratee
***REMOVED*******REMOVED***shorthands.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[array]***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***iterate***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***iteratee***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***mapped***REMOVED***array.
***REMOVED****/
function***REMOVED***arrayMap(array,***REMOVED***iteratee)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***array.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***Array(length);

***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result[index]***REMOVED***=***REMOVED***iteratee(array[index],***REMOVED***index,***REMOVED***array);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

export***REMOVED***default***REMOVED***arrayMap;
