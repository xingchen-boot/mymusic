/**
***REMOVED*******REMOVED***This***REMOVED***function***REMOVED***is***REMOVED***like***REMOVED***`arrayIncludes`***REMOVED***except***REMOVED***that***REMOVED***it***REMOVED***accepts***REMOVED***a***REMOVED***comparator.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[array]***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***target***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***search***REMOVED***for.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***comparator***REMOVED***The***REMOVED***comparator***REMOVED***invoked***REMOVED***per***REMOVED***element.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`target`***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***arrayIncludesWith(array,***REMOVED***value,***REMOVED***comparator)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***array.length;

***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comparator(value,***REMOVED***array[index]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}

export***REMOVED***default***REMOVED***arrayIncludesWith;
