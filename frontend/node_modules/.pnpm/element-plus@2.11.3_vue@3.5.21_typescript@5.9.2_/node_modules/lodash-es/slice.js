import***REMOVED***baseSlice***REMOVED***from***REMOVED***'./_baseSlice.js';
import***REMOVED***isIterateeCall***REMOVED***from***REMOVED***'./_isIterateeCall.js';
import***REMOVED***toInteger***REMOVED***from***REMOVED***'./toInteger.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***slice***REMOVED***of***REMOVED***`array`***REMOVED***from***REMOVED***`start`***REMOVED***up***REMOVED***to,***REMOVED***but***REMOVED***not***REMOVED***including,***REMOVED***`end`.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***method***REMOVED***is***REMOVED***used***REMOVED***instead***REMOVED***of
***REMOVED*******REMOVED***[`Array#slice`](https://mdn.io/Array/slice)***REMOVED***to***REMOVED***ensure***REMOVED***dense***REMOVED***arrays***REMOVED***are
***REMOVED*******REMOVED***returned.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***Array
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***slice.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[start=0]***REMOVED***The***REMOVED***start***REMOVED***position.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[end=array.length]***REMOVED***The***REMOVED***end***REMOVED***position.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***slice***REMOVED***of***REMOVED***`array`.
***REMOVED****/
function***REMOVED***slice(array,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***array.length;
***REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(end***REMOVED***&&***REMOVED***typeof***REMOVED***end***REMOVED***!=***REMOVED***'number'***REMOVED***&&***REMOVED***isIterateeCall(array,***REMOVED***start,***REMOVED***end))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***length;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***start***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***toInteger(start);
***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***end***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***length***REMOVED***:***REMOVED***toInteger(end);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***baseSlice(array,***REMOVED***start,***REMOVED***end);
}

export***REMOVED***default***REMOVED***slice;
