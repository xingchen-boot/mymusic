import***REMOVED***Symbol***REMOVED***from***REMOVED***'./_Symbol.js';
import***REMOVED***Uint8Array***REMOVED***from***REMOVED***'./_Uint8Array.js';
import***REMOVED***eq***REMOVED***from***REMOVED***'./eq.js';
import***REMOVED***equalArrays***REMOVED***from***REMOVED***'./_equalArrays.js';
import***REMOVED***mapToArray***REMOVED***from***REMOVED***'./_mapToArray.js';
import***REMOVED***setToArray***REMOVED***from***REMOVED***'./_setToArray.js';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***bitmasks***REMOVED***for***REMOVED***value***REMOVED***comparisons.***REMOVED****/
var***REMOVED***COMPARE_PARTIAL_FLAG***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***COMPARE_UNORDERED_FLAG***REMOVED***=***REMOVED***2;

/*****REMOVED***`Object#toString`***REMOVED***result***REMOVED***references.***REMOVED****/
var***REMOVED***boolTag***REMOVED***=***REMOVED***'[object***REMOVED***Boolean]',
***REMOVED******REMOVED******REMOVED******REMOVED***dateTag***REMOVED***=***REMOVED***'[object***REMOVED***Date]',
***REMOVED******REMOVED******REMOVED******REMOVED***errorTag***REMOVED***=***REMOVED***'[object***REMOVED***Error]',
***REMOVED******REMOVED******REMOVED******REMOVED***mapTag***REMOVED***=***REMOVED***'[object***REMOVED***Map]',
***REMOVED******REMOVED******REMOVED******REMOVED***numberTag***REMOVED***=***REMOVED***'[object***REMOVED***Number]',
***REMOVED******REMOVED******REMOVED******REMOVED***regexpTag***REMOVED***=***REMOVED***'[object***REMOVED***RegExp]',
***REMOVED******REMOVED******REMOVED******REMOVED***setTag***REMOVED***=***REMOVED***'[object***REMOVED***Set]',
***REMOVED******REMOVED******REMOVED******REMOVED***stringTag***REMOVED***=***REMOVED***'[object***REMOVED***String]',
***REMOVED******REMOVED******REMOVED******REMOVED***symbolTag***REMOVED***=***REMOVED***'[object***REMOVED***Symbol]';

var***REMOVED***arrayBufferTag***REMOVED***=***REMOVED***'[object***REMOVED***ArrayBuffer]',
***REMOVED******REMOVED******REMOVED******REMOVED***dataViewTag***REMOVED***=***REMOVED***'[object***REMOVED***DataView]';

/*****REMOVED***Used***REMOVED***to***REMOVED***convert***REMOVED***symbols***REMOVED***to***REMOVED***primitives***REMOVED***and***REMOVED***strings.***REMOVED****/
var***REMOVED***symbolProto***REMOVED***=***REMOVED***Symbol***REMOVED***?***REMOVED***Symbol.prototype***REMOVED***:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED***symbolValueOf***REMOVED***=***REMOVED***symbolProto***REMOVED***?***REMOVED***symbolProto.valueOf***REMOVED***:***REMOVED***undefined;

/**
***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`baseIsEqualDeep`***REMOVED***for***REMOVED***comparing***REMOVED***objects***REMOVED***of
***REMOVED*******REMOVED***the***REMOVED***same***REMOVED***`toStringTag`.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***function***REMOVED***only***REMOVED***supports***REMOVED***comparing***REMOVED***values***REMOVED***with***REMOVED***tags***REMOVED***of
***REMOVED*******REMOVED***`Boolean`,***REMOVED***`Date`,***REMOVED***`Error`,***REMOVED***`Number`,***REMOVED***`RegExp`,***REMOVED***or***REMOVED***`String`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***other***REMOVED***The***REMOVED***other***REMOVED***object***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***tag***REMOVED***The***REMOVED***`toStringTag`***REMOVED***of***REMOVED***the***REMOVED***objects***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***bitmask***REMOVED***The***REMOVED***bitmask***REMOVED***flags.***REMOVED***See***REMOVED***`baseIsEqual`***REMOVED***for***REMOVED***more***REMOVED***details.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***customizer***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***customize***REMOVED***comparisons.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***equalFunc***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***determine***REMOVED***equivalents***REMOVED***of***REMOVED***values.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***stack***REMOVED***Tracks***REMOVED***traversed***REMOVED***`object`***REMOVED***and***REMOVED***`other`***REMOVED***objects.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***the***REMOVED***objects***REMOVED***are***REMOVED***equivalent,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***equalByTag(object,***REMOVED***other,***REMOVED***tag,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(tag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***dataViewTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((object.byteLength***REMOVED***!=***REMOVED***other.byteLength)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(object.byteOffset***REMOVED***!=***REMOVED***other.byteOffset))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***object***REMOVED***=***REMOVED***object.buffer;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***other.buffer;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***arrayBufferTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((object.byteLength***REMOVED***!=***REMOVED***other.byteLength)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!equalFunc(new***REMOVED***Uint8Array(object),***REMOVED***new***REMOVED***Uint8Array(other)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***boolTag:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***dateTag:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***numberTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Coerce***REMOVED***booleans***REMOVED***to***REMOVED***`1`***REMOVED***or***REMOVED***`0`***REMOVED***and***REMOVED***dates***REMOVED***to***REMOVED***milliseconds.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Invalid***REMOVED***dates***REMOVED***are***REMOVED***coerced***REMOVED***to***REMOVED***`NaN`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***eq(+object,***REMOVED***+other);

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***errorTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object.name***REMOVED***==***REMOVED***other.name***REMOVED***&&***REMOVED***object.message***REMOVED***==***REMOVED***other.message;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***regexpTag:
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***stringTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Coerce***REMOVED***regexes***REMOVED***to***REMOVED***strings***REMOVED***and***REMOVED***treat***REMOVED***strings,***REMOVED***primitives***REMOVED***and***REMOVED***objects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***equal.***REMOVED***See***REMOVED***http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***more***REMOVED***details.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object***REMOVED***==***REMOVED***(other***REMOVED***+***REMOVED***'');

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***mapTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***convert***REMOVED***=***REMOVED***mapToArray;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***setTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isPartial***REMOVED***=***REMOVED***bitmask***REMOVED***&***REMOVED***COMPARE_PARTIAL_FLAG;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***convert***REMOVED***||***REMOVED***(convert***REMOVED***=***REMOVED***setToArray);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(object.size***REMOVED***!=***REMOVED***other.size***REMOVED***&&***REMOVED***!isPartial)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Assume***REMOVED***cyclic***REMOVED***values***REMOVED***are***REMOVED***equal.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***stacked***REMOVED***=***REMOVED***stack.get(object);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stacked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stacked***REMOVED***==***REMOVED***other;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bitmask***REMOVED***|=***REMOVED***COMPARE_UNORDERED_FLAG;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Recursively***REMOVED***compare***REMOVED***objects***REMOVED***(susceptible***REMOVED***to***REMOVED***call***REMOVED***stack***REMOVED***limits).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.set(object,***REMOVED***other);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***equalArrays(convert(object),***REMOVED***convert(other),***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack['delete'](object);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;

***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***symbolTag:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(symbolValueOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***symbolValueOf.call(object)***REMOVED***==***REMOVED***symbolValueOf.call(other);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}

export***REMOVED***default***REMOVED***equalByTag;
