import***REMOVED***toNumber***REMOVED***from***REMOVED***'./toNumber.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***performs***REMOVED***a***REMOVED***relational***REMOVED***operation***REMOVED***on***REMOVED***two***REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***operator***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***perform***REMOVED***the***REMOVED***operation.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***relational***REMOVED***operation***REMOVED***function.
***REMOVED****/
function***REMOVED***createRelationalOperation(operator)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(value,***REMOVED***other)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(typeof***REMOVED***value***REMOVED***==***REMOVED***'string'***REMOVED***&&***REMOVED***typeof***REMOVED***other***REMOVED***==***REMOVED***'string'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toNumber(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***toNumber(other);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***operator(value,***REMOVED***other);
***REMOVED******REMOVED***};
}

export***REMOVED***default***REMOVED***createRelationalOperation;
