/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***likely***REMOVED***a***REMOVED***prototype***REMOVED***object.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***prototype,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***isPrototype(value)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***Ctor***REMOVED***=***REMOVED***value***REMOVED***&&***REMOVED***value.constructor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proto***REMOVED***=***REMOVED***(typeof***REMOVED***Ctor***REMOVED***==***REMOVED***'function'***REMOVED***&&***REMOVED***Ctor.prototype)***REMOVED***||***REMOVED***objectProto;

***REMOVED******REMOVED***return***REMOVED***value***REMOVED***===***REMOVED***proto;
}

export***REMOVED***default***REMOVED***isPrototype;
