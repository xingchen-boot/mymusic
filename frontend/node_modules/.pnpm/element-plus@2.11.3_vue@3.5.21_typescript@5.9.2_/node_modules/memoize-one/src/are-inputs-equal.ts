//***REMOVED***Number.isNaN***REMOVED***as***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***in***REMOVED***IE11***REMOVED***so***REMOVED***conditionally***REMOVED***using***REMOVED***ponyfill
//***REMOVED***Using***REMOVED***Number.isNaN***REMOVED***where***REMOVED***possible***REMOVED***as***REMOVED***it***REMOVED***is***REMOVED***~10%***REMOVED***faster

const***REMOVED***safeIsNaN***REMOVED***=
***REMOVED******REMOVED***Number.isNaN***REMOVED***||
***REMOVED******REMOVED***function***REMOVED***ponyfill(value:***REMOVED***unknown):***REMOVED***boolean***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***//***REMOVED***https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#polyfill
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***NaN***REMOVED***is***REMOVED***the***REMOVED***only***REMOVED***value***REMOVED***in***REMOVED***JavaScript***REMOVED***which***REMOVED***is***REMOVED***not***REMOVED***equal***REMOVED***to***REMOVED***itself.
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'number'***REMOVED***&&***REMOVED***value***REMOVED***!==***REMOVED***value;
***REMOVED******REMOVED***};

function***REMOVED***isEqual(first:***REMOVED***unknown,***REMOVED***second:***REMOVED***unknown):***REMOVED***boolean***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(first***REMOVED***===***REMOVED***second)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Special***REMOVED***case***REMOVED***for***REMOVED***NaN***REMOVED***(NaN***REMOVED***!==***REMOVED***NaN)
***REMOVED******REMOVED***if***REMOVED***(safeIsNaN(first)***REMOVED***&&***REMOVED***safeIsNaN(second))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***false;
}

export***REMOVED***default***REMOVED***function***REMOVED***areInputsEqual(
***REMOVED******REMOVED***newInputs:***REMOVED***readonly***REMOVED***unknown[],
***REMOVED******REMOVED***lastInputs:***REMOVED***readonly***REMOVED***unknown[],
):***REMOVED***boolean***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***no***REMOVED***checks***REMOVED***needed***REMOVED***if***REMOVED***the***REMOVED***inputs***REMOVED***length***REMOVED***has***REMOVED***changed
***REMOVED******REMOVED***if***REMOVED***(newInputs.length***REMOVED***!==***REMOVED***lastInputs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***Using***REMOVED***for***REMOVED***loop***REMOVED***for***REMOVED***speed.***REMOVED***It***REMOVED***generally***REMOVED***performs***REMOVED***better***REMOVED***than***REMOVED***array.every
***REMOVED******REMOVED***//***REMOVED***https://github.com/alexreardon/memoize-one/pull/59
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***newInputs.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isEqual(newInputs[i],***REMOVED***lastInputs[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}
