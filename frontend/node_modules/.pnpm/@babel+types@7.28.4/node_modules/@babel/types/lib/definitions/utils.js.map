{"version":3,"names":["_is","require","_validate","VISITOR_KEYS","exports","ALIAS_KEYS","FLIPPED_ALIAS_KEYS","NODE_FIELDS","BUILDER_KEYS","DEPRECATED_KEYS","NODE_PARENT_VALIDATIONS","getType","val","Array","isArray","validate","validateType","typeNames","assertNodeType","validateOptional","optional","validateOptionalType","arrayOf","elementType","chain","assertValueType","assertEach","arrayOfType","validateArrayOfType","callback","childValidator","process","env","BABEL_TYPES_8_BREAKING","validateChild","validator","node","key","i","subKey","toString","length","v","each","assertOneOf","values","includes","TypeError","JSON","stringify","oneOf","allExpandedTypes","types","expandedTypes","Set","push","set","valType","type","has","is","oneOfNodeTypes","assertNodeOrValueType","primitiveType","oneOfNodeOrValueTypes","assertShape","shape","keys","Object","errors","property","validateField","error","message","join","shapeOf","assertOptionalChainStart","_current","current","callee","object","fns","args","fn","chainOf","Error","validTypeOpts","validFieldKeys","store","defineAliasedType","aliases","opts","defined","_store$opts$inherits$","inherits","slice","additional","filter","a","unshift","defineType","fields","getOwnPropertyNames","field","def","default","deprecated","visitor","builder","k","deprecatedAlias","concat","undefined","forEach","alias"],"sources":["../../src/definitions/utils.ts"],"sourcesContent":["import***REMOVED***is***REMOVED***from***REMOVED***\"../validators/is.ts\";\nimport***REMOVED***{***REMOVED***validateField,***REMOVED***validateChild***REMOVED***}***REMOVED***from***REMOVED***\"../validators/validate.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nexport***REMOVED***const***REMOVED***VISITOR_KEYS:***REMOVED***Record<string,***REMOVED***string[]>***REMOVED***=***REMOVED***{};\nexport***REMOVED***const***REMOVED***ALIAS_KEYS:***REMOVED***Partial<Record<NodeTypesWithoutComment,***REMOVED***string[]>>***REMOVED***=\n***REMOVED******REMOVED***{};\nexport***REMOVED***const***REMOVED***FLIPPED_ALIAS_KEYS:***REMOVED***Record<string,***REMOVED***NodeTypesWithoutComment[]>***REMOVED***=***REMOVED***{};\nexport***REMOVED***const***REMOVED***NODE_FIELDS:***REMOVED***Record<string,***REMOVED***FieldDefinitions>***REMOVED***=***REMOVED***{};\nexport***REMOVED***const***REMOVED***BUILDER_KEYS:***REMOVED***Record<string,***REMOVED***string[]>***REMOVED***=***REMOVED***{};\nexport***REMOVED***const***REMOVED***DEPRECATED_KEYS:***REMOVED***Record<string,***REMOVED***NodeTypesWithoutComment>***REMOVED***=***REMOVED***{};\nexport***REMOVED***const***REMOVED***NODE_PARENT_VALIDATIONS:***REMOVED***Record<string,***REMOVED***Validator>***REMOVED***=***REMOVED***{};\n\nfunction***REMOVED***getType(val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED***if***REMOVED***(Array.isArray(val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***\"array\";\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(val***REMOVED***===***REMOVED***null)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***\"null\";\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***val;\n***REMOVED******REMOVED***}\n}\n\ntype***REMOVED***NodeTypesWithoutComment***REMOVED***=***REMOVED***t.Node[\"type\"]***REMOVED***|***REMOVED***keyof***REMOVED***t.Aliases;\n\ntype***REMOVED***NodeTypes***REMOVED***=***REMOVED***NodeTypesWithoutComment***REMOVED***|***REMOVED***t.Comment[\"type\"];\n\ntype***REMOVED***PrimitiveTypes***REMOVED***=***REMOVED***ReturnType<typeof***REMOVED***getType>;\n\ntype***REMOVED***FieldDefinitions***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***[x:***REMOVED***string]:***REMOVED***FieldOptions;\n};\n\ntype***REMOVED***DefineTypeOpts***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***fields?:***REMOVED***FieldDefinitions;\n***REMOVED******REMOVED***visitor?:***REMOVED***Array<string>;\n***REMOVED******REMOVED***aliases?:***REMOVED***Array<string>;\n***REMOVED******REMOVED***builder?:***REMOVED***Array<string>;\n***REMOVED******REMOVED***inherits?:***REMOVED***NodeTypes;\n***REMOVED******REMOVED***deprecatedAlias?:***REMOVED***string;\n***REMOVED******REMOVED***validate?:***REMOVED***Validator;\n};\n\nexport***REMOVED***type***REMOVED***Validator***REMOVED***=***REMOVED***(\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***type:***REMOVED***PrimitiveTypes***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***each:***REMOVED***Validator***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***chainOf:***REMOVED***Validator[]***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***oneOf:***REMOVED***any[]***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***oneOfNodeTypes:***REMOVED***NodeTypes[]***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***oneOfNodeOrValueTypes:***REMOVED***(NodeTypes***REMOVED***|***REMOVED***PrimitiveTypes)[]***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***{***REMOVED***shapeOf:***REMOVED***{***REMOVED***[x:***REMOVED***string]:***REMOVED***FieldOptions***REMOVED***}***REMOVED***}\n***REMOVED******REMOVED***|***REMOVED***object\n)***REMOVED***&\n***REMOVED******REMOVED***((node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string***REMOVED***|***REMOVED***{***REMOVED***toString():***REMOVED***string***REMOVED***},***REMOVED***val:***REMOVED***any)***REMOVED***=>***REMOVED***void);\n\nexport***REMOVED***type***REMOVED***FieldOptions***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***default?:***REMOVED***string***REMOVED***|***REMOVED***number***REMOVED***|***REMOVED***boolean***REMOVED***|***REMOVED***[];\n***REMOVED******REMOVED***optional?:***REMOVED***boolean;\n***REMOVED******REMOVED***deprecated?:***REMOVED***boolean;\n***REMOVED******REMOVED***validate?:***REMOVED***Validator;\n};\n\nexport***REMOVED***function***REMOVED***validate(validate:***REMOVED***Validator):***REMOVED***FieldOptions***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***{***REMOVED***validate***REMOVED***};\n}\n\nexport***REMOVED***function***REMOVED***validateType(...typeNames:***REMOVED***NodeTypes[])***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***validate(assertNodeType(...typeNames));\n}\n\nexport***REMOVED***function***REMOVED***validateOptional(validate:***REMOVED***Validator):***REMOVED***FieldOptions***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***{***REMOVED***validate,***REMOVED***optional:***REMOVED***true***REMOVED***};\n}\n\nexport***REMOVED***function***REMOVED***validateOptionalType(...typeNames:***REMOVED***NodeTypes[]):***REMOVED***FieldOptions***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***{***REMOVED***validate:***REMOVED***assertNodeType(...typeNames),***REMOVED***optional:***REMOVED***true***REMOVED***};\n}\n\nexport***REMOVED***function***REMOVED***arrayOf(elementType:***REMOVED***Validator):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***chain(assertValueType(\"array\"),***REMOVED***assertEach(elementType));\n}\n\nexport***REMOVED***function***REMOVED***arrayOfType(...typeNames:***REMOVED***NodeTypes[])***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***arrayOf(assertNodeType(...typeNames));\n}\n\nexport***REMOVED***function***REMOVED***validateArrayOfType(...typeNames:***REMOVED***NodeTypes[])***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***validate(arrayOfType(...typeNames));\n}\n\nexport***REMOVED***function***REMOVED***assertEach(callback:***REMOVED***Validator):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***childValidator***REMOVED***=\n***REMOVED******REMOVED******REMOVED******REMOVED***process.env.BABEL_8_BREAKING***REMOVED***||***REMOVED***process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***validateChild\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***{};\n\n***REMOVED******REMOVED***function***REMOVED***validator(node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(val))***REMOVED***return;\n\n***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***lazily***REMOVED***concatenate***REMOVED***strings***REMOVED***here***REMOVED***for***REMOVED***performance***REMOVED***reasons.\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Concatenating***REMOVED***the***REMOVED***strings***REMOVED***is***REMOVED***expensive***REMOVED***because***REMOVED***we***REMOVED***are***REMOVED***actually***REMOVED***concatenating***REMOVED***a***REMOVED***string***REMOVED***and***REMOVED***a***REMOVED***number,\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***V8***REMOVED***cannot***REMOVED***just***REMOVED***create***REMOVED***a***REMOVED***\"rope***REMOVED***string\"***REMOVED***but***REMOVED***has***REMOVED***to***REMOVED***allocate***REMOVED***memory***REMOVED***for***REMOVED***the***REMOVED***string***REMOVED***resulting***REMOVED***from***REMOVED***the***REMOVED***number\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***string***REMOVED***is***REMOVED***very***REMOVED***rarely***REMOVED***used,***REMOVED***only***REMOVED***in***REMOVED***error***REMOVED***paths,***REMOVED***so***REMOVED***we***REMOVED***can***REMOVED***skip***REMOVED***the***REMOVED***concatenation***REMOVED***cost***REMOVED***in***REMOVED***most***REMOVED***cases\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subKey***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toString()***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${key}[${i}]`;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***};\n\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***val.length;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***val[i];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback(node,***REMOVED***subKey,***REMOVED***v);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childValidator(node,***REMOVED***subKey,***REMOVED***v);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n***REMOVED******REMOVED***validator.each***REMOVED***=***REMOVED***callback;\n***REMOVED******REMOVED***return***REMOVED***validator;\n}\n\nexport***REMOVED***function***REMOVED***assertOneOf(...values:***REMOVED***Array<any>):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***any,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!values.includes(val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${key}***REMOVED***expected***REMOVED***value***REMOVED***to***REMOVED***be***REMOVED***one***REMOVED***of***REMOVED***${JSON.stringify(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***values,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***but***REMOVED***got***REMOVED***${JSON.stringify(val)}`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***validate.oneOf***REMOVED***=***REMOVED***values;\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***const***REMOVED***allExpandedTypes:***REMOVED***{\n***REMOVED******REMOVED***types:***REMOVED***NodeTypes[];\n***REMOVED******REMOVED***set:***REMOVED***Set<string>;\n}[]***REMOVED***=***REMOVED***[];\n\nexport***REMOVED***function***REMOVED***assertNodeType(...types:***REMOVED***NodeTypes[]):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***expandedTypes***REMOVED***=***REMOVED***new***REMOVED***Set<string>();\n\n***REMOVED******REMOVED***allExpandedTypes.push({***REMOVED***types,***REMOVED***set:***REMOVED***expandedTypes***REMOVED***});\n\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valType***REMOVED***=***REMOVED***val?.type;\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valType***REMOVED***!=***REMOVED***null)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expandedTypes.has(valType))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateChild(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valType***REMOVED***===***REMOVED***\"Placeholder\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***type***REMOVED***of***REMOVED***types)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(is(type,***REMOVED***val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateChild(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${key}***REMOVED***of***REMOVED***${\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***expected***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***of***REMOVED***a***REMOVED***type***REMOVED***${JSON.stringify(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***but***REMOVED***instead***REMOVED***got***REMOVED***${JSON.stringify(valType)}`,\n***REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***validate.oneOfNodeTypes***REMOVED***=***REMOVED***types;\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***function***REMOVED***assertNodeOrValueType(\n***REMOVED******REMOVED***...types:***REMOVED***(NodeTypes***REMOVED***|***REMOVED***PrimitiveTypes)[]\n):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***primitiveType***REMOVED***=***REMOVED***getType(val);\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***type***REMOVED***of***REMOVED***types)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(primitiveType***REMOVED***===***REMOVED***type***REMOVED***||***REMOVED***is(type,***REMOVED***val))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateChild(node,***REMOVED***key,***REMOVED***val);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${key}***REMOVED***of***REMOVED***${\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***expected***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***of***REMOVED***a***REMOVED***type***REMOVED***${JSON.stringify(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***but***REMOVED***instead***REMOVED***got***REMOVED***${JSON.stringify(val?.type)}`,\n***REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***validate.oneOfNodeOrValueTypes***REMOVED***=***REMOVED***types;\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***function***REMOVED***assertValueType(type:***REMOVED***PrimitiveTypes):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getType(val)***REMOVED***===***REMOVED***type)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${key}***REMOVED***expected***REMOVED***type***REMOVED***of***REMOVED***${type}***REMOVED***but***REMOVED***got***REMOVED***${getType(val)}`,\n***REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***validate.type***REMOVED***=***REMOVED***type;\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***function***REMOVED***assertShape(shape:***REMOVED***{***REMOVED***[x:***REMOVED***string]:***REMOVED***FieldOptions***REMOVED***}):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(shape);\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***t.Node,***REMOVED***key:***REMOVED***string,***REMOVED***val:***REMOVED***any)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***[];\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***keys)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateField(node,***REMOVED***property,***REMOVED***val[property],***REMOVED***shape[property]);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***instanceof***REMOVED***TypeError)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(error.message);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errors.length)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${key}***REMOVED***of***REMOVED***${\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***expected***REMOVED***to***REMOVED***have***REMOVED***the***REMOVED***following:\\n${errors.join(\"\\n\")}`,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***validate.shapeOf***REMOVED***=***REMOVED***shape;\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***function***REMOVED***assertOptionalChainStart():***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***function***REMOVED***validate(node:***REMOVED***t.Node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***current***REMOVED***=***REMOVED***node;\n***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(node)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***current;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***\"OptionalCallExpression\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.optional)***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.callee;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***\"OptionalMemberExpression\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.optional)***REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.object;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Non-optional***REMOVED***${node.type}***REMOVED***must***REMOVED***chain***REMOVED***from***REMOVED***an***REMOVED***optional***REMOVED***OptionalMemberExpression***REMOVED***or***REMOVED***OptionalCallExpression.***REMOVED***Found***REMOVED***chain***REMOVED***from***REMOVED***${current?.type}`,\n***REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nexport***REMOVED***function***REMOVED***chain(...fns:***REMOVED***Array<Validator>):***REMOVED***Validator***REMOVED***{\n***REMOVED******REMOVED***function***REMOVED***validate(...args:***REMOVED***Parameters<Validator>)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***fn***REMOVED***of***REMOVED***fns)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn(...args);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n***REMOVED******REMOVED***validate.chainOf***REMOVED***=***REMOVED***fns;\n\n***REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED***fns.length***REMOVED***>=***REMOVED***2***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED***\"type\"***REMOVED***in***REMOVED***fns[0]***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED***fns[0].type***REMOVED***===***REMOVED***\"array\"***REMOVED***&&\n***REMOVED******REMOVED******REMOVED******REMOVED***!(\"each\"***REMOVED***in***REMOVED***fns[1])\n***REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`An***REMOVED***assertValueType(\"array\")***REMOVED***validator***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***assertEach(...)***REMOVED***validator.`,\n***REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***validate;\n}\n\nconst***REMOVED***validTypeOpts***REMOVED***=***REMOVED***new***REMOVED***Set([\n***REMOVED******REMOVED***\"aliases\",\n***REMOVED******REMOVED***\"builder\",\n***REMOVED******REMOVED***\"deprecatedAlias\",\n***REMOVED******REMOVED***\"fields\",\n***REMOVED******REMOVED***\"inherits\",\n***REMOVED******REMOVED***\"visitor\",\n***REMOVED******REMOVED***\"validate\",\n]);\nconst***REMOVED***validFieldKeys***REMOVED***=***REMOVED***new***REMOVED***Set([\n***REMOVED******REMOVED***\"default\",\n***REMOVED******REMOVED***\"optional\",\n***REMOVED******REMOVED***\"deprecated\",\n***REMOVED******REMOVED***\"validate\",\n]);\n\nconst***REMOVED***store***REMOVED***=***REMOVED***{}***REMOVED***as***REMOVED***Record<string,***REMOVED***DefineTypeOpts>;\n\n//***REMOVED***Wraps***REMOVED***defineType***REMOVED***to***REMOVED***ensure***REMOVED***these***REMOVED***aliases***REMOVED***are***REMOVED***included.\nexport***REMOVED***function***REMOVED***defineAliasedType(...aliases:***REMOVED***string[])***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***(type:***REMOVED***string,***REMOVED***opts:***REMOVED***DefineTypeOpts***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***defined***REMOVED***=***REMOVED***opts.aliases;\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!defined)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.inherits)***REMOVED***defined***REMOVED***=***REMOVED***store[opts.inherits].aliases?.slice();\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defined***REMOVED***??=***REMOVED***[];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.aliases***REMOVED***=***REMOVED***defined;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***additional***REMOVED***=***REMOVED***aliases.filter(a***REMOVED***=>***REMOVED***!defined.includes(a));\n***REMOVED******REMOVED******REMOVED******REMOVED***defined.unshift(...additional);\n***REMOVED******REMOVED******REMOVED******REMOVED***defineType(type,***REMOVED***opts);\n***REMOVED******REMOVED***};\n}\n\nexport***REMOVED***default***REMOVED***function***REMOVED***defineType(type:***REMOVED***string,***REMOVED***opts:***REMOVED***DefineTypeOpts***REMOVED***=***REMOVED***{})***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***inherits***REMOVED***=***REMOVED***(opts.inherits***REMOVED***&&***REMOVED***store[opts.inherits])***REMOVED***||***REMOVED***{};\n\n***REMOVED******REMOVED***let***REMOVED***fields***REMOVED***=***REMOVED***opts.fields;\n***REMOVED******REMOVED***if***REMOVED***(!fields)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***fields***REMOVED***=***REMOVED***{};\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inherits.fields)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.getOwnPropertyNames(inherits.fields);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***field***REMOVED***=***REMOVED***inherits.fields[key];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***def***REMOVED***=***REMOVED***field.default;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Array.isArray(def)***REMOVED***?***REMOVED***def.length***REMOVED***>***REMOVED***0***REMOVED***:***REMOVED***def***REMOVED***&&***REMOVED***typeof***REMOVED***def***REMOVED***===***REMOVED***\"object\"\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"field***REMOVED***defaults***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***primitives***REMOVED***or***REMOVED***empty***REMOVED***arrays***REMOVED***currently\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fields[key]***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***Array.isArray(def)***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***def,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***field.optional,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecated:***REMOVED***field.deprecated,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***field.validate,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***const***REMOVED***visitor:***REMOVED***Array<string>***REMOVED***=***REMOVED***opts.visitor***REMOVED***||***REMOVED***inherits.visitor***REMOVED***||***REMOVED***[];\n***REMOVED******REMOVED***const***REMOVED***aliases:***REMOVED***Array<string>***REMOVED***=***REMOVED***opts.aliases***REMOVED***||***REMOVED***inherits.aliases***REMOVED***||***REMOVED***[];\n***REMOVED******REMOVED***const***REMOVED***builder:***REMOVED***Array<string>***REMOVED***=\n***REMOVED******REMOVED******REMOVED******REMOVED***opts.builder***REMOVED***||***REMOVED***inherits.builder***REMOVED***||***REMOVED***opts.visitor***REMOVED***||***REMOVED***[];\n\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***k***REMOVED***of***REMOVED***Object.keys(opts))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!validTypeOpts.has(k))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unknown***REMOVED***type***REMOVED***option***REMOVED***\"${k}\"***REMOVED***on***REMOVED***${type}`);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***if***REMOVED***(opts.deprecatedAlias)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***DEPRECATED_KEYS[opts.deprecatedAlias]***REMOVED***=***REMOVED***type***REMOVED***as***REMOVED***NodeTypesWithoutComment;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***ensure***REMOVED***all***REMOVED***field***REMOVED***keys***REMOVED***are***REMOVED***represented***REMOVED***in***REMOVED***`fields`\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***visitor.concat(builder))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***fields[key]***REMOVED***=***REMOVED***fields[key]***REMOVED***||***REMOVED***{};\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(fields))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***field***REMOVED***=***REMOVED***fields[key];\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(field.default***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***!builder.includes(key))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.optional***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(field.default***REMOVED***===***REMOVED***undefined)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.default***REMOVED***=***REMOVED***null;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!field.validate***REMOVED***&&***REMOVED***field.default***REMOVED***!=***REMOVED***null)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.validate***REMOVED***=***REMOVED***assertValueType(getType(field.default));\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***k***REMOVED***of***REMOVED***Object.keys(field))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!validFieldKeys.has(k))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unknown***REMOVED***field***REMOVED***key***REMOVED***\"${k}\"***REMOVED***on***REMOVED***${type}.${key}`);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***VISITOR_KEYS[type]***REMOVED***=***REMOVED***opts.visitor***REMOVED***=***REMOVED***visitor;\n***REMOVED******REMOVED***BUILDER_KEYS[type]***REMOVED***=***REMOVED***opts.builder***REMOVED***=***REMOVED***builder;\n***REMOVED******REMOVED***NODE_FIELDS[type]***REMOVED***=***REMOVED***opts.fields***REMOVED***=***REMOVED***fields;\n***REMOVED******REMOVED***ALIAS_KEYS[type***REMOVED***as***REMOVED***NodeTypesWithoutComment]***REMOVED***=***REMOVED***opts.aliases***REMOVED***=***REMOVED***aliases;\n***REMOVED******REMOVED***aliases.forEach(alias***REMOVED***=>***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***FLIPPED_ALIAS_KEYS[alias]***REMOVED***=***REMOVED***FLIPPED_ALIAS_KEYS[alias]***REMOVED***||***REMOVED***[];\n***REMOVED******REMOVED******REMOVED******REMOVED***FLIPPED_ALIAS_KEYS[alias].push(type***REMOVED***as***REMOVED***NodeTypesWithoutComment);\n***REMOVED******REMOVED***});\n\n***REMOVED******REMOVED***if***REMOVED***(opts.validate)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***NODE_PARENT_VALIDATIONS[type]***REMOVED***=***REMOVED***opts.validate;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***store[type]***REMOVED***=***REMOVED***opts;\n}\n"],"mappings":"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","ignoreList":[]}