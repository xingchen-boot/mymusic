"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.patternLikeCommon***REMOVED***=***REMOVED***exports.importAttributes***REMOVED***=***REMOVED***exports.functionTypeAnnotationCommon***REMOVED***=***REMOVED***exports.functionDeclarationCommon***REMOVED***=***REMOVED***exports.functionCommon***REMOVED***=***REMOVED***exports.classMethodOrPropertyCommon***REMOVED***=***REMOVED***exports.classMethodOrDeclareMethodCommon***REMOVED***=***REMOVED***void***REMOVED***0;
var***REMOVED***_is***REMOVED***=***REMOVED***require("../validators/is.js");
var***REMOVED***_isValidIdentifier***REMOVED***=***REMOVED***require("../validators/isValidIdentifier.js");
var***REMOVED***_helperValidatorIdentifier***REMOVED***=***REMOVED***require("@babel/helper-validator-identifier");
var***REMOVED***_helperStringParser***REMOVED***=***REMOVED***require("@babel/helper-string-parser");
var***REMOVED***_index***REMOVED***=***REMOVED***require("../constants/index.js");
var***REMOVED***_utils***REMOVED***=***REMOVED***require("./utils.js");
const***REMOVED***defineType***REMOVED***=***REMOVED***(0,***REMOVED***_utils.defineAliasedType)("Standardized");
defineType("ArrayExpression",***REMOVED***{
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOf)((0,***REMOVED***_utils.assertNodeOrValueType)("null",***REMOVED***"Expression",***REMOVED***"SpreadElement")),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***visitor:***REMOVED***["elements"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("AssignmentExpression",***REMOVED***{
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")***REMOVED***:***REMOVED***Object.assign(function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertOneOf)(..._index.ASSIGNMENT_OPERATORS);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertOneOf)("=");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***(0,***REMOVED***_is.default)("Pattern",***REMOVED***node.left)***REMOVED***?***REMOVED***pattern***REMOVED***:***REMOVED***identifier;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOf:***REMOVED***_index.ASSIGNMENT_OPERATORS
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertNodeType)("LVal",***REMOVED***"OptionalMemberExpression")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"MemberExpression",***REMOVED***"OptionalMemberExpression",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***builder:***REMOVED***["operator",***REMOVED***"left",***REMOVED***"right"],
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("BinaryExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["operator",***REMOVED***"left",***REMOVED***"right"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)(..._index.BINARY_OPERATORS)
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inOp***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression",***REMOVED***"PrivateName");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.operator***REMOVED***===***REMOVED***"in"***REMOVED***?***REMOVED***inOp***REMOVED***:***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["Expression",***REMOVED***"PrivateName"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right"],
***REMOVED******REMOVED***aliases:***REMOVED***["Binary",***REMOVED***"Expression"]
});
defineType("InterpreterDirective",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("Directive",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("DirectiveLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("DirectiveLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("BlockStatement",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["body",***REMOVED***"directives"],
***REMOVED******REMOVED***visitor:***REMOVED***["directives",***REMOVED***"body"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Directive"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Statement")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"BlockParent",***REMOVED***"Block",***REMOVED***"Statement"]
});
defineType("BreakStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["label"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Terminatorless",***REMOVED***"CompletionStatement"]
});
defineType("CallExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["callee",***REMOVED***"typeParameters",***REMOVED***"typeArguments",***REMOVED***"arguments"],
***REMOVED******REMOVED***builder:***REMOVED***["callee",***REMOVED***"arguments"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression",***REMOVED***"Super",***REMOVED***"V8IntrinsicIdentifier")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Expression",***REMOVED***"SpreadElement",***REMOVED***"ArgumentPlaceholder"),
***REMOVED******REMOVED******REMOVED******REMOVED***typeArguments:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***{}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TSTypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("CatchClause",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["param",***REMOVED***"body"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***param:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"BlockParent"]
});
defineType("ConditionalExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["test",***REMOVED***"consequent",***REMOVED***"alternate"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Conditional"]
});
defineType("ContinueStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["label"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Terminatorless",***REMOVED***"CompletionStatement"]
});
defineType("DebuggerStatement",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Statement"]
});
defineType("DoWhileStatement",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["test",***REMOVED***"body"],
***REMOVED******REMOVED***visitor:***REMOVED***["body",***REMOVED***"test"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"BlockParent",***REMOVED***"Loop",***REMOVED***"While",***REMOVED***"Scopable"]
});
defineType("EmptyStatement",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Statement"]
});
defineType("ExpressionStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"ExpressionWrapper"]
});
defineType("File",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["program",***REMOVED***"comments",***REMOVED***"tokens"],
***REMOVED******REMOVED***visitor:***REMOVED***["program"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***program:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Program")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***comments:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***each:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["CommentBlock",***REMOVED***"CommentLine"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertEach)((0,***REMOVED***_utils.assertNodeType)("CommentBlock",***REMOVED***"CommentLine")),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***tokens:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertEach)(Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"any"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ForInStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Statement",***REMOVED***"For",***REMOVED***"BlockParent",***REMOVED***"Loop",***REMOVED***"ForXStatement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertNodeType)("VariableDeclaration",***REMOVED***"LVal")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("VariableDeclaration",***REMOVED***"Identifier",***REMOVED***"MemberExpression",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ForStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["init",***REMOVED***"test",***REMOVED***"update",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Statement",***REMOVED***"For",***REMOVED***"BlockParent",***REMOVED***"Loop"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***init:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("VariableDeclaration",***REMOVED***"Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***update:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
const***REMOVED***functionCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***params:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("FunctionParameter"),
***REMOVED******REMOVED***generator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***},
***REMOVED******REMOVED***async:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***}
});
exports.functionCommon***REMOVED***=***REMOVED***functionCommon;
const***REMOVED***functionTypeAnnotationCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***returnType:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeAnnotation",***REMOVED***"TSTypeAnnotation",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***typeParameters:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterDeclaration",***REMOVED***"TSTypeParameterDeclaration",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***}
});
exports.functionTypeAnnotationCommon***REMOVED***=***REMOVED***functionTypeAnnotationCommon;
const***REMOVED***functionDeclarationCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***Object.assign({},***REMOVED***functionCommon(),***REMOVED***{
***REMOVED******REMOVED***declare:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***}
});
exports.functionDeclarationCommon***REMOVED***=***REMOVED***functionDeclarationCommon;
defineType("FunctionDeclaration",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["id",***REMOVED***"params",***REMOVED***"body",***REMOVED***"generator",***REMOVED***"async"],
***REMOVED******REMOVED***visitor:***REMOVED***["id",***REMOVED***"typeParameters",***REMOVED***"params",***REMOVED***"predicate",***REMOVED***"returnType",***REMOVED***"body"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***functionDeclarationCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("DeclaredPredicate",***REMOVED***"InferredPredicate"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Function",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Statement",***REMOVED***"Pureish",***REMOVED***"Declaration"],
***REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_is.default)("ExportDefaultDeclaration",***REMOVED***parent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifier(node,***REMOVED***"id",***REMOVED***node.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}()
});
defineType("FunctionExpression",***REMOVED***{
***REMOVED******REMOVED***inherits:***REMOVED***"FunctionDeclaration",
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Function",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Expression",***REMOVED***"Pureish"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***functionCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("DeclaredPredicate",***REMOVED***"InferredPredicate"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
const***REMOVED***patternLikeCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***typeAnnotation:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeAnnotation",***REMOVED***"TSTypeAnnotation",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***}
});
exports.patternLikeCommon***REMOVED***=***REMOVED***patternLikeCommon;
defineType("Identifier",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["name"],
***REMOVED******REMOVED***visitor:***REMOVED***["typeAnnotation",***REMOVED***"decorators"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"FunctionParameter",***REMOVED***"PatternLike",***REMOVED***"LVal",***REMOVED***"TSEntityName"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***patternLikeCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("string"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_isValidIdentifier.default)(val,***REMOVED***false))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`"${val}"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***identifier***REMOVED***name`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"string"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/\.(\w+)$/.exec(key.toString());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***parentKey]***REMOVED***=***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonComp***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***"property")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("MemberExpression",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("OptionalMemberExpression",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***"key")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("Property",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("Method",***REMOVED***parent,***REMOVED***nonComp))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***"exported")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("ExportSpecifier",***REMOVED***parent))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***"imported")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("ImportSpecifier",***REMOVED***parent,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(parentKey***REMOVED***===***REMOVED***"meta")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("MetaProperty",***REMOVED***parent,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(((0,***REMOVED***_helperValidatorIdentifier.isKeyword)(node.name)***REMOVED***||***REMOVED***(0,***REMOVED***_helperValidatorIdentifier.isReservedWord)(node.name,***REMOVED***false))***REMOVED***&&***REMOVED***node.name***REMOVED***!==***REMOVED***"this")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`"${node.name}"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***identifier`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***undefined
});
defineType("IfStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["test",***REMOVED***"consequent",***REMOVED***"alternate"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Conditional"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("LabeledStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["label",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***label:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("StringLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal",***REMOVED***"Immutable"]
});
defineType("NumericLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***deprecatedAlias:***REMOVED***"NumberLiteral",
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("number"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(1***REMOVED***/***REMOVED***val***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***!Number.isFinite(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***new***REMOVED***Error("NumericLiterals***REMOVED***must***REMOVED***be***REMOVED***non-negative***REMOVED***finite***REMOVED***numbers.***REMOVED***"***REMOVED***+***REMOVED***`You***REMOVED***can***REMOVED***use***REMOVED***t.valueToNode(${val})***REMOVED***instead.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"number"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal",***REMOVED***"Immutable"]
});
defineType("NullLiteral",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal",***REMOVED***"Immutable"]
});
defineType("BooleanLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal",***REMOVED***"Immutable"]
});
defineType("RegExpLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["pattern",***REMOVED***"flags"],
***REMOVED******REMOVED***deprecatedAlias:***REMOVED***"RegexLiteral",
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pattern:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***flags:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("string"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***invalid***REMOVED***=***REMOVED***/[^dgimsuvy]/.exec(val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(invalid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`"${invalid[0]}"***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***RegExp***REMOVED***flag`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"string"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("LogicalExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["operator",***REMOVED***"left",***REMOVED***"right"],
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right"],
***REMOVED******REMOVED***aliases:***REMOVED***["Binary",***REMOVED***"Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)(..._index.LOGICAL_OPERATORS)
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("MemberExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["object",***REMOVED***"property",***REMOVED***"computed",***REMOVED***...(!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***["optional"]***REMOVED***:***REMOVED***[])],
***REMOVED******REMOVED***visitor:***REMOVED***["object",***REMOVED***"property"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"LVal",***REMOVED***"PatternLike"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression",***REMOVED***"Super")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"PrivateName");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.oneOfNodeTypes***REMOVED***=***REMOVED***["Expression",***REMOVED***"Identifier",***REMOVED***"PrivateName"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***{})
});
defineType("NewExpression",***REMOVED***{
***REMOVED******REMOVED***inherits:***REMOVED***"CallExpression"
});
defineType("Program",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["directives",***REMOVED***"body"],
***REMOVED******REMOVED***builder:***REMOVED***["body",***REMOVED***"directives",***REMOVED***"sourceType",***REMOVED***"interpreter"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("script",***REMOVED***"module"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"script"
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***interpreter:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("InterpreterDirective"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Directive"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Statement")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"BlockParent",***REMOVED***"Block"]
});
defineType("ObjectExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["properties"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("ObjectMethod",***REMOVED***"ObjectProperty",***REMOVED***"SpreadElement")
***REMOVED******REMOVED***}
});
defineType("ObjectMethod",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["kind",***REMOVED***"key",***REMOVED***"params",***REMOVED***"body",***REMOVED***"computed",***REMOVED***"generator",***REMOVED***"async"],
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"key",***REMOVED***"typeParameters",***REMOVED***"params",***REMOVED***"returnType",***REMOVED***"body"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***functionCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("method",***REMOVED***"get",***REMOVED***"set")
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"method"
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{}),
***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator.oneOfNodeTypes***REMOVED***=***REMOVED***["Expression",***REMOVED***"Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***aliases:***REMOVED***["UserWhitespacable",***REMOVED***"Function",***REMOVED***"Scopable",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Method",***REMOVED***"ObjectMember"]
});
defineType("ObjectProperty",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["key",***REMOVED***"value",***REMOVED***"computed",***REMOVED***"shorthand",***REMOVED***...(!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***["decorators"]***REMOVED***:***REMOVED***[])],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral",***REMOVED***"DecimalLiteral",***REMOVED***"PrivateName");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["Expression",***REMOVED***"Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral",***REMOVED***"DecimalLiteral",***REMOVED***"PrivateName"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression",***REMOVED***"PatternLike")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***shorthand:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("boolean"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***shorthand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shorthand)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Property***REMOVED***shorthand***REMOVED***of***REMOVED***ObjectProperty***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***computed***REMOVED***is***REMOVED***true");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_is.default)("Identifier",***REMOVED***node.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Property***REMOVED***shorthand***REMOVED***of***REMOVED***ObjectProperty***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***key***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"boolean"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"key",***REMOVED***"value"],
***REMOVED******REMOVED***aliases:***REMOVED***["UserWhitespacable",***REMOVED***"Property",***REMOVED***"ObjectMember"],
***REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"Pattern",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSNonNullExpression",***REMOVED***"TSTypeAssertion");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***(0,***REMOVED***_is.default)("ObjectPattern",***REMOVED***parent)***REMOVED***?***REMOVED***pattern***REMOVED***:***REMOVED***expression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***"value",***REMOVED***node.value);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}()
});
defineType("RestElement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["argument",***REMOVED***"typeAnnotation"],
***REMOVED******REMOVED***builder:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["FunctionParameter",***REMOVED***"PatternLike",***REMOVED***"LVal"],
***REMOVED******REMOVED***deprecatedAlias:***REMOVED***"RestProperty",
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***patternLikeCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"MemberExpression",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression",***REMOVED***"RestElement",***REMOVED***"AssignmentPattern")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"MemberExpression",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}),
***REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***function***REMOVED***(parent,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***/(\w+)\[(\d+)\]/.exec(key.toString());
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***throw***REMOVED***new***REMOVED***Error("Internal***REMOVED***Babel***REMOVED***error:***REMOVED***malformed***REMOVED***key.");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***listKey,***REMOVED***index]***REMOVED***=***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent[listKey].length***REMOVED***>***REMOVED***+index***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`RestElement***REMOVED***must***REMOVED***be***REMOVED***last***REMOVED***element***REMOVED***of***REMOVED***${listKey}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***undefined
});
defineType("ReturnStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Terminatorless",***REMOVED***"CompletionStatement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("SequenceExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["expressions"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Expression")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("ParenthesizedExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["expression"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"ExpressionWrapper"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("SwitchCase",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["test",***REMOVED***"consequent"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Statement")
***REMOVED******REMOVED***}
});
defineType("SwitchStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["discriminant",***REMOVED***"cases"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"BlockParent",***REMOVED***"Scopable"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***discriminant:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***cases:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("SwitchCase")
***REMOVED******REMOVED***}
});
defineType("ThisExpression",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("ThrowStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Terminatorless",***REMOVED***"CompletionStatement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("TryStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["block",***REMOVED***"handler",***REMOVED***"finalizer"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***block:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertNodeType)("BlockStatement"),***REMOVED***Object.assign(function***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.handler***REMOVED***&&***REMOVED***!node.finalizer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("TryStatement***REMOVED***expects***REMOVED***either***REMOVED***a***REMOVED***handler***REMOVED***or***REMOVED***finalizer,***REMOVED***or***REMOVED***both");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["BlockStatement"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***handler:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("CatchClause")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***finalizer:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("UnaryExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["operator",***REMOVED***"argument",***REMOVED***"prefix"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefix:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)(..._index.UNARY_OPERATORS)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["UnaryLike",***REMOVED***"Expression"]
});
defineType("UpdateExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["operator",***REMOVED***"argument",***REMOVED***"prefix"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefix:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"MemberExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)(..._index.UPDATE_OPERATORS)
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("VariableDeclaration",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["kind",***REMOVED***"declarations"],
***REMOVED******REMOVED***visitor:***REMOVED***["declarations"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Declaration"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("var",***REMOVED***"let",***REMOVED***"const",***REMOVED***"using",***REMOVED***"await***REMOVED***using")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***declarations:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("VariableDeclarator")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***withoutInit***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"Placeholder");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***constOrLetOrVar***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"Placeholder");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***usingOrAwaitUsing***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"VoidPattern",***REMOVED***"Placeholder");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declarations
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentIsForX***REMOVED***=***REMOVED***(0,***REMOVED***_is.default)("ForXStatement",***REMOVED***parent,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentIsForX)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declarations.length***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Exactly***REMOVED***one***REMOVED***VariableDeclarator***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***the***REMOVED***VariableDeclaration***REMOVED***of***REMOVED***a***REMOVED***${parent.type}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***decl***REMOVED***of***REMOVED***declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(kind***REMOVED***===***REMOVED***"const"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"let"***REMOVED***||***REMOVED***kind***REMOVED***===***REMOVED***"var")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parentIsForX***REMOVED***&&***REMOVED***!decl.init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***withoutInit(decl,***REMOVED***"id",***REMOVED***decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constOrLetOrVar(decl,***REMOVED***"id",***REMOVED***decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***usingOrAwaitUsing(decl,***REMOVED***"id",***REMOVED***decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***})()***REMOVED***:***REMOVED***undefined
});
defineType("VariableDeclarator",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["id",***REMOVED***"init"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertNodeType)("LVal",***REMOVED***"VoidPattern")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"VoidPattern")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***init:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("WhileStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["test",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"BlockParent",***REMOVED***"Loop",***REMOVED***"While",***REMOVED***"Scopable"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("WithStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["object",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("AssignmentPattern",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right",***REMOVED***"decorators"],
***REMOVED******REMOVED***builder:***REMOVED***["left",***REMOVED***"right"],
***REMOVED******REMOVED***aliases:***REMOVED***["FunctionParameter",***REMOVED***"Pattern",***REMOVED***"PatternLike",***REMOVED***"LVal"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***patternLikeCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"ObjectPattern",***REMOVED***"ArrayPattern",***REMOVED***"MemberExpression",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ArrayPattern",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["elements",***REMOVED***"typeAnnotation"],
***REMOVED******REMOVED***builder:***REMOVED***["elements"],
***REMOVED******REMOVED***aliases:***REMOVED***["FunctionParameter",***REMOVED***"Pattern",***REMOVED***"PatternLike",***REMOVED***"LVal"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***patternLikeCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("array"),***REMOVED***(0,***REMOVED***_utils.assertEach)((0,***REMOVED***_utils.assertNodeOrValueType)("null",***REMOVED***"PatternLike")))
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ArrowFunctionExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["params",***REMOVED***"body",***REMOVED***"async"],
***REMOVED******REMOVED***visitor:***REMOVED***["typeParameters",***REMOVED***"params",***REMOVED***"predicate",***REMOVED***"returnType",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Function",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Expression",***REMOVED***"Pureish"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***functionCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement",***REMOVED***"Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***predicate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("DeclaredPredicate",***REMOVED***"InferredPredicate"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ClassBody",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["body"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("ClassMethod",***REMOVED***"ClassPrivateMethod",***REMOVED***"ClassProperty",***REMOVED***"ClassPrivateProperty",***REMOVED***"ClassAccessorProperty",***REMOVED***"TSDeclareMethod",***REMOVED***"TSIndexSignature",***REMOVED***"StaticBlock")
***REMOVED******REMOVED***}
});
defineType("ClassExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["id",***REMOVED***"superClass",***REMOVED***"body",***REMOVED***"decorators"],
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"id",***REMOVED***"typeParameters",***REMOVED***"superClass",***REMOVED***"superTypeParameters",***REMOVED***"mixins",***REMOVED***"implements",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Class",***REMOVED***"Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterDeclaration",***REMOVED***"TSTypeParameterDeclaration",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("ClassBody")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***superClass:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***["superTypeParameters"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterInstantiation",***REMOVED***"TSTypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***implements:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("TSExpressionWithTypeArguments",***REMOVED***"ClassImplements"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("InterfaceExtends"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ClassDeclaration",***REMOVED***{
***REMOVED******REMOVED***inherits:***REMOVED***"ClassExpression",
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Class",***REMOVED***"Statement",***REMOVED***"Declaration"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterDeclaration",***REMOVED***"TSTypeParameterDeclaration",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("ClassBody")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***superClass:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***["superTypeParameters"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterInstantiation",***REMOVED***"TSTypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***implements:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("TSExpressionWithTypeArguments",***REMOVED***"ClassImplements"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("InterfaceExtends"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***abstract:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***identifier***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(parent,***REMOVED***key,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_is.default)("ExportDefaultDeclaration",***REMOVED***parent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***identifier(node,***REMOVED***"id",***REMOVED***node.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}()
});
const***REMOVED***importAttributes***REMOVED***=***REMOVED***exports.importAttributes***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***attributes:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("ImportAttribute")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***assertions:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***deprecated:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("ImportAttribute")
***REMOVED******REMOVED***}
};
defineType("ExportAllDeclaration",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["source"],
***REMOVED******REMOVED***visitor:***REMOVED***["source",***REMOVED***"attributes",***REMOVED***"assertions"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Declaration",***REMOVED***"ImportOrExportDeclaration",***REMOVED***"ExportDeclaration"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***(0,***REMOVED***_utils.validateOptional)((0,***REMOVED***_utils.assertOneOf)("type",***REMOVED***"value"))
***REMOVED******REMOVED***},***REMOVED***importAttributes)
});
defineType("ExportDefaultDeclaration",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["declaration"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Declaration",***REMOVED***"ImportOrExportDeclaration",***REMOVED***"ExportDeclaration"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***(0,***REMOVED***_utils.validateType)("TSDeclareFunction",***REMOVED***"FunctionDeclaration",***REMOVED***"ClassDeclaration",***REMOVED***"Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***(0,***REMOVED***_utils.validateOptional)((0,***REMOVED***_utils.assertOneOf)("value"))
***REMOVED******REMOVED***}
});
defineType("ExportNamedDeclaration",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["declaration",***REMOVED***"specifiers",***REMOVED***"source"],
***REMOVED******REMOVED***visitor:***REMOVED***["declaration",***REMOVED***"specifiers",***REMOVED***"source",***REMOVED***"attributes",***REMOVED***"assertions"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Declaration",***REMOVED***"ImportOrExportDeclaration",***REMOVED***"ExportDeclaration"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertNodeType)("Declaration"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***node.specifiers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Only***REMOVED***declaration***REMOVED***or***REMOVED***specifiers***REMOVED***is***REMOVED***allowed***REMOVED***on***REMOVED***ExportNamedDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***node.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Cannot***REMOVED***export***REMOVED***a***REMOVED***declaration***REMOVED***from***REMOVED***a***REMOVED***source");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["Declaration"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Declaration")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},***REMOVED***importAttributes,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOf)(function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourced***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("ExportSpecifier",***REMOVED***"ExportDefaultSpecifier",***REMOVED***"ExportNamespaceSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceless***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("ExportSpecifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!process.env.BABEL_TYPES_8_BREAKING)***REMOVED***return***REMOVED***sourced;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.source***REMOVED***?***REMOVED***sourced***REMOVED***:***REMOVED***sourceless;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["ExportSpecifier",***REMOVED***"ExportDefaultSpecifier",***REMOVED***"ExportNamespaceSpecifier"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}())
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("StringLiteral"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***(0,***REMOVED***_utils.validateOptional)((0,***REMOVED***_utils.assertOneOf)("type",***REMOVED***"value"))
***REMOVED******REMOVED***})
});
defineType("ExportSpecifier",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["local",***REMOVED***"exported"],
***REMOVED******REMOVED***aliases:***REMOVED***["ModuleSpecifier"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("type",***REMOVED***"value"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ForOfStatement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["left",***REMOVED***"right",***REMOVED***"body"],
***REMOVED******REMOVED***builder:***REMOVED***["left",***REMOVED***"right",***REMOVED***"body",***REMOVED***"await"],
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"Statement",***REMOVED***"For",***REMOVED***"BlockParent",***REMOVED***"Loop",***REMOVED***"ForXStatement"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!process.env.BABEL_TYPES_8_BREAKING)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_utils.assertNodeType)("VariableDeclaration",***REMOVED***"LVal");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declaration***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("VariableDeclaration");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lval***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"MemberExpression",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)("VariableDeclaration",***REMOVED***val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lval(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["VariableDeclaration",***REMOVED***"Identifier",***REMOVED***"MemberExpression",***REMOVED***"ArrayPattern",***REMOVED***"ObjectPattern",***REMOVED***"TSAsExpression",***REMOVED***"TSSatisfiesExpression",***REMOVED***"TSTypeAssertion",***REMOVED***"TSNonNullExpression"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Statement")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***await:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ImportDeclaration",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["specifiers",***REMOVED***"source"],
***REMOVED******REMOVED***visitor:***REMOVED***["specifiers",***REMOVED***"source",***REMOVED***"attributes",***REMOVED***"assertions"],
***REMOVED******REMOVED***aliases:***REMOVED***["Statement",***REMOVED***"Declaration",***REMOVED***"ImportOrExportDeclaration"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***importAttributes,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***phase:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("source",***REMOVED***"defer")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("ImportSpecifier",***REMOVED***"ImportDefaultSpecifier",***REMOVED***"ImportNamespaceSpecifier"),
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***importKind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("type",***REMOVED***"typeof",***REMOVED***"value"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ImportDefaultSpecifier",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["local"],
***REMOVED******REMOVED***aliases:***REMOVED***["ModuleSpecifier"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ImportNamespaceSpecifier",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["local"],
***REMOVED******REMOVED***aliases:***REMOVED***["ModuleSpecifier"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ImportSpecifier",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["imported",***REMOVED***"local"],
***REMOVED******REMOVED***builder:***REMOVED***["local",***REMOVED***"imported"],
***REMOVED******REMOVED***aliases:***REMOVED***["ModuleSpecifier"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***local:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***importKind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("type",***REMOVED***"typeof",***REMOVED***"value"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ImportExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["source",***REMOVED***"options"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***phase:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("source",***REMOVED***"defer")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("MetaProperty",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["meta",***REMOVED***"property"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***meta:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertNodeType)("Identifier"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***property;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(val.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"function":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***"sent";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"new":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***"target";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"import":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***property***REMOVED***=***REMOVED***"meta";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(0,***REMOVED***_is.default)("Identifier",***REMOVED***node.property,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***property
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Unrecognised***REMOVED***MetaProperty");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["Identifier"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
const***REMOVED***classMethodOrPropertyCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***abstract:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***accessibility:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("public",***REMOVED***"private",***REMOVED***"protected"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***static:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***},
***REMOVED******REMOVED***override:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***},
***REMOVED******REMOVED***computed:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED***},
***REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)(function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}(),***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral",***REMOVED***"Expression"))
***REMOVED******REMOVED***}
});
exports.classMethodOrPropertyCommon***REMOVED***=***REMOVED***classMethodOrPropertyCommon;
const***REMOVED***classMethodOrDeclareMethodCommon***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***Object.assign({},***REMOVED***functionCommon(),***REMOVED***classMethodOrPropertyCommon(),***REMOVED***{
***REMOVED******REMOVED***params:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("FunctionParameter",***REMOVED***"TSParameterProperty"),
***REMOVED******REMOVED***kind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("get",***REMOVED***"set",***REMOVED***"method",***REMOVED***"constructor"),
***REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"method"
***REMOVED******REMOVED***},
***REMOVED******REMOVED***access:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("string"),***REMOVED***(0,***REMOVED***_utils.assertOneOf)("public",***REMOVED***"private",***REMOVED***"protected")),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***}
});
exports.classMethodOrDeclareMethodCommon***REMOVED***=***REMOVED***classMethodOrDeclareMethodCommon;
defineType("ClassMethod",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Function",***REMOVED***"Scopable",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Method"],
***REMOVED******REMOVED***builder:***REMOVED***["kind",***REMOVED***"key",***REMOVED***"params",***REMOVED***"body",***REMOVED***"computed",***REMOVED***"static",***REMOVED***"generator",***REMOVED***"async"],
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"key",***REMOVED***"typeParameters",***REMOVED***"params",***REMOVED***"returnType",***REMOVED***"body"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***classMethodOrDeclareMethodCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ObjectPattern",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"properties",***REMOVED***"typeAnnotation"],
***REMOVED******REMOVED***builder:***REMOVED***["properties"],
***REMOVED******REMOVED***aliases:***REMOVED***["FunctionParameter",***REMOVED***"Pattern",***REMOVED***"PatternLike",***REMOVED***"LVal"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***patternLikeCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("RestElement",***REMOVED***"ObjectProperty")
***REMOVED******REMOVED***})
});
defineType("SpreadElement",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["UnaryLike"],
***REMOVED******REMOVED***deprecatedAlias:***REMOVED***"SpreadProperty",
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("Super",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("TaggedTemplateExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["tag",***REMOVED***"typeParameters",***REMOVED***"quasi"],
***REMOVED******REMOVED***builder:***REMOVED***["tag",***REMOVED***"quasi"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tag:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***quasi:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TemplateLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***["typeParameters"]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterInstantiation",***REMOVED***"TSTypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("TemplateElement",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value",***REMOVED***"tail"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertShape)({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cooked:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***function***REMOVED***templateElementCookedValidator(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***node.value.raw;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***unterminatedCalled***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Internal***REMOVED***@babel/types***REMOVED***error.");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***firstInvalidLoc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***(0,***REMOVED***_helperStringParser.readStringContents)("template",***REMOVED***raw,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminated()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unterminatedCalled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strictNumericEscape:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidEscapeSequence:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***numericSeparatorInEscapeSequence:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unexpectedNumericSeparator:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidDigit:***REMOVED***error,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidCodePoint:***REMOVED***error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!unterminatedCalled)***REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***raw");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value.cooked***REMOVED***=***REMOVED***firstInvalidLoc***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***str;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***tail:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("TemplateLiteral",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["quasis",***REMOVED***"expressions"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Literal"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***quasis:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("TemplateElement"),
***REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("array"),***REMOVED***(0,***REMOVED***_utils.assertEach)((0,***REMOVED***_utils.assertNodeType)("Expression",***REMOVED***"TSType")),***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.quasis.length***REMOVED***!==***REMOVED***val.length***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Number***REMOVED***of***REMOVED***${node.type}***REMOVED***quasis***REMOVED***should***REMOVED***be***REMOVED***exactly***REMOVED***one***REMOVED***more***REMOVED***than***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***expressions.\nExpected***REMOVED***${val.length***REMOVED***+***REMOVED***1}***REMOVED***quasis***REMOVED***but***REMOVED***got***REMOVED***${node.quasis.length}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("YieldExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["argument",***REMOVED***"delegate"],
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Terminatorless"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***delegate:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("boolean"),***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***&&***REMOVED***!node.argument)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Property***REMOVED***delegate***REMOVED***of***REMOVED***YieldExpression***REMOVED***cannot***REMOVED***be***REMOVED***true***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***argument");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"boolean"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("AwaitExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["argument"],
***REMOVED******REMOVED***visitor:***REMOVED***["argument"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Terminatorless"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***argument:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("Import",***REMOVED***{
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"]
});
defineType("BigIntLiteral",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("string")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Expression",***REMOVED***"Pureish",***REMOVED***"Literal",***REMOVED***"Immutable"]
});
defineType("ExportNamespaceSpecifier",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["exported"],
***REMOVED******REMOVED***aliases:***REMOVED***["ModuleSpecifier"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("OptionalMemberExpression",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["object",***REMOVED***"property",***REMOVED***"computed",***REMOVED***"optional"],
***REMOVED******REMOVED***visitor:***REMOVED***["object",***REMOVED***"property"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***property:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***Object.assign(function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***["Expression",***REMOVED***"Identifier"]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***validator;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}()
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("boolean"),***REMOVED***(0,***REMOVED***_utils.assertOptionalChainStart)())
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("OptionalCallExpression",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["callee",***REMOVED***"typeParameters",***REMOVED***"typeArguments",***REMOVED***"arguments"],
***REMOVED******REMOVED***builder:***REMOVED***["callee",***REMOVED***"arguments",***REMOVED***"optional"],
***REMOVED******REMOVED***aliases:***REMOVED***["Expression"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Expression",***REMOVED***"SpreadElement",***REMOVED***"ArgumentPlaceholder"),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***!process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean")***REMOVED***:***REMOVED***(0,***REMOVED***_utils.chain)((0,***REMOVED***_utils.assertValueType)("boolean"),***REMOVED***(0,***REMOVED***_utils.assertOptionalChainStart)())
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeArguments:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TSTypeParameterInstantiation"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ClassProperty",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"variance",***REMOVED***"key",***REMOVED***"typeAnnotation",***REMOVED***"value"],
***REMOVED******REMOVED***builder:***REMOVED***["key",***REMOVED***"value",***REMOVED***"typeAnnotation",***REMOVED***"decorators",***REMOVED***"computed",***REMOVED***"static"],
***REMOVED******REMOVED***aliases:***REMOVED***["Property"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***classMethodOrPropertyCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeAnnotation",***REMOVED***"TSTypeAnnotation",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Variance"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ClassAccessorProperty",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"key",***REMOVED***"typeAnnotation",***REMOVED***"value"],
***REMOVED******REMOVED***builder:***REMOVED***["key",***REMOVED***"value",***REMOVED***"typeAnnotation",***REMOVED***"decorators",***REMOVED***"computed",***REMOVED***"static"],
***REMOVED******REMOVED***aliases:***REMOVED***["Property",***REMOVED***"Accessor"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***classMethodOrPropertyCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.chain)(function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normal***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral",***REMOVED***"PrivateName");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***node.computed***REMOVED***?***REMOVED***computed***REMOVED***:***REMOVED***normal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validator(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}(),***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral",***REMOVED***"NumericLiteral",***REMOVED***"BigIntLiteral",***REMOVED***"Expression",***REMOVED***"PrivateName"))
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeAnnotation",***REMOVED***"TSTypeAnnotation",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***declare:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Variance"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("ClassPrivateProperty",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"variance",***REMOVED***"key",***REMOVED***"typeAnnotation",***REMOVED***"value"],
***REMOVED******REMOVED***builder:***REMOVED***["key",***REMOVED***"value",***REMOVED***"decorators",***REMOVED***"static"],
***REMOVED******REMOVED***aliases:***REMOVED***["Property",***REMOVED***"Private"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("PrivateName")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Expression"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("TypeAnnotation",***REMOVED***"TSTypeAnnotation",***REMOVED***"Noop"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***decorators:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.arrayOfType)("Decorator"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***static:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***readonly:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***definite:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertValueType)("boolean"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***variance:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Variance"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("ClassPrivateMethod",***REMOVED***{
***REMOVED******REMOVED***builder:***REMOVED***["kind",***REMOVED***"key",***REMOVED***"params",***REMOVED***"body",***REMOVED***"static"],
***REMOVED******REMOVED***visitor:***REMOVED***["decorators",***REMOVED***"key",***REMOVED***"typeParameters",***REMOVED***"params",***REMOVED***"returnType",***REMOVED***"body"],
***REMOVED******REMOVED***aliases:***REMOVED***["Function",***REMOVED***"Scopable",***REMOVED***"BlockParent",***REMOVED***"FunctionParent",***REMOVED***"Method",***REMOVED***"Private"],
***REMOVED******REMOVED***fields:***REMOVED***Object.assign({},***REMOVED***classMethodOrDeclareMethodCommon(),***REMOVED***functionTypeAnnotationCommon(),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertOneOf)("get",***REMOVED***"set",***REMOVED***"method"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***"method"
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("PrivateName")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("BlockStatement")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***})
});
defineType("PrivateName",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["id"],
***REMOVED******REMOVED***aliases:***REMOVED***["Private"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});
defineType("StaticBlock",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["body"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***(0,***REMOVED***_utils.validateArrayOfType)("Statement")
***REMOVED******REMOVED***},
***REMOVED******REMOVED***aliases:***REMOVED***["Scopable",***REMOVED***"BlockParent",***REMOVED***"FunctionParent"]
});
defineType("ImportAttribute",***REMOVED***{
***REMOVED******REMOVED***visitor:***REMOVED***["key",***REMOVED***"value"],
***REMOVED******REMOVED***fields:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("Identifier",***REMOVED***"StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***(0,***REMOVED***_utils.assertNodeType)("StringLiteral")
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
});

//#***REMOVED***sourceMappingURL=core.js.map
