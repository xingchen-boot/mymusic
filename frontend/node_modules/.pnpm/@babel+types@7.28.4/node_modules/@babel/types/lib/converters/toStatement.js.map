{"version":3,"names":["_index","require","_index2","_default","exports","default","toStatement","node","ignore","isStatement","mustHaveId","newType","isClass","isFunction","isAssignmentExpression","expressionStatement","id","Error","type"],"sources":["../../src/converters/toStatement.ts"],"sourcesContent":["import***REMOVED***{\n***REMOVED******REMOVED***isStatement,\n***REMOVED******REMOVED***isFunction,\n***REMOVED******REMOVED***isClass,\n***REMOVED******REMOVED***isAssignmentExpression,\n}***REMOVED***from***REMOVED***\"../validators/generated/index.ts\";\nimport***REMOVED***{***REMOVED***expressionStatement***REMOVED***}***REMOVED***from***REMOVED***\"../builders/generated/index.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nexport***REMOVED***default***REMOVED***toStatement***REMOVED***as***REMOVED***{\n***REMOVED******REMOVED***(node:***REMOVED***t.AssignmentExpression,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***t.ExpressionStatement;\n\n***REMOVED******REMOVED***<T***REMOVED***extends***REMOVED***t.Statement>(node:***REMOVED***T,***REMOVED***ignore:***REMOVED***false):***REMOVED***T;\n***REMOVED******REMOVED***<T***REMOVED***extends***REMOVED***t.Statement>(node:***REMOVED***T,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***T***REMOVED***|***REMOVED***false;\n\n***REMOVED******REMOVED***(node:***REMOVED***t.Class,***REMOVED***ignore:***REMOVED***false):***REMOVED***t.ClassDeclaration;\n***REMOVED******REMOVED***(node:***REMOVED***t.Class,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***t.ClassDeclaration***REMOVED***|***REMOVED***false;\n\n***REMOVED******REMOVED***(node:***REMOVED***t.Function,***REMOVED***ignore:***REMOVED***false):***REMOVED***t.FunctionDeclaration;\n***REMOVED******REMOVED***(node:***REMOVED***t.Function,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***t.FunctionDeclaration***REMOVED***|***REMOVED***false;\n\n***REMOVED******REMOVED***(node:***REMOVED***t.Node,***REMOVED***ignore:***REMOVED***false):***REMOVED***t.Statement;\n***REMOVED******REMOVED***(node:***REMOVED***t.Node,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***t.Statement***REMOVED***|***REMOVED***false;\n};\n\nfunction***REMOVED***toStatement(node:***REMOVED***t.Node,***REMOVED***ignore?:***REMOVED***boolean):***REMOVED***t.Statement***REMOVED***|***REMOVED***false***REMOVED***{\n***REMOVED******REMOVED***if***REMOVED***(isStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***let***REMOVED***mustHaveId***REMOVED***=***REMOVED***false;\n***REMOVED******REMOVED***let***REMOVED***newType;\n\n***REMOVED******REMOVED***if***REMOVED***(isClass(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***mustHaveId***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED***newType***REMOVED***=***REMOVED***\"ClassDeclaration\"***REMOVED***as***REMOVED***const;\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***mustHaveId***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED***newType***REMOVED***=***REMOVED***\"FunctionDeclaration\"***REMOVED***as***REMOVED***const;\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isAssignmentExpression(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expressionStatement(node);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(flow->ts):***REMOVED***node.id***REMOVED***might***REMOVED***be***REMOVED***missing\n***REMOVED******REMOVED***if***REMOVED***(mustHaveId***REMOVED***&&***REMOVED***!node.id)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***newType***REMOVED***=***REMOVED***false;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***if***REMOVED***(!newType)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ignore)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`cannot***REMOVED***turn***REMOVED***${node.type}***REMOVED***to***REMOVED***a***REMOVED***statement`);\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***manipulating***REMOVED***node.type\n***REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***newType;\n\n***REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(flow->ts)***REMOVED***refactor***REMOVED***to***REMOVED***avoid***REMOVED***type***REMOVED***unsafe***REMOVED***mutations***REMOVED***like***REMOVED***reassigning***REMOVED***node***REMOVED***type***REMOVED***above\n***REMOVED******REMOVED***return***REMOVED***node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMA,IAAAC,OAAA,GAAAD,OAAA;AAAqE,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGtDC,WAAW;AAgB1B,SAASA,WAAWA,CAACC,IAAY,EAAEC,MAAgB,EAAuB;EACxE,IAAI,IAAAC,kBAAW,EAACF,IAAI,CAAC,EAAE;IACrB,OAAOA,IAAI;EACb;EAEA,IAAIG,UAAU,GAAG,KAAK;EACtB,IAAIC,OAAO;EAEX,IAAI,IAAAC,cAAO,EAACL,IAAI,CAAC,EAAE;IACjBG,UAAU,GAAG,IAAI;IACjBC,OAAO,GAAG,kBAA2B;EACvC,CAAC,MAAM,IAAI,IAAAE,iBAAU,EAACN,IAAI,CAAC,EAAE;IAC3BG,UAAU,GAAG,IAAI;IACjBC,OAAO,GAAG,qBAA8B;EAC1C,CAAC,MAAM,IAAI,IAAAG,6BAAsB,EAACP,IAAI,CAAC,EAAE;IACvC,OAAO,IAAAQ,2BAAmB,EAACR,IAAI,CAAC;EAClC;EAGA,IAAIG,UAAU,IAAI,CAACH,IAAI,CAACS,EAAE,EAAE;IAC1BL,OAAO,GAAG,KAAK;EACjB;EAEA,IAAI,CAACA,OAAO,EAAE;IACZ,IAAIH,MAAM,EAAE;MACV,OAAO,KAAK;IACd,CAAC,MAAM;MACL,MAAM,IAAIS,KAAK,CAAC,eAAeV,IAAI,CAACW,IAAI,iBAAiB,CAAC;IAC5D;EACF;EAGAX,IAAI,CAACW,IAAI,GAAGP,OAAO;EAGnB,OAAOJ,IAAI;AACb","ignoreList":[]}