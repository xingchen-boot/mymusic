{"version":3,"names":["_index","require","traverse","node","handlers","state","enter","exit","traverseSimpleImpl","ancestors","keys","VISITOR_KEYS","type","key","subNode","Array","isArray","i","length","child","push","index","pop"],"sources":["../../src/traverse/traverse.ts"],"sourcesContent":["import***REMOVED***{***REMOVED***VISITOR_KEYS***REMOVED***}***REMOVED***from***REMOVED***\"../definitions/index.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nexport***REMOVED***type***REMOVED***TraversalAncestors***REMOVED***=***REMOVED***Array<{\n***REMOVED******REMOVED***node:***REMOVED***t.Node;\n***REMOVED******REMOVED***key:***REMOVED***string;\n***REMOVED******REMOVED***index?:***REMOVED***number;\n}>;\n\nexport***REMOVED***type***REMOVED***TraversalHandler<T>***REMOVED***=***REMOVED***(\n***REMOVED******REMOVED***this:***REMOVED***undefined,\n***REMOVED******REMOVED***node:***REMOVED***t.Node,\n***REMOVED******REMOVED***parent:***REMOVED***TraversalAncestors,\n***REMOVED******REMOVED***state:***REMOVED***T,\n)***REMOVED***=>***REMOVED***void;\n\nexport***REMOVED***type***REMOVED***TraversalHandlers<T>***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***enter?:***REMOVED***TraversalHandler<T>;\n***REMOVED******REMOVED***exit?:***REMOVED***TraversalHandler<T>;\n};\n\n/**\n***REMOVED*******REMOVED***A***REMOVED***general***REMOVED***AST***REMOVED***traversal***REMOVED***with***REMOVED***both***REMOVED***prefix***REMOVED***and***REMOVED***postfix***REMOVED***handlers,***REMOVED***and***REMOVED***a\n***REMOVED*******REMOVED***state***REMOVED***object.***REMOVED***Exposes***REMOVED***ancestry***REMOVED***data***REMOVED***to***REMOVED***each***REMOVED***handler***REMOVED***so***REMOVED***that***REMOVED***more***REMOVED***complex\n***REMOVED*******REMOVED***AST***REMOVED***data***REMOVED***can***REMOVED***be***REMOVED***taken***REMOVED***into***REMOVED***account.\n***REMOVED****/\nexport***REMOVED***default***REMOVED***function***REMOVED***traverse<T>(\n***REMOVED******REMOVED***node:***REMOVED***t.Node,\n***REMOVED******REMOVED***handlers:***REMOVED***TraversalHandler<T>***REMOVED***|***REMOVED***TraversalHandlers<T>,\n***REMOVED******REMOVED***state?:***REMOVED***T,\n):***REMOVED***void***REMOVED***{\n***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***handlers***REMOVED***===***REMOVED***\"function\")***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***handlers***REMOVED***=***REMOVED***{***REMOVED***enter:***REMOVED***handlers***REMOVED***};\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***const***REMOVED***{***REMOVED***enter,***REMOVED***exit***REMOVED***}***REMOVED***=***REMOVED***handlers;\n\n***REMOVED******REMOVED***traverseSimpleImpl(node,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***[]);\n}\n\nfunction***REMOVED***traverseSimpleImpl<T>(\n***REMOVED******REMOVED***node:***REMOVED***any,\n***REMOVED******REMOVED***enter:***REMOVED***Function***REMOVED***|***REMOVED***undefined,\n***REMOVED******REMOVED***exit:***REMOVED***Function***REMOVED***|***REMOVED***undefined,\n***REMOVED******REMOVED***state:***REMOVED***T***REMOVED***|***REMOVED***undefined,\n***REMOVED******REMOVED***ancestors:***REMOVED***TraversalAncestors,\n)***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***VISITOR_KEYS[node.type];\n***REMOVED******REMOVED***if***REMOVED***(!keys)***REMOVED***return;\n\n***REMOVED******REMOVED***if***REMOVED***(enter)***REMOVED***enter(node,***REMOVED***ancestors,***REMOVED***state);\n\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subNode***REMOVED***=***REMOVED***node[key];\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(subNode))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***subNode.length;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***subNode[i];\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!child)***REMOVED***continue;\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.push({\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***i,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseSimpleImpl(child,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***ancestors);\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.pop();\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(subNode)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.push({\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseSimpleImpl(subNode,***REMOVED***enter,***REMOVED***exit,***REMOVED***state,***REMOVED***ancestors);\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ancestors.pop();\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***if***REMOVED***(exit)***REMOVED***exit(node,***REMOVED***ancestors,***REMOVED***state);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AA0Be,SAASC,QAAQA,CAC9BC,IAAY,EACZC,QAAoD,EACpDC,KAAS,EACH;EACN,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAClCA,QAAQ,GAAG;MAAEE,KAAK,EAAEF;IAAS,CAAC;EAChC;EAEA,MAAM;IAAEE,KAAK;IAAEC;EAAK,CAAC,GAAGH,QAAQ;EAEhCI,kBAAkB,CAACL,IAAI,EAAEG,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAE,EAAE,CAAC;AAClD;AAEA,SAASG,kBAAkBA,CACzBL,IAAS,EACTG,KAA2B,EAC3BC,IAA0B,EAC1BF,KAAoB,EACpBI,SAA6B,EAC7B;EACA,MAAMC,IAAI,GAAGC,mBAAY,CAACR,IAAI,CAACS,IAAI,CAAC;EACpC,IAAI,CAACF,IAAI,EAAE;EAEX,IAAIJ,KAAK,EAAEA,KAAK,CAACH,IAAI,EAAEM,SAAS,EAAEJ,KAAK,CAAC;EAExC,KAAK,MAAMQ,GAAG,IAAIH,IAAI,EAAE;IACtB,MAAMI,OAAO,GAAGX,IAAI,CAACU,GAAG,CAAC;IAEzB,IAAIE,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;MAC1B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,MAAME,KAAK,GAAGL,OAAO,CAACG,CAAC,CAAC;QACxB,IAAI,CAACE,KAAK,EAAE;QAEZV,SAAS,CAACW,IAAI,CAAC;UACbjB,IAAI;UACJU,GAAG;UACHQ,KAAK,EAAEJ;QACT,CAAC,CAAC;QAEFT,kBAAkB,CAACW,KAAK,EAAEb,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAEI,SAAS,CAAC;QAExDA,SAAS,CAACa,GAAG,CAAC,CAAC;MACjB;IACF,CAAC,MAAM,IAAIR,OAAO,EAAE;MAClBL,SAAS,CAACW,IAAI,CAAC;QACbjB,IAAI;QACJU;MACF,CAAC,CAAC;MAEFL,kBAAkB,CAACM,OAAO,EAAER,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAEI,SAAS,CAAC;MAE1DA,SAAS,CAACa,GAAG,CAAC,CAAC;IACjB;EACF;EAEA,IAAIf,IAAI,EAAEA,IAAI,CAACJ,IAAI,EAAEM,SAAS,EAAEJ,KAAK,CAAC;AACxC","ignoreList":[]}