{"version":3,"names":["_index","require","_default","exports","default","toExpression","node","isExpressionStatement","expression","isExpression","isClass","type","abstract","isFunction","Error"],"sources":["../../src/converters/toExpression.ts"],"sourcesContent":["import***REMOVED***{\n***REMOVED******REMOVED***isExpression,\n***REMOVED******REMOVED***isFunction,\n***REMOVED******REMOVED***isClass,\n***REMOVED******REMOVED***isExpressionStatement,\n}***REMOVED***from***REMOVED***\"../validators/generated/index.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nexport***REMOVED***default***REMOVED***toExpression***REMOVED***as***REMOVED***{\n***REMOVED******REMOVED***(node:***REMOVED***t.Function):***REMOVED***t.FunctionExpression;\n***REMOVED******REMOVED***(node:***REMOVED***t.Class):***REMOVED***t.ClassExpression;\n***REMOVED******REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED***node:***REMOVED***t.ExpressionStatement***REMOVED***|***REMOVED***t.Expression***REMOVED***|***REMOVED***t.Class***REMOVED***|***REMOVED***t.Function,\n***REMOVED******REMOVED***):***REMOVED***t.Expression;\n};\n\nfunction***REMOVED***toExpression(\n***REMOVED******REMOVED***node:***REMOVED***t.ExpressionStatement***REMOVED***|***REMOVED***t.Expression***REMOVED***|***REMOVED***t.Class***REMOVED***|***REMOVED***t.Function,\n):***REMOVED***t.Expression***REMOVED***{\n***REMOVED******REMOVED***if***REMOVED***(isExpressionStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.expression;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***return***REMOVED***unmodified***REMOVED***node\n***REMOVED******REMOVED***//***REMOVED***important***REMOVED***for***REMOVED***things***REMOVED***like***REMOVED***ArrowFunctions***REMOVED***where\n***REMOVED******REMOVED***//***REMOVED***type***REMOVED***change***REMOVED***from***REMOVED***ArrowFunction***REMOVED***to***REMOVED***FunctionExpression\n***REMOVED******REMOVED***//***REMOVED***produces***REMOVED***bugs***REMOVED***like***REMOVED***->***REMOVED***`()=>a`***REMOVED***to***REMOVED***`function***REMOVED***()***REMOVED***a`\n***REMOVED******REMOVED***//***REMOVED***without***REMOVED***generating***REMOVED***a***REMOVED***BlockStatement***REMOVED***for***REMOVED***it\n***REMOVED******REMOVED***//***REMOVED***ref:***REMOVED***https://github.com/babel/babili/issues/130\n***REMOVED******REMOVED***if***REMOVED***(isExpression(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***convert***REMOVED***all***REMOVED***classes***REMOVED***and***REMOVED***functions\n***REMOVED******REMOVED***//***REMOVED***ClassDeclaration***REMOVED***->***REMOVED***ClassExpression\n***REMOVED******REMOVED***//***REMOVED***FunctionDeclaration,***REMOVED***ObjectMethod,***REMOVED***ClassMethod***REMOVED***->***REMOVED***FunctionExpression\n***REMOVED******REMOVED***if***REMOVED***(isClass(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(flow->ts):***REMOVED***avoid***REMOVED***type***REMOVED***unsafe***REMOVED***mutations\n***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***\"ClassExpression\";\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***abstract***REMOVED***modifiers***REMOVED***are***REMOVED***only***REMOVED***allowed***REMOVED***on***REMOVED***class***REMOVED***declarations\n***REMOVED******REMOVED******REMOVED******REMOVED***node.abstract***REMOVED***=***REMOVED***false;\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error***REMOVED***todo(flow->ts):***REMOVED***avoid***REMOVED***type***REMOVED***unsafe***REMOVED***mutations\n***REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***=***REMOVED***\"FunctionExpression\";\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***if***REMOVED***it's***REMOVED***still***REMOVED***not***REMOVED***an***REMOVED***expression\n***REMOVED******REMOVED***if***REMOVED***(!isExpression(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`cannot***REMOVED***turn***REMOVED***${node.type}***REMOVED***to***REMOVED***an***REMOVED***expression`);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAK0C,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAG3BC,YAAY;AAQ3B,SAASA,YAAYA,CACnBC,IAAiE,EACnD;EACd,IAAI,IAAAC,4BAAqB,EAACD,IAAI,CAAC,EAAE;IAC/BA,IAAI,GAAGA,IAAI,CAACE,UAAU;EACxB;EAQA,IAAI,IAAAC,mBAAY,EAACH,IAAI,CAAC,EAAE;IACtB,OAAOA,IAAI;EACb;EAKA,IAAI,IAAAI,cAAO,EAACJ,IAAI,CAAC,EAAE;IAEjBA,IAAI,CAACK,IAAI,GAAG,iBAAiB;IAE7BL,IAAI,CAACM,QAAQ,GAAG,KAAK;EACvB,CAAC,MAAM,IAAI,IAAAC,iBAAU,EAACP,IAAI,CAAC,EAAE;IAE3BA,IAAI,CAACK,IAAI,GAAG,oBAAoB;EAClC;EAGA,IAAI,CAAC,IAAAF,mBAAY,EAACH,IAAI,CAAC,EAAE;IACvB,MAAM,IAAIQ,KAAK,CAAC,eAAeR,IAAI,CAACK,IAAI,mBAAmB,CAAC;EAC9D;EAEA,OAAOL,IAAI;AACb","ignoreList":[]}