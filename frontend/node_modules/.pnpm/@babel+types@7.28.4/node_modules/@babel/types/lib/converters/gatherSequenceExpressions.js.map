{"version":3,"names":["_getBindingIdentifiers","require","_index","_index2","_productions","_cloneNode","gatherSequenceExpressions","nodes","declars","exprs","ensureLastUndefined","node","isEmptyStatement","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","declar","declarations","bindings","getBindingIdentifiers","key","Object","keys","id","cloneNode","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","indexOf","length","sequenceExpression"],"sources":["../../src/converters/gatherSequenceExpressions.ts"],"sourcesContent":["//***REMOVED***TODO(Babel***REMOVED***8)***REMOVED***Remove***REMOVED***this***REMOVED***file\nif***REMOVED***(process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***process.env.IS_PUBLISH)***REMOVED***{\n***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(\n***REMOVED******REMOVED******REMOVED******REMOVED***\"Internal***REMOVED***Babel***REMOVED***error:***REMOVED***This***REMOVED***file***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***loaded***REMOVED***in***REMOVED***Babel***REMOVED***7\",\n***REMOVED******REMOVED***);\n}\n\nimport***REMOVED***getBindingIdentifiers***REMOVED***from***REMOVED***\"../retrievers/getBindingIdentifiers.ts\";\nimport***REMOVED***{\n***REMOVED******REMOVED***isExpression,\n***REMOVED******REMOVED***isExpressionStatement,\n***REMOVED******REMOVED***isVariableDeclaration,\n***REMOVED******REMOVED***isIfStatement,\n***REMOVED******REMOVED***isBlockStatement,\n***REMOVED******REMOVED***isEmptyStatement,\n}***REMOVED***from***REMOVED***\"../validators/generated/index.ts\";\nimport***REMOVED***{\n***REMOVED******REMOVED***sequenceExpression,\n***REMOVED******REMOVED***assignmentExpression,\n***REMOVED******REMOVED***conditionalExpression,\n}***REMOVED***from***REMOVED***\"../builders/generated/index.ts\";\nimport***REMOVED***{***REMOVED***buildUndefinedNode***REMOVED***}***REMOVED***from***REMOVED***\"../builders/productions.ts\";\nimport***REMOVED***cloneNode***REMOVED***from***REMOVED***\"../clone/cloneNode.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nexport***REMOVED***type***REMOVED***DeclarationInfo***REMOVED***=***REMOVED***{\n***REMOVED******REMOVED***kind:***REMOVED***t.VariableDeclaration[\"kind\"];\n***REMOVED******REMOVED***id:***REMOVED***t.Identifier;\n};\n\nexport***REMOVED***default***REMOVED***function***REMOVED***gatherSequenceExpressions(\n***REMOVED******REMOVED***nodes:***REMOVED***ReadonlyArray<t.Node>,\n***REMOVED******REMOVED***declars:***REMOVED***Array<DeclarationInfo>,\n)***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***exprs:***REMOVED***t.Expression[]***REMOVED***=***REMOVED***[];\n***REMOVED******REMOVED***let***REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;\n\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***nodes)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***encounter***REMOVED***emptyStatement***REMOVED***before***REMOVED***a***REMOVED***non-emptyStatement\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***want***REMOVED***to***REMOVED***disregard***REMOVED***that\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isEmptyStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***false;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExpression(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(node);\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isExpressionStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(node.expression);\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isVariableDeclaration(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.kind***REMOVED***!==***REMOVED***\"var\")***REMOVED***return;***REMOVED***//***REMOVED***bailed\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***declar***REMOVED***of***REMOVED***node.declarations)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bindings***REMOVED***=***REMOVED***getBindingIdentifiers(declar);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(bindings))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declars.push({\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***node.kind,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***cloneNode(bindings[key]),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declar.init)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignmentExpression(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***\"=\",\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***var***REMOVED***declarator***REMOVED***must***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***void***REMOVED***pattern\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declar.id***REMOVED***as***REMOVED***Exclude<t.VariableDeclarator[\"id\"],***REMOVED***t.VoidPattern>,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declar.init,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isIfStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consequent***REMOVED***=***REMOVED***node.consequent\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***gatherSequenceExpressions([node.consequent],***REMOVED***declars)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***buildUndefinedNode();\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alternate***REMOVED***=***REMOVED***node.alternate\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***gatherSequenceExpressions([node.alternate],***REMOVED***declars)\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***buildUndefinedNode();\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!consequent***REMOVED***||***REMOVED***!alternate)***REMOVED***return;***REMOVED***//***REMOVED***bailed\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(conditionalExpression(node.test,***REMOVED***consequent,***REMOVED***alternate));\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isBlockStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***gatherSequenceExpressions(node.body,***REMOVED***declars);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!body)***REMOVED***return;***REMOVED***//***REMOVED***bailed\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(body);\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isEmptyStatement(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***empty***REMOVED***statement***REMOVED***so***REMOVED***ensure***REMOVED***the***REMOVED***last***REMOVED***item***REMOVED***is***REMOVED***undefined***REMOVED***if***REMOVED***we're***REMOVED***last\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***checks***REMOVED***if***REMOVED***emptyStatement***REMOVED***is***REMOVED***first\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodes.indexOf(node)***REMOVED***===***REMOVED***0)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ensureLastUndefined***REMOVED***=***REMOVED***true;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***bailed,***REMOVED***we***REMOVED***can't***REMOVED***turn***REMOVED***this***REMOVED***statement***REMOVED***into***REMOVED***an***REMOVED***expression\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***if***REMOVED***(ensureLastUndefined)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***exprs.push(buildUndefinedNode());\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***if***REMOVED***(exprs.length***REMOVED***===***REMOVED***1)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exprs[0];\n***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sequenceExpression(exprs);\n***REMOVED******REMOVED***}\n}\n"],"mappings":"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","ignoreList":[]}