{"version":3,"names":["_index","require","isMemberExpressionLike","node","isMemberExpression","isMetaProperty","matchesPattern","member","match","allowPartial","parts","Array","isArray","split","nodes","_object","object","meta","push","property","length","i","j","value","isIdentifier","name","isStringLiteral","isThisExpression","isSuper","isPrivateName","id"],"sources":["../../src/validators/matchesPattern.ts"],"sourcesContent":["import***REMOVED***{\n***REMOVED******REMOVED***isIdentifier,\n***REMOVED******REMOVED***isMetaProperty,\n***REMOVED******REMOVED***isMemberExpression,\n***REMOVED******REMOVED***isPrivateName,\n***REMOVED******REMOVED***isStringLiteral,\n***REMOVED******REMOVED***isSuper,\n***REMOVED******REMOVED***isThisExpression,\n}***REMOVED***from***REMOVED***\"./generated/index.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../index.ts\";\n\nfunction***REMOVED***isMemberExpressionLike(\n***REMOVED******REMOVED***node:***REMOVED***t.Node,\n):***REMOVED***node***REMOVED***is***REMOVED***t.MemberExpression***REMOVED***|***REMOVED***t.MetaProperty***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***isMemberExpression(node)***REMOVED***||***REMOVED***isMetaProperty(node);\n}\n\n/**\n***REMOVED*******REMOVED***Determines***REMOVED***whether***REMOVED***or***REMOVED***not***REMOVED***the***REMOVED***input***REMOVED***node***REMOVED***`member`***REMOVED***matches***REMOVED***the\n***REMOVED*******REMOVED***input***REMOVED***`match`.\n***REMOVED****\n***REMOVED*******REMOVED***For***REMOVED***example,***REMOVED***given***REMOVED***the***REMOVED***match***REMOVED***`React.createClass`***REMOVED***it***REMOVED***would***REMOVED***match***REMOVED***the\n***REMOVED*******REMOVED***parsed***REMOVED***nodes***REMOVED***of***REMOVED***`React.createClass`***REMOVED***and***REMOVED***`React[\"createClass\"]`.\n***REMOVED****/\nexport***REMOVED***default***REMOVED***function***REMOVED***matchesPattern(\n***REMOVED******REMOVED***member:***REMOVED***t.Node***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***undefined,\n***REMOVED******REMOVED***match:***REMOVED***string***REMOVED***|***REMOVED***string[],\n***REMOVED******REMOVED***allowPartial?:***REMOVED***boolean,\n):***REMOVED***boolean***REMOVED***{\n***REMOVED******REMOVED***//***REMOVED***not***REMOVED***a***REMOVED***member***REMOVED***expression\n***REMOVED******REMOVED***if***REMOVED***(!isMemberExpressionLike(member))***REMOVED***return***REMOVED***false;\n\n***REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***Array.isArray(match)***REMOVED***?***REMOVED***match***REMOVED***:***REMOVED***match.split(\".\");\n***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***[];\n\n***REMOVED******REMOVED***let***REMOVED***node;\n***REMOVED******REMOVED***for***REMOVED***(\n***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***member;\n***REMOVED******REMOVED******REMOVED******REMOVED***isMemberExpressionLike(node);\n***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***(node***REMOVED***as***REMOVED***t.MemberExpression).object***REMOVED***??***REMOVED***(node***REMOVED***as***REMOVED***t.MetaProperty).meta\n***REMOVED******REMOVED***)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(node.property);\n***REMOVED******REMOVED***}\n***REMOVED******REMOVED***nodes.push(node);\n\n***REMOVED******REMOVED***if***REMOVED***(nodes.length***REMOVED***<***REMOVED***parts.length)***REMOVED***return***REMOVED***false;\n***REMOVED******REMOVED***if***REMOVED***(!allowPartial***REMOVED***&&***REMOVED***nodes.length***REMOVED***>***REMOVED***parts.length)***REMOVED***return***REMOVED***false;\n\n***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***j***REMOVED***=***REMOVED***nodes.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***parts.length;***REMOVED***i++,***REMOVED***j--)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***nodes[j];\n***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value;\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isIdentifier(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***node.name;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isStringLiteral(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***node.value;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isThisExpression(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***\"this\";\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSuper(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***\"super\";\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isPrivateName(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***\"#\"***REMOVED***+***REMOVED***node.id.name;\n***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts[i]***REMOVED***!==***REMOVED***value)***REMOVED***return***REMOVED***false;\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***true;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAWA,SAASC,sBAAsBA,CAC7BC,IAAY,EACiC;EAC7C,OAAO,IAAAC,yBAAkB,EAACD,IAAI,CAAC,IAAI,IAAAE,qBAAc,EAACF,IAAI,CAAC;AACzD;AASe,SAASG,cAAcA,CACpCC,MAAiC,EACjCC,KAAwB,EACxBC,YAAsB,EACb;EAET,IAAI,CAACP,sBAAsB,CAACK,MAAM,CAAC,EAAE,OAAO,KAAK;EAEjD,MAAMG,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAGA,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC;EAC7D,MAAMC,KAAK,GAAG,EAAE;EAEhB,IAAIX,IAAI;EACR,KACEA,IAAI,GAAGI,MAAM,EACbL,sBAAsB,CAACC,IAAI,CAAC,EAC5BA,IAAI,IAAAY,OAAA,GAAIZ,IAAI,CAAwBa,MAAM,YAAAD,OAAA,GAAKZ,IAAI,CAAoBc,IAAI,EAC3E;IAAA,IAAAF,OAAA;IACAD,KAAK,CAACI,IAAI,CAACf,IAAI,CAACgB,QAAQ,CAAC;EAC3B;EACAL,KAAK,CAACI,IAAI,CAACf,IAAI,CAAC;EAEhB,IAAIW,KAAK,CAACM,MAAM,GAAGV,KAAK,CAACU,MAAM,EAAE,OAAO,KAAK;EAC7C,IAAI,CAACX,YAAY,IAAIK,KAAK,CAACM,MAAM,GAAGV,KAAK,CAACU,MAAM,EAAE,OAAO,KAAK;EAE9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGR,KAAK,CAACM,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAGX,KAAK,CAACU,MAAM,EAAEC,CAAC,EAAE,EAAEC,CAAC,EAAE,EAAE;IAChE,MAAMnB,IAAI,GAAGW,KAAK,CAACQ,CAAC,CAAC;IACrB,IAAIC,KAAK;IACT,IAAI,IAAAC,mBAAY,EAACrB,IAAI,CAAC,EAAE;MACtBoB,KAAK,GAAGpB,IAAI,CAACsB,IAAI;IACnB,CAAC,MAAM,IAAI,IAAAC,sBAAe,EAACvB,IAAI,CAAC,EAAE;MAChCoB,KAAK,GAAGpB,IAAI,CAACoB,KAAK;IACpB,CAAC,MAAM,IAAI,IAAAI,uBAAgB,EAACxB,IAAI,CAAC,EAAE;MACjCoB,KAAK,GAAG,MAAM;IAChB,CAAC,MAAM,IAAI,IAAAK,cAAO,EAACzB,IAAI,CAAC,EAAE;MACxBoB,KAAK,GAAG,OAAO;IACjB,CAAC,MAAM,IAAI,IAAAM,oBAAa,EAAC1B,IAAI,CAAC,EAAE;MAC9BoB,KAAK,GAAG,GAAG,GAAGpB,IAAI,CAAC2B,EAAE,CAACL,IAAI;IAC5B,CAAC,MAAM;MACL,OAAO,KAAK;IACd;IAEA,IAAIf,KAAK,CAACW,CAAC,CAAC,KAAKE,KAAK,EAAE,OAAO,KAAK;EACtC;EAEA,OAAO,IAAI;AACb","ignoreList":[]}