"use***REMOVED***strict";

Object.defineProperty(exports,***REMOVED***"__esModule",***REMOVED***{
***REMOVED******REMOVED***value:***REMOVED***true
});
exports.allExpandedTypes***REMOVED***=***REMOVED***exports.VISITOR_KEYS***REMOVED***=***REMOVED***exports.NODE_PARENT_VALIDATIONS***REMOVED***=***REMOVED***exports.NODE_FIELDS***REMOVED***=***REMOVED***exports.FLIPPED_ALIAS_KEYS***REMOVED***=***REMOVED***exports.DEPRECATED_KEYS***REMOVED***=***REMOVED***exports.BUILDER_KEYS***REMOVED***=***REMOVED***exports.ALIAS_KEYS***REMOVED***=***REMOVED***void***REMOVED***0;
exports.arrayOf***REMOVED***=***REMOVED***arrayOf;
exports.arrayOfType***REMOVED***=***REMOVED***arrayOfType;
exports.assertEach***REMOVED***=***REMOVED***assertEach;
exports.assertNodeOrValueType***REMOVED***=***REMOVED***assertNodeOrValueType;
exports.assertNodeType***REMOVED***=***REMOVED***assertNodeType;
exports.assertOneOf***REMOVED***=***REMOVED***assertOneOf;
exports.assertOptionalChainStart***REMOVED***=***REMOVED***assertOptionalChainStart;
exports.assertShape***REMOVED***=***REMOVED***assertShape;
exports.assertValueType***REMOVED***=***REMOVED***assertValueType;
exports.chain***REMOVED***=***REMOVED***chain;
exports.default***REMOVED***=***REMOVED***defineType;
exports.defineAliasedType***REMOVED***=***REMOVED***defineAliasedType;
exports.validate***REMOVED***=***REMOVED***validate;
exports.validateArrayOfType***REMOVED***=***REMOVED***validateArrayOfType;
exports.validateOptional***REMOVED***=***REMOVED***validateOptional;
exports.validateOptionalType***REMOVED***=***REMOVED***validateOptionalType;
exports.validateType***REMOVED***=***REMOVED***validateType;
var***REMOVED***_is***REMOVED***=***REMOVED***require("../validators/is.js");
var***REMOVED***_validate***REMOVED***=***REMOVED***require("../validators/validate.js");
const***REMOVED***VISITOR_KEYS***REMOVED***=***REMOVED***exports.VISITOR_KEYS***REMOVED***=***REMOVED***{};
const***REMOVED***ALIAS_KEYS***REMOVED***=***REMOVED***exports.ALIAS_KEYS***REMOVED***=***REMOVED***{};
const***REMOVED***FLIPPED_ALIAS_KEYS***REMOVED***=***REMOVED***exports.FLIPPED_ALIAS_KEYS***REMOVED***=***REMOVED***{};
const***REMOVED***NODE_FIELDS***REMOVED***=***REMOVED***exports.NODE_FIELDS***REMOVED***=***REMOVED***{};
const***REMOVED***BUILDER_KEYS***REMOVED***=***REMOVED***exports.BUILDER_KEYS***REMOVED***=***REMOVED***{};
const***REMOVED***DEPRECATED_KEYS***REMOVED***=***REMOVED***exports.DEPRECATED_KEYS***REMOVED***=***REMOVED***{};
const***REMOVED***NODE_PARENT_VALIDATIONS***REMOVED***=***REMOVED***exports.NODE_PARENT_VALIDATIONS***REMOVED***=***REMOVED***{};
function***REMOVED***getType(val)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Array.isArray(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"array";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(val***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"null";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***val;
***REMOVED******REMOVED***}
}
function***REMOVED***validate(validate)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate
***REMOVED******REMOVED***};
}
function***REMOVED***validateType(...typeNames)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***validate(assertNodeType(...typeNames));
}
function***REMOVED***validateOptional(validate)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate,
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***};
}
function***REMOVED***validateOptionalType(...typeNames)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(...typeNames),
***REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***true
***REMOVED******REMOVED***};
}
function***REMOVED***arrayOf(elementType)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***chain(assertValueType("array"),***REMOVED***assertEach(elementType));
}
function***REMOVED***arrayOfType(...typeNames)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***arrayOf(assertNodeType(...typeNames));
}
function***REMOVED***validateArrayOfType(...typeNames)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***validate(arrayOfType(...typeNames));
}
function***REMOVED***assertEach(callback)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***childValidator***REMOVED***=***REMOVED***process.env.BABEL_TYPES_8_BREAKING***REMOVED***?***REMOVED***_validate.validateChild***REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***{};
***REMOVED******REMOVED***function***REMOVED***validator(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(val))***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subKey***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toString()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${key}[${i}]`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***val.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***val[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback(node,***REMOVED***subKey,***REMOVED***v);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childValidator(node,***REMOVED***subKey,***REMOVED***v);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validator.each***REMOVED***=***REMOVED***callback;
***REMOVED******REMOVED***return***REMOVED***validator;
}
function***REMOVED***assertOneOf(...values)***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***validate(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!values.includes(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Property***REMOVED***${key}***REMOVED***expected***REMOVED***value***REMOVED***to***REMOVED***be***REMOVED***one***REMOVED***of***REMOVED***${JSON.stringify(values)}***REMOVED***but***REMOVED***got***REMOVED***${JSON.stringify(val)}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.oneOf***REMOVED***=***REMOVED***values;
***REMOVED******REMOVED***return***REMOVED***validate;
}
const***REMOVED***allExpandedTypes***REMOVED***=***REMOVED***exports.allExpandedTypes***REMOVED***=***REMOVED***[];
function***REMOVED***assertNodeType(...types)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***expandedTypes***REMOVED***=***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***allExpandedTypes.push({
***REMOVED******REMOVED******REMOVED******REMOVED***types,
***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***expandedTypes
***REMOVED******REMOVED***});
***REMOVED******REMOVED***function***REMOVED***validate(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valType***REMOVED***=***REMOVED***val***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***val.type;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valType***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expandedTypes.has(valType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_validate.validateChild)(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valType***REMOVED***===***REMOVED***"Placeholder")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***type***REMOVED***of***REMOVED***types)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((0,***REMOVED***_is.default)(type,***REMOVED***val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_validate.validateChild)(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Property***REMOVED***${key}***REMOVED***of***REMOVED***${node.type}***REMOVED***expected***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***of***REMOVED***a***REMOVED***type***REMOVED***${JSON.stringify(types)}***REMOVED***but***REMOVED***instead***REMOVED***got***REMOVED***${JSON.stringify(valType)}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.oneOfNodeTypes***REMOVED***=***REMOVED***types;
***REMOVED******REMOVED***return***REMOVED***validate;
}
function***REMOVED***assertNodeOrValueType(...types)***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***validate(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***primitiveType***REMOVED***=***REMOVED***getType(val);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***type***REMOVED***of***REMOVED***types)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(primitiveType***REMOVED***===***REMOVED***type***REMOVED***||***REMOVED***(0,***REMOVED***_is.default)(type,***REMOVED***val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_validate.validateChild)(node,***REMOVED***key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Property***REMOVED***${key}***REMOVED***of***REMOVED***${node.type}***REMOVED***expected***REMOVED***node***REMOVED***to***REMOVED***be***REMOVED***of***REMOVED***a***REMOVED***type***REMOVED***${JSON.stringify(types)}***REMOVED***but***REMOVED***instead***REMOVED***got***REMOVED***${JSON.stringify(val***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***val.type)}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.oneOfNodeOrValueTypes***REMOVED***=***REMOVED***types;
***REMOVED******REMOVED***return***REMOVED***validate;
}
function***REMOVED***assertValueType(type)***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***validate(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getType(val)***REMOVED***===***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Property***REMOVED***${key}***REMOVED***expected***REMOVED***type***REMOVED***of***REMOVED***${type}***REMOVED***but***REMOVED***got***REMOVED***${getType(val)}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***return***REMOVED***validate;
}
function***REMOVED***assertShape(shape)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(shape);
***REMOVED******REMOVED***function***REMOVED***validate(node,***REMOVED***key,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_validate.validateField)(node,***REMOVED***property,***REMOVED***val[property],***REMOVED***shape[property]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***instanceof***REMOVED***TypeError)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(error.message);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***error;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errors.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Property***REMOVED***${key}***REMOVED***of***REMOVED***${node.type}***REMOVED***expected***REMOVED***to***REMOVED***have***REMOVED***the***REMOVED***following:\n${errors.join("\n")}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.shapeOf***REMOVED***=***REMOVED***shape;
***REMOVED******REMOVED***return***REMOVED***validate;
}
function***REMOVED***assertOptionalChainStart()***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***validate(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_current;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***current***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***current;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"OptionalCallExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.optional)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.callee;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"OptionalMemberExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.optional)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.object;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(`Non-optional***REMOVED***${node.type}***REMOVED***must***REMOVED***chain***REMOVED***from***REMOVED***an***REMOVED***optional***REMOVED***OptionalMemberExpression***REMOVED***or***REMOVED***OptionalCallExpression.***REMOVED***Found***REMOVED***chain***REMOVED***from***REMOVED***${(_current***REMOVED***=***REMOVED***current)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_current.type}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***validate;
}
function***REMOVED***chain(...fns)***REMOVED***{
***REMOVED******REMOVED***function***REMOVED***validate(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***fn***REMOVED***of***REMOVED***fns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***validate.chainOf***REMOVED***=***REMOVED***fns;
***REMOVED******REMOVED***if***REMOVED***(fns.length***REMOVED***>=***REMOVED***2***REMOVED***&&***REMOVED***"type"***REMOVED***in***REMOVED***fns[0]***REMOVED***&&***REMOVED***fns[0].type***REMOVED***===***REMOVED***"array"***REMOVED***&&***REMOVED***!("each"***REMOVED***in***REMOVED***fns[1]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`An***REMOVED***assertValueType("array")***REMOVED***validator***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***assertEach(...)***REMOVED***validator.`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***validate;
}
const***REMOVED***validTypeOpts***REMOVED***=***REMOVED***new***REMOVED***Set(["aliases",***REMOVED***"builder",***REMOVED***"deprecatedAlias",***REMOVED***"fields",***REMOVED***"inherits",***REMOVED***"visitor",***REMOVED***"validate"]);
const***REMOVED***validFieldKeys***REMOVED***=***REMOVED***new***REMOVED***Set(["default",***REMOVED***"optional",***REMOVED***"deprecated",***REMOVED***"validate"]);
const***REMOVED***store***REMOVED***=***REMOVED***{};
function***REMOVED***defineAliasedType(...aliases)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(type,***REMOVED***opts***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***defined***REMOVED***=***REMOVED***opts.aliases;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!defined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_store$opts$inherits$;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.inherits)***REMOVED***defined***REMOVED***=***REMOVED***(_store$opts$inherits$***REMOVED***=***REMOVED***store[opts.inherits].aliases)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_store$opts$inherits$.slice();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defined***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***defined***REMOVED***:***REMOVED***defined***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.aliases***REMOVED***=***REMOVED***defined;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***additional***REMOVED***=***REMOVED***aliases.filter(a***REMOVED***=>***REMOVED***!defined.includes(a));
***REMOVED******REMOVED******REMOVED******REMOVED***defined.unshift(...additional);
***REMOVED******REMOVED******REMOVED******REMOVED***defineType(type,***REMOVED***opts);
***REMOVED******REMOVED***};
}
function***REMOVED***defineType(type,***REMOVED***opts***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***inherits***REMOVED***=***REMOVED***opts.inherits***REMOVED***&&***REMOVED***store[opts.inherits]***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***let***REMOVED***fields***REMOVED***=***REMOVED***opts.fields;
***REMOVED******REMOVED***if***REMOVED***(!fields)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inherits.fields)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.getOwnPropertyNames(inherits.fields);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***field***REMOVED***=***REMOVED***inherits.fields[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***def***REMOVED***=***REMOVED***field.default;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(def)***REMOVED***?***REMOVED***def.length***REMOVED***>***REMOVED***0***REMOVED***:***REMOVED***def***REMOVED***&&***REMOVED***typeof***REMOVED***def***REMOVED***===***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("field***REMOVED***defaults***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***primitives***REMOVED***or***REMOVED***empty***REMOVED***arrays***REMOVED***currently");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fields[key]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***Array.isArray(def)***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***def,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional:***REMOVED***field.optional,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecated:***REMOVED***field.deprecated,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***field.validate
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***visitor***REMOVED***=***REMOVED***opts.visitor***REMOVED***||***REMOVED***inherits.visitor***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***opts.aliases***REMOVED***||***REMOVED***inherits.aliases***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***builder***REMOVED***=***REMOVED***opts.builder***REMOVED***||***REMOVED***inherits.builder***REMOVED***||***REMOVED***opts.visitor***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***k***REMOVED***of***REMOVED***Object.keys(opts))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!validTypeOpts.has(k))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unknown***REMOVED***type***REMOVED***option***REMOVED***"${k}"***REMOVED***on***REMOVED***${type}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(opts.deprecatedAlias)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***DEPRECATED_KEYS[opts.deprecatedAlias]***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***visitor.concat(builder))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fields[key]***REMOVED***=***REMOVED***fields[key]***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(fields))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***field***REMOVED***=***REMOVED***fields[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(field.default***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***!builder.includes(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.optional***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(field.default***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.default***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!field.validate***REMOVED***&&***REMOVED***field.default***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.validate***REMOVED***=***REMOVED***assertValueType(getType(field.default));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***k***REMOVED***of***REMOVED***Object.keys(field))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!validFieldKeys.has(k))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Unknown***REMOVED***field***REMOVED***key***REMOVED***"${k}"***REMOVED***on***REMOVED***${type}.${key}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***VISITOR_KEYS[type]***REMOVED***=***REMOVED***opts.visitor***REMOVED***=***REMOVED***visitor;
***REMOVED******REMOVED***BUILDER_KEYS[type]***REMOVED***=***REMOVED***opts.builder***REMOVED***=***REMOVED***builder;
***REMOVED******REMOVED***NODE_FIELDS[type]***REMOVED***=***REMOVED***opts.fields***REMOVED***=***REMOVED***fields;
***REMOVED******REMOVED***ALIAS_KEYS[type]***REMOVED***=***REMOVED***opts.aliases***REMOVED***=***REMOVED***aliases;
***REMOVED******REMOVED***aliases.forEach(alias***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***FLIPPED_ALIAS_KEYS[alias]***REMOVED***=***REMOVED***FLIPPED_ALIAS_KEYS[alias]***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***FLIPPED_ALIAS_KEYS[alias].push(type);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(opts.validate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***NODE_PARENT_VALIDATIONS[type]***REMOVED***=***REMOVED***opts.validate;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***store[type]***REMOVED***=***REMOVED***opts;
}

//#***REMOVED***sourceMappingURL=utils.js.map
