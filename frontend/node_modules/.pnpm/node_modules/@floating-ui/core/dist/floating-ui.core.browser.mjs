/**
***REMOVED*******REMOVED***Custom***REMOVED***positioning***REMOVED***reference***REMOVED***element.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/virtual-elements
***REMOVED****/

const***REMOVED***sides***REMOVED***=***REMOVED***['top',***REMOVED***'right',***REMOVED***'bottom',***REMOVED***'left'];
const***REMOVED***alignments***REMOVED***=***REMOVED***['start',***REMOVED***'end'];
const***REMOVED***placements***REMOVED***=***REMOVED***/*#__PURE__*/sides.reduce((acc,***REMOVED***side)***REMOVED***=>***REMOVED***acc.concat(side,***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignments[0],***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignments[1]),***REMOVED***[]);
const***REMOVED***min***REMOVED***=***REMOVED***Math.min;
const***REMOVED***max***REMOVED***=***REMOVED***Math.max;
const***REMOVED***oppositeSideMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***left:***REMOVED***'right',
***REMOVED******REMOVED***right:***REMOVED***'left',
***REMOVED******REMOVED***bottom:***REMOVED***'top',
***REMOVED******REMOVED***top:***REMOVED***'bottom'
};
const***REMOVED***oppositeAlignmentMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***start:***REMOVED***'end',
***REMOVED******REMOVED***end:***REMOVED***'start'
};
function***REMOVED***clamp(start,***REMOVED***value,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***max(start,***REMOVED***min(value,***REMOVED***end));
}
function***REMOVED***evaluate(value,***REMOVED***param)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'function'***REMOVED***?***REMOVED***value(param)***REMOVED***:***REMOVED***value;
}
function***REMOVED***getSide(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.split('-')[0];
}
function***REMOVED***getAlignment(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.split('-')[1];
}
function***REMOVED***getOppositeAxis(axis)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***axis***REMOVED***===***REMOVED***'x'***REMOVED***?***REMOVED***'y'***REMOVED***:***REMOVED***'x';
}
function***REMOVED***getAxisLength(axis)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***axis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'height'***REMOVED***:***REMOVED***'width';
}
const***REMOVED***yAxisSides***REMOVED***=***REMOVED***/*#__PURE__*/new***REMOVED***Set(['top',***REMOVED***'bottom']);
function***REMOVED***getSideAxis(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***yAxisSides.has(getSide(placement))***REMOVED***?***REMOVED***'y'***REMOVED***:***REMOVED***'x';
}
function***REMOVED***getAlignmentAxis(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***getOppositeAxis(getSideAxis(placement));
}
function***REMOVED***getAlignmentSides(placement,***REMOVED***rects,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(rtl***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***rtl***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED***const***REMOVED***alignmentAxis***REMOVED***=***REMOVED***getAlignmentAxis(placement);
***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***getAxisLength(alignmentAxis);
***REMOVED******REMOVED***let***REMOVED***mainAlignmentSide***REMOVED***=***REMOVED***alignmentAxis***REMOVED***===***REMOVED***'x'***REMOVED***?***REMOVED***alignment***REMOVED***===***REMOVED***(rtl***REMOVED***?***REMOVED***'end'***REMOVED***:***REMOVED***'start')***REMOVED***?***REMOVED***'right'***REMOVED***:***REMOVED***'left'***REMOVED***:***REMOVED***alignment***REMOVED***===***REMOVED***'start'***REMOVED***?***REMOVED***'bottom'***REMOVED***:***REMOVED***'top';
***REMOVED******REMOVED***if***REMOVED***(rects.reference[length]***REMOVED***>***REMOVED***rects.floating[length])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mainAlignmentSide***REMOVED***=***REMOVED***getOppositePlacement(mainAlignmentSide);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[mainAlignmentSide,***REMOVED***getOppositePlacement(mainAlignmentSide)];
}
function***REMOVED***getExpandedPlacements(placement)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***oppositePlacement***REMOVED***=***REMOVED***getOppositePlacement(placement);
***REMOVED******REMOVED***return***REMOVED***[getOppositeAlignmentPlacement(placement),***REMOVED***oppositePlacement,***REMOVED***getOppositeAlignmentPlacement(oppositePlacement)];
}
function***REMOVED***getOppositeAlignmentPlacement(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.replace(/start|end/g,***REMOVED***alignment***REMOVED***=>***REMOVED***oppositeAlignmentMap[alignment]);
}
const***REMOVED***lrPlacement***REMOVED***=***REMOVED***['left',***REMOVED***'right'];
const***REMOVED***rlPlacement***REMOVED***=***REMOVED***['right',***REMOVED***'left'];
const***REMOVED***tbPlacement***REMOVED***=***REMOVED***['top',***REMOVED***'bottom'];
const***REMOVED***btPlacement***REMOVED***=***REMOVED***['bottom',***REMOVED***'top'];
function***REMOVED***getSideList(side,***REMOVED***isStart,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(side)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'top':
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'bottom':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rtl)***REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***rlPlacement***REMOVED***:***REMOVED***lrPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***lrPlacement***REMOVED***:***REMOVED***rlPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'left':
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'right':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStart***REMOVED***?***REMOVED***tbPlacement***REMOVED***:***REMOVED***btPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
}
function***REMOVED***getOppositeAxisPlacements(placement,***REMOVED***flipAlignment,***REMOVED***direction,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED***let***REMOVED***list***REMOVED***=***REMOVED***getSideList(getSide(placement),***REMOVED***direction***REMOVED***===***REMOVED***'start',***REMOVED***rtl);
***REMOVED******REMOVED***if***REMOVED***(alignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***list***REMOVED***=***REMOVED***list.map(side***REMOVED***=>***REMOVED***side***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***alignment);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flipAlignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list***REMOVED***=***REMOVED***list.concat(list.map(getOppositeAlignmentPlacement));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***list;
}
function***REMOVED***getOppositePlacement(placement)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***placement.replace(/left|right|bottom|top/g,***REMOVED***side***REMOVED***=>***REMOVED***oppositeSideMap[side]);
}
function***REMOVED***expandPaddingObject(padding)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***...padding
***REMOVED******REMOVED***};
}
function***REMOVED***getPaddingObject(padding)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***padding***REMOVED***!==***REMOVED***'number'***REMOVED***?***REMOVED***expandPaddingObject(padding)***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***padding,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***padding
***REMOVED******REMOVED***};
}
function***REMOVED***rectToClientRect(rect)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***height
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***rect;
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***x***REMOVED***+***REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***y***REMOVED***+***REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED***};
}

function***REMOVED***computeCoordsFromPlacement(_ref,***REMOVED***placement,***REMOVED***rtl)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***reference,
***REMOVED******REMOVED******REMOVED******REMOVED***floating
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***_ref;
***REMOVED******REMOVED***const***REMOVED***sideAxis***REMOVED***=***REMOVED***getSideAxis(placement);
***REMOVED******REMOVED***const***REMOVED***alignmentAxis***REMOVED***=***REMOVED***getAlignmentAxis(placement);
***REMOVED******REMOVED***const***REMOVED***alignLength***REMOVED***=***REMOVED***getAxisLength(alignmentAxis);
***REMOVED******REMOVED***const***REMOVED***side***REMOVED***=***REMOVED***getSide(placement);
***REMOVED******REMOVED***const***REMOVED***isVertical***REMOVED***=***REMOVED***sideAxis***REMOVED***===***REMOVED***'y';
***REMOVED******REMOVED***const***REMOVED***commonX***REMOVED***=***REMOVED***reference.x***REMOVED***+***REMOVED***reference.width***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***floating.width***REMOVED***/***REMOVED***2;
***REMOVED******REMOVED***const***REMOVED***commonY***REMOVED***=***REMOVED***reference.y***REMOVED***+***REMOVED***reference.height***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***floating.height***REMOVED***/***REMOVED***2;
***REMOVED******REMOVED***const***REMOVED***commonAlign***REMOVED***=***REMOVED***reference[alignLength]***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***floating[alignLength]***REMOVED***/***REMOVED***2;
***REMOVED******REMOVED***let***REMOVED***coords;
***REMOVED******REMOVED***switch***REMOVED***(side)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'top':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***commonX,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***reference.y***REMOVED***-***REMOVED***floating.height
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'bottom':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***commonX,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***reference.y***REMOVED***+***REMOVED***reference.height
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'right':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***reference.x***REMOVED***+***REMOVED***reference.width,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***commonY
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'left':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***reference.x***REMOVED***-***REMOVED***floating.width,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***commonY
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***reference.x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***reference.y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***switch***REMOVED***(getAlignment(placement))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'start':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords[alignmentAxis]***REMOVED***-=***REMOVED***commonAlign***REMOVED*******REMOVED***(rtl***REMOVED***&&***REMOVED***isVertical***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'end':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***coords[alignmentAxis]***REMOVED***+=***REMOVED***commonAlign***REMOVED*******REMOVED***(rtl***REMOVED***&&***REMOVED***isVertical***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***coords;
}

/**
***REMOVED*******REMOVED***Computes***REMOVED***the***REMOVED***`x`***REMOVED***and***REMOVED***`y`***REMOVED***coordinates***REMOVED***that***REMOVED***will***REMOVED***place***REMOVED***the***REMOVED***floating***REMOVED***element
***REMOVED*******REMOVED***next***REMOVED***to***REMOVED***a***REMOVED***given***REMOVED***reference***REMOVED***element.
***REMOVED****
***REMOVED*******REMOVED***This***REMOVED***export***REMOVED***does***REMOVED***not***REMOVED***have***REMOVED***any***REMOVED***`platform`***REMOVED***interface***REMOVED***logic.***REMOVED***You***REMOVED***will***REMOVED***need***REMOVED***to
***REMOVED*******REMOVED***write***REMOVED***one***REMOVED***for***REMOVED***the***REMOVED***platform***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***Floating***REMOVED***UI***REMOVED***with.
***REMOVED****/
const***REMOVED***computePosition***REMOVED***=***REMOVED***async***REMOVED***(reference,***REMOVED***floating,***REMOVED***config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***placement***REMOVED***=***REMOVED***'bottom',
***REMOVED******REMOVED******REMOVED******REMOVED***strategy***REMOVED***=***REMOVED***'absolute',
***REMOVED******REMOVED******REMOVED******REMOVED***middleware***REMOVED***=***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***platform
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***config;
***REMOVED******REMOVED***const***REMOVED***validMiddleware***REMOVED***=***REMOVED***middleware.filter(Boolean);
***REMOVED******REMOVED***const***REMOVED***rtl***REMOVED***=***REMOVED***await***REMOVED***(platform.isRTL***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isRTL(floating));
***REMOVED******REMOVED***let***REMOVED***rects***REMOVED***=***REMOVED***await***REMOVED***platform.getElementRects({
***REMOVED******REMOVED******REMOVED******REMOVED***reference,
***REMOVED******REMOVED******REMOVED******REMOVED***floating,
***REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED***});
***REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***computeCoordsFromPlacement(rects,***REMOVED***placement,***REMOVED***rtl);
***REMOVED******REMOVED***let***REMOVED***statefulPlacement***REMOVED***=***REMOVED***placement;
***REMOVED******REMOVED***let***REMOVED***middlewareData***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***let***REMOVED***resetCount***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***validMiddleware.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***validMiddleware[i];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***nextX,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***nextY,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***fn({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialPlacement:***REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***statefulPlacement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strategy,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reference,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***floating
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***x***REMOVED***=***REMOVED***nextX***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***nextX***REMOVED***:***REMOVED***x;
***REMOVED******REMOVED******REMOVED******REMOVED***y***REMOVED***=***REMOVED***nextY***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***nextY***REMOVED***:***REMOVED***y;
***REMOVED******REMOVED******REMOVED******REMOVED***middlewareData***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...middlewareData,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[name]:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...middlewareData[name],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...data
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reset***REMOVED***&&***REMOVED***resetCount***REMOVED***<=***REMOVED***50)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetCount++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***reset***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reset.placement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statefulPlacement***REMOVED***=***REMOVED***reset.placement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reset.rects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects***REMOVED***=***REMOVED***reset.rects***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***await***REMOVED***platform.getElementRects({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reference,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***floating,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***:***REMOVED***reset.rects;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***computeCoordsFromPlacement(rects,***REMOVED***statefulPlacement,***REMOVED***rtl));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***statefulPlacement,
***REMOVED******REMOVED******REMOVED******REMOVED***strategy,
***REMOVED******REMOVED******REMOVED******REMOVED***middlewareData
***REMOVED******REMOVED***};
};

/**
***REMOVED*******REMOVED***Resolves***REMOVED***with***REMOVED***an***REMOVED***object***REMOVED***of***REMOVED***overflow***REMOVED***side***REMOVED***offsets***REMOVED***that***REMOVED***determine***REMOVED***how***REMOVED***much***REMOVED***the
***REMOVED*******REMOVED***element***REMOVED***is***REMOVED***overflowing***REMOVED***a***REMOVED***given***REMOVED***clipping***REMOVED***boundary***REMOVED***on***REMOVED***each***REMOVED***side.
***REMOVED*******REMOVED***-***REMOVED***positive***REMOVED***=***REMOVED***overflowing***REMOVED***the***REMOVED***boundary***REMOVED***by***REMOVED***that***REMOVED***number***REMOVED***of***REMOVED***pixels
***REMOVED*******REMOVED***-***REMOVED***negative***REMOVED***=***REMOVED***how***REMOVED***many***REMOVED***pixels***REMOVED***left***REMOVED***before***REMOVED***it***REMOVED***will***REMOVED***overflow
***REMOVED*******REMOVED***-***REMOVED***0***REMOVED***=***REMOVED***lies***REMOVED***flush***REMOVED***with***REMOVED***the***REMOVED***boundary
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/detectOverflow
***REMOVED****/
async***REMOVED***function***REMOVED***detectOverflow(state,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_await$platform$isEle;
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED***elements,
***REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***boundary***REMOVED***=***REMOVED***'clippingAncestors',
***REMOVED******REMOVED******REMOVED******REMOVED***rootBoundary***REMOVED***=***REMOVED***'viewport',
***REMOVED******REMOVED******REMOVED******REMOVED***elementContext***REMOVED***=***REMOVED***'floating',
***REMOVED******REMOVED******REMOVED******REMOVED***altBoundary***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***padding***REMOVED***=***REMOVED***0
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED***const***REMOVED***paddingObject***REMOVED***=***REMOVED***getPaddingObject(padding);
***REMOVED******REMOVED***const***REMOVED***altContext***REMOVED***=***REMOVED***elementContext***REMOVED***===***REMOVED***'floating'***REMOVED***?***REMOVED***'reference'***REMOVED***:***REMOVED***'floating';
***REMOVED******REMOVED***const***REMOVED***element***REMOVED***=***REMOVED***elements[altBoundary***REMOVED***?***REMOVED***altContext***REMOVED***:***REMOVED***elementContext];
***REMOVED******REMOVED***const***REMOVED***clippingClientRect***REMOVED***=***REMOVED***rectToClientRect(await***REMOVED***platform.getClippingRect({
***REMOVED******REMOVED******REMOVED******REMOVED***element:***REMOVED***((_await$platform$isEle***REMOVED***=***REMOVED***await***REMOVED***(platform.isElement***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isElement(element)))***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_await$platform$isEle***REMOVED***:***REMOVED***true)***REMOVED***?***REMOVED***element***REMOVED***:***REMOVED***element.contextElement***REMOVED***||***REMOVED***(await***REMOVED***(platform.getDocumentElement***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.getDocumentElement(elements.floating))),
***REMOVED******REMOVED******REMOVED******REMOVED***boundary,
***REMOVED******REMOVED******REMOVED******REMOVED***rootBoundary,
***REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED***}));
***REMOVED******REMOVED***const***REMOVED***rect***REMOVED***=***REMOVED***elementContext***REMOVED***===***REMOVED***'floating'***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED***width:***REMOVED***rects.floating.width,
***REMOVED******REMOVED******REMOVED******REMOVED***height:***REMOVED***rects.floating.height
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***rects.reference;
***REMOVED******REMOVED***const***REMOVED***offsetParent***REMOVED***=***REMOVED***await***REMOVED***(platform.getOffsetParent***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.getOffsetParent(elements.floating));
***REMOVED******REMOVED***const***REMOVED***offsetScale***REMOVED***=***REMOVED***(await***REMOVED***(platform.isElement***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isElement(offsetParent)))***REMOVED***?***REMOVED***(await***REMOVED***(platform.getScale***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.getScale(offsetParent)))***REMOVED***||***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***1
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***1
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***elementClientRect***REMOVED***=***REMOVED***rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect***REMOVED***?***REMOVED***await***REMOVED***platform.convertOffsetParentRelativeRectToViewportRelativeRect({
***REMOVED******REMOVED******REMOVED******REMOVED***elements,
***REMOVED******REMOVED******REMOVED******REMOVED***rect,
***REMOVED******REMOVED******REMOVED******REMOVED***offsetParent,
***REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED***})***REMOVED***:***REMOVED***rect);
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***(clippingClientRect.top***REMOVED***-***REMOVED***elementClientRect.top***REMOVED***+***REMOVED***paddingObject.top)***REMOVED***/***REMOVED***offsetScale.y,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***(elementClientRect.bottom***REMOVED***-***REMOVED***clippingClientRect.bottom***REMOVED***+***REMOVED***paddingObject.bottom)***REMOVED***/***REMOVED***offsetScale.y,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***(clippingClientRect.left***REMOVED***-***REMOVED***elementClientRect.left***REMOVED***+***REMOVED***paddingObject.left)***REMOVED***/***REMOVED***offsetScale.x,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***(elementClientRect.right***REMOVED***-***REMOVED***clippingClientRect.right***REMOVED***+***REMOVED***paddingObject.right)***REMOVED***/***REMOVED***offsetScale.x
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Provides***REMOVED***data***REMOVED***to***REMOVED***position***REMOVED***an***REMOVED***inner***REMOVED***element***REMOVED***of***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***so***REMOVED***that***REMOVED***it
***REMOVED*******REMOVED***appears***REMOVED***centered***REMOVED***to***REMOVED***the***REMOVED***reference***REMOVED***element.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/arrow
***REMOVED****/
const***REMOVED***arrow***REMOVED***=***REMOVED***options***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED***name:***REMOVED***'arrow',
***REMOVED******REMOVED***options,
***REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Since***REMOVED***`element`***REMOVED***is***REMOVED***required,***REMOVED***we***REMOVED***don't***REMOVED***Partial<>***REMOVED***the***REMOVED***type.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***padding***REMOVED***=***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state)***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paddingObject***REMOVED***=***REMOVED***getPaddingObject(padding);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***axis***REMOVED***=***REMOVED***getAlignmentAxis(placement);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***getAxisLength(axis);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrowDimensions***REMOVED***=***REMOVED***await***REMOVED***platform.getDimensions(element);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isYAxis***REMOVED***=***REMOVED***axis***REMOVED***===***REMOVED***'y';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minProp***REMOVED***=***REMOVED***isYAxis***REMOVED***?***REMOVED***'top'***REMOVED***:***REMOVED***'left';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxProp***REMOVED***=***REMOVED***isYAxis***REMOVED***?***REMOVED***'bottom'***REMOVED***:***REMOVED***'right';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***clientProp***REMOVED***=***REMOVED***isYAxis***REMOVED***?***REMOVED***'clientHeight'***REMOVED***:***REMOVED***'clientWidth';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***endDiff***REMOVED***=***REMOVED***rects.reference[length]***REMOVED***+***REMOVED***rects.reference[axis]***REMOVED***-***REMOVED***coords[axis]***REMOVED***-***REMOVED***rects.floating[length];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startDiff***REMOVED***=***REMOVED***coords[axis]***REMOVED***-***REMOVED***rects.reference[axis];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrowOffsetParent***REMOVED***=***REMOVED***await***REMOVED***(platform.getOffsetParent***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.getOffsetParent(element));
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***clientSize***REMOVED***=***REMOVED***arrowOffsetParent***REMOVED***?***REMOVED***arrowOffsetParent[clientProp]***REMOVED***:***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***DOM***REMOVED***platform***REMOVED***can***REMOVED***return***REMOVED***`window`***REMOVED***as***REMOVED***the***REMOVED***`offsetParent`.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!clientSize***REMOVED***||***REMOVED***!(await***REMOVED***(platform.isElement***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isElement(arrowOffsetParent))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clientSize***REMOVED***=***REMOVED***elements.floating[clientProp]***REMOVED***||***REMOVED***rects.floating[length];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***centerToReference***REMOVED***=***REMOVED***endDiff***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***startDiff***REMOVED***/***REMOVED***2;

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***padding***REMOVED***is***REMOVED***large***REMOVED***enough***REMOVED***that***REMOVED***it***REMOVED***causes***REMOVED***the***REMOVED***arrow***REMOVED***to***REMOVED***no***REMOVED***longer***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***centered,***REMOVED***modify***REMOVED***the***REMOVED***padding***REMOVED***so***REMOVED***that***REMOVED***it***REMOVED***is***REMOVED***centered.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***largestPossiblePadding***REMOVED***=***REMOVED***clientSize***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***arrowDimensions[length]***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minPadding***REMOVED***=***REMOVED***min(paddingObject[minProp],***REMOVED***largestPossiblePadding);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxPadding***REMOVED***=***REMOVED***min(paddingObject[maxProp],***REMOVED***largestPossiblePadding);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***sure***REMOVED***the***REMOVED***arrow***REMOVED***doesn't***REMOVED***overflow***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***if***REMOVED***the***REMOVED***center
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***point***REMOVED***is***REMOVED***outside***REMOVED***the***REMOVED***floating***REMOVED***element's***REMOVED***bounds.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***min$1***REMOVED***=***REMOVED***minPadding;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***max***REMOVED***=***REMOVED***clientSize***REMOVED***-***REMOVED***arrowDimensions[length]***REMOVED***-***REMOVED***maxPadding;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***center***REMOVED***=***REMOVED***clientSize***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***arrowDimensions[length]***REMOVED***/***REMOVED***2***REMOVED***+***REMOVED***centerToReference;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***offset***REMOVED***=***REMOVED***clamp(min$1,***REMOVED***center,***REMOVED***max);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***reference***REMOVED***is***REMOVED***small***REMOVED***enough***REMOVED***that***REMOVED***the***REMOVED***arrow's***REMOVED***padding***REMOVED***causes***REMOVED***it***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***point***REMOVED***to***REMOVED***nothing***REMOVED***for***REMOVED***an***REMOVED***aligned***REMOVED***placement,***REMOVED***adjust***REMOVED***the***REMOVED***offset***REMOVED***of***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***floating***REMOVED***element***REMOVED***itself.***REMOVED***To***REMOVED***ensure***REMOVED***`shift()`***REMOVED***continues***REMOVED***to***REMOVED***take***REMOVED***action,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***single***REMOVED***reset***REMOVED***is***REMOVED***performed***REMOVED***when***REMOVED***this***REMOVED***is***REMOVED***true.
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldAddOffset***REMOVED***=***REMOVED***!middlewareData.arrow***REMOVED***&&***REMOVED***getAlignment(placement)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***center***REMOVED***!==***REMOVED***offset***REMOVED***&&***REMOVED***rects.reference[length]***REMOVED***/***REMOVED***2***REMOVED***-***REMOVED***(center***REMOVED***<***REMOVED***min$1***REMOVED***?***REMOVED***minPadding***REMOVED***:***REMOVED***maxPadding)***REMOVED***-***REMOVED***arrowDimensions[length]***REMOVED***/***REMOVED***2***REMOVED***<***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alignmentOffset***REMOVED***=***REMOVED***shouldAddOffset***REMOVED***?***REMOVED***center***REMOVED***<***REMOVED***min$1***REMOVED***?***REMOVED***center***REMOVED***-***REMOVED***min$1***REMOVED***:***REMOVED***center***REMOVED***-***REMOVED***max***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[axis]:***REMOVED***coords[axis]***REMOVED***+***REMOVED***alignmentOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[axis]:***REMOVED***offset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***centerOffset:***REMOVED***center***REMOVED***-***REMOVED***offset***REMOVED***-***REMOVED***alignmentOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...(shouldAddOffset***REMOVED***&&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alignmentOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***shouldAddOffset
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
});

function***REMOVED***getPlacementList(alignment,***REMOVED***autoAlignment,***REMOVED***allowedPlacements)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***allowedPlacementsSortedByAlignment***REMOVED***=***REMOVED***alignment***REMOVED***?***REMOVED***[...allowedPlacements.filter(placement***REMOVED***=>***REMOVED***getAlignment(placement)***REMOVED***===***REMOVED***alignment),***REMOVED***...allowedPlacements.filter(placement***REMOVED***=>***REMOVED***getAlignment(placement)***REMOVED***!==***REMOVED***alignment)]***REMOVED***:***REMOVED***allowedPlacements.filter(placement***REMOVED***=>***REMOVED***getSide(placement)***REMOVED***===***REMOVED***placement);
***REMOVED******REMOVED***return***REMOVED***allowedPlacementsSortedByAlignment.filter(placement***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(alignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getAlignment(placement)***REMOVED***===***REMOVED***alignment***REMOVED***||***REMOVED***(autoAlignment***REMOVED***?***REMOVED***getOppositeAlignmentPlacement(placement)***REMOVED***!==***REMOVED***placement***REMOVED***:***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***});
}
/**
***REMOVED*******REMOVED***Optimizes***REMOVED***the***REMOVED***visibility***REMOVED***of***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***by***REMOVED***choosing***REMOVED***the***REMOVED***placement
***REMOVED*******REMOVED***that***REMOVED***has***REMOVED***the***REMOVED***most***REMOVED***space***REMOVED***available***REMOVED***automatically,***REMOVED***without***REMOVED***needing***REMOVED***to***REMOVED***specify***REMOVED***a
***REMOVED*******REMOVED***preferred***REMOVED***placement.***REMOVED***Alternative***REMOVED***to***REMOVED***`flip`.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/autoPlacement
***REMOVED****/
const***REMOVED***autoPlacement***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'autoPlacement',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_middlewareData$autoP,***REMOVED***_middlewareData$autoP2,***REMOVED***_placementsThatFitOnE;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***alignment,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowedPlacements***REMOVED***=***REMOVED***placements,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***autoAlignment***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placements$1***REMOVED***=***REMOVED***alignment***REMOVED***!==***REMOVED***undefined***REMOVED***||***REMOVED***allowedPlacements***REMOVED***===***REMOVED***placements***REMOVED***?***REMOVED***getPlacementList(alignment***REMOVED***||***REMOVED***null,***REMOVED***autoAlignment,***REMOVED***allowedPlacements)***REMOVED***:***REMOVED***allowedPlacements;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***detectOverflowOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentIndex***REMOVED***=***REMOVED***((_middlewareData$autoP***REMOVED***=***REMOVED***middlewareData.autoPlacement)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$autoP.index)***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentPlacement***REMOVED***=***REMOVED***placements$1[currentIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentPlacement***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alignmentSides***REMOVED***=***REMOVED***getAlignmentSides(currentPlacement,***REMOVED***rects,***REMOVED***await***REMOVED***(platform.isRTL***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isRTL(elements.floating)));

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***`computeCoords`***REMOVED***start***REMOVED***from***REMOVED***the***REMOVED***right***REMOVED***place.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placement***REMOVED***!==***REMOVED***currentPlacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***placements$1[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentOverflows***REMOVED***=***REMOVED***[overflow[getSide(currentPlacement)],***REMOVED***overflow[alignmentSides[0]],***REMOVED***overflow[alignmentSides[1]]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allOverflows***REMOVED***=***REMOVED***[...(((_middlewareData$autoP2***REMOVED***=***REMOVED***middlewareData.autoPlacement)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$autoP2.overflows)***REMOVED***||***REMOVED***[]),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***currentPlacement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows:***REMOVED***currentOverflows
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPlacement***REMOVED***=***REMOVED***placements$1[currentIndex***REMOVED***+***REMOVED***1];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***are***REMOVED***more***REMOVED***placements***REMOVED***to***REMOVED***check.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextPlacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***currentIndex***REMOVED***+***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows:***REMOVED***allOverflows
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***nextPlacement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placementsSortedByMostSpace***REMOVED***=***REMOVED***allOverflows.map(d***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(d.placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[d.placement,***REMOVED***alignment***REMOVED***&&***REMOVED***crossAxis***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Check***REMOVED***along***REMOVED***the***REMOVED***mainAxis***REMOVED***and***REMOVED***main***REMOVED***crossAxis***REMOVED***side.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***d.overflows.slice(0,***REMOVED***2).reduce((acc,***REMOVED***v)***REMOVED***=>***REMOVED***acc***REMOVED***+***REMOVED***v,***REMOVED***0)***REMOVED***:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Check***REMOVED***only***REMOVED***the***REMOVED***mainAxis.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***d.overflows[0],***REMOVED***d.overflows];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a[1]***REMOVED***-***REMOVED***b[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placementsThatFitOnEachSide***REMOVED***=***REMOVED***placementsSortedByMostSpace.filter(d***REMOVED***=>***REMOVED***d[2].slice(0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Aligned***REMOVED***placements***REMOVED***should***REMOVED***not***REMOVED***check***REMOVED***their***REMOVED***opposite***REMOVED***crossAxis
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***side.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getAlignment(d[0])***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***3).every(v***REMOVED***=>***REMOVED***v***REMOVED***<=***REMOVED***0));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resetPlacement***REMOVED***=***REMOVED***((_placementsThatFitOnE***REMOVED***=***REMOVED***placementsThatFitOnEachSide[0])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_placementsThatFitOnE[0])***REMOVED***||***REMOVED***placementsSortedByMostSpace[0][0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resetPlacement***REMOVED***!==***REMOVED***placement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***currentIndex***REMOVED***+***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows:***REMOVED***allOverflows
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***resetPlacement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

/**
***REMOVED*******REMOVED***Optimizes***REMOVED***the***REMOVED***visibility***REMOVED***of***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***by***REMOVED***flipping***REMOVED***the***REMOVED***`placement`
***REMOVED*******REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***keep***REMOVED***it***REMOVED***in***REMOVED***view***REMOVED***when***REMOVED***the***REMOVED***preferred***REMOVED***placement(s)***REMOVED***will***REMOVED***overflow***REMOVED***the
***REMOVED*******REMOVED***clipping***REMOVED***boundary.***REMOVED***Alternative***REMOVED***to***REMOVED***`autoPlacement`.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/flip
***REMOVED****/
const***REMOVED***flip***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'flip',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_middlewareData$arrow,***REMOVED***_middlewareData$flip;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialPlacement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***checkMainAxis***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***checkCrossAxis***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackPlacements:***REMOVED***specifiedFallbackPlacements,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackStrategy***REMOVED***=***REMOVED***'bestFit',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackAxisSideDirection***REMOVED***=***REMOVED***'none',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flipAlignment***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***a***REMOVED***reset***REMOVED***by***REMOVED***the***REMOVED***arrow***REMOVED***was***REMOVED***caused***REMOVED***due***REMOVED***to***REMOVED***an***REMOVED***alignment***REMOVED***offset***REMOVED***being
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***added,***REMOVED***we***REMOVED***should***REMOVED***skip***REMOVED***any***REMOVED***logic***REMOVED***now***REMOVED***since***REMOVED***`flip()`***REMOVED***has***REMOVED***already***REMOVED***done***REMOVED***its
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***work.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_middlewareData$arrow***REMOVED***=***REMOVED***middlewareData.arrow)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_middlewareData$arrow.alignmentOffset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***side***REMOVED***=***REMOVED***getSide(placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***initialSideAxis***REMOVED***=***REMOVED***getSideAxis(initialPlacement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isBasePlacement***REMOVED***=***REMOVED***getSide(initialPlacement)***REMOVED***===***REMOVED***initialPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rtl***REMOVED***=***REMOVED***await***REMOVED***(platform.isRTL***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isRTL(elements.floating));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fallbackPlacements***REMOVED***=***REMOVED***specifiedFallbackPlacements***REMOVED***||***REMOVED***(isBasePlacement***REMOVED***||***REMOVED***!flipAlignment***REMOVED***?***REMOVED***[getOppositePlacement(initialPlacement)]***REMOVED***:***REMOVED***getExpandedPlacements(initialPlacement));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasFallbackAxisSideDirection***REMOVED***=***REMOVED***fallbackAxisSideDirection***REMOVED***!==***REMOVED***'none';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!specifiedFallbackPlacements***REMOVED***&&***REMOVED***hasFallbackAxisSideDirection)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement,***REMOVED***flipAlignment,***REMOVED***fallbackAxisSideDirection,***REMOVED***rtl));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placements***REMOVED***=***REMOVED***[initialPlacement,***REMOVED***...fallbackPlacements];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***detectOverflowOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflows***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***overflowsData***REMOVED***=***REMOVED***((_middlewareData$flip***REMOVED***=***REMOVED***middlewareData.flip)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$flip.overflows)***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkMainAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows.push(overflow[side]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkCrossAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sides***REMOVED***=***REMOVED***getAlignmentSides(placement,***REMOVED***rects,***REMOVED***rtl);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows.push(overflow[sides[0]],***REMOVED***overflow[sides[1]]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflowsData***REMOVED***=***REMOVED***[...overflowsData,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}];

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***One***REMOVED***or***REMOVED***more***REMOVED***sides***REMOVED***is***REMOVED***overflowing.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!overflows.every(side***REMOVED***=>***REMOVED***side***REMOVED***<=***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_middlewareData$flip2,***REMOVED***_overflowsData$filter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextIndex***REMOVED***=***REMOVED***(((_middlewareData$flip2***REMOVED***=***REMOVED***middlewareData.flip)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$flip2.index)***REMOVED***||***REMOVED***0)***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPlacement***REMOVED***=***REMOVED***placements[nextIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextPlacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ignoreCrossAxisOverflow***REMOVED***=***REMOVED***checkCrossAxis***REMOVED***===***REMOVED***'alignment'***REMOVED***?***REMOVED***initialSideAxis***REMOVED***!==***REMOVED***getSideAxis(nextPlacement)***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ignoreCrossAxisOverflow***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***leave***REMOVED***the***REMOVED***current***REMOVED***main***REMOVED***axis***REMOVED***only***REMOVED***if***REMOVED***every***REMOVED***placement***REMOVED***on***REMOVED***that***REMOVED***axis
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***overflows***REMOVED***the***REMOVED***main***REMOVED***axis.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflowsData.every(d***REMOVED***=>***REMOVED***getSideAxis(d.placement)***REMOVED***===***REMOVED***initialSideAxis***REMOVED***?***REMOVED***d.overflows[0]***REMOVED***>***REMOVED***0***REMOVED***:***REMOVED***true))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Try***REMOVED***next***REMOVED***placement***REMOVED***and***REMOVED***re-run***REMOVED***the***REMOVED***lifecycle.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***nextIndex,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overflows:***REMOVED***overflowsData
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***nextPlacement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***First,***REMOVED***find***REMOVED***the***REMOVED***candidates***REMOVED***that***REMOVED***fit***REMOVED***on***REMOVED***the***REMOVED***mainAxis***REMOVED***side***REMOVED***of***REMOVED***overflow,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***then***REMOVED***find***REMOVED***the***REMOVED***placement***REMOVED***that***REMOVED***fits***REMOVED***the***REMOVED***best***REMOVED***on***REMOVED***the***REMOVED***main***REMOVED***crossAxis***REMOVED***side.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resetPlacement***REMOVED***=***REMOVED***(_overflowsData$filter***REMOVED***=***REMOVED***overflowsData.filter(d***REMOVED***=>***REMOVED***d.overflows[0]***REMOVED***<=***REMOVED***0).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a.overflows[1]***REMOVED***-***REMOVED***b.overflows[1])[0])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_overflowsData$filter.placement;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Otherwise***REMOVED***fallback.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!resetPlacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(fallbackStrategy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'bestFit':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_overflowsData$filter2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placement***REMOVED***=***REMOVED***(_overflowsData$filter2***REMOVED***=***REMOVED***overflowsData.filter(d***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasFallbackAxisSideDirection)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentSideAxis***REMOVED***=***REMOVED***getSideAxis(d.placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***currentSideAxis***REMOVED***===***REMOVED***initialSideAxis***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Create***REMOVED***a***REMOVED***bias***REMOVED***to***REMOVED***the***REMOVED***`y`***REMOVED***side***REMOVED***axis***REMOVED***due***REMOVED***to***REMOVED***horizontal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reading***REMOVED***directions***REMOVED***favoring***REMOVED***greater***REMOVED***width.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentSideAxis***REMOVED***===***REMOVED***'y';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).map(d***REMOVED***=>***REMOVED***[d.placement,***REMOVED***d.overflows.filter(overflow***REMOVED***=>***REMOVED***overflow***REMOVED***>***REMOVED***0).reduce((acc,***REMOVED***overflow)***REMOVED***=>***REMOVED***acc***REMOVED***+***REMOVED***overflow,***REMOVED***0)]).sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a[1]***REMOVED***-***REMOVED***b[1])[0])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_overflowsData$filter2[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetPlacement***REMOVED***=***REMOVED***placement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'initialPlacement':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetPlacement***REMOVED***=***REMOVED***initialPlacement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placement***REMOVED***!==***REMOVED***resetPlacement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement:***REMOVED***resetPlacement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

function***REMOVED***getSideOffsets(overflow,***REMOVED***rect)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***top:***REMOVED***overflow.top***REMOVED***-***REMOVED***rect.height,
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***overflow.right***REMOVED***-***REMOVED***rect.width,
***REMOVED******REMOVED******REMOVED******REMOVED***bottom:***REMOVED***overflow.bottom***REMOVED***-***REMOVED***rect.height,
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***overflow.left***REMOVED***-***REMOVED***rect.width
***REMOVED******REMOVED***};
}
function***REMOVED***isAnySideFullyClipped(overflow)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***sides.some(side***REMOVED***=>***REMOVED***overflow[side]***REMOVED***>=***REMOVED***0);
}
/**
***REMOVED*******REMOVED***Provides***REMOVED***data***REMOVED***to***REMOVED***hide***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***in***REMOVED***applicable***REMOVED***situations,***REMOVED***such***REMOVED***as
***REMOVED*******REMOVED***when***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***clipping***REMOVED***context***REMOVED***as***REMOVED***the***REMOVED***reference***REMOVED***element.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/hide
***REMOVED****/
const***REMOVED***hide***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'hide',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strategy***REMOVED***=***REMOVED***'referenceHidden',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(strategy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'referenceHidden':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elementContext:***REMOVED***'reference'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***offsets***REMOVED***=***REMOVED***getSideOffsets(overflow,***REMOVED***rects.reference);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceHiddenOffsets:***REMOVED***offsets,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***referenceHidden:***REMOVED***isAnySideFullyClipped(offsets)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***'escaped':
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***altBoundary:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***offsets***REMOVED***=***REMOVED***getSideOffsets(overflow,***REMOVED***rects.floating);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapedOffsets:***REMOVED***offsets,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped:***REMOVED***isAnySideFullyClipped(offsets)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

function***REMOVED***getBoundingRect(rects)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***minX***REMOVED***=***REMOVED***min(...rects.map(rect***REMOVED***=>***REMOVED***rect.left));
***REMOVED******REMOVED***const***REMOVED***minY***REMOVED***=***REMOVED***min(...rects.map(rect***REMOVED***=>***REMOVED***rect.top));
***REMOVED******REMOVED***const***REMOVED***maxX***REMOVED***=***REMOVED***max(...rects.map(rect***REMOVED***=>***REMOVED***rect.right));
***REMOVED******REMOVED***const***REMOVED***maxY***REMOVED***=***REMOVED***max(...rects.map(rect***REMOVED***=>***REMOVED***rect.bottom));
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***minX,
***REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***minY,
***REMOVED******REMOVED******REMOVED******REMOVED***width:***REMOVED***maxX***REMOVED***-***REMOVED***minX,
***REMOVED******REMOVED******REMOVED******REMOVED***height:***REMOVED***maxY***REMOVED***-***REMOVED***minY
***REMOVED******REMOVED***};
}
function***REMOVED***getRectsByLine(rects)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***sortedRects***REMOVED***=***REMOVED***rects.slice().sort((a,***REMOVED***b)***REMOVED***=>***REMOVED***a.y***REMOVED***-***REMOVED***b.y);
***REMOVED******REMOVED***const***REMOVED***groups***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***prevRect***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***sortedRects.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rect***REMOVED***=***REMOVED***sortedRects[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevRect***REMOVED***||***REMOVED***rect.y***REMOVED***-***REMOVED***prevRect.y***REMOVED***>***REMOVED***prevRect.height***REMOVED***/***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groups.push([rect]);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***groups[groups.length***REMOVED***-***REMOVED***1].push(rect);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***prevRect***REMOVED***=***REMOVED***rect;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***groups.map(rect***REMOVED***=>***REMOVED***rectToClientRect(getBoundingRect(rect)));
}
/**
***REMOVED*******REMOVED***Provides***REMOVED***improved***REMOVED***positioning***REMOVED***for***REMOVED***inline***REMOVED***reference***REMOVED***elements***REMOVED***that***REMOVED***can***REMOVED***span
***REMOVED*******REMOVED***over***REMOVED***multiple***REMOVED***lines,***REMOVED***such***REMOVED***as***REMOVED***hyperlinks***REMOVED***or***REMOVED***range***REMOVED***selections.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/inline
***REMOVED****/
const***REMOVED***inline***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'inline',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***MouseEvent's***REMOVED***client{X,Y}***REMOVED***coords***REMOVED***can***REMOVED***be***REMOVED***up***REMOVED***to***REMOVED***2***REMOVED***pixels***REMOVED***off***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ClientRect's***REMOVED***bounds,***REMOVED***despite***REMOVED***the***REMOVED***event***REMOVED***listener***REMOVED***being***REMOVED***triggered.***REMOVED***A
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***padding***REMOVED***of***REMOVED***2***REMOVED***seems***REMOVED***to***REMOVED***handle***REMOVED***this***REMOVED***issue.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***padding***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nativeClientRects***REMOVED***=***REMOVED***Array.from((await***REMOVED***(platform.getClientRects***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.getClientRects(elements.reference)))***REMOVED***||***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***clientRects***REMOVED***=***REMOVED***getRectsByLine(nativeClientRects);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fallback***REMOVED***=***REMOVED***rectToClientRect(getBoundingRect(nativeClientRects));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***paddingObject***REMOVED***=***REMOVED***getPaddingObject(padding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***getBoundingClientRect()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***are***REMOVED***two***REMOVED***rects***REMOVED***and***REMOVED***they***REMOVED***are***REMOVED***disjoined.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(clientRects.length***REMOVED***===***REMOVED***2***REMOVED***&&***REMOVED***clientRects[0].left***REMOVED***>***REMOVED***clientRects[1].right***REMOVED***&&***REMOVED***x***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***y***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***the***REMOVED***first***REMOVED***rect***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***point***REMOVED***is***REMOVED***fully***REMOVED***inside.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***clientRects.find(rect***REMOVED***=>***REMOVED***x***REMOVED***>***REMOVED***rect.left***REMOVED***-***REMOVED***paddingObject.left***REMOVED***&&***REMOVED***x***REMOVED***<***REMOVED***rect.right***REMOVED***+***REMOVED***paddingObject.right***REMOVED***&&***REMOVED***y***REMOVED***>***REMOVED***rect.top***REMOVED***-***REMOVED***paddingObject.top***REMOVED***&&***REMOVED***y***REMOVED***<***REMOVED***rect.bottom***REMOVED***+***REMOVED***paddingObject.bottom)***REMOVED***||***REMOVED***fallback;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***are***REMOVED***2***REMOVED***or***REMOVED***more***REMOVED***connected***REMOVED***rects.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(clientRects.length***REMOVED***>=***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getSideAxis(placement)***REMOVED***===***REMOVED***'y')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstRect***REMOVED***=***REMOVED***clientRects[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastRect***REMOVED***=***REMOVED***clientRects[clientRects.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isTop***REMOVED***=***REMOVED***getSide(placement)***REMOVED***===***REMOVED***'top';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***top***REMOVED***=***REMOVED***firstRect.top;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bottom***REMOVED***=***REMOVED***lastRect.bottom;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***left***REMOVED***=***REMOVED***isTop***REMOVED***?***REMOVED***firstRect.left***REMOVED***:***REMOVED***lastRect.left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***right***REMOVED***=***REMOVED***isTop***REMOVED***?***REMOVED***firstRect.right***REMOVED***:***REMOVED***lastRect.right;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***width***REMOVED***=***REMOVED***right***REMOVED***-***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***height***REMOVED***=***REMOVED***bottom***REMOVED***-***REMOVED***top;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***top,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bottom,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***left,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***top
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isLeftSide***REMOVED***=***REMOVED***getSide(placement)***REMOVED***===***REMOVED***'left';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxRight***REMOVED***=***REMOVED***max(...clientRects.map(rect***REMOVED***=>***REMOVED***rect.right));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minLeft***REMOVED***=***REMOVED***min(...clientRects.map(rect***REMOVED***=>***REMOVED***rect.left));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***measureRects***REMOVED***=***REMOVED***clientRects.filter(rect***REMOVED***=>***REMOVED***isLeftSide***REMOVED***?***REMOVED***rect.left***REMOVED***===***REMOVED***minLeft***REMOVED***:***REMOVED***rect.right***REMOVED***===***REMOVED***maxRight);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***top***REMOVED***=***REMOVED***measureRects[0].top;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bottom***REMOVED***=***REMOVED***measureRects[measureRects.length***REMOVED***-***REMOVED***1].bottom;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***left***REMOVED***=***REMOVED***minLeft;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***right***REMOVED***=***REMOVED***maxRight;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***width***REMOVED***=***REMOVED***right***REMOVED***-***REMOVED***left;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***height***REMOVED***=***REMOVED***bottom***REMOVED***-***REMOVED***top;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***top,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bottom,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***height,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***left,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***top
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fallback;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resetRects***REMOVED***=***REMOVED***await***REMOVED***platform.getElementRects({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reference:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getBoundingClientRect
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***floating:***REMOVED***elements.floating,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***strategy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rects.reference.x***REMOVED***!==***REMOVED***resetRects.reference.x***REMOVED***||***REMOVED***rects.reference.y***REMOVED***!==***REMOVED***resetRects.reference.y***REMOVED***||***REMOVED***rects.reference.width***REMOVED***!==***REMOVED***resetRects.reference.width***REMOVED***||***REMOVED***rects.reference.height***REMOVED***!==***REMOVED***resetRects.reference.height)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects:***REMOVED***resetRects
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

const***REMOVED***originSides***REMOVED***=***REMOVED***/*#__PURE__*/new***REMOVED***Set(['left',***REMOVED***'top']);

//***REMOVED***For***REMOVED***type***REMOVED***backwards-compatibility,***REMOVED***the***REMOVED***`OffsetOptions`***REMOVED***type***REMOVED***was***REMOVED***also
//***REMOVED***Derivable.

async***REMOVED***function***REMOVED***convertValueToCoords(state,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED***elements
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED***const***REMOVED***rtl***REMOVED***=***REMOVED***await***REMOVED***(platform.isRTL***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isRTL(elements.floating));
***REMOVED******REMOVED***const***REMOVED***side***REMOVED***=***REMOVED***getSide(placement);
***REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED***const***REMOVED***isVertical***REMOVED***=***REMOVED***getSideAxis(placement)***REMOVED***===***REMOVED***'y';
***REMOVED******REMOVED***const***REMOVED***mainAxisMulti***REMOVED***=***REMOVED***originSides.has(side)***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***const***REMOVED***crossAxisMulti***REMOVED***=***REMOVED***rtl***REMOVED***&&***REMOVED***isVertical***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED***const***REMOVED***rawValue***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***prefer-const
***REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mainAxis,
***REMOVED******REMOVED******REMOVED******REMOVED***crossAxis,
***REMOVED******REMOVED******REMOVED******REMOVED***alignmentAxis
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***typeof***REMOVED***rawValue***REMOVED***===***REMOVED***'number'***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***rawValue,
***REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***alignmentAxis:***REMOVED***null
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***rawValue.mainAxis***REMOVED***||***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***rawValue.crossAxis***REMOVED***||***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***alignmentAxis:***REMOVED***rawValue.alignmentAxis
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(alignment***REMOVED***&&***REMOVED***typeof***REMOVED***alignmentAxis***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***crossAxis***REMOVED***=***REMOVED***alignment***REMOVED***===***REMOVED***'end'***REMOVED***?***REMOVED***alignmentAxis***REMOVED*******REMOVED***-1***REMOVED***:***REMOVED***alignmentAxis;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isVertical***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***crossAxis***REMOVED*******REMOVED***crossAxisMulti,
***REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***mainAxis***REMOVED*******REMOVED***mainAxisMulti
***REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***mainAxis***REMOVED*******REMOVED***mainAxisMulti,
***REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***crossAxis***REMOVED*******REMOVED***crossAxisMulti
***REMOVED******REMOVED***};
}

/**
***REMOVED*******REMOVED***Modifies***REMOVED***the***REMOVED***placement***REMOVED***by***REMOVED***translating***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***along***REMOVED***the
***REMOVED*******REMOVED***specified***REMOVED***axes.
***REMOVED*******REMOVED***A***REMOVED***number***REMOVED***(shorthand***REMOVED***for***REMOVED***`mainAxis`***REMOVED***or***REMOVED***distance),***REMOVED***or***REMOVED***an***REMOVED***axes***REMOVED***configuration
***REMOVED*******REMOVED***object***REMOVED***may***REMOVED***be***REMOVED***passed.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/offset
***REMOVED****/
const***REMOVED***offset***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'offset',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_middlewareData$offse,***REMOVED***_middlewareData$arrow;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***diffCoords***REMOVED***=***REMOVED***await***REMOVED***convertValueToCoords(state,***REMOVED***options);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***placement***REMOVED***is***REMOVED***the***REMOVED***same***REMOVED***and***REMOVED***the***REMOVED***arrow***REMOVED***caused***REMOVED***an***REMOVED***alignment***REMOVED***offset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***then***REMOVED***we***REMOVED***don't***REMOVED***need***REMOVED***to***REMOVED***change***REMOVED***the***REMOVED***positioning***REMOVED***coordinates.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(placement***REMOVED***===***REMOVED***((_middlewareData$offse***REMOVED***=***REMOVED***middlewareData.offset)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$offse.placement)***REMOVED***&&***REMOVED***(_middlewareData$arrow***REMOVED***=***REMOVED***middlewareData.arrow)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_middlewareData$arrow.alignmentOffset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***x***REMOVED***+***REMOVED***diffCoords.x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***y***REMOVED***+***REMOVED***diffCoords.y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...diffCoords,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

/**
***REMOVED*******REMOVED***Optimizes***REMOVED***the***REMOVED***visibility***REMOVED***of***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***by***REMOVED***shifting***REMOVED***it***REMOVED***in***REMOVED***order***REMOVED***to
***REMOVED*******REMOVED***keep***REMOVED***it***REMOVED***in***REMOVED***view***REMOVED***when***REMOVED***it***REMOVED***will***REMOVED***overflow***REMOVED***the***REMOVED***clipping***REMOVED***boundary.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/shift
***REMOVED****/
const***REMOVED***shift***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'shift',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***checkMainAxis***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***checkCrossAxis***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***limiter***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn:***REMOVED***_ref***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***_ref;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***detectOverflowOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***crossAxis***REMOVED***=***REMOVED***getSideAxis(getSide(placement));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mainAxis***REMOVED***=***REMOVED***getOppositeAxis(crossAxis);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***mainAxisCoord***REMOVED***=***REMOVED***coords[mainAxis];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***crossAxisCoord***REMOVED***=***REMOVED***coords[crossAxis];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkMainAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minSide***REMOVED***=***REMOVED***mainAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'top'***REMOVED***:***REMOVED***'left';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxSide***REMOVED***=***REMOVED***mainAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'bottom'***REMOVED***:***REMOVED***'right';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***min***REMOVED***=***REMOVED***mainAxisCoord***REMOVED***+***REMOVED***overflow[minSide];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***max***REMOVED***=***REMOVED***mainAxisCoord***REMOVED***-***REMOVED***overflow[maxSide];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxisCoord***REMOVED***=***REMOVED***clamp(min,***REMOVED***mainAxisCoord,***REMOVED***max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkCrossAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***minSide***REMOVED***=***REMOVED***crossAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'top'***REMOVED***:***REMOVED***'left';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxSide***REMOVED***=***REMOVED***crossAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'bottom'***REMOVED***:***REMOVED***'right';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***min***REMOVED***=***REMOVED***crossAxisCoord***REMOVED***+***REMOVED***overflow[minSide];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***max***REMOVED***=***REMOVED***crossAxisCoord***REMOVED***-***REMOVED***overflow[maxSide];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxisCoord***REMOVED***=***REMOVED***clamp(min,***REMOVED***crossAxisCoord,***REMOVED***max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***limitedCoords***REMOVED***=***REMOVED***limiter.fn({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...state,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[mainAxis]:***REMOVED***mainAxisCoord,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[crossAxis]:***REMOVED***crossAxisCoord
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...limitedCoords,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x:***REMOVED***limitedCoords.x***REMOVED***-***REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y:***REMOVED***limitedCoords.y***REMOVED***-***REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enabled:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[mainAxis]:***REMOVED***checkMainAxis,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[crossAxis]:***REMOVED***checkCrossAxis
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};
/**
***REMOVED*******REMOVED***Built-in***REMOVED***`limiter`***REMOVED***that***REMOVED***will***REMOVED***stop***REMOVED***`shift()`***REMOVED***at***REMOVED***a***REMOVED***certain***REMOVED***point.
***REMOVED****/
const***REMOVED***limitShift***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***middlewareData
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***checkMainAxis***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***checkCrossAxis***REMOVED***=***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***coords***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***x,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***crossAxis***REMOVED***=***REMOVED***getSideAxis(placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mainAxis***REMOVED***=***REMOVED***getOppositeAxis(crossAxis);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***mainAxisCoord***REMOVED***=***REMOVED***coords[mainAxis];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***crossAxisCoord***REMOVED***=***REMOVED***coords[crossAxis];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawOffset***REMOVED***=***REMOVED***evaluate(offset,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computedOffset***REMOVED***=***REMOVED***typeof***REMOVED***rawOffset***REMOVED***===***REMOVED***'number'***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***rawOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxis:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxis:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...rawOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkMainAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***mainAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'height'***REMOVED***:***REMOVED***'width';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***limitMin***REMOVED***=***REMOVED***rects.reference[mainAxis]***REMOVED***-***REMOVED***rects.floating[len]***REMOVED***+***REMOVED***computedOffset.mainAxis;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***limitMax***REMOVED***=***REMOVED***rects.reference[mainAxis]***REMOVED***+***REMOVED***rects.reference[len]***REMOVED***-***REMOVED***computedOffset.mainAxis;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mainAxisCoord***REMOVED***<***REMOVED***limitMin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxisCoord***REMOVED***=***REMOVED***limitMin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(mainAxisCoord***REMOVED***>***REMOVED***limitMax)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mainAxisCoord***REMOVED***=***REMOVED***limitMax;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkCrossAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_middlewareData$offse,***REMOVED***_middlewareData$offse2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***mainAxis***REMOVED***===***REMOVED***'y'***REMOVED***?***REMOVED***'width'***REMOVED***:***REMOVED***'height';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isOriginSide***REMOVED***=***REMOVED***originSides.has(getSide(placement));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***limitMin***REMOVED***=***REMOVED***rects.reference[crossAxis]***REMOVED***-***REMOVED***rects.floating[len]***REMOVED***+***REMOVED***(isOriginSide***REMOVED***?***REMOVED***((_middlewareData$offse***REMOVED***=***REMOVED***middlewareData.offset)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$offse[crossAxis])***REMOVED***||***REMOVED***0***REMOVED***:***REMOVED***0)***REMOVED***+***REMOVED***(isOriginSide***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***computedOffset.crossAxis);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***limitMax***REMOVED***=***REMOVED***rects.reference[crossAxis]***REMOVED***+***REMOVED***rects.reference[len]***REMOVED***+***REMOVED***(isOriginSide***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***((_middlewareData$offse2***REMOVED***=***REMOVED***middlewareData.offset)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_middlewareData$offse2[crossAxis])***REMOVED***||***REMOVED***0)***REMOVED***-***REMOVED***(isOriginSide***REMOVED***?***REMOVED***computedOffset.crossAxis***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(crossAxisCoord***REMOVED***<***REMOVED***limitMin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxisCoord***REMOVED***=***REMOVED***limitMin;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(crossAxisCoord***REMOVED***>***REMOVED***limitMax)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crossAxisCoord***REMOVED***=***REMOVED***limitMax;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[mainAxis]:***REMOVED***mainAxisCoord,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[crossAxis]:***REMOVED***crossAxisCoord
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

/**
***REMOVED*******REMOVED***Provides***REMOVED***data***REMOVED***that***REMOVED***allows***REMOVED***you***REMOVED***to***REMOVED***change***REMOVED***the***REMOVED***size***REMOVED***of***REMOVED***the***REMOVED***floating***REMOVED***element***REMOVED***—
***REMOVED*******REMOVED***for***REMOVED***instance,***REMOVED***prevent***REMOVED***it***REMOVED***from***REMOVED***overflowing***REMOVED***the***REMOVED***clipping***REMOVED***boundary***REMOVED***or***REMOVED***match***REMOVED***the
***REMOVED*******REMOVED***width***REMOVED***of***REMOVED***the***REMOVED***reference***REMOVED***element.
***REMOVED*******REMOVED***@see***REMOVED***https://floating-ui.com/docs/size
***REMOVED****/
const***REMOVED***size***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***'size',
***REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fn(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_state$middlewareData,***REMOVED***_state$middlewareData2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***placement,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***platform,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***elements
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***state;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***apply***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...detectOverflowOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***evaluate(options,***REMOVED***state);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflow***REMOVED***=***REMOVED***await***REMOVED***detectOverflow(state,***REMOVED***detectOverflowOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***side***REMOVED***=***REMOVED***getSide(placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***alignment***REMOVED***=***REMOVED***getAlignment(placement);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isYAxis***REMOVED***=***REMOVED***getSideAxis(placement)***REMOVED***===***REMOVED***'y';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***width,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***height
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***rects.floating;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***heightSide;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***widthSide;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(side***REMOVED***===***REMOVED***'top'***REMOVED***||***REMOVED***side***REMOVED***===***REMOVED***'bottom')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***heightSide***REMOVED***=***REMOVED***side;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***widthSide***REMOVED***=***REMOVED***alignment***REMOVED***===***REMOVED***((await***REMOVED***(platform.isRTL***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***platform.isRTL(elements.floating)))***REMOVED***?***REMOVED***'start'***REMOVED***:***REMOVED***'end')***REMOVED***?***REMOVED***'left'***REMOVED***:***REMOVED***'right';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***widthSide***REMOVED***=***REMOVED***side;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***heightSide***REMOVED***=***REMOVED***alignment***REMOVED***===***REMOVED***'end'***REMOVED***?***REMOVED***'top'***REMOVED***:***REMOVED***'bottom';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maximumClippingHeight***REMOVED***=***REMOVED***height***REMOVED***-***REMOVED***overflow.top***REMOVED***-***REMOVED***overflow.bottom;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maximumClippingWidth***REMOVED***=***REMOVED***width***REMOVED***-***REMOVED***overflow.left***REMOVED***-***REMOVED***overflow.right;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflowAvailableHeight***REMOVED***=***REMOVED***min(height***REMOVED***-***REMOVED***overflow[heightSide],***REMOVED***maximumClippingHeight);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***overflowAvailableWidth***REMOVED***=***REMOVED***min(width***REMOVED***-***REMOVED***overflow[widthSide],***REMOVED***maximumClippingWidth);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noShift***REMOVED***=***REMOVED***!state.middlewareData.shift;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***availableHeight***REMOVED***=***REMOVED***overflowAvailableHeight;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***availableWidth***REMOVED***=***REMOVED***overflowAvailableWidth;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_state$middlewareData***REMOVED***=***REMOVED***state.middlewareData.shift)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_state$middlewareData.enabled.x)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableWidth***REMOVED***=***REMOVED***maximumClippingWidth;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((_state$middlewareData2***REMOVED***=***REMOVED***state.middlewareData.shift)***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***_state$middlewareData2.enabled.y)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableHeight***REMOVED***=***REMOVED***maximumClippingHeight;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noShift***REMOVED***&&***REMOVED***!alignment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***xMin***REMOVED***=***REMOVED***max(overflow.left,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***xMax***REMOVED***=***REMOVED***max(overflow.right,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***yMin***REMOVED***=***REMOVED***max(overflow.top,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***yMax***REMOVED***=***REMOVED***max(overflow.bottom,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isYAxis)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableWidth***REMOVED***=***REMOVED***width***REMOVED***-***REMOVED***2***REMOVED*******REMOVED***(xMin***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***xMax***REMOVED***!==***REMOVED***0***REMOVED***?***REMOVED***xMin***REMOVED***+***REMOVED***xMax***REMOVED***:***REMOVED***max(overflow.left,***REMOVED***overflow.right));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableHeight***REMOVED***=***REMOVED***height***REMOVED***-***REMOVED***2***REMOVED*******REMOVED***(yMin***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***yMax***REMOVED***!==***REMOVED***0***REMOVED***?***REMOVED***yMin***REMOVED***+***REMOVED***yMax***REMOVED***:***REMOVED***max(overflow.top,***REMOVED***overflow.bottom));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***apply({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...state,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableWidth,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***availableHeight
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextDimensions***REMOVED***=***REMOVED***await***REMOVED***platform.getDimensions(elements.floating);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(width***REMOVED***!==***REMOVED***nextDimensions.width***REMOVED***||***REMOVED***height***REMOVED***!==***REMOVED***nextDimensions.height)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rects:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};

export***REMOVED***{***REMOVED***arrow,***REMOVED***autoPlacement,***REMOVED***computePosition,***REMOVED***detectOverflow,***REMOVED***flip,***REMOVED***hide,***REMOVED***inline,***REMOVED***limitShift,***REMOVED***offset,***REMOVED***rectToClientRect,***REMOVED***shift,***REMOVED***size***REMOVED***};
