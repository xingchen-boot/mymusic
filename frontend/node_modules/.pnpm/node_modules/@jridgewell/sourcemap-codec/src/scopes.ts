import***REMOVED***{***REMOVED***StringReader,***REMOVED***StringWriter***REMOVED***}***REMOVED***from***REMOVED***'./strings';
import***REMOVED***{***REMOVED***comma,***REMOVED***decodeInteger,***REMOVED***encodeInteger,***REMOVED***hasMoreVlq,***REMOVED***semicolon***REMOVED***}***REMOVED***from***REMOVED***'./vlq';

const***REMOVED***EMPTY:***REMOVED***any[]***REMOVED***=***REMOVED***[];

type***REMOVED***Line***REMOVED***=***REMOVED***number;
type***REMOVED***Column***REMOVED***=***REMOVED***number;
type***REMOVED***Kind***REMOVED***=***REMOVED***number;
type***REMOVED***Name***REMOVED***=***REMOVED***number;
type***REMOVED***Var***REMOVED***=***REMOVED***number;
type***REMOVED***SourcesIndex***REMOVED***=***REMOVED***number;
type***REMOVED***ScopesIndex***REMOVED***=***REMOVED***number;

type***REMOVED***Mix<A,***REMOVED***B,***REMOVED***O>***REMOVED***=***REMOVED***(A***REMOVED***&***REMOVED***O)***REMOVED***|***REMOVED***(B***REMOVED***&***REMOVED***O);

export***REMOVED***type***REMOVED***OriginalScope***REMOVED***=***REMOVED***Mix<
***REMOVED******REMOVED***[Line,***REMOVED***Column,***REMOVED***Line,***REMOVED***Column,***REMOVED***Kind],
***REMOVED******REMOVED***[Line,***REMOVED***Column,***REMOVED***Line,***REMOVED***Column,***REMOVED***Kind,***REMOVED***Name],
***REMOVED******REMOVED***{***REMOVED***vars:***REMOVED***Var[]***REMOVED***}
>;

export***REMOVED***type***REMOVED***GeneratedRange***REMOVED***=***REMOVED***Mix<
***REMOVED******REMOVED***[Line,***REMOVED***Column,***REMOVED***Line,***REMOVED***Column],
***REMOVED******REMOVED***[Line,***REMOVED***Column,***REMOVED***Line,***REMOVED***Column,***REMOVED***SourcesIndex,***REMOVED***ScopesIndex],
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callsite:***REMOVED***CallSite***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***bindings:***REMOVED***Binding[];
***REMOVED******REMOVED******REMOVED******REMOVED***isScope:***REMOVED***boolean;
***REMOVED******REMOVED***}
>;
export***REMOVED***type***REMOVED***CallSite***REMOVED***=***REMOVED***[SourcesIndex,***REMOVED***Line,***REMOVED***Column];
type***REMOVED***Binding***REMOVED***=***REMOVED***BindingExpressionRange[];
export***REMOVED***type***REMOVED***BindingExpressionRange***REMOVED***=***REMOVED***[Name]***REMOVED***|***REMOVED***[Name,***REMOVED***Line,***REMOVED***Column];

export***REMOVED***function***REMOVED***decodeOriginalScopes(input:***REMOVED***string):***REMOVED***OriginalScope[]***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(input);
***REMOVED******REMOVED***const***REMOVED***scopes:***REMOVED***OriginalScope[]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***stack:***REMOVED***OriginalScope[]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***line***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***reader.pos***REMOVED***<***REMOVED***length;***REMOVED***reader.pos++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***line);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***column***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasMoreVlq(reader,***REMOVED***length))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***stack.pop()!;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[2]***REMOVED***=***REMOVED***line;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[3]***REMOVED***=***REMOVED***column;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasName***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***0b0001;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope:***REMOVED***OriginalScope***REMOVED***=***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasName***REMOVED***?***REMOVED***[line,***REMOVED***column,***REMOVED***0,***REMOVED***0,***REMOVED***kind,***REMOVED***decodeInteger(reader,***REMOVED***0)]***REMOVED***:***REMOVED***[line,***REMOVED***column,***REMOVED***0,***REMOVED***0,***REMOVED***kind]
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***as***REMOVED***OriginalScope;

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vars:***REMOVED***Var[]***REMOVED***=***REMOVED***EMPTY;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***length))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vars***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***varsIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vars.push(varsIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hasMoreVlq(reader,***REMOVED***length));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***scope.vars***REMOVED***=***REMOVED***vars;

***REMOVED******REMOVED******REMOVED******REMOVED***scopes.push(scope);
***REMOVED******REMOVED******REMOVED******REMOVED***stack.push(scope);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***scopes;
}

export***REMOVED***function***REMOVED***encodeOriginalScopes(scopes:***REMOVED***OriginalScope[]):***REMOVED***string***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***scopes.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***_encodeOriginalScopes(scopes,***REMOVED***i,***REMOVED***writer,***REMOVED***[0]);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***writer.flush();
}

function***REMOVED***_encodeOriginalScopes(
***REMOVED******REMOVED***scopes:***REMOVED***OriginalScope[],
***REMOVED******REMOVED***index:***REMOVED***number,
***REMOVED******REMOVED***writer:***REMOVED***StringWriter,
***REMOVED******REMOVED***state:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***GenColumn
***REMOVED******REMOVED***],
):***REMOVED***number***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***scopes[index];
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***startLine,***REMOVED***1:***REMOVED***startColumn,***REMOVED***2:***REMOVED***endLine,***REMOVED***3:***REMOVED***endColumn,***REMOVED***4:***REMOVED***kind,***REMOVED***vars***REMOVED***}***REMOVED***=***REMOVED***scope;

***REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***0)***REMOVED***writer.write(comma);

***REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***startLine,***REMOVED***state[0]);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***startColumn,***REMOVED***0);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***kind,***REMOVED***0);

***REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***scope.length***REMOVED***===***REMOVED***6***REMOVED***?***REMOVED***0b0001***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***fields,***REMOVED***0);
***REMOVED******REMOVED***if***REMOVED***(scope.length***REMOVED***===***REMOVED***6)***REMOVED***encodeInteger(writer,***REMOVED***scope[5],***REMOVED***0);

***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***v***REMOVED***of***REMOVED***vars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***v,***REMOVED***0);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***for***REMOVED***(index++;***REMOVED***index***REMOVED***<***REMOVED***scopes.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***scopes[index];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***l,***REMOVED***1:***REMOVED***c***REMOVED***}***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***endLine***REMOVED***||***REMOVED***(l***REMOVED***===***REMOVED***endLine***REMOVED***&&***REMOVED***c***REMOVED***>=***REMOVED***endColumn))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***_encodeOriginalScopes(scopes,***REMOVED***index,***REMOVED***writer,***REMOVED***state);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***endLine,***REMOVED***state[0]);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***endColumn,***REMOVED***0);

***REMOVED******REMOVED***return***REMOVED***index;
}

export***REMOVED***function***REMOVED***decodeGeneratedRanges(input:***REMOVED***string):***REMOVED***GeneratedRange[]***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(input);
***REMOVED******REMOVED***const***REMOVED***ranges:***REMOVED***GeneratedRange[]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***stack:***REMOVED***GeneratedRange[]***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***let***REMOVED***genLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***definitionSourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***definitionScopeIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteSourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***bindingLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***bindingColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***semi***REMOVED***=***REMOVED***reader.indexOf(';');
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;

***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***reader.pos***REMOVED***<***REMOVED***semi;***REMOVED***reader.pos++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***genColumn);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***stack.pop()!;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[2]***REMOVED***=***REMOVED***genLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[3]***REMOVED***=***REMOVED***genColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDefinition***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***0b0001;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasCallsite***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***0b0010;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasScope***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***0b0100;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***callsite:***REMOVED***CallSite***REMOVED***|***REMOVED***null***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindings:***REMOVED***Binding[]***REMOVED***=***REMOVED***EMPTY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***range:***REMOVED***GeneratedRange;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDefinition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defSourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***definitionSourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionScopeIndex***REMOVED***=***REMOVED***decodeInteger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionSourcesIndex***REMOVED***===***REMOVED***defSourcesIndex***REMOVED***?***REMOVED***definitionScopeIndex***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionSourcesIndex***REMOVED***=***REMOVED***defSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range***REMOVED***=***REMOVED***[genLine,***REMOVED***genColumn,***REMOVED***0,***REMOVED***0,***REMOVED***defSourcesIndex,***REMOVED***definitionScopeIndex]***REMOVED***as***REMOVED***GeneratedRange;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range***REMOVED***=***REMOVED***[genLine,***REMOVED***genColumn,***REMOVED***0,***REMOVED***0]***REMOVED***as***REMOVED***GeneratedRange;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.isScope***REMOVED***=***REMOVED***!!hasScope;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasCallsite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevCsi***REMOVED***=***REMOVED***callsiteSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevLine***REMOVED***=***REMOVED***callsiteLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteSourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***callsiteSourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sameSource***REMOVED***=***REMOVED***prevCsi***REMOVED***===***REMOVED***callsiteSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sameSource***REMOVED***?***REMOVED***callsiteLine***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteColumn***REMOVED***=***REMOVED***decodeInteger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sameSource***REMOVED***&&***REMOVED***prevLine***REMOVED***===***REMOVED***callsiteLine***REMOVED***?***REMOVED***callsiteColumn***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsite***REMOVED***=***REMOVED***[callsiteSourcesIndex,***REMOVED***callsiteLine,***REMOVED***callsiteColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.callsite***REMOVED***=***REMOVED***callsite;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingLine***REMOVED***=***REMOVED***genLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingColumn***REMOVED***=***REMOVED***genColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionsCount***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***expressionRanges:***REMOVED***BindingExpressionRange[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionsCount***REMOVED***<***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges***REMOVED***=***REMOVED***[[decodeInteger(reader,***REMOVED***0)]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***-1;***REMOVED***i***REMOVED***>***REMOVED***expressionsCount;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevBl***REMOVED***=***REMOVED***bindingLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***bindingLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***bindingLine***REMOVED***===***REMOVED***prevBl***REMOVED***?***REMOVED***bindingColumn***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges.push([expression,***REMOVED***bindingLine,***REMOVED***bindingColumn]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges***REMOVED***=***REMOVED***[[expressionsCount]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings.push(expressionRanges);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hasMoreVlq(reader,***REMOVED***semi));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.bindings***REMOVED***=***REMOVED***bindings;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(range);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(range);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***genLine++;
***REMOVED******REMOVED******REMOVED******REMOVED***reader.pos***REMOVED***=***REMOVED***semi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(reader.pos***REMOVED***<***REMOVED***length);

***REMOVED******REMOVED***return***REMOVED***ranges;
}

export***REMOVED***function***REMOVED***encodeGeneratedRanges(ranges:***REMOVED***GeneratedRange[]):***REMOVED***string***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ranges.length***REMOVED***===***REMOVED***0)***REMOVED***return***REMOVED***'';

***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();

***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***ranges.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***_encodeGeneratedRanges(ranges,***REMOVED***i,***REMOVED***writer,***REMOVED***[0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0]);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***writer.flush();
}

function***REMOVED***_encodeGeneratedRanges(
***REMOVED******REMOVED***ranges:***REMOVED***GeneratedRange[],
***REMOVED******REMOVED***index:***REMOVED***number,
***REMOVED******REMOVED***writer:***REMOVED***StringWriter,
***REMOVED******REMOVED***state:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***GenLine
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***GenColumn
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***DefSourcesIndex
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***DefScopesIndex
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***CallSourcesIndex
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***CallLine
***REMOVED******REMOVED******REMOVED******REMOVED***number,***REMOVED***//***REMOVED***CallColumn
***REMOVED******REMOVED***],
):***REMOVED***number***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***range***REMOVED***=***REMOVED***ranges[index];
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***0:***REMOVED***startLine,
***REMOVED******REMOVED******REMOVED******REMOVED***1:***REMOVED***startColumn,
***REMOVED******REMOVED******REMOVED******REMOVED***2:***REMOVED***endLine,
***REMOVED******REMOVED******REMOVED******REMOVED***3:***REMOVED***endColumn,
***REMOVED******REMOVED******REMOVED******REMOVED***isScope,
***REMOVED******REMOVED******REMOVED******REMOVED***callsite,
***REMOVED******REMOVED******REMOVED******REMOVED***bindings,
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***range;

***REMOVED******REMOVED***if***REMOVED***(state[0]***REMOVED***<***REMOVED***startLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***catchupLine(writer,***REMOVED***state[0],***REMOVED***startLine);
***REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***startLine;
***REMOVED******REMOVED******REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***range[1],***REMOVED***state[1]);

***REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***(range.length***REMOVED***===***REMOVED***6***REMOVED***?***REMOVED***0b0001***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(callsite***REMOVED***?***REMOVED***0b0010***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(isScope***REMOVED***?***REMOVED***0b0100***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***fields,***REMOVED***0);

***REMOVED******REMOVED***if***REMOVED***(range.length***REMOVED***===***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***4:***REMOVED***sourcesIndex,***REMOVED***5:***REMOVED***scopesIndex***REMOVED***}***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcesIndex***REMOVED***!==***REMOVED***state[2])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[3]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state[2]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***sourcesIndex,***REMOVED***state[2]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[3]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***scopesIndex,***REMOVED***state[3]);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(callsite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***sourcesIndex,***REMOVED***1:***REMOVED***callLine,***REMOVED***2:***REMOVED***callColumn***REMOVED***}***REMOVED***=***REMOVED***range.callsite!;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcesIndex***REMOVED***!==***REMOVED***state[4])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[5]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(callLine***REMOVED***!==***REMOVED***state[5])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state[4]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***sourcesIndex,***REMOVED***state[4]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[5]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***callLine,***REMOVED***state[5]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***callColumn,***REMOVED***state[6]);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(bindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***binding***REMOVED***of***REMOVED***bindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(binding.length***REMOVED***>***REMOVED***1)***REMOVED***encodeInteger(writer,***REMOVED***-binding.length,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***binding[0][0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***expression,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindingStartLine***REMOVED***=***REMOVED***startLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindingStartColumn***REMOVED***=***REMOVED***startColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***binding.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expRange***REMOVED***=***REMOVED***binding[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingStartLine***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***expRange[1]!,***REMOVED***bindingStartLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingStartColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***expRange[2]!,***REMOVED***bindingStartColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***expRange[0]!,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***for***REMOVED***(index++;***REMOVED***index***REMOVED***<***REMOVED***ranges.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***ranges[index];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***l,***REMOVED***1:***REMOVED***c***REMOVED***}***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***endLine***REMOVED***||***REMOVED***(l***REMOVED***===***REMOVED***endLine***REMOVED***&&***REMOVED***c***REMOVED***>=***REMOVED***endColumn))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***_encodeGeneratedRanges(ranges,***REMOVED***index,***REMOVED***writer,***REMOVED***state);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(state[0]***REMOVED***<***REMOVED***endLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***catchupLine(writer,***REMOVED***state[0],***REMOVED***endLine);
***REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***endLine;
***REMOVED******REMOVED******REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***endColumn,***REMOVED***state[1]);

***REMOVED******REMOVED***return***REMOVED***index;
}

function***REMOVED***catchupLine(writer:***REMOVED***StringWriter,***REMOVED***lastLine:***REMOVED***number,***REMOVED***line:***REMOVED***number)***REMOVED***{
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(semicolon);
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(++lastLine***REMOVED***<***REMOVED***line);
}
