(function***REMOVED***(global,***REMOVED***factory)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***exports***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***typeof***REMOVED***module***REMOVED***!==***REMOVED***'undefined')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***factory(module);
***REMOVED******REMOVED******REMOVED******REMOVED***module.exports***REMOVED***=***REMOVED***def(module);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***define***REMOVED***===***REMOVED***'function'***REMOVED***&&***REMOVED***define.amd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***define(['module'],***REMOVED***function(mod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***factory.apply(this,***REMOVED***arguments);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mod.exports***REMOVED***=***REMOVED***def(mod);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mod***REMOVED***=***REMOVED***{***REMOVED***exports:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***factory(mod);
***REMOVED******REMOVED******REMOVED******REMOVED***global***REMOVED***=***REMOVED***typeof***REMOVED***globalThis***REMOVED***!==***REMOVED***'undefined'***REMOVED***?***REMOVED***globalThis***REMOVED***:***REMOVED***global***REMOVED***||***REMOVED***self;
***REMOVED******REMOVED******REMOVED******REMOVED***global.sourcemapCodec***REMOVED***=***REMOVED***def(mod);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***def(m)***REMOVED***{***REMOVED***return***REMOVED***'default'***REMOVED***in***REMOVED***m.exports***REMOVED***?***REMOVED***m.exports.default***REMOVED***:***REMOVED***m.exports;***REMOVED***}
})(this,***REMOVED***(function***REMOVED***(module)***REMOVED***{
"use***REMOVED***strict";
var***REMOVED***__defProp***REMOVED***=***REMOVED***Object.defineProperty;
var***REMOVED***__getOwnPropDesc***REMOVED***=***REMOVED***Object.getOwnPropertyDescriptor;
var***REMOVED***__getOwnPropNames***REMOVED***=***REMOVED***Object.getOwnPropertyNames;
var***REMOVED***__hasOwnProp***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
var***REMOVED***__export***REMOVED***=***REMOVED***(target,***REMOVED***all)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***name***REMOVED***in***REMOVED***all)
***REMOVED******REMOVED******REMOVED******REMOVED***__defProp(target,***REMOVED***name,***REMOVED***{***REMOVED***get:***REMOVED***all[name],***REMOVED***enumerable:***REMOVED***true***REMOVED***});
};
var***REMOVED***__copyProps***REMOVED***=***REMOVED***(to,***REMOVED***from,***REMOVED***except,***REMOVED***desc)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(from***REMOVED***&&***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"object"***REMOVED***||***REMOVED***typeof***REMOVED***from***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***key***REMOVED***of***REMOVED***__getOwnPropNames(from))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!__hasOwnProp.call(to,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***except)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__defProp(to,***REMOVED***key,***REMOVED***{***REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***from[key],***REMOVED***enumerable:***REMOVED***!(desc***REMOVED***=***REMOVED***__getOwnPropDesc(from,***REMOVED***key))***REMOVED***||***REMOVED***desc.enumerable***REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***to;
};
var***REMOVED***__toCommonJS***REMOVED***=***REMOVED***(mod)***REMOVED***=>***REMOVED***__copyProps(__defProp({},***REMOVED***"__esModule",***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***}),***REMOVED***mod);

//***REMOVED***src/sourcemap-codec.ts
var***REMOVED***sourcemap_codec_exports***REMOVED***=***REMOVED***{};
__export(sourcemap_codec_exports,***REMOVED***{
***REMOVED******REMOVED***decode:***REMOVED***()***REMOVED***=>***REMOVED***decode,
***REMOVED******REMOVED***decodeGeneratedRanges:***REMOVED***()***REMOVED***=>***REMOVED***decodeGeneratedRanges,
***REMOVED******REMOVED***decodeOriginalScopes:***REMOVED***()***REMOVED***=>***REMOVED***decodeOriginalScopes,
***REMOVED******REMOVED***encode:***REMOVED***()***REMOVED***=>***REMOVED***encode,
***REMOVED******REMOVED***encodeGeneratedRanges:***REMOVED***()***REMOVED***=>***REMOVED***encodeGeneratedRanges,
***REMOVED******REMOVED***encodeOriginalScopes:***REMOVED***()***REMOVED***=>***REMOVED***encodeOriginalScopes
});
module.exports***REMOVED***=***REMOVED***__toCommonJS(sourcemap_codec_exports);

//***REMOVED***src/vlq.ts
var***REMOVED***comma***REMOVED***=***REMOVED***",".charCodeAt(0);
var***REMOVED***semicolon***REMOVED***=***REMOVED***";".charCodeAt(0);
var***REMOVED***chars***REMOVED***=***REMOVED***"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var***REMOVED***intToChar***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(64);
var***REMOVED***charToInt***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(128);
for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***chars.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***chars.charCodeAt(i);
***REMOVED******REMOVED***intToChar[i]***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED***charToInt[c]***REMOVED***=***REMOVED***i;
}
function***REMOVED***decodeInteger(reader,***REMOVED***relative)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***shift***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***integer***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***reader.next();
***REMOVED******REMOVED******REMOVED******REMOVED***integer***REMOVED***=***REMOVED***charToInt[c];
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***|=***REMOVED***(integer***REMOVED***&***REMOVED***31)***REMOVED***<<***REMOVED***shift;
***REMOVED******REMOVED******REMOVED******REMOVED***shift***REMOVED***+=***REMOVED***5;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(integer***REMOVED***&***REMOVED***32);
***REMOVED******REMOVED***const***REMOVED***shouldNegate***REMOVED***=***REMOVED***value***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED***value***REMOVED***>>>=***REMOVED***1;
***REMOVED******REMOVED***if***REMOVED***(shouldNegate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***-2147483648***REMOVED***|***REMOVED***-value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***relative***REMOVED***+***REMOVED***value;
}
function***REMOVED***encodeInteger(builder,***REMOVED***num,***REMOVED***relative)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***delta***REMOVED***=***REMOVED***num***REMOVED***-***REMOVED***relative;
***REMOVED******REMOVED***delta***REMOVED***=***REMOVED***delta***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***-delta***REMOVED***<<***REMOVED***1***REMOVED***|***REMOVED***1***REMOVED***:***REMOVED***delta***REMOVED***<<***REMOVED***1;
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***clamped***REMOVED***=***REMOVED***delta***REMOVED***&***REMOVED***31;
***REMOVED******REMOVED******REMOVED******REMOVED***delta***REMOVED***>>>=***REMOVED***5;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(delta***REMOVED***>***REMOVED***0)***REMOVED***clamped***REMOVED***|=***REMOVED***32;
***REMOVED******REMOVED******REMOVED******REMOVED***builder.write(intToChar[clamped]);
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(delta***REMOVED***>***REMOVED***0);
***REMOVED******REMOVED***return***REMOVED***num;
}
function***REMOVED***hasMoreVlq(reader,***REMOVED***max)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(reader.pos***REMOVED***>=***REMOVED***max)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***return***REMOVED***reader.peek()***REMOVED***!==***REMOVED***comma;
}

//***REMOVED***src/strings.ts
var***REMOVED***bufLength***REMOVED***=***REMOVED***1024***REMOVED*******REMOVED***16;
var***REMOVED***td***REMOVED***=***REMOVED***typeof***REMOVED***TextDecoder***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***TextDecoder()***REMOVED***:***REMOVED***typeof***REMOVED***Buffer***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***{
***REMOVED******REMOVED***decode(buf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***Buffer.from(buf.buffer,***REMOVED***buf.byteOffset,***REMOVED***buf.byteLength);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out.toString();
***REMOVED******REMOVED***}
}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED***decode(buf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***out***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***buf.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***out***REMOVED***+=***REMOVED***String.fromCharCode(buf[i]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***out;
***REMOVED******REMOVED***}
};
var***REMOVED***StringWriter***REMOVED***=***REMOVED***class***REMOVED***{
***REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.out***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***new***REMOVED***Uint8Array(bufLength);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***write(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***buffer***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***buffer[this.pos++]***REMOVED***=***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.pos***REMOVED***===***REMOVED***bufLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.out***REMOVED***+=***REMOVED***td.decode(buffer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***flush()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***buffer,***REMOVED***out,***REMOVED***pos***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pos***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***out***REMOVED***+***REMOVED***td.decode(buffer.subarray(0,***REMOVED***pos))***REMOVED***:***REMOVED***out;
***REMOVED******REMOVED***}
};
var***REMOVED***StringReader***REMOVED***=***REMOVED***class***REMOVED***{
***REMOVED******REMOVED***constructor(buffer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.pos***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***buffer;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***next()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.buffer.charCodeAt(this.pos++);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***peek()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.buffer.charCodeAt(this.pos);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***indexOf(char)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***buffer,***REMOVED***pos***REMOVED***}***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idx***REMOVED***=***REMOVED***buffer.indexOf(char,***REMOVED***pos);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***idx***REMOVED***===***REMOVED***-1***REMOVED***?***REMOVED***buffer.length***REMOVED***:***REMOVED***idx;
***REMOVED******REMOVED***}
};

//***REMOVED***src/scopes.ts
var***REMOVED***EMPTY***REMOVED***=***REMOVED***[];
function***REMOVED***decodeOriginalScopes(input)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(input);
***REMOVED******REMOVED***const***REMOVED***scopes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***line***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***reader.pos***REMOVED***<***REMOVED***length;***REMOVED***reader.pos++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***line);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***column***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasMoreVlq(reader,***REMOVED***length))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***stack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[2]***REMOVED***=***REMOVED***line;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[3]***REMOVED***=***REMOVED***column;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***kind***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasName***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***hasName***REMOVED***?***REMOVED***[line,***REMOVED***column,***REMOVED***0,***REMOVED***0,***REMOVED***kind,***REMOVED***decodeInteger(reader,***REMOVED***0)]***REMOVED***:***REMOVED***[line,***REMOVED***column,***REMOVED***0,***REMOVED***0,***REMOVED***kind];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vars***REMOVED***=***REMOVED***EMPTY;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***length))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vars***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***varsIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vars.push(varsIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hasMoreVlq(reader,***REMOVED***length));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***scope.vars***REMOVED***=***REMOVED***vars;
***REMOVED******REMOVED******REMOVED******REMOVED***scopes.push(scope);
***REMOVED******REMOVED******REMOVED******REMOVED***stack.push(scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***scopes;
}
function***REMOVED***encodeOriginalScopes(scopes)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***scopes.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***_encodeOriginalScopes(scopes,***REMOVED***i,***REMOVED***writer,***REMOVED***[0]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***writer.flush();
}
function***REMOVED***_encodeOriginalScopes(scopes,***REMOVED***index,***REMOVED***writer,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***scopes[index];
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***startLine,***REMOVED***1:***REMOVED***startColumn,***REMOVED***2:***REMOVED***endLine,***REMOVED***3:***REMOVED***endColumn,***REMOVED***4:***REMOVED***kind,***REMOVED***vars***REMOVED***}***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***0)***REMOVED***writer.write(comma);
***REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***startLine,***REMOVED***state[0]);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***startColumn,***REMOVED***0);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***kind,***REMOVED***0);
***REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***scope.length***REMOVED***===***REMOVED***6***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***fields,***REMOVED***0);
***REMOVED******REMOVED***if***REMOVED***(scope.length***REMOVED***===***REMOVED***6)***REMOVED***encodeInteger(writer,***REMOVED***scope[5],***REMOVED***0);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***v***REMOVED***of***REMOVED***vars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***v,***REMOVED***0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(index++;***REMOVED***index***REMOVED***<***REMOVED***scopes.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***scopes[index];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***l,***REMOVED***1:***REMOVED***c***REMOVED***}***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***endLine***REMOVED***||***REMOVED***l***REMOVED***===***REMOVED***endLine***REMOVED***&&***REMOVED***c***REMOVED***>=***REMOVED***endColumn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***_encodeOriginalScopes(scopes,***REMOVED***index,***REMOVED***writer,***REMOVED***state);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***endLine,***REMOVED***state[0]);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***endColumn,***REMOVED***0);
***REMOVED******REMOVED***return***REMOVED***index;
}
function***REMOVED***decodeGeneratedRanges(input)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***input;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(input);
***REMOVED******REMOVED***const***REMOVED***ranges***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***stack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***genLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***definitionSourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***definitionScopeIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteSourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***callsiteColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***bindingLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***bindingColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***semi***REMOVED***=***REMOVED***reader.indexOf(";");
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***reader.pos***REMOVED***<***REMOVED***semi;***REMOVED***reader.pos++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***genColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***stack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[2]***REMOVED***=***REMOVED***genLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last[3]***REMOVED***=***REMOVED***genColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDefinition***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasCallsite***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasScope***REMOVED***=***REMOVED***fields***REMOVED***&***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***callsite***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindings***REMOVED***=***REMOVED***EMPTY;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDefinition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defSourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***definitionSourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionScopeIndex***REMOVED***=***REMOVED***decodeInteger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionSourcesIndex***REMOVED***===***REMOVED***defSourcesIndex***REMOVED***?***REMOVED***definitionScopeIndex***REMOVED***:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitionSourcesIndex***REMOVED***=***REMOVED***defSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range***REMOVED***=***REMOVED***[genLine,***REMOVED***genColumn,***REMOVED***0,***REMOVED***0,***REMOVED***defSourcesIndex,***REMOVED***definitionScopeIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range***REMOVED***=***REMOVED***[genLine,***REMOVED***genColumn,***REMOVED***0,***REMOVED***0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.isScope***REMOVED***=***REMOVED***!!hasScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasCallsite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevCsi***REMOVED***=***REMOVED***callsiteSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevLine***REMOVED***=***REMOVED***callsiteLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteSourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***callsiteSourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sameSource***REMOVED***=***REMOVED***prevCsi***REMOVED***===***REMOVED***callsiteSourcesIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sameSource***REMOVED***?***REMOVED***callsiteLine***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsiteColumn***REMOVED***=***REMOVED***decodeInteger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sameSource***REMOVED***&&***REMOVED***prevLine***REMOVED***===***REMOVED***callsiteLine***REMOVED***?***REMOVED***callsiteColumn***REMOVED***:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callsite***REMOVED***=***REMOVED***[callsiteSourcesIndex,***REMOVED***callsiteLine,***REMOVED***callsiteColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.callsite***REMOVED***=***REMOVED***callsite;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingLine***REMOVED***=***REMOVED***genLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingColumn***REMOVED***=***REMOVED***genColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expressionsCount***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***expressionRanges;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expressionsCount***REMOVED***<***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges***REMOVED***=***REMOVED***[[decodeInteger(reader,***REMOVED***0)]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***-1;***REMOVED***i***REMOVED***>***REMOVED***expressionsCount;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevBl***REMOVED***=***REMOVED***bindingLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***bindingLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***bindingLine***REMOVED***===***REMOVED***prevBl***REMOVED***?***REMOVED***bindingColumn***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges.push([expression,***REMOVED***bindingLine,***REMOVED***bindingColumn]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressionRanges***REMOVED***=***REMOVED***[[expressionsCount]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings.push(expressionRanges);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hasMoreVlq(reader,***REMOVED***semi));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***range.bindings***REMOVED***=***REMOVED***bindings;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(range);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(range);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***genLine++;
***REMOVED******REMOVED******REMOVED******REMOVED***reader.pos***REMOVED***=***REMOVED***semi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(reader.pos***REMOVED***<***REMOVED***length);
***REMOVED******REMOVED***return***REMOVED***ranges;
}
function***REMOVED***encodeGeneratedRanges(ranges)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ranges.length***REMOVED***===***REMOVED***0)***REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***ranges.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***_encodeGeneratedRanges(ranges,***REMOVED***i,***REMOVED***writer,***REMOVED***[0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0,***REMOVED***0]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***writer.flush();
}
function***REMOVED***_encodeGeneratedRanges(ranges,***REMOVED***index,***REMOVED***writer,***REMOVED***state)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***range***REMOVED***=***REMOVED***ranges[index];
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***0:***REMOVED***startLine,
***REMOVED******REMOVED******REMOVED******REMOVED***1:***REMOVED***startColumn,
***REMOVED******REMOVED******REMOVED******REMOVED***2:***REMOVED***endLine,
***REMOVED******REMOVED******REMOVED******REMOVED***3:***REMOVED***endColumn,
***REMOVED******REMOVED******REMOVED******REMOVED***isScope,
***REMOVED******REMOVED******REMOVED******REMOVED***callsite,
***REMOVED******REMOVED******REMOVED******REMOVED***bindings
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED***if***REMOVED***(state[0]***REMOVED***<***REMOVED***startLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***catchupLine(writer,***REMOVED***state[0],***REMOVED***startLine);
***REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***startLine;
***REMOVED******REMOVED******REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***range[1],***REMOVED***state[1]);
***REMOVED******REMOVED***const***REMOVED***fields***REMOVED***=***REMOVED***(range.length***REMOVED***===***REMOVED***6***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(callsite***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***0)***REMOVED***|***REMOVED***(isScope***REMOVED***?***REMOVED***4***REMOVED***:***REMOVED***0);
***REMOVED******REMOVED***encodeInteger(writer,***REMOVED***fields,***REMOVED***0);
***REMOVED******REMOVED***if***REMOVED***(range.length***REMOVED***===***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***4:***REMOVED***sourcesIndex,***REMOVED***5:***REMOVED***scopesIndex***REMOVED***}***REMOVED***=***REMOVED***range;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcesIndex***REMOVED***!==***REMOVED***state[2])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[3]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state[2]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***sourcesIndex,***REMOVED***state[2]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[3]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***scopesIndex,***REMOVED***state[3]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(callsite)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***sourcesIndex,***REMOVED***1:***REMOVED***callLine,***REMOVED***2:***REMOVED***callColumn***REMOVED***}***REMOVED***=***REMOVED***range.callsite;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourcesIndex***REMOVED***!==***REMOVED***state[4])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[5]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(callLine***REMOVED***!==***REMOVED***state[5])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***state[4]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***sourcesIndex,***REMOVED***state[4]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[5]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***callLine,***REMOVED***state[5]);
***REMOVED******REMOVED******REMOVED******REMOVED***state[6]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***callColumn,***REMOVED***state[6]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(bindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***binding***REMOVED***of***REMOVED***bindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(binding.length***REMOVED***>***REMOVED***1)***REMOVED***encodeInteger(writer,***REMOVED***-binding.length,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expression***REMOVED***=***REMOVED***binding[0][0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***expression,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindingStartLine***REMOVED***=***REMOVED***startLine;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindingStartColumn***REMOVED***=***REMOVED***startColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***binding.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expRange***REMOVED***=***REMOVED***binding[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingStartLine***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***expRange[1],***REMOVED***bindingStartLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingStartColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***expRange[2],***REMOVED***bindingStartColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***encodeInteger(writer,***REMOVED***expRange[0],***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(index++;***REMOVED***index***REMOVED***<***REMOVED***ranges.length;***REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***ranges[index];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***0:***REMOVED***l,***REMOVED***1:***REMOVED***c***REMOVED***}***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***endLine***REMOVED***||***REMOVED***l***REMOVED***===***REMOVED***endLine***REMOVED***&&***REMOVED***c***REMOVED***>=***REMOVED***endColumn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***_encodeGeneratedRanges(ranges,***REMOVED***index,***REMOVED***writer,***REMOVED***state);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(state[0]***REMOVED***<***REMOVED***endLine)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***catchupLine(writer,***REMOVED***state[0],***REMOVED***endLine);
***REMOVED******REMOVED******REMOVED******REMOVED***state[0]***REMOVED***=***REMOVED***endLine;
***REMOVED******REMOVED******REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(comma);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***state[1]***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***endColumn,***REMOVED***state[1]);
***REMOVED******REMOVED***return***REMOVED***index;
}
function***REMOVED***catchupLine(writer,***REMOVED***lastLine,***REMOVED***line)***REMOVED***{
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***writer.write(semicolon);
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(++lastLine***REMOVED***<***REMOVED***line);
}

//***REMOVED***src/sourcemap-codec.ts
function***REMOVED***decode(mappings)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***length***REMOVED***}***REMOVED***=***REMOVED***mappings;
***REMOVED******REMOVED***const***REMOVED***reader***REMOVED***=***REMOVED***new***REMOVED***StringReader(mappings);
***REMOVED******REMOVED***const***REMOVED***decoded***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***namesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***semi***REMOVED***=***REMOVED***reader.indexOf(";");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sorted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastCol***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(reader.pos***REMOVED***<***REMOVED***semi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***seg;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***genColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(genColumn***REMOVED***<***REMOVED***lastCol)***REMOVED***sorted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastCol***REMOVED***=***REMOVED***genColumn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceLine***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourceLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceColumn***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***sourceColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasMoreVlq(reader,***REMOVED***semi))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namesIndex***REMOVED***=***REMOVED***decodeInteger(reader,***REMOVED***namesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn,***REMOVED***sourcesIndex,***REMOVED***sourceLine,***REMOVED***sourceColumn,***REMOVED***namesIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn,***REMOVED***sourcesIndex,***REMOVED***sourceLine,***REMOVED***sourceColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seg***REMOVED***=***REMOVED***[genColumn];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line.push(seg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reader.pos++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!sorted)***REMOVED***sort(line);
***REMOVED******REMOVED******REMOVED******REMOVED***decoded.push(line);
***REMOVED******REMOVED******REMOVED******REMOVED***reader.pos***REMOVED***=***REMOVED***semi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(reader.pos***REMOVED***<=***REMOVED***length);
***REMOVED******REMOVED***return***REMOVED***decoded;
}
function***REMOVED***sort(line)***REMOVED***{
***REMOVED******REMOVED***line.sort(sortComparator);
}
function***REMOVED***sortComparator(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***a[0]***REMOVED***-***REMOVED***b[0];
}
function***REMOVED***encode(decoded)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***new***REMOVED***StringWriter();
***REMOVED******REMOVED***let***REMOVED***sourcesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceLine***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***sourceColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***namesIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***decoded.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***line***REMOVED***=***REMOVED***decoded[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***0)***REMOVED***writer.write(semicolon);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line.length***REMOVED***===***REMOVED***0)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***genColumn***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***line.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***segment***REMOVED***=***REMOVED***line[j];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***>***REMOVED***0)***REMOVED***writer.write(comma);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***genColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[0],***REMOVED***genColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***1)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourcesIndex***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[1],***REMOVED***sourcesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceLine***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[2],***REMOVED***sourceLine);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceColumn***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[3],***REMOVED***sourceColumn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***4)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namesIndex***REMOVED***=***REMOVED***encodeInteger(writer,***REMOVED***segment[4],***REMOVED***namesIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***writer.flush();
}
}));
//#***REMOVED***sourceMappingURL=sourcemap-codec.umd.js.map
