import***REMOVED***Agent***REMOVED***from***REMOVED***'./agent'
import***REMOVED***Dispatcher***REMOVED***from***REMOVED***'./dispatcher'
import***REMOVED***{***REMOVED***Interceptable,***REMOVED***MockInterceptor***REMOVED***}***REMOVED***from***REMOVED***'./mock-interceptor'
import***REMOVED***MockDispatch***REMOVED***=***REMOVED***MockInterceptor.MockDispatch;

export***REMOVED***default***REMOVED***MockAgent

interface***REMOVED***PendingInterceptor***REMOVED***extends***REMOVED***MockDispatch***REMOVED***{
***REMOVED******REMOVED***origin:***REMOVED***string;
}

/*****REMOVED***A***REMOVED***mocked***REMOVED***Agent***REMOVED***class***REMOVED***that***REMOVED***implements***REMOVED***the***REMOVED***Agent***REMOVED***API.***REMOVED***It***REMOVED***allows***REMOVED***one***REMOVED***to***REMOVED***intercept***REMOVED***HTTP***REMOVED***requests***REMOVED***made***REMOVED***through***REMOVED***undici***REMOVED***and***REMOVED***return***REMOVED***mocked***REMOVED***responses***REMOVED***instead.***REMOVED****/
declare***REMOVED***class***REMOVED***MockAgent<TMockAgentOptions***REMOVED***extends***REMOVED***MockAgent.Options***REMOVED***=***REMOVED***MockAgent.Options>***REMOVED***extends***REMOVED***Dispatcher***REMOVED***{
***REMOVED******REMOVED***constructor(options?:***REMOVED***MockAgent.Options)
***REMOVED******REMOVED***/*****REMOVED***Creates***REMOVED***and***REMOVED***retrieves***REMOVED***mock***REMOVED***Dispatcher***REMOVED***instances***REMOVED***which***REMOVED***can***REMOVED***then***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***intercept***REMOVED***HTTP***REMOVED***requests.***REMOVED***If***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***connections***REMOVED***on***REMOVED***the***REMOVED***mock***REMOVED***agent***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***1,***REMOVED***a***REMOVED***MockClient***REMOVED***instance***REMOVED***is***REMOVED***returned.***REMOVED***Otherwise***REMOVED***a***REMOVED***MockPool***REMOVED***instance***REMOVED***is***REMOVED***returned.***REMOVED****/
***REMOVED******REMOVED***get<TInterceptable***REMOVED***extends***REMOVED***Interceptable>(origin:***REMOVED***string):***REMOVED***TInterceptable;
***REMOVED******REMOVED***get<TInterceptable***REMOVED***extends***REMOVED***Interceptable>(origin:***REMOVED***RegExp):***REMOVED***TInterceptable;
***REMOVED******REMOVED***get<TInterceptable***REMOVED***extends***REMOVED***Interceptable>(origin:***REMOVED***((origin:***REMOVED***string)***REMOVED***=>***REMOVED***boolean)):***REMOVED***TInterceptable;
***REMOVED******REMOVED***/*****REMOVED***Dispatches***REMOVED***a***REMOVED***mocked***REMOVED***request.***REMOVED****/
***REMOVED******REMOVED***dispatch(options:***REMOVED***Agent.DispatchOptions,***REMOVED***handler:***REMOVED***Dispatcher.DispatchHandlers):***REMOVED***boolean;
***REMOVED******REMOVED***/*****REMOVED***Closes***REMOVED***the***REMOVED***mock***REMOVED***agent***REMOVED***and***REMOVED***waits***REMOVED***for***REMOVED***registered***REMOVED***mock***REMOVED***pools***REMOVED***and***REMOVED***clients***REMOVED***to***REMOVED***also***REMOVED***close***REMOVED***before***REMOVED***resolving.***REMOVED****/
***REMOVED******REMOVED***close():***REMOVED***Promise<void>;
***REMOVED******REMOVED***/*****REMOVED***Disables***REMOVED***mocking***REMOVED***in***REMOVED***MockAgent.***REMOVED****/
***REMOVED******REMOVED***deactivate():***REMOVED***void;
***REMOVED******REMOVED***/*****REMOVED***Enables***REMOVED***mocking***REMOVED***in***REMOVED***a***REMOVED***MockAgent***REMOVED***instance.***REMOVED***When***REMOVED***instantiated,***REMOVED***a***REMOVED***MockAgent***REMOVED***is***REMOVED***automatically***REMOVED***activated.***REMOVED***Therefore,***REMOVED***this***REMOVED***method***REMOVED***is***REMOVED***only***REMOVED***effective***REMOVED***after***REMOVED***`MockAgent.deactivate`***REMOVED***has***REMOVED***been***REMOVED***called.***REMOVED****/
***REMOVED******REMOVED***activate():***REMOVED***void;
***REMOVED******REMOVED***/*****REMOVED***Define***REMOVED***host***REMOVED***matchers***REMOVED***so***REMOVED***only***REMOVED***matching***REMOVED***requests***REMOVED***that***REMOVED***aren't***REMOVED***intercepted***REMOVED***by***REMOVED***the***REMOVED***mock***REMOVED***dispatchers***REMOVED***will***REMOVED***be***REMOVED***attempted.***REMOVED****/
***REMOVED******REMOVED***enableNetConnect():***REMOVED***void;
***REMOVED******REMOVED***enableNetConnect(host:***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED***enableNetConnect(host:***REMOVED***RegExp):***REMOVED***void;
***REMOVED******REMOVED***enableNetConnect(host:***REMOVED***((host:***REMOVED***string)***REMOVED***=>***REMOVED***boolean)):***REMOVED***void;
***REMOVED******REMOVED***/*****REMOVED***Causes***REMOVED***all***REMOVED***requests***REMOVED***to***REMOVED***throw***REMOVED***when***REMOVED***requests***REMOVED***are***REMOVED***not***REMOVED***matched***REMOVED***in***REMOVED***a***REMOVED***MockAgent***REMOVED***intercept.***REMOVED****/
***REMOVED******REMOVED***disableNetConnect():***REMOVED***void;
***REMOVED******REMOVED***pendingInterceptors():***REMOVED***PendingInterceptor[];
***REMOVED******REMOVED***assertNoPendingInterceptors(options?:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pendingInterceptorsFormatter?:***REMOVED***PendingInterceptorsFormatter;
***REMOVED******REMOVED***}):***REMOVED***void;
}

interface***REMOVED***PendingInterceptorsFormatter***REMOVED***{
***REMOVED******REMOVED***format(pendingInterceptors:***REMOVED***readonly***REMOVED***PendingInterceptor[]):***REMOVED***string;
}

declare***REMOVED***namespace***REMOVED***MockAgent***REMOVED***{
***REMOVED******REMOVED***/*****REMOVED***MockAgent***REMOVED***options.***REMOVED****/
***REMOVED******REMOVED***export***REMOVED***interface***REMOVED***Options***REMOVED***extends***REMOVED***Agent.Options***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/*****REMOVED***A***REMOVED***custom***REMOVED***agent***REMOVED***to***REMOVED***be***REMOVED***encapsulated***REMOVED***by***REMOVED***the***REMOVED***MockAgent.***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***agent?:***REMOVED***Agent;
***REMOVED******REMOVED***}
}
