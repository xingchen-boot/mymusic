var***REMOVED***streamify***REMOVED***=***REMOVED***require('./streamify.js')
***REMOVED******REMOVED***,***REMOVED***defer***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***=***REMOVED***require('./defer.js')
***REMOVED******REMOVED***;

//***REMOVED***API
module.exports***REMOVED***=***REMOVED***ReadableAsyncKit;

/**
***REMOVED*******REMOVED***Base***REMOVED***constructor***REMOVED***for***REMOVED***all***REMOVED***streams
***REMOVED*******REMOVED***used***REMOVED***to***REMOVED***hold***REMOVED***properties/methods
***REMOVED****/
function***REMOVED***ReadableAsyncKit()
{
***REMOVED******REMOVED***ReadableAsyncKit.super_.apply(this,***REMOVED***arguments);

***REMOVED******REMOVED***//***REMOVED***list***REMOVED***of***REMOVED***active***REMOVED***jobs
***REMOVED******REMOVED***this.jobs***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***//***REMOVED***add***REMOVED***stream***REMOVED***methods
***REMOVED******REMOVED***this.destroy***REMOVED***=***REMOVED***destroy;
***REMOVED******REMOVED***this._start***REMOVED******REMOVED***=***REMOVED***_start;
***REMOVED******REMOVED***this._read***REMOVED******REMOVED******REMOVED***=***REMOVED***_read;
}

/**
***REMOVED*******REMOVED***Destroys***REMOVED***readable***REMOVED***stream,
***REMOVED*******REMOVED***by***REMOVED***aborting***REMOVED***outstanding***REMOVED***jobs
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{void}
***REMOVED****/
function***REMOVED***destroy()
{
***REMOVED******REMOVED***if***REMOVED***(this.destroyed)
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***this.destroyed***REMOVED***=***REMOVED***true;

***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.terminator***REMOVED***==***REMOVED***'function')
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.terminator();
***REMOVED******REMOVED***}
}

/**
***REMOVED*******REMOVED***Starts***REMOVED***provided***REMOVED***jobs***REMOVED***in***REMOVED***async***REMOVED***manner
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED****/
function***REMOVED***_start()
{
***REMOVED******REMOVED***//***REMOVED***first***REMOVED***argument***REMOVED***â€“***REMOVED***runner***REMOVED***function
***REMOVED******REMOVED***var***REMOVED***runner***REMOVED***=***REMOVED***arguments[0]
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***take***REMOVED***away***REMOVED***first***REMOVED***argument
***REMOVED******REMOVED******REMOVED******REMOVED***,***REMOVED***args***REMOVED******REMOVED******REMOVED***=***REMOVED***Array.prototype.slice.call(arguments,***REMOVED***1)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***second***REMOVED***argument***REMOVED***-***REMOVED***input***REMOVED***data
***REMOVED******REMOVED******REMOVED******REMOVED***,***REMOVED***input***REMOVED******REMOVED***=***REMOVED***args[0]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***last***REMOVED***argument***REMOVED***-***REMOVED***result***REMOVED***callback
***REMOVED******REMOVED******REMOVED******REMOVED***,***REMOVED***endCb***REMOVED******REMOVED***=***REMOVED***streamify.callback.call(this,***REMOVED***args[args.length***REMOVED***-***REMOVED***1])
***REMOVED******REMOVED******REMOVED******REMOVED***;

***REMOVED******REMOVED***args[args.length***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***endCb;
***REMOVED******REMOVED***//***REMOVED***third***REMOVED***argument***REMOVED***-***REMOVED***iterator
***REMOVED******REMOVED***args[1]***REMOVED***=***REMOVED***streamify.iterator.call(this,***REMOVED***args[1]);

***REMOVED******REMOVED***//***REMOVED***allow***REMOVED***time***REMOVED***for***REMOVED***proper***REMOVED***setup
***REMOVED******REMOVED***defer(function()
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.destroyed)
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.terminator***REMOVED***=***REMOVED***runner.apply(null,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endCb(null,***REMOVED***Array.isArray(input)***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}.bind(this));
}


/**
***REMOVED*******REMOVED***Implement***REMOVED***_read***REMOVED***to***REMOVED***comply***REMOVED***with***REMOVED***Readable***REMOVED***streams
***REMOVED*******REMOVED***Doesn't***REMOVED***really***REMOVED***make***REMOVED***sense***REMOVED***for***REMOVED***flowing***REMOVED***object***REMOVED***mode
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED****/
function***REMOVED***_read()
{

}
