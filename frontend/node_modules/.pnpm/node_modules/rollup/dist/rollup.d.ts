export***REMOVED***const***REMOVED***VERSION:***REMOVED***string;

//***REMOVED***utils
type***REMOVED***NullValue***REMOVED***=***REMOVED***null***REMOVED***|***REMOVED***undefined***REMOVED***|***REMOVED***void;
type***REMOVED***MaybeArray<T>***REMOVED***=***REMOVED***T***REMOVED***|***REMOVED***T[];
type***REMOVED***MaybePromise<T>***REMOVED***=***REMOVED***T***REMOVED***|***REMOVED***Promise<T>;

type***REMOVED***PartialNull<T>***REMOVED***=***REMOVED***{
	[P***REMOVED***in***REMOVED***keyof***REMOVED***T]:***REMOVED***T[P]***REMOVED***|***REMOVED***null;
};

export***REMOVED***interface***REMOVED***RollupError***REMOVED***extends***REMOVED***RollupLog***REMOVED***{
	name?:***REMOVED***string;
	stack?:***REMOVED***string;
	watchFiles?:***REMOVED***string[];
}

export***REMOVED***type***REMOVED***RollupWarning***REMOVED***=***REMOVED***RollupLog;

export***REMOVED***interface***REMOVED***RollupLog***REMOVED***{
	binding?:***REMOVED***string;
	cause?:***REMOVED***unknown;
	code?:***REMOVED***string;
	exporter?:***REMOVED***string;
	frame?:***REMOVED***string;
	hook?:***REMOVED***string;
	id?:***REMOVED***string;
	ids?:***REMOVED***string[];
	loc?:***REMOVED***{
		column:***REMOVED***number;
		file?:***REMOVED***string;
		line:***REMOVED***number;
	};
	message:***REMOVED***string;
	meta?:***REMOVED***any;
	names?:***REMOVED***string[];
	plugin?:***REMOVED***string;
	pluginCode?:***REMOVED***unknown;
	pos?:***REMOVED***number;
	reexporter?:***REMOVED***string;
	stack?:***REMOVED***string;
	url?:***REMOVED***string;
}

export***REMOVED***type***REMOVED***LogLevel***REMOVED***=***REMOVED***'warn'***REMOVED***|***REMOVED***'info'***REMOVED***|***REMOVED***'debug';
export***REMOVED***type***REMOVED***LogLevelOption***REMOVED***=***REMOVED***LogLevel***REMOVED***|***REMOVED***'silent';

export***REMOVED***type***REMOVED***SourceMapSegment***REMOVED***=
	|***REMOVED***[number]
	|***REMOVED***[number,***REMOVED***number,***REMOVED***number,***REMOVED***number]
	|***REMOVED***[number,***REMOVED***number,***REMOVED***number,***REMOVED***number,***REMOVED***number];

export***REMOVED***interface***REMOVED***ExistingDecodedSourceMap***REMOVED***{
	file?:***REMOVED***string;
	readonly***REMOVED***mappings:***REMOVED***SourceMapSegment[][];
	names:***REMOVED***string[];
	sourceRoot?:***REMOVED***string;
	sources:***REMOVED***string[];
	sourcesContent?:***REMOVED***(string***REMOVED***|***REMOVED***null)[];
	version:***REMOVED***number;
	x_google_ignoreList?:***REMOVED***number[];
}

export***REMOVED***interface***REMOVED***ExistingRawSourceMap***REMOVED***{
	file?:***REMOVED***string;
	mappings:***REMOVED***string;
	names:***REMOVED***string[];
	sourceRoot?:***REMOVED***string;
	sources:***REMOVED***string[];
	sourcesContent?:***REMOVED***(string***REMOVED***|***REMOVED***null)[];
	version:***REMOVED***number;
	x_google_ignoreList?:***REMOVED***number[];
}

export***REMOVED***type***REMOVED***DecodedSourceMapOrMissing***REMOVED***=
	|***REMOVED***{
			missing:***REMOVED***true;
			plugin:***REMOVED***string;
	***REMOVED******REMOVED***}
	|***REMOVED***(ExistingDecodedSourceMap***REMOVED***&***REMOVED***{***REMOVED***missing?:***REMOVED***false***REMOVED***});

export***REMOVED***interface***REMOVED***SourceMap***REMOVED***{
	file:***REMOVED***string;
	mappings:***REMOVED***string;
	names:***REMOVED***string[];
	sources:***REMOVED***string[];
	sourcesContent:***REMOVED***(string***REMOVED***|***REMOVED***null)[];
	version:***REMOVED***number;
	toString():***REMOVED***string;
	toUrl():***REMOVED***string;
}

export***REMOVED***type***REMOVED***SourceMapInput***REMOVED***=***REMOVED***ExistingRawSourceMap***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***{***REMOVED***mappings:***REMOVED***''***REMOVED***};

interface***REMOVED***ModuleOptions***REMOVED***{
	assertions:***REMOVED***Record<string,***REMOVED***string>;
	meta:***REMOVED***CustomPluginOptions;
	moduleSideEffects:***REMOVED***boolean***REMOVED***|***REMOVED***'no-treeshake';
	syntheticNamedExports:***REMOVED***boolean***REMOVED***|***REMOVED***string;
}

export***REMOVED***interface***REMOVED***SourceDescription***REMOVED***extends***REMOVED***Partial<PartialNull<ModuleOptions>>***REMOVED***{
	ast?:***REMOVED***AcornNode;
	code:***REMOVED***string;
	map?:***REMOVED***SourceMapInput;
}

export***REMOVED***interface***REMOVED***TransformModuleJSON***REMOVED***{
	ast?:***REMOVED***AcornNode;
	code:***REMOVED***string;
	//***REMOVED***note***REMOVED***if***REMOVED***plugins***REMOVED***use***REMOVED***new***REMOVED***this.cache***REMOVED***to***REMOVED***opt-out***REMOVED***auto***REMOVED***transform***REMOVED***cache
	customTransformCache:***REMOVED***boolean;
	originalCode:***REMOVED***string;
	originalSourcemap:***REMOVED***ExistingDecodedSourceMap***REMOVED***|***REMOVED***null;
	sourcemapChain:***REMOVED***DecodedSourceMapOrMissing[];
	transformDependencies:***REMOVED***string[];
}

export***REMOVED***interface***REMOVED***ModuleJSON***REMOVED***extends***REMOVED***TransformModuleJSON,***REMOVED***ModuleOptions***REMOVED***{
	ast:***REMOVED***AcornNode;
	dependencies:***REMOVED***string[];
	id:***REMOVED***string;
	resolvedIds:***REMOVED***ResolvedIdMap;
	transformFiles:***REMOVED***EmittedFile[]***REMOVED***|***REMOVED***undefined;
}

export***REMOVED***interface***REMOVED***PluginCache***REMOVED***{
	delete(id:***REMOVED***string):***REMOVED***boolean;
	get<T***REMOVED***=***REMOVED***any>(id:***REMOVED***string):***REMOVED***T;
	has(id:***REMOVED***string):***REMOVED***boolean;
	set<T***REMOVED***=***REMOVED***any>(id:***REMOVED***string,***REMOVED***value:***REMOVED***T):***REMOVED***void;
}

export***REMOVED***type***REMOVED***LoggingFunction***REMOVED***=***REMOVED***(log:***REMOVED***RollupLog***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***(()***REMOVED***=>***REMOVED***RollupLog***REMOVED***|***REMOVED***string))***REMOVED***=>***REMOVED***void;

export***REMOVED***interface***REMOVED***MinimalPluginContext***REMOVED***{
	debug:***REMOVED***LoggingFunction;
	error:***REMOVED***(error:***REMOVED***RollupError***REMOVED***|***REMOVED***string)***REMOVED***=>***REMOVED***never;
	info:***REMOVED***LoggingFunction;
	meta:***REMOVED***PluginContextMeta;
	warn:***REMOVED***LoggingFunction;
}

export***REMOVED***interface***REMOVED***EmittedAsset***REMOVED***{
	fileName?:***REMOVED***string;
	name?:***REMOVED***string;
	needsCodeReference?:***REMOVED***boolean;
	source?:***REMOVED***string***REMOVED***|***REMOVED***Uint8Array;
	type:***REMOVED***'asset';
}

export***REMOVED***interface***REMOVED***EmittedChunk***REMOVED***{
	fileName?:***REMOVED***string;
	id:***REMOVED***string;
	implicitlyLoadedAfterOneOf?:***REMOVED***string[];
	importer?:***REMOVED***string;
	name?:***REMOVED***string;
	preserveSignature?:***REMOVED***PreserveEntrySignaturesOption;
	type:***REMOVED***'chunk';
}

export***REMOVED***interface***REMOVED***EmittedPrebuiltChunk***REMOVED***{
	code:***REMOVED***string;
	exports?:***REMOVED***string[];
	fileName:***REMOVED***string;
	map?:***REMOVED***SourceMap;
	sourcemapFileName?:***REMOVED***string;
	type:***REMOVED***'prebuilt-chunk';
}

export***REMOVED***type***REMOVED***EmittedFile***REMOVED***=***REMOVED***EmittedAsset***REMOVED***|***REMOVED***EmittedChunk***REMOVED***|***REMOVED***EmittedPrebuiltChunk;

export***REMOVED***type***REMOVED***EmitFile***REMOVED***=***REMOVED***(emittedFile:***REMOVED***EmittedFile)***REMOVED***=>***REMOVED***string;

interface***REMOVED***ModuleInfo***REMOVED***extends***REMOVED***ModuleOptions***REMOVED***{
	ast:***REMOVED***AcornNode***REMOVED***|***REMOVED***null;
	code:***REMOVED***string***REMOVED***|***REMOVED***null;
	dynamicImporters:***REMOVED***readonly***REMOVED***string[];
	dynamicallyImportedIdResolutions:***REMOVED***readonly***REMOVED***ResolvedId[];
	dynamicallyImportedIds:***REMOVED***readonly***REMOVED***string[];
	exportedBindings:***REMOVED***Record<string,***REMOVED***string[]>***REMOVED***|***REMOVED***null;
	exports:***REMOVED***string[]***REMOVED***|***REMOVED***null;
	hasDefaultExport:***REMOVED***boolean***REMOVED***|***REMOVED***null;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***`moduleSideEffects`***REMOVED***instead***REMOVED****/
	hasModuleSideEffects:***REMOVED***boolean***REMOVED***|***REMOVED***'no-treeshake';
	id:***REMOVED***string;
	implicitlyLoadedAfterOneOf:***REMOVED***readonly***REMOVED***string[];
	implicitlyLoadedBefore:***REMOVED***readonly***REMOVED***string[];
	importedIdResolutions:***REMOVED***readonly***REMOVED***ResolvedId[];
	importedIds:***REMOVED***readonly***REMOVED***string[];
	importers:***REMOVED***readonly***REMOVED***string[];
	isEntry:***REMOVED***boolean;
	isExternal:***REMOVED***boolean;
	isIncluded:***REMOVED***boolean***REMOVED***|***REMOVED***null;
}

export***REMOVED***type***REMOVED***GetModuleInfo***REMOVED***=***REMOVED***(moduleId:***REMOVED***string)***REMOVED***=>***REMOVED***ModuleInfo***REMOVED***|***REMOVED***null;

export***REMOVED***interface***REMOVED***CustomPluginOptions***REMOVED***{
	[plugin:***REMOVED***string]:***REMOVED***any;
}

type***REMOVED***LoggingFunctionWithPosition***REMOVED***=***REMOVED***(
	log:***REMOVED***RollupLog***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***(()***REMOVED***=>***REMOVED***RollupLog***REMOVED***|***REMOVED***string),
	pos?:***REMOVED***number***REMOVED***|***REMOVED***{***REMOVED***column:***REMOVED***number;***REMOVED***line:***REMOVED***number***REMOVED***}
)***REMOVED***=>***REMOVED***void;

export***REMOVED***interface***REMOVED***PluginContext***REMOVED***extends***REMOVED***MinimalPluginContext***REMOVED***{
	addWatchFile:***REMOVED***(id:***REMOVED***string)***REMOVED***=>***REMOVED***void;
	cache:***REMOVED***PluginCache;
	debug:***REMOVED***LoggingFunction;
	emitFile:***REMOVED***EmitFile;
	error:***REMOVED***(error:***REMOVED***RollupError***REMOVED***|***REMOVED***string)***REMOVED***=>***REMOVED***never;
	getFileName:***REMOVED***(fileReferenceId:***REMOVED***string)***REMOVED***=>***REMOVED***string;
	getModuleIds:***REMOVED***()***REMOVED***=>***REMOVED***IterableIterator<string>;
	getModuleInfo:***REMOVED***GetModuleInfo;
	getWatchFiles:***REMOVED***()***REMOVED***=>***REMOVED***string[];
	info:***REMOVED***LoggingFunction;
	load:***REMOVED***(
		options:***REMOVED***{***REMOVED***id:***REMOVED***string;***REMOVED***resolveDependencies?:***REMOVED***boolean***REMOVED***}***REMOVED***&***REMOVED***Partial<PartialNull<ModuleOptions>>
	)***REMOVED***=>***REMOVED***Promise<ModuleInfo>;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***`this.getModuleIds`***REMOVED***instead***REMOVED****/
	moduleIds:***REMOVED***IterableIterator<string>;
	parse:***REMOVED***(input:***REMOVED***string,***REMOVED***options?:***REMOVED***any)***REMOVED***=>***REMOVED***AcornNode;
	resolve:***REMOVED***(
		source:***REMOVED***string,
		importer?:***REMOVED***string,
		options?:***REMOVED***{
			assertions?:***REMOVED***Record<string,***REMOVED***string>;
			custom?:***REMOVED***CustomPluginOptions;
			isEntry?:***REMOVED***boolean;
			skipSelf?:***REMOVED***boolean;
		}
	)***REMOVED***=>***REMOVED***Promise<ResolvedId***REMOVED***|***REMOVED***null>;
	setAssetSource:***REMOVED***(assetReferenceId:***REMOVED***string,***REMOVED***source:***REMOVED***string***REMOVED***|***REMOVED***Uint8Array)***REMOVED***=>***REMOVED***void;
	warn:***REMOVED***LoggingFunction;
}

export***REMOVED***interface***REMOVED***PluginContextMeta***REMOVED***{
	rollupVersion:***REMOVED***string;
	watchMode:***REMOVED***boolean;
}

export***REMOVED***interface***REMOVED***ResolvedId***REMOVED***extends***REMOVED***ModuleOptions***REMOVED***{
	external:***REMOVED***boolean***REMOVED***|***REMOVED***'absolute';
	id:***REMOVED***string;
	resolvedBy:***REMOVED***string;
}

export***REMOVED***interface***REMOVED***ResolvedIdMap***REMOVED***{
	[key:***REMOVED***string]:***REMOVED***ResolvedId;
}

interface***REMOVED***PartialResolvedId***REMOVED***extends***REMOVED***Partial<PartialNull<ModuleOptions>>***REMOVED***{
	external?:***REMOVED***boolean***REMOVED***|***REMOVED***'absolute'***REMOVED***|***REMOVED***'relative';
	id:***REMOVED***string;
	resolvedBy?:***REMOVED***string;
}

export***REMOVED***type***REMOVED***ResolveIdResult***REMOVED***=***REMOVED***string***REMOVED***|***REMOVED***NullValue***REMOVED***|***REMOVED***false***REMOVED***|***REMOVED***PartialResolvedId;

export***REMOVED***type***REMOVED***ResolveIdResultWithoutNullValue***REMOVED***=***REMOVED***string***REMOVED***|***REMOVED***false***REMOVED***|***REMOVED***PartialResolvedId;

export***REMOVED***type***REMOVED***ResolveIdHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	source:***REMOVED***string,
	importer:***REMOVED***string***REMOVED***|***REMOVED***undefined,
	options:***REMOVED***{***REMOVED***assertions:***REMOVED***Record<string,***REMOVED***string>;***REMOVED***custom?:***REMOVED***CustomPluginOptions;***REMOVED***isEntry:***REMOVED***boolean***REMOVED***}
)***REMOVED***=>***REMOVED***ResolveIdResult;

export***REMOVED***type***REMOVED***ShouldTransformCachedModuleHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	options:***REMOVED***{
		ast:***REMOVED***AcornNode;
		code:***REMOVED***string;
		id:***REMOVED***string;
		meta:***REMOVED***CustomPluginOptions;
		moduleSideEffects:***REMOVED***boolean***REMOVED***|***REMOVED***'no-treeshake';
		resolvedSources:***REMOVED***ResolvedIdMap;
		syntheticNamedExports:***REMOVED***boolean***REMOVED***|***REMOVED***string;
	}
)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***IsExternal***REMOVED***=***REMOVED***(
	source:***REMOVED***string,
	importer:***REMOVED***string***REMOVED***|***REMOVED***undefined,
	isResolved:***REMOVED***boolean
)***REMOVED***=>***REMOVED***boolean;

export***REMOVED***type***REMOVED***IsPureModule***REMOVED***=***REMOVED***(id:***REMOVED***string)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***HasModuleSideEffects***REMOVED***=***REMOVED***(id:***REMOVED***string,***REMOVED***external:***REMOVED***boolean)***REMOVED***=>***REMOVED***boolean;

export***REMOVED***type***REMOVED***LoadResult***REMOVED***=***REMOVED***SourceDescription***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***LoadHook***REMOVED***=***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***id:***REMOVED***string)***REMOVED***=>***REMOVED***LoadResult;

export***REMOVED***interface***REMOVED***TransformPluginContext***REMOVED***extends***REMOVED***PluginContext***REMOVED***{
	debug:***REMOVED***LoggingFunctionWithPosition;
	error:***REMOVED***(error:***REMOVED***RollupError***REMOVED***|***REMOVED***string,***REMOVED***pos?:***REMOVED***number***REMOVED***|***REMOVED***{***REMOVED***column:***REMOVED***number;***REMOVED***line:***REMOVED***number***REMOVED***})***REMOVED***=>***REMOVED***never;
	getCombinedSourcemap:***REMOVED***()***REMOVED***=>***REMOVED***SourceMap;
	info:***REMOVED***LoggingFunctionWithPosition;
	warn:***REMOVED***LoggingFunctionWithPosition;
}

export***REMOVED***type***REMOVED***TransformResult***REMOVED***=***REMOVED***string***REMOVED***|***REMOVED***NullValue***REMOVED***|***REMOVED***Partial<SourceDescription>;

export***REMOVED***type***REMOVED***TransformHook***REMOVED***=***REMOVED***(
	this:***REMOVED***TransformPluginContext,
	code:***REMOVED***string,
	id:***REMOVED***string
)***REMOVED***=>***REMOVED***TransformResult;

export***REMOVED***type***REMOVED***ModuleParsedHook***REMOVED***=***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***info:***REMOVED***ModuleInfo)***REMOVED***=>***REMOVED***void;

export***REMOVED***type***REMOVED***RenderChunkHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	code:***REMOVED***string,
	chunk:***REMOVED***RenderedChunk,
	options:***REMOVED***NormalizedOutputOptions,
	meta:***REMOVED***{***REMOVED***chunks:***REMOVED***Record<string,***REMOVED***RenderedChunk>***REMOVED***}
)***REMOVED***=>***REMOVED***{***REMOVED***code:***REMOVED***string;***REMOVED***map?:***REMOVED***SourceMapInput***REMOVED***}***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***ResolveDynamicImportHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	specifier:***REMOVED***string***REMOVED***|***REMOVED***AcornNode,
	importer:***REMOVED***string,
	options:***REMOVED***{***REMOVED***assertions:***REMOVED***Record<string,***REMOVED***string>***REMOVED***}
)***REMOVED***=>***REMOVED***ResolveIdResult;

export***REMOVED***type***REMOVED***ResolveImportMetaHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	property:***REMOVED***string***REMOVED***|***REMOVED***null,
	options:***REMOVED***{***REMOVED***chunkId:***REMOVED***string;***REMOVED***format:***REMOVED***InternalModuleFormat;***REMOVED***moduleId:***REMOVED***string***REMOVED***}
)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***ResolveFileUrlHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	options:***REMOVED***{
		chunkId:***REMOVED***string;
		fileName:***REMOVED***string;
		format:***REMOVED***InternalModuleFormat;
		moduleId:***REMOVED***string;
		referenceId:***REMOVED***string;
		relativePath:***REMOVED***string;
	}
)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***AddonHookFunction***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	chunk:***REMOVED***RenderedChunk
)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***Promise<string>;
export***REMOVED***type***REMOVED***AddonHook***REMOVED***=***REMOVED***string***REMOVED***|***REMOVED***AddonHookFunction;

export***REMOVED***type***REMOVED***ChangeEvent***REMOVED***=***REMOVED***'create'***REMOVED***|***REMOVED***'update'***REMOVED***|***REMOVED***'delete';
export***REMOVED***type***REMOVED***WatchChangeHook***REMOVED***=***REMOVED***(
	this:***REMOVED***PluginContext,
	id:***REMOVED***string,
	change:***REMOVED***{***REMOVED***event:***REMOVED***ChangeEvent***REMOVED***}
)***REMOVED***=>***REMOVED***void;

/**
***REMOVED*******REMOVED***use***REMOVED***this***REMOVED***type***REMOVED***for***REMOVED***plugin***REMOVED***annotation
***REMOVED*******REMOVED***@example
***REMOVED*******REMOVED***```ts
***REMOVED*******REMOVED***interface***REMOVED***Options***REMOVED***{
***REMOVED*******REMOVED***...
***REMOVED*******REMOVED***}
***REMOVED*******REMOVED***const***REMOVED***myPlugin:***REMOVED***PluginImpl<Options>***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{***REMOVED***...***REMOVED***}
***REMOVED*******REMOVED***```
***REMOVED****/
//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/ban-types
export***REMOVED***type***REMOVED***PluginImpl<O***REMOVED***extends***REMOVED***object***REMOVED***=***REMOVED***object,***REMOVED***A***REMOVED***=***REMOVED***any>***REMOVED***=***REMOVED***(options?:***REMOVED***O)***REMOVED***=>***REMOVED***Plugin<A>;

export***REMOVED***interface***REMOVED***OutputBundle***REMOVED***{
	[fileName:***REMOVED***string]:***REMOVED***OutputAsset***REMOVED***|***REMOVED***OutputChunk;
}

export***REMOVED***interface***REMOVED***FunctionPluginHooks***REMOVED***{
	augmentChunkHash:***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***chunk:***REMOVED***RenderedChunk)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***void;
	buildEnd:***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***error?:***REMOVED***Error)***REMOVED***=>***REMOVED***void;
	buildStart:***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***options:***REMOVED***NormalizedInputOptions)***REMOVED***=>***REMOVED***void;
	closeBundle:***REMOVED***(this:***REMOVED***PluginContext)***REMOVED***=>***REMOVED***void;
	closeWatcher:***REMOVED***(this:***REMOVED***PluginContext)***REMOVED***=>***REMOVED***void;
	generateBundle:***REMOVED***(
		this:***REMOVED***PluginContext,
		options:***REMOVED***NormalizedOutputOptions,
		bundle:***REMOVED***OutputBundle,
		isWrite:***REMOVED***boolean
	)***REMOVED***=>***REMOVED***void;
	load:***REMOVED***LoadHook;
	moduleParsed:***REMOVED***ModuleParsedHook;
	onLog:***REMOVED***(this:***REMOVED***MinimalPluginContext,***REMOVED***level:***REMOVED***LogLevel,***REMOVED***log:***REMOVED***RollupLog)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***NullValue;
	options:***REMOVED***(this:***REMOVED***MinimalPluginContext,***REMOVED***options:***REMOVED***InputOptions)***REMOVED***=>***REMOVED***InputOptions***REMOVED***|***REMOVED***NullValue;
	outputOptions:***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***options:***REMOVED***OutputOptions)***REMOVED***=>***REMOVED***OutputOptions***REMOVED***|***REMOVED***NullValue;
	renderChunk:***REMOVED***RenderChunkHook;
	renderDynamicImport:***REMOVED***(
		this:***REMOVED***PluginContext,
		options:***REMOVED***{
			customResolution:***REMOVED***string***REMOVED***|***REMOVED***null;
			format:***REMOVED***InternalModuleFormat;
			moduleId:***REMOVED***string;
			targetModuleId:***REMOVED***string***REMOVED***|***REMOVED***null;
		}
	)***REMOVED***=>***REMOVED***{***REMOVED***left:***REMOVED***string;***REMOVED***right:***REMOVED***string***REMOVED***}***REMOVED***|***REMOVED***NullValue;
	renderError:***REMOVED***(this:***REMOVED***PluginContext,***REMOVED***error?:***REMOVED***Error)***REMOVED***=>***REMOVED***void;
	renderStart:***REMOVED***(
		this:***REMOVED***PluginContext,
		outputOptions:***REMOVED***NormalizedOutputOptions,
		inputOptions:***REMOVED***NormalizedInputOptions
	)***REMOVED***=>***REMOVED***void;
	resolveDynamicImport:***REMOVED***ResolveDynamicImportHook;
	resolveFileUrl:***REMOVED***ResolveFileUrlHook;
	resolveId:***REMOVED***ResolveIdHook;
	resolveImportMeta:***REMOVED***ResolveImportMetaHook;
	shouldTransformCachedModule:***REMOVED***ShouldTransformCachedModuleHook;
	transform:***REMOVED***TransformHook;
	watchChange:***REMOVED***WatchChangeHook;
	writeBundle:***REMOVED***(
		this:***REMOVED***PluginContext,
		options:***REMOVED***NormalizedOutputOptions,
		bundle:***REMOVED***OutputBundle
	)***REMOVED***=>***REMOVED***void;
}

export***REMOVED***type***REMOVED***OutputPluginHooks***REMOVED***=
	|***REMOVED***'augmentChunkHash'
	|***REMOVED***'generateBundle'
	|***REMOVED***'outputOptions'
	|***REMOVED***'renderChunk'
	|***REMOVED***'renderDynamicImport'
	|***REMOVED***'renderError'
	|***REMOVED***'renderStart'
	|***REMOVED***'resolveFileUrl'
	|***REMOVED***'resolveImportMeta'
	|***REMOVED***'writeBundle';

export***REMOVED***type***REMOVED***InputPluginHooks***REMOVED***=***REMOVED***Exclude<keyof***REMOVED***FunctionPluginHooks,***REMOVED***OutputPluginHooks>;

export***REMOVED***type***REMOVED***SyncPluginHooks***REMOVED***=
	|***REMOVED***'augmentChunkHash'
	|***REMOVED***'onLog'
	|***REMOVED***'outputOptions'
	|***REMOVED***'renderDynamicImport'
	|***REMOVED***'resolveFileUrl'
	|***REMOVED***'resolveImportMeta';

export***REMOVED***type***REMOVED***AsyncPluginHooks***REMOVED***=***REMOVED***Exclude<keyof***REMOVED***FunctionPluginHooks,***REMOVED***SyncPluginHooks>;

export***REMOVED***type***REMOVED***FirstPluginHooks***REMOVED***=
	|***REMOVED***'load'
	|***REMOVED***'renderDynamicImport'
	|***REMOVED***'resolveDynamicImport'
	|***REMOVED***'resolveFileUrl'
	|***REMOVED***'resolveId'
	|***REMOVED***'resolveImportMeta'
	|***REMOVED***'shouldTransformCachedModule';

export***REMOVED***type***REMOVED***SequentialPluginHooks***REMOVED***=
	|***REMOVED***'augmentChunkHash'
	|***REMOVED***'generateBundle'
	|***REMOVED***'onLog'
	|***REMOVED***'options'
	|***REMOVED***'outputOptions'
	|***REMOVED***'renderChunk'
	|***REMOVED***'transform';

export***REMOVED***type***REMOVED***ParallelPluginHooks***REMOVED***=***REMOVED***Exclude<
	keyof***REMOVED***FunctionPluginHooks***REMOVED***|***REMOVED***AddonHooks,
	FirstPluginHooks***REMOVED***|***REMOVED***SequentialPluginHooks
>;

export***REMOVED***type***REMOVED***AddonHooks***REMOVED***=***REMOVED***'banner'***REMOVED***|***REMOVED***'footer'***REMOVED***|***REMOVED***'intro'***REMOVED***|***REMOVED***'outro';

type***REMOVED***MakeAsync<Function_>***REMOVED***=***REMOVED***Function_***REMOVED***extends***REMOVED***(
	this:***REMOVED***infer***REMOVED***This,
	...parameters:***REMOVED***infer***REMOVED***Arguments
)***REMOVED***=>***REMOVED***infer***REMOVED***Return
	?***REMOVED***(this:***REMOVED***This,***REMOVED***...parameters:***REMOVED***Arguments)***REMOVED***=>***REMOVED***Return***REMOVED***|***REMOVED***Promise<Return>
	:***REMOVED***never;

//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/ban-types
type***REMOVED***ObjectHook<T,***REMOVED***O***REMOVED***=***REMOVED***{}>***REMOVED***=***REMOVED***T***REMOVED***|***REMOVED***({***REMOVED***handler:***REMOVED***T;***REMOVED***order?:***REMOVED***'pre'***REMOVED***|***REMOVED***'post'***REMOVED***|***REMOVED***null***REMOVED***}***REMOVED***&***REMOVED***O);

export***REMOVED***type***REMOVED***PluginHooks***REMOVED***=***REMOVED***{
	[K***REMOVED***in***REMOVED***keyof***REMOVED***FunctionPluginHooks]:***REMOVED***ObjectHook<
		K***REMOVED***extends***REMOVED***AsyncPluginHooks***REMOVED***?***REMOVED***MakeAsync<FunctionPluginHooks[K]>***REMOVED***:***REMOVED***FunctionPluginHooks[K],
		//***REMOVED***eslint-disable-next-line***REMOVED***@typescript-eslint/ban-types
		K***REMOVED***extends***REMOVED***ParallelPluginHooks***REMOVED***?***REMOVED***{***REMOVED***sequential?:***REMOVED***boolean***REMOVED***}***REMOVED***:***REMOVED***{}
	>;
};

export***REMOVED***interface***REMOVED***OutputPlugin
	extends***REMOVED***Partial<{***REMOVED***[K***REMOVED***in***REMOVED***OutputPluginHooks]:***REMOVED***PluginHooks[K]***REMOVED***}>,
		Partial<{***REMOVED***[K***REMOVED***in***REMOVED***AddonHooks]:***REMOVED***ObjectHook<AddonHook>***REMOVED***}>***REMOVED***{
	cacheKey?:***REMOVED***string;
	name:***REMOVED***string;
	version?:***REMOVED***string;
}

export***REMOVED***interface***REMOVED***Plugin<A***REMOVED***=***REMOVED***any>***REMOVED***extends***REMOVED***OutputPlugin,***REMOVED***Partial<PluginHooks>***REMOVED***{
	//***REMOVED***for***REMOVED***inter-plugin***REMOVED***communication
	api?:***REMOVED***A;
}

export***REMOVED***type***REMOVED***TreeshakingPreset***REMOVED***=***REMOVED***'smallest'***REMOVED***|***REMOVED***'safest'***REMOVED***|***REMOVED***'recommended';

export***REMOVED***interface***REMOVED***NormalizedTreeshakingOptions***REMOVED***{
	annotations:***REMOVED***boolean;
	correctVarValueBeforeDeclaration:***REMOVED***boolean;
	manualPureFunctions:***REMOVED***readonly***REMOVED***string[];
	moduleSideEffects:***REMOVED***HasModuleSideEffects;
	propertyReadSideEffects:***REMOVED***boolean***REMOVED***|***REMOVED***'always';
	tryCatchDeoptimization:***REMOVED***boolean;
	unknownGlobalSideEffects:***REMOVED***boolean;
}

export***REMOVED***interface***REMOVED***TreeshakingOptions
	extends***REMOVED***Partial<Omit<NormalizedTreeshakingOptions,***REMOVED***'moduleSideEffects'>>***REMOVED***{
	moduleSideEffects?:***REMOVED***ModuleSideEffectsOption;
	preset?:***REMOVED***TreeshakingPreset;
}

interface***REMOVED***ManualChunkMeta***REMOVED***{
	getModuleIds:***REMOVED***()***REMOVED***=>***REMOVED***IterableIterator<string>;
	getModuleInfo:***REMOVED***GetModuleInfo;
}
export***REMOVED***type***REMOVED***GetManualChunk***REMOVED***=***REMOVED***(id:***REMOVED***string,***REMOVED***meta:***REMOVED***ManualChunkMeta)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***NullValue;

export***REMOVED***type***REMOVED***ExternalOption***REMOVED***=
	|***REMOVED***(string***REMOVED***|***REMOVED***RegExp)[]
	|***REMOVED***string
	|***REMOVED***RegExp
	|***REMOVED***((source:***REMOVED***string,***REMOVED***importer:***REMOVED***string***REMOVED***|***REMOVED***undefined,***REMOVED***isResolved:***REMOVED***boolean)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***NullValue);

export***REMOVED***type***REMOVED***GlobalsOption***REMOVED***=***REMOVED***{***REMOVED***[name:***REMOVED***string]:***REMOVED***string***REMOVED***}***REMOVED***|***REMOVED***((name:***REMOVED***string)***REMOVED***=>***REMOVED***string);

export***REMOVED***type***REMOVED***InputOption***REMOVED***=***REMOVED***string***REMOVED***|***REMOVED***string[]***REMOVED***|***REMOVED***{***REMOVED***[entryAlias:***REMOVED***string]:***REMOVED***string***REMOVED***};

export***REMOVED***type***REMOVED***ManualChunksOption***REMOVED***=***REMOVED***{***REMOVED***[chunkAlias:***REMOVED***string]:***REMOVED***string[]***REMOVED***}***REMOVED***|***REMOVED***GetManualChunk;

export***REMOVED***type***REMOVED***LogHandlerWithDefault***REMOVED***=***REMOVED***(
	level:***REMOVED***LogLevel,
	log:***REMOVED***RollupLog,
	defaultHandler:***REMOVED***LogOrStringHandler
)***REMOVED***=>***REMOVED***void;

export***REMOVED***type***REMOVED***LogOrStringHandler***REMOVED***=***REMOVED***(level:***REMOVED***LogLevel***REMOVED***|***REMOVED***'error',***REMOVED***log:***REMOVED***RollupLog***REMOVED***|***REMOVED***string)***REMOVED***=>***REMOVED***void;

export***REMOVED***type***REMOVED***LogHandler***REMOVED***=***REMOVED***(level:***REMOVED***LogLevel,***REMOVED***log:***REMOVED***RollupLog)***REMOVED***=>***REMOVED***void;

export***REMOVED***type***REMOVED***ModuleSideEffectsOption***REMOVED***=***REMOVED***boolean***REMOVED***|***REMOVED***'no-external'***REMOVED***|***REMOVED***string[]***REMOVED***|***REMOVED***HasModuleSideEffects;

export***REMOVED***type***REMOVED***PreserveEntrySignaturesOption***REMOVED***=***REMOVED***false***REMOVED***|***REMOVED***'strict'***REMOVED***|***REMOVED***'allow-extension'***REMOVED***|***REMOVED***'exports-only';

export***REMOVED***type***REMOVED***SourcemapPathTransformOption***REMOVED***=***REMOVED***(
	relativeSourcePath:***REMOVED***string,
	sourcemapPath:***REMOVED***string
)***REMOVED***=>***REMOVED***string;

export***REMOVED***type***REMOVED***SourcemapIgnoreListOption***REMOVED***=***REMOVED***(
	relativeSourcePath:***REMOVED***string,
	sourcemapPath:***REMOVED***string
)***REMOVED***=>***REMOVED***boolean;

export***REMOVED***type***REMOVED***InputPluginOption***REMOVED***=***REMOVED***MaybePromise<Plugin***REMOVED***|***REMOVED***NullValue***REMOVED***|***REMOVED***false***REMOVED***|***REMOVED***InputPluginOption[]>;

export***REMOVED***interface***REMOVED***InputOptions***REMOVED***{
	acorn?:***REMOVED***Record<string,***REMOVED***unknown>;
	acornInjectPlugins?:***REMOVED***((...arguments_:***REMOVED***any[])***REMOVED***=>***REMOVED***unknown)[]***REMOVED***|***REMOVED***((...arguments_:***REMOVED***any[])***REMOVED***=>***REMOVED***unknown);
	cache?:***REMOVED***boolean***REMOVED***|***REMOVED***RollupCache;
	context?:***REMOVED***string;
	experimentalCacheExpiry?:***REMOVED***number;
	experimentalLogSideEffects?:***REMOVED***boolean;
	external?:***REMOVED***ExternalOption;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"inlineDynamicImports"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	inlineDynamicImports?:***REMOVED***boolean;
	input?:***REMOVED***InputOption;
	logLevel?:***REMOVED***LogLevelOption;
	makeAbsoluteExternalsRelative?:***REMOVED***boolean***REMOVED***|***REMOVED***'ifRelativeSource';
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"manualChunks"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	manualChunks?:***REMOVED***ManualChunksOption;
	maxParallelFileOps?:***REMOVED***number;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"maxParallelFileOps"***REMOVED***option***REMOVED***instead.***REMOVED****/
	maxParallelFileReads?:***REMOVED***number;
	moduleContext?:***REMOVED***((id:***REMOVED***string)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***NullValue)***REMOVED***|***REMOVED***{***REMOVED***[id:***REMOVED***string]:***REMOVED***string***REMOVED***};
	onLog?:***REMOVED***LogHandlerWithDefault;
	onwarn?:***REMOVED***WarningHandlerWithDefault;
	perf?:***REMOVED***boolean;
	plugins?:***REMOVED***InputPluginOption;
	preserveEntrySignatures?:***REMOVED***PreserveEntrySignaturesOption;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"preserveModules"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	preserveModules?:***REMOVED***boolean;
	preserveSymlinks?:***REMOVED***boolean;
	shimMissingExports?:***REMOVED***boolean;
	strictDeprecations?:***REMOVED***boolean;
	treeshake?:***REMOVED***boolean***REMOVED***|***REMOVED***TreeshakingPreset***REMOVED***|***REMOVED***TreeshakingOptions;
	watch?:***REMOVED***WatcherOptions***REMOVED***|***REMOVED***false;
}

export***REMOVED***interface***REMOVED***InputOptionsWithPlugins***REMOVED***extends***REMOVED***InputOptions***REMOVED***{
	plugins:***REMOVED***Plugin[];
}

export***REMOVED***interface***REMOVED***NormalizedInputOptions***REMOVED***{
	acorn:***REMOVED***Record<string,***REMOVED***unknown>;
	acornInjectPlugins:***REMOVED***(()***REMOVED***=>***REMOVED***unknown)[];
	cache:***REMOVED***false***REMOVED***|***REMOVED***undefined***REMOVED***|***REMOVED***RollupCache;
	context:***REMOVED***string;
	experimentalCacheExpiry:***REMOVED***number;
	experimentalLogSideEffects:***REMOVED***boolean;
	external:***REMOVED***IsExternal;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"inlineDynamicImports"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	inlineDynamicImports:***REMOVED***boolean***REMOVED***|***REMOVED***undefined;
	input:***REMOVED***string[]***REMOVED***|***REMOVED***{***REMOVED***[entryAlias:***REMOVED***string]:***REMOVED***string***REMOVED***};
	logLevel:***REMOVED***LogLevelOption;
	makeAbsoluteExternalsRelative:***REMOVED***boolean***REMOVED***|***REMOVED***'ifRelativeSource';
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"manualChunks"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	manualChunks:***REMOVED***ManualChunksOption***REMOVED***|***REMOVED***undefined;
	maxParallelFileOps:***REMOVED***number;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"maxParallelFileOps"***REMOVED***option***REMOVED***instead.***REMOVED****/
	maxParallelFileReads:***REMOVED***number;
	moduleContext:***REMOVED***(id:***REMOVED***string)***REMOVED***=>***REMOVED***string;
	onLog:***REMOVED***LogHandler;
	onwarn:***REMOVED***(warning:***REMOVED***RollupLog)***REMOVED***=>***REMOVED***void;
	perf:***REMOVED***boolean;
	plugins:***REMOVED***Plugin[];
	preserveEntrySignatures:***REMOVED***PreserveEntrySignaturesOption;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"preserveModules"***REMOVED***output***REMOVED***option***REMOVED***instead.***REMOVED****/
	preserveModules:***REMOVED***boolean***REMOVED***|***REMOVED***undefined;
	preserveSymlinks:***REMOVED***boolean;
	shimMissingExports:***REMOVED***boolean;
	strictDeprecations:***REMOVED***boolean;
	treeshake:***REMOVED***false***REMOVED***|***REMOVED***NormalizedTreeshakingOptions;
}

export***REMOVED***type***REMOVED***InternalModuleFormat***REMOVED***=***REMOVED***'amd'***REMOVED***|***REMOVED***'cjs'***REMOVED***|***REMOVED***'es'***REMOVED***|***REMOVED***'iife'***REMOVED***|***REMOVED***'system'***REMOVED***|***REMOVED***'umd';

export***REMOVED***type***REMOVED***ModuleFormat***REMOVED***=***REMOVED***InternalModuleFormat***REMOVED***|***REMOVED***'commonjs'***REMOVED***|***REMOVED***'esm'***REMOVED***|***REMOVED***'module'***REMOVED***|***REMOVED***'systemjs';

type***REMOVED***GeneratedCodePreset***REMOVED***=***REMOVED***'es5'***REMOVED***|***REMOVED***'es2015';

interface***REMOVED***NormalizedGeneratedCodeOptions***REMOVED***{
	arrowFunctions:***REMOVED***boolean;
	constBindings:***REMOVED***boolean;
	objectShorthand:***REMOVED***boolean;
	reservedNamesAsProps:***REMOVED***boolean;
	symbols:***REMOVED***boolean;
}

interface***REMOVED***GeneratedCodeOptions***REMOVED***extends***REMOVED***Partial<NormalizedGeneratedCodeOptions>***REMOVED***{
	preset?:***REMOVED***GeneratedCodePreset;
}

export***REMOVED***type***REMOVED***OptionsPaths***REMOVED***=***REMOVED***Record<string,***REMOVED***string>***REMOVED***|***REMOVED***((id:***REMOVED***string)***REMOVED***=>***REMOVED***string);

export***REMOVED***type***REMOVED***InteropType***REMOVED***=***REMOVED***'compat'***REMOVED***|***REMOVED***'auto'***REMOVED***|***REMOVED***'esModule'***REMOVED***|***REMOVED***'default'***REMOVED***|***REMOVED***'defaultOnly';

export***REMOVED***type***REMOVED***GetInterop***REMOVED***=***REMOVED***(id:***REMOVED***string***REMOVED***|***REMOVED***null)***REMOVED***=>***REMOVED***InteropType;

export***REMOVED***type***REMOVED***AmdOptions***REMOVED***=***REMOVED***(
	|***REMOVED***{
			autoId?:***REMOVED***false;
			id:***REMOVED***string;
	***REMOVED******REMOVED***}
	|***REMOVED***{
			autoId:***REMOVED***true;
			basePath?:***REMOVED***string;
			id?:***REMOVED***undefined;
	***REMOVED******REMOVED***}
	|***REMOVED***{
			autoId?:***REMOVED***false;
			id?:***REMOVED***undefined;
	***REMOVED******REMOVED***}
)***REMOVED***&***REMOVED***{
	define?:***REMOVED***string;
	forceJsExtensionForImports?:***REMOVED***boolean;
};

export***REMOVED***type***REMOVED***NormalizedAmdOptions***REMOVED***=***REMOVED***(
	|***REMOVED***{
			autoId:***REMOVED***false;
			id?:***REMOVED***string;
	***REMOVED******REMOVED***}
	|***REMOVED***{
			autoId:***REMOVED***true;
			basePath:***REMOVED***string;
	***REMOVED******REMOVED***}
)***REMOVED***&***REMOVED***{
	define:***REMOVED***string;
	forceJsExtensionForImports:***REMOVED***boolean;
};

type***REMOVED***AddonFunction***REMOVED***=***REMOVED***(chunk:***REMOVED***RenderedChunk)***REMOVED***=>***REMOVED***string***REMOVED***|***REMOVED***Promise<string>;

type***REMOVED***OutputPluginOption***REMOVED***=***REMOVED***MaybePromise<OutputPlugin***REMOVED***|***REMOVED***NullValue***REMOVED***|***REMOVED***false***REMOVED***|***REMOVED***OutputPluginOption[]>;

export***REMOVED***interface***REMOVED***OutputOptions***REMOVED***{
	amd?:***REMOVED***AmdOptions;
	assetFileNames?:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedAsset)***REMOVED***=>***REMOVED***string);
	banner?:***REMOVED***string***REMOVED***|***REMOVED***AddonFunction;
	chunkFileNames?:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string);
	compact?:***REMOVED***boolean;
	//***REMOVED***only***REMOVED***required***REMOVED***for***REMOVED***bundle.write
	dir?:***REMOVED***string;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"renderDynamicImport"***REMOVED***plugin***REMOVED***hook***REMOVED***instead.***REMOVED****/
	dynamicImportFunction?:***REMOVED***string;
	dynamicImportInCjs?:***REMOVED***boolean;
	entryFileNames?:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string);
	esModule?:***REMOVED***boolean***REMOVED***|***REMOVED***'if-default-prop';
	/*****REMOVED***@deprecated***REMOVED***This***REMOVED***option***REMOVED***is***REMOVED***no***REMOVED***longer***REMOVED***needed***REMOVED***and***REMOVED***ignored.***REMOVED****/
	experimentalDeepDynamicChunkOptimization?:***REMOVED***boolean;
	experimentalMinChunkSize?:***REMOVED***number;
	exports?:***REMOVED***'default'***REMOVED***|***REMOVED***'named'***REMOVED***|***REMOVED***'none'***REMOVED***|***REMOVED***'auto';
	extend?:***REMOVED***boolean;
	externalImportAssertions?:***REMOVED***boolean;
	externalLiveBindings?:***REMOVED***boolean;
	//***REMOVED***only***REMOVED***required***REMOVED***for***REMOVED***bundle.write
	file?:***REMOVED***string;
	footer?:***REMOVED***string***REMOVED***|***REMOVED***AddonFunction;
	format?:***REMOVED***ModuleFormat;
	freeze?:***REMOVED***boolean;
	generatedCode?:***REMOVED***GeneratedCodePreset***REMOVED***|***REMOVED***GeneratedCodeOptions;
	globals?:***REMOVED***GlobalsOption;
	hoistTransitiveImports?:***REMOVED***boolean;
	indent?:***REMOVED***string***REMOVED***|***REMOVED***boolean;
	inlineDynamicImports?:***REMOVED***boolean;
	interop?:***REMOVED***InteropType***REMOVED***|***REMOVED***GetInterop;
	intro?:***REMOVED***string***REMOVED***|***REMOVED***AddonFunction;
	manualChunks?:***REMOVED***ManualChunksOption;
	minifyInternalExports?:***REMOVED***boolean;
	name?:***REMOVED***string;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***"generatedCode.symbols"***REMOVED***instead.***REMOVED****/
	namespaceToStringTag?:***REMOVED***boolean;
	noConflict?:***REMOVED***boolean;
	outro?:***REMOVED***string***REMOVED***|***REMOVED***AddonFunction;
	paths?:***REMOVED***OptionsPaths;
	plugins?:***REMOVED***OutputPluginOption;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***"generatedCode.constBindings"***REMOVED***instead.***REMOVED****/
	preferConst?:***REMOVED***boolean;
	preserveModules?:***REMOVED***boolean;
	preserveModulesRoot?:***REMOVED***string;
	sanitizeFileName?:***REMOVED***boolean***REMOVED***|***REMOVED***((fileName:***REMOVED***string)***REMOVED***=>***REMOVED***string);
	sourcemap?:***REMOVED***boolean***REMOVED***|***REMOVED***'inline'***REMOVED***|***REMOVED***'hidden';
	sourcemapBaseUrl?:***REMOVED***string;
	sourcemapExcludeSources?:***REMOVED***boolean;
	sourcemapFile?:***REMOVED***string;
	sourcemapFileNames?:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string);
	sourcemapIgnoreList?:***REMOVED***boolean***REMOVED***|***REMOVED***SourcemapIgnoreListOption;
	sourcemapPathTransform?:***REMOVED***SourcemapPathTransformOption;
	strict?:***REMOVED***boolean;
	systemNullSetters?:***REMOVED***boolean;
	validate?:***REMOVED***boolean;
}

export***REMOVED***interface***REMOVED***NormalizedOutputOptions***REMOVED***{
	amd:***REMOVED***NormalizedAmdOptions;
	assetFileNames:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedAsset)***REMOVED***=>***REMOVED***string);
	banner:***REMOVED***AddonFunction;
	chunkFileNames:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string);
	compact:***REMOVED***boolean;
	dir:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***the***REMOVED***"renderDynamicImport"***REMOVED***plugin***REMOVED***hook***REMOVED***instead.***REMOVED****/
	dynamicImportFunction:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	dynamicImportInCjs:***REMOVED***boolean;
	entryFileNames:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string);
	esModule:***REMOVED***boolean***REMOVED***|***REMOVED***'if-default-prop';
	/*****REMOVED***@deprecated***REMOVED***This***REMOVED***option***REMOVED***is***REMOVED***no***REMOVED***longer***REMOVED***needed***REMOVED***and***REMOVED***ignored.***REMOVED****/
	experimentalDeepDynamicChunkOptimization:***REMOVED***boolean;
	experimentalMinChunkSize:***REMOVED***number;
	exports:***REMOVED***'default'***REMOVED***|***REMOVED***'named'***REMOVED***|***REMOVED***'none'***REMOVED***|***REMOVED***'auto';
	extend:***REMOVED***boolean;
	externalImportAssertions:***REMOVED***boolean;
	externalLiveBindings:***REMOVED***boolean;
	file:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	footer:***REMOVED***AddonFunction;
	format:***REMOVED***InternalModuleFormat;
	freeze:***REMOVED***boolean;
	generatedCode:***REMOVED***NormalizedGeneratedCodeOptions;
	globals:***REMOVED***GlobalsOption;
	hoistTransitiveImports:***REMOVED***boolean;
	indent:***REMOVED***true***REMOVED***|***REMOVED***string;
	inlineDynamicImports:***REMOVED***boolean;
	interop:***REMOVED***GetInterop;
	intro:***REMOVED***AddonFunction;
	manualChunks:***REMOVED***ManualChunksOption;
	minifyInternalExports:***REMOVED***boolean;
	name:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***"generatedCode.symbols"***REMOVED***instead.***REMOVED****/
	namespaceToStringTag:***REMOVED***boolean;
	noConflict:***REMOVED***boolean;
	outro:***REMOVED***AddonFunction;
	paths:***REMOVED***OptionsPaths;
	plugins:***REMOVED***OutputPlugin[];
	/*****REMOVED***@deprecated***REMOVED***Use***REMOVED***"generatedCode.constBindings"***REMOVED***instead.***REMOVED****/
	preferConst:***REMOVED***boolean;
	preserveModules:***REMOVED***boolean;
	preserveModulesRoot:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	sanitizeFileName:***REMOVED***(fileName:***REMOVED***string)***REMOVED***=>***REMOVED***string;
	sourcemap:***REMOVED***boolean***REMOVED***|***REMOVED***'inline'***REMOVED***|***REMOVED***'hidden';
	sourcemapBaseUrl:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	sourcemapExcludeSources:***REMOVED***boolean;
	sourcemapFile:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	sourcemapFileNames:***REMOVED***string***REMOVED***|***REMOVED***((chunkInfo:***REMOVED***PreRenderedChunk)***REMOVED***=>***REMOVED***string)***REMOVED***|***REMOVED***undefined;
	sourcemapIgnoreList:***REMOVED***SourcemapIgnoreListOption;
	sourcemapPathTransform:***REMOVED***SourcemapPathTransformOption***REMOVED***|***REMOVED***undefined;
	strict:***REMOVED***boolean;
	systemNullSetters:***REMOVED***boolean;
	validate:***REMOVED***boolean;
}

export***REMOVED***type***REMOVED***WarningHandlerWithDefault***REMOVED***=***REMOVED***(
	warning:***REMOVED***RollupLog,
	defaultHandler:***REMOVED***LoggingFunction
)***REMOVED***=>***REMOVED***void;

export***REMOVED***interface***REMOVED***SerializedTimings***REMOVED***{
	[label:***REMOVED***string]:***REMOVED***[number,***REMOVED***number,***REMOVED***number];
}

export***REMOVED***interface***REMOVED***PreRenderedAsset***REMOVED***{
	name:***REMOVED***string***REMOVED***|***REMOVED***undefined;
	source:***REMOVED***string***REMOVED***|***REMOVED***Uint8Array;
	type:***REMOVED***'asset';
}

export***REMOVED***interface***REMOVED***OutputAsset***REMOVED***extends***REMOVED***PreRenderedAsset***REMOVED***{
	fileName:***REMOVED***string;
	needsCodeReference:***REMOVED***boolean;
}

export***REMOVED***interface***REMOVED***RenderedModule***REMOVED***{
	readonly***REMOVED***code:***REMOVED***string***REMOVED***|***REMOVED***null;
	originalLength:***REMOVED***number;
	removedExports:***REMOVED***string[];
	renderedExports:***REMOVED***string[];
	renderedLength:***REMOVED***number;
}

export***REMOVED***interface***REMOVED***PreRenderedChunk***REMOVED***{
	exports:***REMOVED***string[];
	facadeModuleId:***REMOVED***string***REMOVED***|***REMOVED***null;
	isDynamicEntry:***REMOVED***boolean;
	isEntry:***REMOVED***boolean;
	isImplicitEntry:***REMOVED***boolean;
	moduleIds:***REMOVED***string[];
	name:***REMOVED***string;
	type:***REMOVED***'chunk';
}

export***REMOVED***interface***REMOVED***RenderedChunk***REMOVED***extends***REMOVED***PreRenderedChunk***REMOVED***{
	dynamicImports:***REMOVED***string[];
	fileName:***REMOVED***string;
	implicitlyLoadedBefore:***REMOVED***string[];
	importedBindings:***REMOVED***{
		[imported:***REMOVED***string]:***REMOVED***string[];
	};
	imports:***REMOVED***string[];
	modules:***REMOVED***{
		[id:***REMOVED***string]:***REMOVED***RenderedModule;
	};
	referencedFiles:***REMOVED***string[];
}

export***REMOVED***interface***REMOVED***OutputChunk***REMOVED***extends***REMOVED***RenderedChunk***REMOVED***{
	code:***REMOVED***string;
	map:***REMOVED***SourceMap***REMOVED***|***REMOVED***null;
	sourcemapFileName:***REMOVED***string***REMOVED***|***REMOVED***null;
	preliminaryFileName:***REMOVED***string;
}

export***REMOVED***interface***REMOVED***SerializablePluginCache***REMOVED***{
	[key:***REMOVED***string]:***REMOVED***[number,***REMOVED***any];
}

export***REMOVED***interface***REMOVED***RollupCache***REMOVED***{
	modules:***REMOVED***ModuleJSON[];
	plugins?:***REMOVED***Record<string,***REMOVED***SerializablePluginCache>;
}

export***REMOVED***interface***REMOVED***RollupOutput***REMOVED***{
	output:***REMOVED***[OutputChunk,***REMOVED***...(OutputChunk***REMOVED***|***REMOVED***OutputAsset)[]];
}

export***REMOVED***interface***REMOVED***RollupBuild***REMOVED***{
	cache:***REMOVED***RollupCache***REMOVED***|***REMOVED***undefined;
	close:***REMOVED***()***REMOVED***=>***REMOVED***Promise<void>;
	closed:***REMOVED***boolean;
	generate:***REMOVED***(outputOptions:***REMOVED***OutputOptions)***REMOVED***=>***REMOVED***Promise<RollupOutput>;
	getTimings?:***REMOVED***()***REMOVED***=>***REMOVED***SerializedTimings;
	watchFiles:***REMOVED***string[];
	write:***REMOVED***(options:***REMOVED***OutputOptions)***REMOVED***=>***REMOVED***Promise<RollupOutput>;
}

export***REMOVED***interface***REMOVED***RollupOptions***REMOVED***extends***REMOVED***InputOptions***REMOVED***{
	//***REMOVED***This***REMOVED***is***REMOVED***included***REMOVED***for***REMOVED***compatibility***REMOVED***with***REMOVED***config***REMOVED***files***REMOVED***but***REMOVED***ignored***REMOVED***by***REMOVED***rollup.rollup
	output?:***REMOVED***OutputOptions***REMOVED***|***REMOVED***OutputOptions[];
}

export***REMOVED***interface***REMOVED***MergedRollupOptions***REMOVED***extends***REMOVED***InputOptionsWithPlugins***REMOVED***{
	output:***REMOVED***OutputOptions[];
}

export***REMOVED***function***REMOVED***rollup(options:***REMOVED***RollupOptions):***REMOVED***Promise<RollupBuild>;

export***REMOVED***interface***REMOVED***ChokidarOptions***REMOVED***{
	alwaysStat?:***REMOVED***boolean;
	atomic?:***REMOVED***boolean***REMOVED***|***REMOVED***number;
	awaitWriteFinish?:
		|***REMOVED***{
				pollInterval?:***REMOVED***number;
				stabilityThreshold?:***REMOVED***number;
		***REMOVED******REMOVED***}
		|***REMOVED***boolean;
	binaryInterval?:***REMOVED***number;
	cwd?:***REMOVED***string;
	depth?:***REMOVED***number;
	disableGlobbing?:***REMOVED***boolean;
	followSymlinks?:***REMOVED***boolean;
	ignoreInitial?:***REMOVED***boolean;
	ignorePermissionErrors?:***REMOVED***boolean;
	ignored?:***REMOVED***any;
	interval?:***REMOVED***number;
	persistent?:***REMOVED***boolean;
	useFsEvents?:***REMOVED***boolean;
	usePolling?:***REMOVED***boolean;
}

export***REMOVED***type***REMOVED***RollupWatchHooks***REMOVED***=***REMOVED***'onError'***REMOVED***|***REMOVED***'onStart'***REMOVED***|***REMOVED***'onBundleStart'***REMOVED***|***REMOVED***'onBundleEnd'***REMOVED***|***REMOVED***'onEnd';

export***REMOVED***interface***REMOVED***WatcherOptions***REMOVED***{
	buildDelay?:***REMOVED***number;
	chokidar?:***REMOVED***ChokidarOptions;
	clearScreen?:***REMOVED***boolean;
	exclude?:***REMOVED***string***REMOVED***|***REMOVED***RegExp***REMOVED***|***REMOVED***(string***REMOVED***|***REMOVED***RegExp)[];
	include?:***REMOVED***string***REMOVED***|***REMOVED***RegExp***REMOVED***|***REMOVED***(string***REMOVED***|***REMOVED***RegExp)[];
	skipWrite?:***REMOVED***boolean;
}

export***REMOVED***interface***REMOVED***RollupWatchOptions***REMOVED***extends***REMOVED***InputOptions***REMOVED***{
	output?:***REMOVED***OutputOptions***REMOVED***|***REMOVED***OutputOptions[];
	watch?:***REMOVED***WatcherOptions***REMOVED***|***REMOVED***false;
}

export***REMOVED***type***REMOVED***AwaitedEventListener<
	T***REMOVED***extends***REMOVED***{***REMOVED***[event:***REMOVED***string]:***REMOVED***(...parameters:***REMOVED***any)***REMOVED***=>***REMOVED***any***REMOVED***},
	K***REMOVED***extends***REMOVED***keyof***REMOVED***T
>***REMOVED***=***REMOVED***(...parameters:***REMOVED***Parameters<T[K]>)***REMOVED***=>***REMOVED***void***REMOVED***|***REMOVED***Promise<void>;

export***REMOVED***interface***REMOVED***AwaitingEventEmitter<T***REMOVED***extends***REMOVED***{***REMOVED***[event:***REMOVED***string]:***REMOVED***(...parameters:***REMOVED***any)***REMOVED***=>***REMOVED***any***REMOVED***}>***REMOVED***{
	close():***REMOVED***Promise<void>;
	emit<K***REMOVED***extends***REMOVED***keyof***REMOVED***T>(event:***REMOVED***K,***REMOVED***...parameters:***REMOVED***Parameters<T[K]>):***REMOVED***Promise<unknown>;
	/**
	***REMOVED*******REMOVED***Removes***REMOVED***an***REMOVED***event***REMOVED***listener.
	***REMOVED****/
	off<K***REMOVED***extends***REMOVED***keyof***REMOVED***T>(event:***REMOVED***K,***REMOVED***listener:***REMOVED***AwaitedEventListener<T,***REMOVED***K>):***REMOVED***this;
	/**
	***REMOVED*******REMOVED***Registers***REMOVED***an***REMOVED***event***REMOVED***listener***REMOVED***that***REMOVED***will***REMOVED***be***REMOVED***awaited***REMOVED***before***REMOVED***Rollup***REMOVED***continues.
	***REMOVED*******REMOVED***All***REMOVED***listeners***REMOVED***will***REMOVED***be***REMOVED***awaited***REMOVED***in***REMOVED***parallel***REMOVED***while***REMOVED***rejections***REMOVED***are***REMOVED***tracked***REMOVED***via
	***REMOVED*******REMOVED***Promise.all.
	***REMOVED****/
	on<K***REMOVED***extends***REMOVED***keyof***REMOVED***T>(event:***REMOVED***K,***REMOVED***listener:***REMOVED***AwaitedEventListener<T,***REMOVED***K>):***REMOVED***this;
	/**
	***REMOVED*******REMOVED***Registers***REMOVED***an***REMOVED***event***REMOVED***listener***REMOVED***that***REMOVED***will***REMOVED***be***REMOVED***awaited***REMOVED***before***REMOVED***Rollup***REMOVED***continues.
	***REMOVED*******REMOVED***All***REMOVED***listeners***REMOVED***will***REMOVED***be***REMOVED***awaited***REMOVED***in***REMOVED***parallel***REMOVED***while***REMOVED***rejections***REMOVED***are***REMOVED***tracked***REMOVED***via
	***REMOVED*******REMOVED***Promise.all.
	***REMOVED*******REMOVED***Listeners***REMOVED***are***REMOVED***removed***REMOVED***automatically***REMOVED***when***REMOVED***removeListenersForCurrentRun***REMOVED***is
	***REMOVED*******REMOVED***called,***REMOVED***which***REMOVED***happens***REMOVED***automatically***REMOVED***after***REMOVED***each***REMOVED***run.
	***REMOVED****/
	onCurrentRun<K***REMOVED***extends***REMOVED***keyof***REMOVED***T>(
		event:***REMOVED***K,
		listener:***REMOVED***(...parameters:***REMOVED***Parameters<T[K]>)***REMOVED***=>***REMOVED***Promise<ReturnType<T[K]>>
	):***REMOVED***this;
	removeAllListeners():***REMOVED***this;
	removeListenersForCurrentRun():***REMOVED***this;
}

export***REMOVED***type***REMOVED***RollupWatcherEvent***REMOVED***=
	|***REMOVED***{***REMOVED***code:***REMOVED***'START'***REMOVED***}
	|***REMOVED***{***REMOVED***code:***REMOVED***'BUNDLE_START';***REMOVED***input?:***REMOVED***InputOption;***REMOVED***output:***REMOVED***readonly***REMOVED***string[]***REMOVED***}
	|***REMOVED***{
			code:***REMOVED***'BUNDLE_END';
			duration:***REMOVED***number;
			input?:***REMOVED***InputOption;
			output:***REMOVED***readonly***REMOVED***string[];
			result:***REMOVED***RollupBuild;
	***REMOVED******REMOVED***}
	|***REMOVED***{***REMOVED***code:***REMOVED***'END'***REMOVED***}
	|***REMOVED***{***REMOVED***code:***REMOVED***'ERROR';***REMOVED***error:***REMOVED***RollupError;***REMOVED***result:***REMOVED***RollupBuild***REMOVED***|***REMOVED***null***REMOVED***};

export***REMOVED***type***REMOVED***RollupWatcher***REMOVED***=***REMOVED***AwaitingEventEmitter<{
	change:***REMOVED***(id:***REMOVED***string,***REMOVED***change:***REMOVED***{***REMOVED***event:***REMOVED***ChangeEvent***REMOVED***})***REMOVED***=>***REMOVED***void;
	close:***REMOVED***()***REMOVED***=>***REMOVED***void;
	event:***REMOVED***(event:***REMOVED***RollupWatcherEvent)***REMOVED***=>***REMOVED***void;
	restart:***REMOVED***()***REMOVED***=>***REMOVED***void;
}>;

export***REMOVED***function***REMOVED***watch(config:***REMOVED***RollupWatchOptions***REMOVED***|***REMOVED***RollupWatchOptions[]):***REMOVED***RollupWatcher;

interface***REMOVED***AcornNode***REMOVED***{
	end:***REMOVED***number;
	start:***REMOVED***number;
	type:***REMOVED***string;
}

export***REMOVED***function***REMOVED***defineConfig(options:***REMOVED***RollupOptions):***REMOVED***RollupOptions;
export***REMOVED***function***REMOVED***defineConfig(options:***REMOVED***RollupOptions[]):***REMOVED***RollupOptions[];
export***REMOVED***function***REMOVED***defineConfig(optionsFunction:***REMOVED***RollupOptionsFunction):***REMOVED***RollupOptionsFunction;

export***REMOVED***type***REMOVED***RollupOptionsFunction***REMOVED***=***REMOVED***(
	commandLineArguments:***REMOVED***Record<string,***REMOVED***any>
)***REMOVED***=>***REMOVED***MaybePromise<RollupOptions***REMOVED***|***REMOVED***RollupOptions[]>;
