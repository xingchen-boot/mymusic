var***REMOVED***baseFindIndex***REMOVED***=***REMOVED***require('./_baseFindIndex'),
***REMOVED******REMOVED******REMOVED******REMOVED***baseIteratee***REMOVED***=***REMOVED***require('./_baseIteratee'),
***REMOVED******REMOVED******REMOVED******REMOVED***toInteger***REMOVED***=***REMOVED***require('./toInteger');

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMax***REMOVED***=***REMOVED***Math.max,
***REMOVED******REMOVED******REMOVED******REMOVED***nativeMin***REMOVED***=***REMOVED***Math.min;

/**
***REMOVED*******REMOVED***This***REMOVED***method***REMOVED***is***REMOVED***like***REMOVED***`_.findIndex`***REMOVED***except***REMOVED***that***REMOVED***it***REMOVED***iterates***REMOVED***over***REMOVED***elements
***REMOVED*******REMOVED***of***REMOVED***`collection`***REMOVED***from***REMOVED***right***REMOVED***to***REMOVED***left.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***2.0.0
***REMOVED*******REMOVED***@category***REMOVED***Array
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[predicate=_.identity]***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[fromIndex=array.length-1]***REMOVED***The***REMOVED***index***REMOVED***to***REMOVED***search***REMOVED***from.
***REMOVED*******REMOVED***@returns***REMOVED***{number}***REMOVED***Returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***found***REMOVED***element,***REMOVED***else***REMOVED***`-1`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***users***REMOVED***=***REMOVED***[
***REMOVED*******REMOVED******REMOVED******REMOVED***{***REMOVED***'user':***REMOVED***'barney',***REMOVED******REMOVED***'active':***REMOVED***true***REMOVED***},
***REMOVED*******REMOVED******REMOVED******REMOVED***{***REMOVED***'user':***REMOVED***'fred',***REMOVED******REMOVED******REMOVED******REMOVED***'active':***REMOVED***false***REMOVED***},
***REMOVED*******REMOVED******REMOVED******REMOVED***{***REMOVED***'user':***REMOVED***'pebbles',***REMOVED***'active':***REMOVED***false***REMOVED***}
***REMOVED*******REMOVED***];
***REMOVED****
***REMOVED*******REMOVED***_.findLastIndex(users,***REMOVED***function(o)***REMOVED***{***REMOVED***return***REMOVED***o.user***REMOVED***==***REMOVED***'pebbles';***REMOVED***});
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***2
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.matches`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.findLastIndex(users,***REMOVED***{***REMOVED***'user':***REMOVED***'barney',***REMOVED***'active':***REMOVED***true***REMOVED***});
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***0
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.matchesProperty`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.findLastIndex(users,***REMOVED***['active',***REMOVED***false]);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***2
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***The***REMOVED***`_.property`***REMOVED***iteratee***REMOVED***shorthand.
***REMOVED*******REMOVED***_.findLastIndex(users,***REMOVED***'active');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***0
***REMOVED****/
function***REMOVED***findLastIndex(array,***REMOVED***predicate,***REMOVED***fromIndex)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***array.length;
***REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***if***REMOVED***(fromIndex***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***toInteger(fromIndex);
***REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***fromIndex***REMOVED***<***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***nativeMax(length***REMOVED***+***REMOVED***index,***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***nativeMin(index,***REMOVED***length***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***baseFindIndex(array,***REMOVED***baseIteratee(predicate,***REMOVED***3),***REMOVED***index,***REMOVED***true);
}

module.exports***REMOVED***=***REMOVED***findLastIndex;
