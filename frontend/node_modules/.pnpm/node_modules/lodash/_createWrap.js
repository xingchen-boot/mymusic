var***REMOVED***baseSetData***REMOVED***=***REMOVED***require('./_baseSetData'),
***REMOVED******REMOVED******REMOVED******REMOVED***createBind***REMOVED***=***REMOVED***require('./_createBind'),
***REMOVED******REMOVED******REMOVED******REMOVED***createCurry***REMOVED***=***REMOVED***require('./_createCurry'),
***REMOVED******REMOVED******REMOVED******REMOVED***createHybrid***REMOVED***=***REMOVED***require('./_createHybrid'),
***REMOVED******REMOVED******REMOVED******REMOVED***createPartial***REMOVED***=***REMOVED***require('./_createPartial'),
***REMOVED******REMOVED******REMOVED******REMOVED***getData***REMOVED***=***REMOVED***require('./_getData'),
***REMOVED******REMOVED******REMOVED******REMOVED***mergeData***REMOVED***=***REMOVED***require('./_mergeData'),
***REMOVED******REMOVED******REMOVED******REMOVED***setData***REMOVED***=***REMOVED***require('./_setData'),
***REMOVED******REMOVED******REMOVED******REMOVED***setWrapToString***REMOVED***=***REMOVED***require('./_setWrapToString'),
***REMOVED******REMOVED******REMOVED******REMOVED***toInteger***REMOVED***=***REMOVED***require('./toInteger');

/*****REMOVED***Error***REMOVED***message***REMOVED***constants.***REMOVED****/
var***REMOVED***FUNC_ERROR_TEXT***REMOVED***=***REMOVED***'Expected***REMOVED***a***REMOVED***function';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***bitmasks***REMOVED***for***REMOVED***function***REMOVED***metadata.***REMOVED****/
var***REMOVED***WRAP_BIND_FLAG***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***WRAP_BIND_KEY_FLAG***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***WRAP_CURRY_FLAG***REMOVED***=***REMOVED***8,
***REMOVED******REMOVED******REMOVED******REMOVED***WRAP_CURRY_RIGHT_FLAG***REMOVED***=***REMOVED***16,
***REMOVED******REMOVED******REMOVED******REMOVED***WRAP_PARTIAL_FLAG***REMOVED***=***REMOVED***32,
***REMOVED******REMOVED******REMOVED******REMOVED***WRAP_PARTIAL_RIGHT_FLAG***REMOVED***=***REMOVED***64;

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMax***REMOVED***=***REMOVED***Math.max;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***either***REMOVED***curries***REMOVED***or***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***optional
***REMOVED*******REMOVED***`this`***REMOVED***binding***REMOVED***and***REMOVED***partially***REMOVED***applied***REMOVED***arguments.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function|string}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***or***REMOVED***method***REMOVED***name***REMOVED***to***REMOVED***wrap.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***bitmask***REMOVED***The***REMOVED***bitmask***REMOVED***flags.
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***1***REMOVED***-***REMOVED***`_.bind`
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***2***REMOVED***-***REMOVED***`_.bindKey`
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***4***REMOVED***-***REMOVED***`_.curry`***REMOVED***or***REMOVED***`_.curryRight`***REMOVED***of***REMOVED***a***REMOVED***bound***REMOVED***function
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***8***REMOVED***-***REMOVED***`_.curry`
***REMOVED*******REMOVED******REMOVED******REMOVED***16***REMOVED***-***REMOVED***`_.curryRight`
***REMOVED*******REMOVED******REMOVED******REMOVED***32***REMOVED***-***REMOVED***`_.partial`
***REMOVED*******REMOVED******REMOVED******REMOVED***64***REMOVED***-***REMOVED***`_.partialRight`
***REMOVED*******REMOVED******REMOVED***128***REMOVED***-***REMOVED***`_.rearg`
***REMOVED*******REMOVED******REMOVED***256***REMOVED***-***REMOVED***`_.ary`
***REMOVED*******REMOVED******REMOVED***512***REMOVED***-***REMOVED***`_.flip`
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***[thisArg]***REMOVED***The***REMOVED***`this`***REMOVED***binding***REMOVED***of***REMOVED***`func`.
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[partials]***REMOVED***The***REMOVED***arguments***REMOVED***to***REMOVED***be***REMOVED***partially***REMOVED***applied.
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[holders]***REMOVED***The***REMOVED***`partials`***REMOVED***placeholder***REMOVED***indexes.
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[argPos]***REMOVED***The***REMOVED***argument***REMOVED***positions***REMOVED***of***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[ary]***REMOVED***The***REMOVED***arity***REMOVED***cap***REMOVED***of***REMOVED***`func`.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[arity]***REMOVED***The***REMOVED***arity***REMOVED***of***REMOVED***`func`.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***wrapped***REMOVED***function.
***REMOVED****/
function***REMOVED***createWrap(func,***REMOVED***bitmask,***REMOVED***thisArg,***REMOVED***partials,***REMOVED***holders,***REMOVED***argPos,***REMOVED***ary,***REMOVED***arity)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***isBindKey***REMOVED***=***REMOVED***bitmask***REMOVED***&***REMOVED***WRAP_BIND_KEY_FLAG;
***REMOVED******REMOVED***if***REMOVED***(!isBindKey***REMOVED***&&***REMOVED***typeof***REMOVED***func***REMOVED***!=***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(FUNC_ERROR_TEXT);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***partials***REMOVED***?***REMOVED***partials.length***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(!length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bitmask***REMOVED***&=***REMOVED***~(WRAP_PARTIAL_FLAG***REMOVED***|***REMOVED***WRAP_PARTIAL_RIGHT_FLAG);
***REMOVED******REMOVED******REMOVED******REMOVED***partials***REMOVED***=***REMOVED***holders***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ary***REMOVED***=***REMOVED***ary***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***ary***REMOVED***:***REMOVED***nativeMax(toInteger(ary),***REMOVED***0);
***REMOVED******REMOVED***arity***REMOVED***=***REMOVED***arity***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***arity***REMOVED***:***REMOVED***toInteger(arity);
***REMOVED******REMOVED***length***REMOVED***-=***REMOVED***holders***REMOVED***?***REMOVED***holders.length***REMOVED***:***REMOVED***0;

***REMOVED******REMOVED***if***REMOVED***(bitmask***REMOVED***&***REMOVED***WRAP_PARTIAL_RIGHT_FLAG)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***partialsRight***REMOVED***=***REMOVED***partials,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***holdersRight***REMOVED***=***REMOVED***holders;

***REMOVED******REMOVED******REMOVED******REMOVED***partials***REMOVED***=***REMOVED***holders***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***data***REMOVED***=***REMOVED***isBindKey***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***getData(func);

***REMOVED******REMOVED***var***REMOVED***newData***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***func,***REMOVED***bitmask,***REMOVED***thisArg,***REMOVED***partials,***REMOVED***holders,***REMOVED***partialsRight,***REMOVED***holdersRight,
***REMOVED******REMOVED******REMOVED******REMOVED***argPos,***REMOVED***ary,***REMOVED***arity
***REMOVED******REMOVED***];

***REMOVED******REMOVED***if***REMOVED***(data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mergeData(newData,***REMOVED***data);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***func***REMOVED***=***REMOVED***newData[0];
***REMOVED******REMOVED***bitmask***REMOVED***=***REMOVED***newData[1];
***REMOVED******REMOVED***thisArg***REMOVED***=***REMOVED***newData[2];
***REMOVED******REMOVED***partials***REMOVED***=***REMOVED***newData[3];
***REMOVED******REMOVED***holders***REMOVED***=***REMOVED***newData[4];
***REMOVED******REMOVED***arity***REMOVED***=***REMOVED***newData[9]***REMOVED***=***REMOVED***newData[9]***REMOVED***===***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(isBindKey***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***func.length)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***nativeMax(newData[9]***REMOVED***-***REMOVED***length,***REMOVED***0);

***REMOVED******REMOVED***if***REMOVED***(!arity***REMOVED***&&***REMOVED***bitmask***REMOVED***&***REMOVED***(WRAP_CURRY_FLAG***REMOVED***|***REMOVED***WRAP_CURRY_RIGHT_FLAG))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bitmask***REMOVED***&=***REMOVED***~(WRAP_CURRY_FLAG***REMOVED***|***REMOVED***WRAP_CURRY_RIGHT_FLAG);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!bitmask***REMOVED***||***REMOVED***bitmask***REMOVED***==***REMOVED***WRAP_BIND_FLAG)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***createBind(func,***REMOVED***bitmask,***REMOVED***thisArg);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(bitmask***REMOVED***==***REMOVED***WRAP_CURRY_FLAG***REMOVED***||***REMOVED***bitmask***REMOVED***==***REMOVED***WRAP_CURRY_RIGHT_FLAG)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***createCurry(func,***REMOVED***bitmask,***REMOVED***arity);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((bitmask***REMOVED***==***REMOVED***WRAP_PARTIAL_FLAG***REMOVED***||***REMOVED***bitmask***REMOVED***==***REMOVED***(WRAP_BIND_FLAG***REMOVED***|***REMOVED***WRAP_PARTIAL_FLAG))***REMOVED***&&***REMOVED***!holders.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***createPartial(func,***REMOVED***bitmask,***REMOVED***thisArg,***REMOVED***partials);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***createHybrid.apply(undefined,***REMOVED***newData);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***setter***REMOVED***=***REMOVED***data***REMOVED***?***REMOVED***baseSetData***REMOVED***:***REMOVED***setData;
***REMOVED******REMOVED***return***REMOVED***setWrapToString(setter(result,***REMOVED***newData),***REMOVED***func,***REMOVED***bitmask);
}

module.exports***REMOVED***=***REMOVED***createWrap;
