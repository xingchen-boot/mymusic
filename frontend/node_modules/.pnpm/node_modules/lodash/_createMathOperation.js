var***REMOVED***baseToNumber***REMOVED***=***REMOVED***require('./_baseToNumber'),
***REMOVED******REMOVED******REMOVED******REMOVED***baseToString***REMOVED***=***REMOVED***require('./_baseToString');

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***performs***REMOVED***a***REMOVED***mathematical***REMOVED***operation***REMOVED***on***REMOVED***two***REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***operator***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***perform***REMOVED***the***REMOVED***operation.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[defaultValue]***REMOVED***The***REMOVED***value***REMOVED***used***REMOVED***for***REMOVED***`undefined`***REMOVED***arguments.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***mathematical***REMOVED***operation***REMOVED***function.
***REMOVED****/
function***REMOVED***createMathOperation(operator,***REMOVED***defaultValue)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(value,***REMOVED***other)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined***REMOVED***&&***REMOVED***other***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(other***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***other;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***==***REMOVED***'string'***REMOVED***||***REMOVED***typeof***REMOVED***other***REMOVED***==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***baseToString(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***baseToString(other);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***baseToNumber(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***baseToNumber(other);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***operator(value,***REMOVED***other);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***};
}

module.exports***REMOVED***=***REMOVED***createMathOperation;
