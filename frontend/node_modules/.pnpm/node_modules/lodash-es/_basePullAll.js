import***REMOVED***arrayMap***REMOVED***from***REMOVED***'./_arrayMap.js';
import***REMOVED***baseIndexOf***REMOVED***from***REMOVED***'./_baseIndexOf.js';
import***REMOVED***baseIndexOfWith***REMOVED***from***REMOVED***'./_baseIndexOfWith.js';
import***REMOVED***baseUnary***REMOVED***from***REMOVED***'./_baseUnary.js';
import***REMOVED***copyArray***REMOVED***from***REMOVED***'./_copyArray.js';

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***arrayProto***REMOVED***=***REMOVED***Array.prototype;

/*****REMOVED***Built-in***REMOVED***value***REMOVED***references.***REMOVED****/
var***REMOVED***splice***REMOVED***=***REMOVED***arrayProto.splice;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.pullAllBy`***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***iteratee
***REMOVED*******REMOVED***shorthands.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***modify.
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***values***REMOVED***The***REMOVED***values***REMOVED***to***REMOVED***remove.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[iteratee]***REMOVED***The***REMOVED***iteratee***REMOVED***invoked***REMOVED***per***REMOVED***element.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***[comparator]***REMOVED***The***REMOVED***comparator***REMOVED***invoked***REMOVED***per***REMOVED***element.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***`array`.
***REMOVED****/
function***REMOVED***basePullAll(array,***REMOVED***values,***REMOVED***iteratee,***REMOVED***comparator)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***indexOf***REMOVED***=***REMOVED***comparator***REMOVED***?***REMOVED***baseIndexOfWith***REMOVED***:***REMOVED***baseIndexOf,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***values.length,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***array;

***REMOVED******REMOVED***if***REMOVED***(array***REMOVED***===***REMOVED***values)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***values***REMOVED***=***REMOVED***copyArray(values);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(iteratee)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***arrayMap(array,***REMOVED***baseUnary(iteratee));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fromIndex***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***values[index],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed***REMOVED***=***REMOVED***iteratee***REMOVED***?***REMOVED***iteratee(value)***REMOVED***:***REMOVED***value;

***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((fromIndex***REMOVED***=***REMOVED***indexOf(seen,***REMOVED***computed,***REMOVED***fromIndex,***REMOVED***comparator))***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seen***REMOVED***!==***REMOVED***array)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***splice.call(seen,***REMOVED***fromIndex,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***splice.call(array,***REMOVED***fromIndex,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***array;
}

export***REMOVED***default***REMOVED***basePullAll;
