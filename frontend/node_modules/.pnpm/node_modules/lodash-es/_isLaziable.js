import***REMOVED***LazyWrapper***REMOVED***from***REMOVED***'./_LazyWrapper.js';
import***REMOVED***getData***REMOVED***from***REMOVED***'./_getData.js';
import***REMOVED***getFuncName***REMOVED***from***REMOVED***'./_getFuncName.js';
import***REMOVED***lodash***REMOVED***from***REMOVED***'./wrapperLodash.js';

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`func`***REMOVED***has***REMOVED***a***REMOVED***lazy***REMOVED***counterpart.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`func`***REMOVED***has***REMOVED***a***REMOVED***lazy***REMOVED***counterpart,
***REMOVED*******REMOVED******REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***isLaziable(func)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***funcName***REMOVED***=***REMOVED***getFuncName(func),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other***REMOVED***=***REMOVED***lodash[funcName];

***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***other***REMOVED***!=***REMOVED***'function'***REMOVED***||***REMOVED***!(funcName***REMOVED***in***REMOVED***LazyWrapper.prototype))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(func***REMOVED***===***REMOVED***other)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***data***REMOVED***=***REMOVED***getData(other);
***REMOVED******REMOVED***return***REMOVED***!!data***REMOVED***&&***REMOVED***func***REMOVED***===***REMOVED***data[0];
}

export***REMOVED***default***REMOVED***isLaziable;
