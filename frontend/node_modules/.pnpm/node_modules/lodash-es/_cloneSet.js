import***REMOVED***addSetEntry***REMOVED***from***REMOVED***'./_addSetEntry.js';
import***REMOVED***arrayReduce***REMOVED***from***REMOVED***'./_arrayReduce.js';
import***REMOVED***setToArray***REMOVED***from***REMOVED***'./_setToArray.js';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***bitmasks***REMOVED***for***REMOVED***cloning.***REMOVED****/
var***REMOVED***CLONE_DEEP_FLAG***REMOVED***=***REMOVED***1;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***clone***REMOVED***of***REMOVED***`set`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***set***REMOVED***The***REMOVED***set***REMOVED***to***REMOVED***clone.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***cloneFunc***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***clone***REMOVED***values.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[isDeep]***REMOVED***Specify***REMOVED***a***REMOVED***deep***REMOVED***clone.
***REMOVED*******REMOVED***@returns***REMOVED***{Object}***REMOVED***Returns***REMOVED***the***REMOVED***cloned***REMOVED***set.
***REMOVED****/
function***REMOVED***cloneSet(set,***REMOVED***isDeep,***REMOVED***cloneFunc)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***array***REMOVED***=***REMOVED***isDeep***REMOVED***?***REMOVED***cloneFunc(setToArray(set),***REMOVED***CLONE_DEEP_FLAG)***REMOVED***:***REMOVED***setToArray(set);
***REMOVED******REMOVED***return***REMOVED***arrayReduce(array,***REMOVED***addSetEntry,***REMOVED***new***REMOVED***set.constructor);
}

export***REMOVED***default***REMOVED***cloneSet;
