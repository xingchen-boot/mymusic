import***REMOVED***apply***REMOVED***from***REMOVED***'./_apply.js';
import***REMOVED***baseRest***REMOVED***from***REMOVED***'./_baseRest.js';
import***REMOVED***isError***REMOVED***from***REMOVED***'./isError.js';

/**
***REMOVED*******REMOVED***Attempts***REMOVED***to***REMOVED***invoke***REMOVED***`func`,***REMOVED***returning***REMOVED***either***REMOVED***the***REMOVED***result***REMOVED***or***REMOVED***the***REMOVED***caught***REMOVED***error
***REMOVED*******REMOVED***object.***REMOVED***Any***REMOVED***additional***REMOVED***arguments***REMOVED***are***REMOVED***provided***REMOVED***to***REMOVED***`func`***REMOVED***when***REMOVED***it's***REMOVED***invoked.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.0.0
***REMOVED*******REMOVED***@category***REMOVED***Util
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***attempt.
***REMOVED*******REMOVED***@param***REMOVED***{...*}***REMOVED***[args]***REMOVED***The***REMOVED***arguments***REMOVED***to***REMOVED***invoke***REMOVED***`func`***REMOVED***with.
***REMOVED*******REMOVED***@returns***REMOVED***{*}***REMOVED***Returns***REMOVED***the***REMOVED***`func`***REMOVED***result***REMOVED***or***REMOVED***error***REMOVED***object.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***//***REMOVED***Avoid***REMOVED***throwing***REMOVED***errors***REMOVED***for***REMOVED***invalid***REMOVED***selectors.
***REMOVED*******REMOVED***var***REMOVED***elements***REMOVED***=***REMOVED***_.attempt(function(selector)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***return***REMOVED***document.querySelectorAll(selector);
***REMOVED*******REMOVED***},***REMOVED***'>_>');
***REMOVED****
***REMOVED*******REMOVED***if***REMOVED***(_.isError(elements))***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***elements***REMOVED***=***REMOVED***[];
***REMOVED*******REMOVED***}
***REMOVED****/
var***REMOVED***attempt***REMOVED***=***REMOVED***baseRest(function(func,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(func,***REMOVED***undefined,***REMOVED***args);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isError(e)***REMOVED***?***REMOVED***e***REMOVED***:***REMOVED***new***REMOVED***Error(e);
***REMOVED******REMOVED***}
});

export***REMOVED***default***REMOVED***attempt;
