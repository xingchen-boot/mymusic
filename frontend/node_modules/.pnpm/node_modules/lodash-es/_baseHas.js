/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.has`***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***deep***REMOVED***paths.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[object]***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query.
***REMOVED*******REMOVED***@param***REMOVED***{Array|string}***REMOVED***key***REMOVED***The***REMOVED***key***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`key`***REMOVED***exists,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***baseHas(object,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***object***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***hasOwnProperty.call(object,***REMOVED***key);
}

export***REMOVED***default***REMOVED***baseHas;
