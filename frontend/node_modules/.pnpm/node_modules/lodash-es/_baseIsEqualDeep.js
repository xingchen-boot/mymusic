import***REMOVED***Stack***REMOVED***from***REMOVED***'./_Stack.js';
import***REMOVED***equalArrays***REMOVED***from***REMOVED***'./_equalArrays.js';
import***REMOVED***equalByTag***REMOVED***from***REMOVED***'./_equalByTag.js';
import***REMOVED***equalObjects***REMOVED***from***REMOVED***'./_equalObjects.js';
import***REMOVED***getTag***REMOVED***from***REMOVED***'./_getTag.js';
import***REMOVED***isArray***REMOVED***from***REMOVED***'./isArray.js';
import***REMOVED***isBuffer***REMOVED***from***REMOVED***'./isBuffer.js';
import***REMOVED***isTypedArray***REMOVED***from***REMOVED***'./isTypedArray.js';

/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***bitmasks***REMOVED***for***REMOVED***value***REMOVED***comparisons.***REMOVED****/
var***REMOVED***COMPARE_PARTIAL_FLAG***REMOVED***=***REMOVED***1;

/*****REMOVED***`Object#toString`***REMOVED***result***REMOVED***references.***REMOVED****/
var***REMOVED***argsTag***REMOVED***=***REMOVED***'[object***REMOVED***Arguments]',
***REMOVED******REMOVED******REMOVED******REMOVED***arrayTag***REMOVED***=***REMOVED***'[object***REMOVED***Array]',
***REMOVED******REMOVED******REMOVED******REMOVED***objectTag***REMOVED***=***REMOVED***'[object***REMOVED***Object]';

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/**
***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`baseIsEqual`***REMOVED***for***REMOVED***arrays***REMOVED***and***REMOVED***objects***REMOVED***which***REMOVED***performs
***REMOVED*******REMOVED***deep***REMOVED***comparisons***REMOVED***and***REMOVED***tracks***REMOVED***traversed***REMOVED***objects***REMOVED***enabling***REMOVED***objects***REMOVED***with***REMOVED***circular
***REMOVED*******REMOVED***references***REMOVED***to***REMOVED***be***REMOVED***compared.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***other***REMOVED***The***REMOVED***other***REMOVED***object***REMOVED***to***REMOVED***compare.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***bitmask***REMOVED***The***REMOVED***bitmask***REMOVED***flags.***REMOVED***See***REMOVED***`baseIsEqual`***REMOVED***for***REMOVED***more***REMOVED***details.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***customizer***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***customize***REMOVED***comparisons.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***equalFunc***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***determine***REMOVED***equivalents***REMOVED***of***REMOVED***values.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[stack]***REMOVED***Tracks***REMOVED***traversed***REMOVED***`object`***REMOVED***and***REMOVED***`other`***REMOVED***objects.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***the***REMOVED***objects***REMOVED***are***REMOVED***equivalent,***REMOVED***else***REMOVED***`false`.
***REMOVED****/
function***REMOVED***baseIsEqualDeep(object,***REMOVED***other,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***objIsArr***REMOVED***=***REMOVED***isArray(object),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othIsArr***REMOVED***=***REMOVED***isArray(other),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***objTag***REMOVED***=***REMOVED***objIsArr***REMOVED***?***REMOVED***arrayTag***REMOVED***:***REMOVED***getTag(object),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othTag***REMOVED***=***REMOVED***othIsArr***REMOVED***?***REMOVED***arrayTag***REMOVED***:***REMOVED***getTag(other);

***REMOVED******REMOVED***objTag***REMOVED***=***REMOVED***objTag***REMOVED***==***REMOVED***argsTag***REMOVED***?***REMOVED***objectTag***REMOVED***:***REMOVED***objTag;
***REMOVED******REMOVED***othTag***REMOVED***=***REMOVED***othTag***REMOVED***==***REMOVED***argsTag***REMOVED***?***REMOVED***objectTag***REMOVED***:***REMOVED***othTag;

***REMOVED******REMOVED***var***REMOVED***objIsObj***REMOVED***=***REMOVED***objTag***REMOVED***==***REMOVED***objectTag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othIsObj***REMOVED***=***REMOVED***othTag***REMOVED***==***REMOVED***objectTag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isSameTag***REMOVED***=***REMOVED***objTag***REMOVED***==***REMOVED***othTag;

***REMOVED******REMOVED***if***REMOVED***(isSameTag***REMOVED***&&***REMOVED***isBuffer(object))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isBuffer(other))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***objIsArr***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***objIsObj***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isSameTag***REMOVED***&&***REMOVED***!objIsObj)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***stack***REMOVED***||***REMOVED***(stack***REMOVED***=***REMOVED***new***REMOVED***Stack);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(objIsArr***REMOVED***||***REMOVED***isTypedArray(object))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***equalArrays(object,***REMOVED***other,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***equalByTag(object,***REMOVED***other,***REMOVED***objTag,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!(bitmask***REMOVED***&***REMOVED***COMPARE_PARTIAL_FLAG))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***objIsWrapped***REMOVED***=***REMOVED***objIsObj***REMOVED***&&***REMOVED***hasOwnProperty.call(object,***REMOVED***'__wrapped__'),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othIsWrapped***REMOVED***=***REMOVED***othIsObj***REMOVED***&&***REMOVED***hasOwnProperty.call(other,***REMOVED***'__wrapped__');

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(objIsWrapped***REMOVED***||***REMOVED***othIsWrapped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***objUnwrapped***REMOVED***=***REMOVED***objIsWrapped***REMOVED***?***REMOVED***object.value()***REMOVED***:***REMOVED***object,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***othUnwrapped***REMOVED***=***REMOVED***othIsWrapped***REMOVED***?***REMOVED***other.value()***REMOVED***:***REMOVED***other;

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack***REMOVED***||***REMOVED***(stack***REMOVED***=***REMOVED***new***REMOVED***Stack);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***equalFunc(objUnwrapped,***REMOVED***othUnwrapped,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***stack);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!isSameTag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stack***REMOVED***||***REMOVED***(stack***REMOVED***=***REMOVED***new***REMOVED***Stack);
***REMOVED******REMOVED***return***REMOVED***equalObjects(object,***REMOVED***other,***REMOVED***bitmask,***REMOVED***customizer,***REMOVED***equalFunc,***REMOVED***stack);
}

export***REMOVED***default***REMOVED***baseIsEqualDeep;
