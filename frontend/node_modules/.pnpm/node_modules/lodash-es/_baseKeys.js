import***REMOVED***isPrototype***REMOVED***from***REMOVED***'./_isPrototype.js';
import***REMOVED***nativeKeys***REMOVED***from***REMOVED***'./_nativeKeys.js';

/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

/*****REMOVED***Used***REMOVED***to***REMOVED***check***REMOVED***objects***REMOVED***for***REMOVED***own***REMOVED***properties.***REMOVED****/
var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***objectProto.hasOwnProperty;

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.keys`***REMOVED***which***REMOVED***doesn't***REMOVED***treat***REMOVED***sparse***REMOVED***arrays***REMOVED***as***REMOVED***dense.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***array***REMOVED***of***REMOVED***property***REMOVED***names.
***REMOVED****/
function***REMOVED***baseKeys(object)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isPrototype(object))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nativeKeys(object);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***Object(object))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwnProperty.call(object,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***!=***REMOVED***'constructor')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

export***REMOVED***default***REMOVED***baseKeys;
