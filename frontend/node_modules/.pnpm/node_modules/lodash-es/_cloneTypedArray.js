import***REMOVED***cloneArrayBuffer***REMOVED***from***REMOVED***'./_cloneArrayBuffer.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***clone***REMOVED***of***REMOVED***`typedArray`.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***typedArray***REMOVED***The***REMOVED***typed***REMOVED***array***REMOVED***to***REMOVED***clone.
***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[isDeep]***REMOVED***Specify***REMOVED***a***REMOVED***deep***REMOVED***clone.
***REMOVED*******REMOVED***@returns***REMOVED***{Object}***REMOVED***Returns***REMOVED***the***REMOVED***cloned***REMOVED***typed***REMOVED***array.
***REMOVED****/
function***REMOVED***cloneTypedArray(typedArray,***REMOVED***isDeep)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***buffer***REMOVED***=***REMOVED***isDeep***REMOVED***?***REMOVED***cloneArrayBuffer(typedArray.buffer)***REMOVED***:***REMOVED***typedArray.buffer;
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***typedArray.constructor(buffer,***REMOVED***typedArray.byteOffset,***REMOVED***typedArray.length);
}

export***REMOVED***default***REMOVED***cloneTypedArray;
