import***REMOVED***baseIndexOf***REMOVED***from***REMOVED***'./_baseIndexOf.js';
import***REMOVED***isArrayLike***REMOVED***from***REMOVED***'./isArrayLike.js';
import***REMOVED***isString***REMOVED***from***REMOVED***'./isString.js';
import***REMOVED***toInteger***REMOVED***from***REMOVED***'./toInteger.js';
import***REMOVED***values***REMOVED***from***REMOVED***'./values.js';

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMax***REMOVED***=***REMOVED***Math.max;

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***in***REMOVED***`collection`.***REMOVED***If***REMOVED***`collection`***REMOVED***is***REMOVED***a***REMOVED***string,***REMOVED***it's
***REMOVED*******REMOVED***checked***REMOVED***for***REMOVED***a***REMOVED***substring***REMOVED***of***REMOVED***`value`,***REMOVED***otherwise
***REMOVED*******REMOVED***[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
***REMOVED*******REMOVED***is***REMOVED***used***REMOVED***for***REMOVED***equality***REMOVED***comparisons.***REMOVED***If***REMOVED***`fromIndex`***REMOVED***is***REMOVED***negative,***REMOVED***it's***REMOVED***used***REMOVED***as
***REMOVED*******REMOVED***the***REMOVED***offset***REMOVED***from***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***`collection`.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.1.0
***REMOVED*******REMOVED***@category***REMOVED***Collection
***REMOVED*******REMOVED***@param***REMOVED***{Array|Object|string}***REMOVED***collection***REMOVED***The***REMOVED***collection***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***search***REMOVED***for.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[fromIndex=0]***REMOVED***The***REMOVED***index***REMOVED***to***REMOVED***search***REMOVED***from.
***REMOVED*******REMOVED***@param-***REMOVED***{Object}***REMOVED***[guard]***REMOVED***Enables***REMOVED***use***REMOVED***as***REMOVED***an***REMOVED***iteratee***REMOVED***for***REMOVED***methods***REMOVED***like***REMOVED***`_.reduce`.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.includes([1,***REMOVED***2,***REMOVED***3],***REMOVED***1);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.includes([1,***REMOVED***2,***REMOVED***3],***REMOVED***1,***REMOVED***2);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.includes({***REMOVED***'a':***REMOVED***1,***REMOVED***'b':***REMOVED***2***REMOVED***},***REMOVED***1);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.includes('abcd',***REMOVED***'bc');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****/
function***REMOVED***includes(collection,***REMOVED***value,***REMOVED***fromIndex,***REMOVED***guard)***REMOVED***{
***REMOVED******REMOVED***collection***REMOVED***=***REMOVED***isArrayLike(collection)***REMOVED***?***REMOVED***collection***REMOVED***:***REMOVED***values(collection);
***REMOVED******REMOVED***fromIndex***REMOVED***=***REMOVED***(fromIndex***REMOVED***&&***REMOVED***!guard)***REMOVED***?***REMOVED***toInteger(fromIndex)***REMOVED***:***REMOVED***0;

***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***collection.length;
***REMOVED******REMOVED***if***REMOVED***(fromIndex***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fromIndex***REMOVED***=***REMOVED***nativeMax(length***REMOVED***+***REMOVED***fromIndex,***REMOVED***0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isString(collection)
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(fromIndex***REMOVED***<=***REMOVED***length***REMOVED***&&***REMOVED***collection.indexOf(value,***REMOVED***fromIndex)***REMOVED***>***REMOVED***-1)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(!!length***REMOVED***&&***REMOVED***baseIndexOf(collection,***REMOVED***value,***REMOVED***fromIndex)***REMOVED***>***REMOVED***-1);
}

export***REMOVED***default***REMOVED***includes;
