/**
****REMOVED***@vue/reactivity***REMOVED***v3.5.21
****REMOVED***(c)***REMOVED***2018-present***REMOVED***Yuxi***REMOVED***(Evan)***REMOVED***You***REMOVED***and***REMOVED***Vue***REMOVED***contributors
****REMOVED***@license***REMOVED***MIT
**/
//***REMOVED***@__NO_SIDE_EFFECTS__
function***REMOVED***makeMap(str)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***str.split(","))***REMOVED***map[key]***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***return***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***in***REMOVED***map;
}

const***REMOVED***EMPTY_OBJ***REMOVED***=***REMOVED***Object.freeze({})***REMOVED***;
const***REMOVED***NOOP***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
};
const***REMOVED***extend***REMOVED***=***REMOVED***Object.assign;
const***REMOVED***remove***REMOVED***=***REMOVED***(arr,***REMOVED***el)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***arr.indexOf(el);
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***arr.splice(i,***REMOVED***1);
***REMOVED******REMOVED***}
};
const***REMOVED***hasOwnProperty$1***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
const***REMOVED***hasOwn***REMOVED***=***REMOVED***(val,***REMOVED***key)***REMOVED***=>***REMOVED***hasOwnProperty$1.call(val,***REMOVED***key);
const***REMOVED***isArray***REMOVED***=***REMOVED***Array.isArray;
const***REMOVED***isMap***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Map]";
const***REMOVED***isSet***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Set]";
const***REMOVED***isFunction***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"function";
const***REMOVED***isString***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"string";
const***REMOVED***isSymbol***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"symbol";
const***REMOVED***isObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"object";
const***REMOVED***objectToString***REMOVED***=***REMOVED***Object.prototype.toString;
const***REMOVED***toTypeString***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***objectToString.call(value);
const***REMOVED***toRawType***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***toTypeString(value).slice(8,***REMOVED***-1);
};
const***REMOVED***isPlainObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Object]";
const***REMOVED***isIntegerKey***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***isString(key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"NaN"***REMOVED***&&***REMOVED***key[0]***REMOVED***!==***REMOVED***"-"***REMOVED***&&***REMOVED***""***REMOVED***+***REMOVED***parseInt(key,***REMOVED***10)***REMOVED***===***REMOVED***key;
const***REMOVED***cacheStringFunction***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***return***REMOVED***((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hit***REMOVED***=***REMOVED***cache[str];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hit***REMOVED***||***REMOVED***(cache[str]***REMOVED***=***REMOVED***fn(str));
***REMOVED******REMOVED***});
};
const***REMOVED***capitalize***REMOVED***=***REMOVED***cacheStringFunction((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str.charAt(0).toUpperCase()***REMOVED***+***REMOVED***str.slice(1);
});
const***REMOVED***hasChanged***REMOVED***=***REMOVED***(value,***REMOVED***oldValue)***REMOVED***=>***REMOVED***!Object.is(value,***REMOVED***oldValue);
const***REMOVED***def***REMOVED***=***REMOVED***(obj,***REMOVED***key,***REMOVED***value,***REMOVED***writable***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(obj,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***writable,
***REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED***});
};

function***REMOVED***warn(msg,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED***console.warn(`[Vue***REMOVED***warn]***REMOVED***${msg}`,***REMOVED***...args);
}

let***REMOVED***activeEffectScope;
class***REMOVED***EffectScope***REMOVED***{
***REMOVED******REMOVED***constructor(detached***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.detached***REMOVED***=***REMOVED***detached;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._active***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal***REMOVED***track***REMOVED***`on`***REMOVED***calls,***REMOVED***allow***REMOVED***`on`***REMOVED***call***REMOVED***multiple***REMOVED***times
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._on***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.effects***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!detached***REMOVED***&&***REMOVED***activeEffectScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.index***REMOVED***=***REMOVED***(activeEffectScope.scopes***REMOVED***||***REMOVED***(activeEffectScope.scopes***REMOVED***=***REMOVED***[])).push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***active()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._active;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pause()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].pause();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].pause();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Resumes***REMOVED***the***REMOVED***effect***REMOVED***scope,***REMOVED***including***REMOVED***all***REMOVED***child***REMOVED***scopes***REMOVED***and***REMOVED***effects.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***resume()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._isPaused)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].resume();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].resume();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***run(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentEffectScope***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***currentEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`cannot***REMOVED***run***REMOVED***an***REMOVED***inactive***REMOVED***effect***REMOVED***scope.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***called***REMOVED***on***REMOVED***non-detached***REMOVED***scopes
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***on()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(++this._on***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prevScope***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***called***REMOVED***on***REMOVED***non-detached***REMOVED***scopes
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***off()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._on***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***--this._on***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this.prevScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prevScope***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stop(fromParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._active***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].stop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.cleanups.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups[i]();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].stop(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.detached***REMOVED***&&***REMOVED***this.parent***REMOVED***&&***REMOVED***!fromParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***this.parent.scopes.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.scopes[this.index]***REMOVED***=***REMOVED***last;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.index***REMOVED***=***REMOVED***this.index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***effectScope(detached)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***EffectScope(detached);
}
function***REMOVED***getCurrentScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***activeEffectScope;
}
function***REMOVED***onScopeDispose(fn,***REMOVED***failSilently***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(activeEffectScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope.cleanups.push(fn);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!failSilently)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`onScopeDispose()***REMOVED***is***REMOVED***called***REMOVED***when***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***active***REMOVED***effect***REMOVED***scope***REMOVED***to***REMOVED***be***REMOVED***associated***REMOVED***with.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}

let***REMOVED***activeSub;
const***REMOVED***EffectFlags***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"ACTIVE":***REMOVED***1,
***REMOVED******REMOVED***"1":***REMOVED***"ACTIVE",
***REMOVED******REMOVED***"RUNNING":***REMOVED***2,
***REMOVED******REMOVED***"2":***REMOVED***"RUNNING",
***REMOVED******REMOVED***"TRACKING":***REMOVED***4,
***REMOVED******REMOVED***"4":***REMOVED***"TRACKING",
***REMOVED******REMOVED***"NOTIFIED":***REMOVED***8,
***REMOVED******REMOVED***"8":***REMOVED***"NOTIFIED",
***REMOVED******REMOVED***"DIRTY":***REMOVED***16,
***REMOVED******REMOVED***"16":***REMOVED***"DIRTY",
***REMOVED******REMOVED***"ALLOW_RECURSE":***REMOVED***32,
***REMOVED******REMOVED***"32":***REMOVED***"ALLOW_RECURSE",
***REMOVED******REMOVED***"PAUSED":***REMOVED***64,
***REMOVED******REMOVED***"64":***REMOVED***"PAUSED",
***REMOVED******REMOVED***"EVALUATED":***REMOVED***128,
***REMOVED******REMOVED***"128":***REMOVED***"EVALUATED"
};
const***REMOVED***pausedQueueEffects***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();
class***REMOVED***ReactiveEffect***REMOVED***{
***REMOVED******REMOVED***constructor(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.fn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***1***REMOVED***|***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.cleanup***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scheduler***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeEffectScope***REMOVED***&&***REMOVED***activeEffectScope.active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope.effects.push(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pause()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***64;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resume()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-65;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pausedQueueEffects.has(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pausedQueueEffects.delete(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.trigger();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***notify()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***2***REMOVED***&&***REMOVED***!(this.flags***REMOVED***&***REMOVED***32))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***batch(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***run()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fn();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***cleanupEffect(this);
***REMOVED******REMOVED******REMOVED******REMOVED***prepareDeps(this);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevEffect***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevShouldTrack***REMOVED***=***REMOVED***shouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fn();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Active***REMOVED***effect***REMOVED***was***REMOVED***not***REMOVED***restored***REMOVED***correctly***REMOVED***-***REMOVED***this***REMOVED***is***REMOVED***likely***REMOVED***a***REMOVED***Vue***REMOVED***internal***REMOVED***bug."
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupDeps(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevEffect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***prevShouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-3;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***this.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupEffect(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.onStop***REMOVED***&&***REMOVED***this.onStop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***trigger()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pausedQueueEffects.add(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.scheduler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scheduler();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.runIfDirty();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***runIfDirty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDirty(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***dirty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isDirty(this);
***REMOVED******REMOVED***}
}
let***REMOVED***batchDepth***REMOVED***=***REMOVED***0;
let***REMOVED***batchedSub;
let***REMOVED***batchedComputed;
function***REMOVED***batch(sub,***REMOVED***isComputed***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***sub.flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED***if***REMOVED***(isComputed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sub.next***REMOVED***=***REMOVED***batchedComputed;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedComputed***REMOVED***=***REMOVED***sub;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sub.next***REMOVED***=***REMOVED***batchedSub;
***REMOVED******REMOVED***batchedSub***REMOVED***=***REMOVED***sub;
}
function***REMOVED***startBatch()***REMOVED***{
***REMOVED******REMOVED***batchDepth++;
}
function***REMOVED***endBatch()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(--batchDepth***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(batchedComputed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e***REMOVED***=***REMOVED***batchedComputed;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedComputed***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***e.next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.flags***REMOVED***&=***REMOVED***-9;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***error;
***REMOVED******REMOVED***while***REMOVED***(batchedSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e***REMOVED***=***REMOVED***batchedSub;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***e.next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.flags***REMOVED***&=***REMOVED***-9;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(e.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.trigger();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!error)***REMOVED***error***REMOVED***=***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(error)***REMOVED***throw***REMOVED***error;
}
function***REMOVED***prepareDeps(sub)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***sub.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevActiveLink***REMOVED***=***REMOVED***link.dep.activeLink;
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.activeLink***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***}
}
function***REMOVED***cleanupDeps(sub)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***head;
***REMOVED******REMOVED***let***REMOVED***tail***REMOVED***=***REMOVED***sub.depsTail;
***REMOVED******REMOVED***let***REMOVED***link***REMOVED***=***REMOVED***tail;
***REMOVED******REMOVED***while***REMOVED***(link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***link.prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.version***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link***REMOVED***===***REMOVED***tail)***REMOVED***tail***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeDep(link);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***head***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.activeLink***REMOVED***=***REMOVED***link.prevActiveLink;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevActiveLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***link***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sub.deps***REMOVED***=***REMOVED***head;
***REMOVED******REMOVED***sub.depsTail***REMOVED***=***REMOVED***tail;
}
function***REMOVED***isDirty(sub)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***sub.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.dep.version***REMOVED***!==***REMOVED***link.version***REMOVED***||***REMOVED***link.dep.computed***REMOVED***&&***REMOVED***(refreshComputed(link.dep.computed)***REMOVED***||***REMOVED***link.dep.version***REMOVED***!==***REMOVED***link.version))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(sub._dirty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***refreshComputed(computed)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(computed.flags***REMOVED***&***REMOVED***4***REMOVED***&&***REMOVED***!(computed.flags***REMOVED***&***REMOVED***16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.flags***REMOVED***&=***REMOVED***-17;
***REMOVED******REMOVED***if***REMOVED***(computed.globalVersion***REMOVED***===***REMOVED***globalVersion)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.globalVersion***REMOVED***=***REMOVED***globalVersion;
***REMOVED******REMOVED***if***REMOVED***(!computed.isSSR***REMOVED***&&***REMOVED***computed.flags***REMOVED***&***REMOVED***128***REMOVED***&&***REMOVED***(!computed.deps***REMOVED***&&***REMOVED***!computed._dirty***REMOVED***||***REMOVED***!isDirty(computed)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED***const***REMOVED***dep***REMOVED***=***REMOVED***computed.dep;
***REMOVED******REMOVED***const***REMOVED***prevSub***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED***const***REMOVED***prevShouldTrack***REMOVED***=***REMOVED***shouldTrack;
***REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***computed;
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prepareDeps(computed);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***computed.fn(computed._value);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep.version***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***hasChanged(value,***REMOVED***computed._value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***128;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed._value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***prevShouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***cleanupDeps(computed);
***REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***&=***REMOVED***-3;
***REMOVED******REMOVED***}
}
function***REMOVED***removeSub(link,***REMOVED***soft***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***dep,***REMOVED***prevSub,***REMOVED***nextSub***REMOVED***}***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***if***REMOVED***(prevSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prevSub.nextSub***REMOVED***=***REMOVED***nextSub;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(nextSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nextSub.prevSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***link.nextSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(dep.subsHead***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.subsHead***REMOVED***=***REMOVED***nextSub;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(dep.subs***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.subs***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevSub***REMOVED***&&***REMOVED***dep.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.computed.flags***REMOVED***&=***REMOVED***-5;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***l***REMOVED***=***REMOVED***dep.computed.deps;***REMOVED***l;***REMOVED***l***REMOVED***=***REMOVED***l.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(l,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!soft***REMOVED***&&***REMOVED***!--dep.sc***REMOVED***&&***REMOVED***dep.map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.map.delete(dep.key);
***REMOVED******REMOVED***}
}
function***REMOVED***removeDep(link)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***prevDep,***REMOVED***nextDep***REMOVED***}***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***if***REMOVED***(prevDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prevDep.nextDep***REMOVED***=***REMOVED***nextDep;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nextDep.prevDep***REMOVED***=***REMOVED***prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED***link.nextDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
}
function***REMOVED***effect(fn,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(fn.effect***REMOVED***instanceof***REMOVED***ReactiveEffect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fn***REMOVED***=***REMOVED***fn.effect.fn;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***e***REMOVED***=***REMOVED***new***REMOVED***ReactiveEffect(fn);
***REMOVED******REMOVED***if***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***extend(e,***REMOVED***options);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***e.run();
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***e.stop();
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***runner***REMOVED***=***REMOVED***e.run.bind(e);
***REMOVED******REMOVED***runner.effect***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED***return***REMOVED***runner;
}
function***REMOVED***stop(runner)***REMOVED***{
***REMOVED******REMOVED***runner.effect.stop();
}
let***REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
const***REMOVED***trackStack***REMOVED***=***REMOVED***[];
function***REMOVED***pauseTracking()***REMOVED***{
***REMOVED******REMOVED***trackStack.push(shouldTrack);
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***false;
}
function***REMOVED***enableTracking()***REMOVED***{
***REMOVED******REMOVED***trackStack.push(shouldTrack);
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
}
function***REMOVED***resetTracking()***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***trackStack.pop();
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***last***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***true***REMOVED***:***REMOVED***last;
}
function***REMOVED***onEffectCleanup(fn,***REMOVED***failSilently***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(activeSub***REMOVED***instanceof***REMOVED***ReactiveEffect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub.cleanup***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!failSilently)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`onEffectCleanup()***REMOVED***was***REMOVED***called***REMOVED***when***REMOVED***there***REMOVED***was***REMOVED***no***REMOVED***active***REMOVED***effect***REMOVED***to***REMOVED***associate***REMOVED***with.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***cleanupEffect(e)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***cleanup***REMOVED***}***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED***e.cleanup***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevSub***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

let***REMOVED***globalVersion***REMOVED***=***REMOVED***0;
class***REMOVED***Link***REMOVED***{
***REMOVED******REMOVED***constructor(sub,***REMOVED***dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.sub***REMOVED***=***REMOVED***sub;
***REMOVED******REMOVED******REMOVED******REMOVED***this.dep***REMOVED***=***REMOVED***dep;
***REMOVED******REMOVED******REMOVED******REMOVED***this.version***REMOVED***=***REMOVED***dep.version;
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextDep***REMOVED***=***REMOVED***this.prevDep***REMOVED***=***REMOVED***this.nextSub***REMOVED***=***REMOVED***this.prevSub***REMOVED***=***REMOVED***this.prevActiveLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
}
class***REMOVED***Dep***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***isolatedDeclarations***REMOVED***"__v_skip"
***REMOVED******REMOVED***constructor(computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.computed***REMOVED***=***REMOVED***computed;
***REMOVED******REMOVED******REMOVED******REMOVED***this.version***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Link***REMOVED***between***REMOVED***this***REMOVED***dep***REMOVED***and***REMOVED***the***REMOVED***current***REMOVED***active***REMOVED***effect
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.activeLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Doubly***REMOVED***linked***REMOVED***list***REMOVED***representing***REMOVED***the***REMOVED***subscribing***REMOVED***effects***REMOVED***(tail)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.subs***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***For***REMOVED***object***REMOVED***property***REMOVED***deps***REMOVED***cleanup
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.map***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.key***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Subscriber***REMOVED***counter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.sc***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.__v_skip***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.subsHead***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***track(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!activeSub***REMOVED***||***REMOVED***!shouldTrack***REMOVED***||***REMOVED***activeSub***REMOVED***===***REMOVED***this.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***link***REMOVED***=***REMOVED***this.activeLink;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***link.sub***REMOVED***!==***REMOVED***activeSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link***REMOVED***=***REMOVED***this.activeLink***REMOVED***=***REMOVED***new***REMOVED***Link(activeSub,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!activeSub.deps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.deps***REMOVED***=***REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***activeSub.depsTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail.nextDep***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(link.version***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***this.version;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***link.nextDep;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.prevDep***REMOVED***=***REMOVED***link.prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.prevDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep.nextDep***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***activeSub.depsTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.nextDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail.nextDep***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub.deps***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.deps***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub.onTrack)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.onTrack(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect:***REMOVED***activeSub
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debugInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***link;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***trigger(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***globalVersion++;
***REMOVED******REMOVED******REMOVED******REMOVED***this.notify(debugInfo);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***notify(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***head***REMOVED***=***REMOVED***this.subsHead;***REMOVED***head;***REMOVED***head***REMOVED***=***REMOVED***head.nextSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(head.sub.onTrigger***REMOVED***&&***REMOVED***!(head.sub.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***head.sub.onTrigger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect:***REMOVED***head.sub
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debugInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***this.subs;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.prevSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.sub.notify())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.sub.dep.notify();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endBatch();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***addSub(link)***REMOVED***{
***REMOVED******REMOVED***link.dep.sc++;
***REMOVED******REMOVED***if***REMOVED***(link.sub.flags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***link.dep.computed;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(computed***REMOVED***&&***REMOVED***!link.dep.subs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***4***REMOVED***|***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***l***REMOVED***=***REMOVED***computed.deps;***REMOVED***l;***REMOVED***l***REMOVED***=***REMOVED***l.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSub(l);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentTail***REMOVED***=***REMOVED***link.dep.subs;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentTail***REMOVED***!==***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevSub***REMOVED***=***REMOVED***currentTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentTail)***REMOVED***currentTail.nextSub***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.dep.subsHead***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.dep.subsHead***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.subs***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***}
}
const***REMOVED***targetMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Object***REMOVED***iterate"***REMOVED***
);
const***REMOVED***MAP_KEY_ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Map***REMOVED***keys***REMOVED***iterate"***REMOVED***
);
const***REMOVED***ARRAY_ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Array***REMOVED***iterate"***REMOVED***
);
function***REMOVED***track(target,***REMOVED***type,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(shouldTrack***REMOVED***&&***REMOVED***activeSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***depsMap***REMOVED***=***REMOVED***targetMap.get(target);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!depsMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targetMap.set(target,***REMOVED***depsMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dep***REMOVED***=***REMOVED***depsMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depsMap.set(key,***REMOVED***dep***REMOVED***=***REMOVED***new***REMOVED***Dep());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.map***REMOVED***=***REMOVED***depsMap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.track({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***trigger(target,***REMOVED***type,***REMOVED***key,***REMOVED***newValue,***REMOVED***oldValue,***REMOVED***oldTarget)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***depsMap***REMOVED***=***REMOVED***targetMap.get(target);
***REMOVED******REMOVED***if***REMOVED***(!depsMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***globalVersion++;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***run***REMOVED***=***REMOVED***(dep)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.trigger({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldTarget
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"clear")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***depsMap.forEach(run);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsArray***REMOVED***=***REMOVED***isArray(target);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isArrayIndex***REMOVED***=***REMOVED***targetIsArray***REMOVED***&&***REMOVED***isIntegerKey(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetIsArray***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"length")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newLength***REMOVED***=***REMOVED***Number(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depsMap.forEach((dep,***REMOVED***key2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key2***REMOVED***===***REMOVED***"length"***REMOVED***||***REMOVED***key2***REMOVED***===***REMOVED***ARRAY_ITERATE_KEY***REMOVED***||***REMOVED***!isSymbol(key2)***REMOVED***&&***REMOVED***key2***REMOVED***>=***REMOVED***newLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(dep);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***depsMap.has(void***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArrayIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ARRAY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"add":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!targetIsArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(MAP_KEY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArrayIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get("length"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"delete":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!targetIsArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(MAP_KEY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"set":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***endBatch();
}
function***REMOVED***getDepFromReactive(object,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***depMap***REMOVED***=***REMOVED***targetMap.get(object);
***REMOVED******REMOVED***return***REMOVED***depMap***REMOVED***&&***REMOVED***depMap.get(key);
}

function***REMOVED***reactiveReadArray(array)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***toRaw(array);
***REMOVED******REMOVED***if***REMOVED***(raw***REMOVED***===***REMOVED***array)***REMOVED***return***REMOVED***raw;
***REMOVED******REMOVED***track(raw,***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***return***REMOVED***isShallow(array)***REMOVED***?***REMOVED***raw***REMOVED***:***REMOVED***raw.map(toReactive);
}
function***REMOVED***shallowReadArray(arr)***REMOVED***{
***REMOVED******REMOVED***track(arr***REMOVED***=***REMOVED***toRaw(arr),***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***return***REMOVED***arr;
}
const***REMOVED***arrayInstrumentations***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED***[Symbol.iterator]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***Symbol.iterator,***REMOVED***toReactive);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***concat(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).concat(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...args.map((x)***REMOVED***=>***REMOVED***isArray(x)***REMOVED***?***REMOVED***reactiveReadArray(x)***REMOVED***:***REMOVED***x)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***entries()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***"entries",***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value[1]***REMOVED***=***REMOVED***toReactive(value[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},
***REMOVED******REMOVED***every(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"every",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***filter(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"filter",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***(v)***REMOVED***=>***REMOVED***v.map(toReactive),***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***find(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"find",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***toReactive,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findIndex(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findIndex",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findLast(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findLast",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***toReactive,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findLastIndex(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findLastIndex",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***flat,***REMOVED***flatMap***REMOVED***could***REMOVED***benefit***REMOVED***from***REMOVED***ARRAY_ITERATE***REMOVED***but***REMOVED***are***REMOVED***not***REMOVED***straight-forward***REMOVED***to***REMOVED***implement
***REMOVED******REMOVED***forEach(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"forEach",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***includes(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"includes",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***indexOf(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"indexOf",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***join(separator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).join(separator);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***keys()***REMOVED***iterator***REMOVED***only***REMOVED***reads***REMOVED***`length`,***REMOVED***no***REMOVED***optimization***REMOVED***required
***REMOVED******REMOVED***lastIndexOf(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"lastIndexOf",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***map(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"map",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***pop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"pop");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***push(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"push",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***reduce(fn,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reduce(this,***REMOVED***"reduce",***REMOVED***fn,***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***reduceRight(fn,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reduce(this,***REMOVED***"reduceRight",***REMOVED***fn,***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***shift()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"shift");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***slice***REMOVED***could***REMOVED***use***REMOVED***ARRAY_ITERATE***REMOVED***but***REMOVED***also***REMOVED***seems***REMOVED***to***REMOVED***beg***REMOVED***for***REMOVED***range***REMOVED***tracking
***REMOVED******REMOVED***some(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"some",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***splice(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"splice",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toReversed()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toReversed();
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toSorted(comparer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toSorted(comparer);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toSpliced(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toSpliced(...args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***unshift(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"unshift",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***values()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***"values",***REMOVED***toReactive);
***REMOVED******REMOVED***}
};
function***REMOVED***iterator(self,***REMOVED***method,***REMOVED***wrapValue)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***const***REMOVED***iter***REMOVED***=***REMOVED***arr[method]();
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self***REMOVED***&&***REMOVED***!isShallow(self))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***iter._next***REMOVED***=***REMOVED***iter.next;
***REMOVED******REMOVED******REMOVED******REMOVED***iter.next***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***iter._next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.value***REMOVED***=***REMOVED***wrapValue(result.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***iter;
}
const***REMOVED***arrayProto***REMOVED***=***REMOVED***Array.prototype;
function***REMOVED***apply(self,***REMOVED***method,***REMOVED***fn,***REMOVED***thisArg,***REMOVED***wrappedRetFn,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***const***REMOVED***needsWrap***REMOVED***=***REMOVED***arr***REMOVED***!==***REMOVED***self***REMOVED***&&***REMOVED***!isShallow(self);
***REMOVED******REMOVED***const***REMOVED***methodFn***REMOVED***=***REMOVED***arr[method];
***REMOVED******REMOVED***if***REMOVED***(methodFn***REMOVED***!==***REMOVED***arrayProto[method])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result2***REMOVED***=***REMOVED***methodFn.apply(self,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***needsWrap***REMOVED***?***REMOVED***toReactive(result2)***REMOVED***:***REMOVED***result2;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***wrappedFn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsWrap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***toReactive(item),***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fn.length***REMOVED***>***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***item,***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***methodFn.call(arr,***REMOVED***wrappedFn,***REMOVED***thisArg);
***REMOVED******REMOVED***return***REMOVED***needsWrap***REMOVED***&&***REMOVED***wrappedRetFn***REMOVED***?***REMOVED***wrappedRetFn(result)***REMOVED***:***REMOVED***result;
}
function***REMOVED***reduce(self,***REMOVED***method,***REMOVED***fn,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***let***REMOVED***wrappedFn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isShallow(self))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(acc,***REMOVED***item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***acc,***REMOVED***toReactive(item),***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fn.length***REMOVED***>***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(acc,***REMOVED***item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***acc,***REMOVED***item,***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***arr[method](wrappedFn,***REMOVED***...args);
}
function***REMOVED***searchProxy(self,***REMOVED***method,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***toRaw(self);
***REMOVED******REMOVED***track(arr,***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***arr[method](...args);
***REMOVED******REMOVED***if***REMOVED***((res***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***res***REMOVED***===***REMOVED***false)***REMOVED***&&***REMOVED***isProxy(args[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args[0]***REMOVED***=***REMOVED***toRaw(args[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arr[method](...args);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***noTracking(self,***REMOVED***method,***REMOVED***args***REMOVED***=***REMOVED***[])***REMOVED***{
***REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***toRaw(self)[method].apply(self,***REMOVED***args);
***REMOVED******REMOVED***endBatch();
***REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED***return***REMOVED***res;
}

const***REMOVED***isNonTrackableKeys***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(`__proto__,__v_isRef,__isVue`);
const***REMOVED***builtInSymbols***REMOVED***=***REMOVED***new***REMOVED***Set(
***REMOVED******REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.getOwnPropertyNames(Symbol).filter((key)***REMOVED***=>***REMOVED***key***REMOVED***!==***REMOVED***"arguments"***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"caller").map((key)***REMOVED***=>***REMOVED***Symbol[key]).filter(isSymbol)
);
function***REMOVED***hasOwnProperty(key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isSymbol(key))***REMOVED***key***REMOVED***=***REMOVED***String(key);
***REMOVED******REMOVED***const***REMOVED***obj***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED***track(obj,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED***return***REMOVED***obj.hasOwnProperty(key);
}
class***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(_isReadonly***REMOVED***=***REMOVED***false,***REMOVED***_isShallow***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._isReadonly***REMOVED***=***REMOVED***_isReadonly;
***REMOVED******REMOVED******REMOVED******REMOVED***this._isShallow***REMOVED***=***REMOVED***_isShallow;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_skip")***REMOVED***return***REMOVED***target["__v_skip"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isReadonly2***REMOVED***=***REMOVED***this._isReadonly,***REMOVED***isShallow2***REMOVED***=***REMOVED***this._isShallow;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReactive")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReadonly")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isShallow")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isShallow2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_raw")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(receiver***REMOVED***===***REMOVED***(isReadonly2***REMOVED***?***REMOVED***isShallow2***REMOVED***?***REMOVED***shallowReadonlyMap***REMOVED***:***REMOVED***readonlyMap***REMOVED***:***REMOVED***isShallow2***REMOVED***?***REMOVED***shallowReactiveMap***REMOVED***:***REMOVED***reactiveMap).get(target)***REMOVED***||***REMOVED***//***REMOVED***receiver***REMOVED***is***REMOVED***not***REMOVED***the***REMOVED***reactive***REMOVED***proxy,***REMOVED***but***REMOVED***has***REMOVED***the***REMOVED***same***REMOVED***prototype
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***means***REMOVED***the***REMOVED***receiver***REMOVED***is***REMOVED***a***REMOVED***user***REMOVED***proxy***REMOVED***of***REMOVED***the***REMOVED***reactive***REMOVED***proxy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.getPrototypeOf(target)***REMOVED***===***REMOVED***Object.getPrototypeOf(receiver))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsArray***REMOVED***=***REMOVED***isArray(target);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReadonly2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetIsArray***REMOVED***&&***REMOVED***(fn***REMOVED***=***REMOVED***arrayInstrumentations[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"hasOwnProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasOwnProperty;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***Reflect.get(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***proxy***REMOVED***wrapping***REMOVED***a***REMOVED***ref,***REMOVED***return***REMOVED***methods***REMOVED***using***REMOVED***the***REMOVED***raw***REMOVED***ref
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***receiver***REMOVED***so***REMOVED***that***REMOVED***we***REMOVED***don't***REMOVED***have***REMOVED***to***REMOVED***call***REMOVED***`toRaw`***REMOVED***on***REMOVED***the***REMOVED***ref***REMOVED***in***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***its***REMOVED***class***REMOVED***methods
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isRef(target)***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSymbol(key)***REMOVED***?***REMOVED***builtInSymbols.has(key)***REMOVED***:***REMOVED***isNonTrackableKeys(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReadonly2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(target,***REMOVED***"get",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isShallow2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(res))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***targetIsArray***REMOVED***&&***REMOVED***isIntegerKey(key)***REMOVED***?***REMOVED***res***REMOVED***:***REMOVED***res.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(res))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2***REMOVED***?***REMOVED***readonly(res)***REMOVED***:***REMOVED***reactive(res);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
}
class***REMOVED***MutableReactiveHandler***REMOVED***extends***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(isShallow2***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(false,***REMOVED***isShallow2);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._isShallow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isOldValueReadonly***REMOVED***=***REMOVED***isReadonly(oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***toRaw(oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isArray(target)***REMOVED***&&***REMOVED***isRef(oldValue)***REMOVED***&&***REMOVED***!isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOldValueReadonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Set***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target[key]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***isArray(target)***REMOVED***&&***REMOVED***isIntegerKey(key)***REMOVED***?***REMOVED***Number(key)***REMOVED***<***REMOVED***target.length***REMOVED***:***REMOVED***hasOwn(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.set(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isRef(target)***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(target***REMOVED***===***REMOVED***toRaw(receiver))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChanged(value,***REMOVED***oldValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"set",***REMOVED***key,***REMOVED***value,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***deleteProperty(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***hasOwn(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.deleteProperty(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***&&***REMOVED***hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"delete",***REMOVED***key,***REMOVED***void***REMOVED***0,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***has(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.has(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isSymbol(key)***REMOVED***||***REMOVED***!builtInSymbols.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(target,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ownKeys(target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***track(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"iterate",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isArray(target)***REMOVED***?***REMOVED***"length"***REMOVED***:***REMOVED***ITERATE_KEY
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.ownKeys(target);
***REMOVED******REMOVED***}
}
class***REMOVED***ReadonlyReactiveHandler***REMOVED***extends***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(isShallow2***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(true,***REMOVED***isShallow2);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Set***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***deleteProperty(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Delete***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
}
const***REMOVED***mutableHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***MutableReactiveHandler();
const***REMOVED***readonlyHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***ReadonlyReactiveHandler();
const***REMOVED***shallowReactiveHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***MutableReactiveHandler(true);
const***REMOVED***shallowReadonlyHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***ReadonlyReactiveHandler(true);

const***REMOVED***toShallow***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***value;
const***REMOVED***getProto***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***Reflect.getPrototypeOf(v);
function***REMOVED***createIterableMethod(method,***REMOVED***isReadonly2,***REMOVED***isShallow2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsMap***REMOVED***=***REMOVED***isMap(rawTarget);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPair***REMOVED***=***REMOVED***method***REMOVED***===***REMOVED***"entries"***REMOVED***||***REMOVED***method***REMOVED***===***REMOVED***Symbol.iterator***REMOVED***&&***REMOVED***targetIsMap;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isKeyOnly***REMOVED***=***REMOVED***method***REMOVED***===***REMOVED***"keys"***REMOVED***&&***REMOVED***targetIsMap;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerIterator***REMOVED***=***REMOVED***target[method](...args);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***isShallow2***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***isReadonly2***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED***!isReadonly2***REMOVED***&&***REMOVED***track(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawTarget,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"iterate",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isKeyOnly***REMOVED***?***REMOVED***MAP_KEY_ITERATE_KEY***REMOVED***:***REMOVED***ITERATE_KEY
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***iterator***REMOVED***protocol
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***value,***REMOVED***done***REMOVED***}***REMOVED***=***REMOVED***innerIterator.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***done***REMOVED***?***REMOVED***{***REMOVED***value,***REMOVED***done***REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***isPair***REMOVED***?***REMOVED***[wrap(value[0]),***REMOVED***wrap(value[1])]***REMOVED***:***REMOVED***wrap(value),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***done
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***iterable***REMOVED***protocol
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.iterator]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};
}
function***REMOVED***createReadonlyMethod(type)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***args[0]***REMOVED***?***REMOVED***`on***REMOVED***key***REMOVED***"${args[0]}"***REMOVED***`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${capitalize(type)}***REMOVED***operation***REMOVED***${key}failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toRaw(this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"delete"***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***type***REMOVED***===***REMOVED***"clear"***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***this;
***REMOVED******REMOVED***};
}
function***REMOVED***createInstrumentations(readonly,***REMOVED***shallow)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instrumentations***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***get(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasChanged(key,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"get",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"get",***REMOVED***rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has***REMOVED***}***REMOVED***=***REMOVED***getProto(rawTarget);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***shallow***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***readonly***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(has.call(rawTarget,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrap(target.get(key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(has.call(rawTarget,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrap(target.get(rawKey));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(target***REMOVED***!==***REMOVED***rawTarget)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***size()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!readonly***REMOVED***&&***REMOVED***track(toRaw(target),***REMOVED***"iterate",***REMOVED***ITERATE_KEY);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.size;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***has(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasChanged(key,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"has",***REMOVED***rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key***REMOVED***===***REMOVED***rawKey***REMOVED***?***REMOVED***target.has(key)***REMOVED***:***REMOVED***target.has(key)***REMOVED***||***REMOVED***target.has(rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callback,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***observed***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***observed["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***shallow***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***readonly***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!readonly***REMOVED***&&***REMOVED***track(rawTarget,***REMOVED***"iterate",***REMOVED***ITERATE_KEY);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.forEach((value,***REMOVED***key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(thisArg,***REMOVED***wrap(value),***REMOVED***wrap(key),***REMOVED***observed);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED***instrumentations,
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***add:***REMOVED***createReadonlyMethod("add"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***createReadonlyMethod("set"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete:***REMOVED***createReadonlyMethod("delete"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clear:***REMOVED***createReadonlyMethod("clear")
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***add(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shallow***REMOVED***&&***REMOVED***!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proto***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***proto.has.call(target,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.add(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***value,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shallow***REMOVED***&&***REMOVED***!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has,***REMOVED***get***REMOVED***}***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***get.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.set(key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChanged(value,***REMOVED***oldValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"set",***REMOVED***key,***REMOVED***value,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has,***REMOVED***get***REMOVED***}***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***get***REMOVED***?***REMOVED***get.call(target,***REMOVED***key)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***target.delete(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"delete",***REMOVED***key,***REMOVED***void***REMOVED***0,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clear()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadItems***REMOVED***=***REMOVED***target.size***REMOVED***!==***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldTarget***REMOVED***=***REMOVED***isMap(target)***REMOVED***?***REMOVED***new***REMOVED***Map(target)***REMOVED***:***REMOVED***new***REMOVED***Set(target)***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***target.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hadItems)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"clear",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldTarget
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***);
***REMOVED******REMOVED***const***REMOVED***iteratorMethods***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***"keys",
***REMOVED******REMOVED******REMOVED******REMOVED***"values",
***REMOVED******REMOVED******REMOVED******REMOVED***"entries",
***REMOVED******REMOVED******REMOVED******REMOVED***Symbol.iterator
***REMOVED******REMOVED***];
***REMOVED******REMOVED***iteratorMethods.forEach((method)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instrumentations[method]***REMOVED***=***REMOVED***createIterableMethod(method,***REMOVED***readonly,***REMOVED***shallow);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***instrumentations;
}
function***REMOVED***createInstrumentationGetter(isReadonly2,***REMOVED***shallow)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instrumentations***REMOVED***=***REMOVED***createInstrumentations(isReadonly2,***REMOVED***shallow);
***REMOVED******REMOVED***return***REMOVED***(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReactive")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReadonly")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_raw")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.get(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasOwn(instrumentations,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***in***REMOVED***target***REMOVED***?***REMOVED***instrumentations***REMOVED***:***REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
}
const***REMOVED***mutableCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(false,***REMOVED***false)
};
const***REMOVED***shallowCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(false,***REMOVED***true)
};
const***REMOVED***readonlyCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(true,***REMOVED***false)
};
const***REMOVED***shallowReadonlyCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(true,***REMOVED***true)
};
function***REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED***if***REMOVED***(rawKey***REMOVED***!==***REMOVED***key***REMOVED***&&***REMOVED***has.call(target,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***toRawType(target);
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Reactive***REMOVED***${type}***REMOVED***contains***REMOVED***both***REMOVED***the***REMOVED***raw***REMOVED***and***REMOVED***reactive***REMOVED***versions***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***object${type***REMOVED***===***REMOVED***`Map`***REMOVED***?***REMOVED***`***REMOVED***as***REMOVED***keys`***REMOVED***:***REMOVED***``},***REMOVED***which***REMOVED***can***REMOVED***lead***REMOVED***to***REMOVED***inconsistencies.***REMOVED***Avoid***REMOVED***differentiating***REMOVED***between***REMOVED***the***REMOVED***raw***REMOVED***and***REMOVED***reactive***REMOVED***versions***REMOVED***of***REMOVED***an***REMOVED***object***REMOVED***and***REMOVED***only***REMOVED***use***REMOVED***the***REMOVED***reactive***REMOVED***version***REMOVED***if***REMOVED***possible.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}

const***REMOVED***reactiveMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***shallowReactiveMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***readonlyMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***shallowReadonlyMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
function***REMOVED***targetTypeMap(rawType)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(rawType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Object":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Array":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1***REMOVED***/****REMOVED***COMMON***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Map":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Set":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakMap":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakSet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***2***REMOVED***/****REMOVED***COLLECTION***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/;
***REMOVED******REMOVED***}
}
function***REMOVED***getTargetType(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value["__v_skip"]***REMOVED***||***REMOVED***!Object.isExtensible(value)***REMOVED***?***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/***REMOVED***:***REMOVED***targetTypeMap(toRawType(value));
}
function***REMOVED***reactive(target)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isReadonly(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***mutableHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***mutableCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***reactiveMap
***REMOVED******REMOVED***);
}
function***REMOVED***shallowReactive(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReactiveHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReactiveMap
***REMOVED******REMOVED***);
}
function***REMOVED***readonly(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyMap
***REMOVED******REMOVED***);
}
function***REMOVED***shallowReadonly(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyMap
***REMOVED******REMOVED***);
}
function***REMOVED***createReactiveObject(target,***REMOVED***isReadonly2,***REMOVED***baseHandlers,***REMOVED***collectionHandlers,***REMOVED***proxyMap)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isObject(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`value***REMOVED***cannot***REMOVED***be***REMOVED***made***REMOVED***${isReadonly2***REMOVED***?***REMOVED***"readonly"***REMOVED***:***REMOVED***"reactive"}:***REMOVED***${String(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(target["__v_raw"]***REMOVED***&&***REMOVED***!(isReadonly2***REMOVED***&&***REMOVED***target["__v_isReactive"]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***targetType***REMOVED***=***REMOVED***getTargetType(target);
***REMOVED******REMOVED***if***REMOVED***(targetType***REMOVED***===***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***existingProxy***REMOVED***=***REMOVED***proxyMap.get(target);
***REMOVED******REMOVED***if***REMOVED***(existingProxy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existingProxy;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***proxy***REMOVED***=***REMOVED***new***REMOVED***Proxy(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***targetType***REMOVED***===***REMOVED***2***REMOVED***/****REMOVED***COLLECTION***REMOVED****/***REMOVED***?***REMOVED***collectionHandlers***REMOVED***:***REMOVED***baseHandlers
***REMOVED******REMOVED***);
***REMOVED******REMOVED***proxyMap.set(target,***REMOVED***proxy);
***REMOVED******REMOVED***return***REMOVED***proxy;
}
function***REMOVED***isReactive(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReactive(value["__v_raw"]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isReactive"]);
}
function***REMOVED***isReadonly(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isReadonly"]);
}
function***REMOVED***isShallow(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isShallow"]);
}
function***REMOVED***isProxy(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***!!value["__v_raw"]***REMOVED***:***REMOVED***false;
}
function***REMOVED***toRaw(observed)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***observed***REMOVED***&&***REMOVED***observed["__v_raw"];
***REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***toRaw(raw)***REMOVED***:***REMOVED***observed;
}
function***REMOVED***markRaw(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!hasOwn(value,***REMOVED***"__v_skip")***REMOVED***&&***REMOVED***Object.isExtensible(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***def(value,***REMOVED***"__v_skip",***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
}
const***REMOVED***toReactive***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***isObject(value)***REMOVED***?***REMOVED***reactive(value)***REMOVED***:***REMOVED***value;
const***REMOVED***toReadonly***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***isObject(value)***REMOVED***?***REMOVED***readonly(value)***REMOVED***:***REMOVED***value;

function***REMOVED***isRef(r)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***r***REMOVED***?***REMOVED***r["__v_isRef"]***REMOVED***===***REMOVED***true***REMOVED***:***REMOVED***false;
}
function***REMOVED***ref(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createRef(value,***REMOVED***false);
}
function***REMOVED***shallowRef(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createRef(value,***REMOVED***true);
}
function***REMOVED***createRef(rawValue,***REMOVED***shallow)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isRef(rawValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawValue;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***RefImpl(rawValue,***REMOVED***shallow);
}
class***REMOVED***RefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(value,***REMOVED***isShallow2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.dep***REMOVED***=***REMOVED***new***REMOVED***Dep();
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isRef"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isShallow"]***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this._rawValue***REMOVED***=***REMOVED***isShallow2***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***isShallow2***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***toReactive(value);
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isShallow"]***REMOVED***=***REMOVED***isShallow2;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dep.track({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"get",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***value(newValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***this._rawValue;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useDirectValue***REMOVED***=***REMOVED***this["__v_isShallow"]***REMOVED***||***REMOVED***isShallow(newValue)***REMOVED***||***REMOVED***isReadonly(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED***newValue***REMOVED***=***REMOVED***useDirectValue***REMOVED***?***REMOVED***newValue***REMOVED***:***REMOVED***toRaw(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasChanged(newValue,***REMOVED***oldValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._rawValue***REMOVED***=***REMOVED***newValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***useDirectValue***REMOVED***?***REMOVED***newValue***REMOVED***:***REMOVED***toReactive(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.dep.trigger({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"set",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***triggerRef(ref2)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ref2.dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref2.dep.trigger({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***ref2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"set",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue:***REMOVED***ref2._value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***unref(ref2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isRef(ref2)***REMOVED***?***REMOVED***ref2.value***REMOVED***:***REMOVED***ref2;
}
function***REMOVED***toValue(source)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isFunction(source)***REMOVED***?***REMOVED***source()***REMOVED***:***REMOVED***unref(source);
}
const***REMOVED***shallowUnwrapHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***=>***REMOVED***key***REMOVED***===***REMOVED***"__v_raw"***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***unref(Reflect.get(target,***REMOVED***key,***REMOVED***receiver)),
***REMOVED******REMOVED***set:***REMOVED***(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(oldValue)***REMOVED***&&***REMOVED***!isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.set(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
function***REMOVED***proxyRefs(objectWithRefs)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isReactive(objectWithRefs)***REMOVED***?***REMOVED***objectWithRefs***REMOVED***:***REMOVED***new***REMOVED***Proxy(objectWithRefs,***REMOVED***shallowUnwrapHandlers);
}
class***REMOVED***CustomRefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(factory)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isRef"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dep***REMOVED***=***REMOVED***this.dep***REMOVED***=***REMOVED***new***REMOVED***Dep();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***get,***REMOVED***set***REMOVED***}***REMOVED***=***REMOVED***factory(dep.track.bind(dep),***REMOVED***dep.trigger.bind(dep));
***REMOVED******REMOVED******REMOVED******REMOVED***this._get***REMOVED***=***REMOVED***get;
***REMOVED******REMOVED******REMOVED******REMOVED***this._set***REMOVED***=***REMOVED***set;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value***REMOVED***=***REMOVED***this._get();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***value(newVal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._set(newVal);
***REMOVED******REMOVED***}
}
function***REMOVED***customRef(factory)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***CustomRefImpl(factory);
}
function***REMOVED***toRefs(object)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isProxy(object))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`toRefs()***REMOVED***expects***REMOVED***a***REMOVED***reactive***REMOVED***object***REMOVED***but***REMOVED***received***REMOVED***a***REMOVED***plain***REMOVED***one.`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***isArray(object)***REMOVED***?***REMOVED***new***REMOVED***Array(object.length)***REMOVED***:***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***object)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ret[key]***REMOVED***=***REMOVED***propertyToRef(object,***REMOVED***key);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
class***REMOVED***ObjectRefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(_object,***REMOVED***_key,***REMOVED***_defaultValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._object***REMOVED***=***REMOVED***_object;
***REMOVED******REMOVED******REMOVED******REMOVED***this._key***REMOVED***=***REMOVED***_key;
***REMOVED******REMOVED******REMOVED******REMOVED***this._defaultValue***REMOVED***=***REMOVED***_defaultValue;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isRef"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***this._object[this._key];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value***REMOVED***=***REMOVED***val***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***this._defaultValue***REMOVED***:***REMOVED***val;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***value(newVal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._object[this._key]***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***dep()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getDepFromReactive(toRaw(this._object),***REMOVED***this._key);
***REMOVED******REMOVED***}
}
class***REMOVED***GetterRefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(_getter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._getter***REMOVED***=***REMOVED***_getter;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isRef"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isReadonly"]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value***REMOVED***=***REMOVED***this._getter();
***REMOVED******REMOVED***}
}
function***REMOVED***toRef(source,***REMOVED***key,***REMOVED***defaultValue)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isRef(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***GetterRefImpl(source);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(source)***REMOVED***&&***REMOVED***arguments.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***propertyToRef(source,***REMOVED***key,***REMOVED***defaultValue);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ref(source);
***REMOVED******REMOVED***}
}
function***REMOVED***propertyToRef(source,***REMOVED***key,***REMOVED***defaultValue)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***source[key];
***REMOVED******REMOVED***return***REMOVED***isRef(val)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***new***REMOVED***ObjectRefImpl(source,***REMOVED***key,***REMOVED***defaultValue);
}

class***REMOVED***ComputedRefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(fn,***REMOVED***setter,***REMOVED***isSSR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.fn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED***this.setter***REMOVED***=***REMOVED***setter;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.dep***REMOVED***=***REMOVED***new***REMOVED***Dep(this);
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.__v_isRef***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***isolatedDeclarations***REMOVED***"__v_isReadonly"
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***computed***REMOVED***is***REMOVED***also***REMOVED***a***REMOVED***subscriber***REMOVED***that***REMOVED***tracks***REMOVED***other***REMOVED***deps
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalVersion***REMOVED***=***REMOVED***globalVersion***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***backwards***REMOVED***compat
***REMOVED******REMOVED******REMOVED******REMOVED***this.effect***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isReadonly"]***REMOVED***=***REMOVED***!setter;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isSSR***REMOVED***=***REMOVED***isSSR;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***notify()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***8)***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***infinite***REMOVED***self***REMOVED***recursion
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***batch(this,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***link***REMOVED***=***REMOVED***this.dep.track({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"get",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value"
***REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED***refreshComputed(this);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***this.dep.version;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***value(newValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.setter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setter(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn("Write***REMOVED***operation***REMOVED***failed:***REMOVED***computed***REMOVED***value***REMOVED***is***REMOVED***readonly");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***computed(getterOrOptions,***REMOVED***debugOptions,***REMOVED***isSSR***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***getter;
***REMOVED******REMOVED***let***REMOVED***setter;
***REMOVED******REMOVED***if***REMOVED***(isFunction(getterOrOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***getterOrOptions;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***getterOrOptions.get;
***REMOVED******REMOVED******REMOVED******REMOVED***setter***REMOVED***=***REMOVED***getterOrOptions.set;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***cRef***REMOVED***=***REMOVED***new***REMOVED***ComputedRefImpl(getter,***REMOVED***setter,***REMOVED***isSSR);
***REMOVED******REMOVED***if***REMOVED***(debugOptions***REMOVED***&&***REMOVED***!isSSR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cRef.onTrack***REMOVED***=***REMOVED***debugOptions.onTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***cRef.onTrigger***REMOVED***=***REMOVED***debugOptions.onTrigger;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cRef;
}

const***REMOVED***TrackOpTypes***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"GET":***REMOVED***"get",
***REMOVED******REMOVED***"HAS":***REMOVED***"has",
***REMOVED******REMOVED***"ITERATE":***REMOVED***"iterate"
};
const***REMOVED***TriggerOpTypes***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"SET":***REMOVED***"set",
***REMOVED******REMOVED***"ADD":***REMOVED***"add",
***REMOVED******REMOVED***"DELETE":***REMOVED***"delete",
***REMOVED******REMOVED***"CLEAR":***REMOVED***"clear"
};
const***REMOVED***ReactiveFlags***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"SKIP":***REMOVED***"__v_skip",
***REMOVED******REMOVED***"IS_REACTIVE":***REMOVED***"__v_isReactive",
***REMOVED******REMOVED***"IS_READONLY":***REMOVED***"__v_isReadonly",
***REMOVED******REMOVED***"IS_SHALLOW":***REMOVED***"__v_isShallow",
***REMOVED******REMOVED***"RAW":***REMOVED***"__v_raw",
***REMOVED******REMOVED***"IS_REF":***REMOVED***"__v_isRef"
};

const***REMOVED***WatchErrorCodes***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***"WATCH_GETTER":***REMOVED***2,
***REMOVED******REMOVED***"2":***REMOVED***"WATCH_GETTER",
***REMOVED******REMOVED***"WATCH_CALLBACK":***REMOVED***3,
***REMOVED******REMOVED***"3":***REMOVED***"WATCH_CALLBACK",
***REMOVED******REMOVED***"WATCH_CLEANUP":***REMOVED***4,
***REMOVED******REMOVED***"4":***REMOVED***"WATCH_CLEANUP"
};
const***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***=***REMOVED***{};
const***REMOVED***cleanupMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
let***REMOVED***activeWatcher***REMOVED***=***REMOVED***void***REMOVED***0;
function***REMOVED***getCurrentWatcher()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***activeWatcher;
}
function***REMOVED***onWatcherCleanup(cleanupFn,***REMOVED***failSilently***REMOVED***=***REMOVED***false,***REMOVED***owner***REMOVED***=***REMOVED***activeWatcher)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(owner)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cleanups***REMOVED***=***REMOVED***cleanupMap.get(owner);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cleanups)***REMOVED***cleanupMap.set(owner,***REMOVED***cleanups***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***cleanups.push(cleanupFn);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!failSilently)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`onWatcherCleanup()***REMOVED***was***REMOVED***called***REMOVED***when***REMOVED***there***REMOVED***was***REMOVED***no***REMOVED***active***REMOVED***watcher***REMOVED***to***REMOVED***associate***REMOVED***with.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***watch(source,***REMOVED***cb,***REMOVED***options***REMOVED***=***REMOVED***EMPTY_OBJ)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***immediate,***REMOVED***deep,***REMOVED***once,***REMOVED***scheduler,***REMOVED***augmentJob,***REMOVED***call***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***warnInvalidSource***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***(options.onWarn***REMOVED***||***REMOVED***warn)(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Invalid***REMOVED***watch***REMOVED***source:***REMOVED***`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***watch***REMOVED***source***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***a***REMOVED***getter/effect***REMOVED***function,***REMOVED***a***REMOVED***ref,***REMOVED***a***REMOVED***reactive***REMOVED***object,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***these***REMOVED***types.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***reactiveGetter***REMOVED***=***REMOVED***(source2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep)***REMOVED***return***REMOVED***source2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isShallow(source2)***REMOVED***||***REMOVED***deep***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***deep***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***traverse(source2,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***traverse(source2);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***let***REMOVED***effect;
***REMOVED******REMOVED***let***REMOVED***getter;
***REMOVED******REMOVED***let***REMOVED***cleanup;
***REMOVED******REMOVED***let***REMOVED***boundCleanup;
***REMOVED******REMOVED***let***REMOVED***forceTrigger***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isMultiSource***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(isRef(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***source.value;
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***isShallow(source);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isReactive(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***reactiveGetter(source);
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isMultiSource***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***source.some((s)***REMOVED***=>***REMOVED***isReactive(s)***REMOVED***||***REMOVED***isShallow(s));
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***source.map((s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isReactive(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveGetter(s);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***call***REMOVED***?***REMOVED***call(s,***REMOVED***2)***REMOVED***:***REMOVED***s();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnInvalidSource(s);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***call***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***call(source,***REMOVED***2)***REMOVED***:***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentEffect***REMOVED***=***REMOVED***activeWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***effect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***call***REMOVED***?***REMOVED***call(source,***REMOVED***3,***REMOVED***[boundCleanup])***REMOVED***:***REMOVED***source(boundCleanup);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***currentEffect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED***warnInvalidSource(source);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(cb***REMOVED***&&***REMOVED***deep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseGetter***REMOVED***=***REMOVED***getter;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***depth***REMOVED***=***REMOVED***deep***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***deep;
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***traverse(baseGetter(),***REMOVED***depth);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***getCurrentScope();
***REMOVED******REMOVED***const***REMOVED***watchHandle***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.stop();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope***REMOVED***&&***REMOVED***scope.active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove(scope.effects,***REMOVED***effect);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(once***REMOVED***&&***REMOVED***cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_cb***REMOVED***=***REMOVED***cb;
***REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_cb(...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchHandle();
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***oldValue***REMOVED***=***REMOVED***isMultiSource***REMOVED***?***REMOVED***new***REMOVED***Array(source.length).fill(INITIAL_WATCHER_VALUE)***REMOVED***:***REMOVED***INITIAL_WATCHER_VALUE;
***REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***(immediateFirstRun)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(effect.flags***REMOVED***&***REMOVED***1)***REMOVED***||***REMOVED***!effect.dirty***REMOVED***&&***REMOVED***!immediateFirstRun)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newValue***REMOVED***=***REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep***REMOVED***||***REMOVED***forceTrigger***REMOVED***||***REMOVED***(isMultiSource***REMOVED***?***REMOVED***newValue.some((v,***REMOVED***i)***REMOVED***=>***REMOVED***hasChanged(v,***REMOVED***oldValue[i]))***REMOVED***:***REMOVED***hasChanged(newValue,***REMOVED***oldValue)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentWatcher***REMOVED***=***REMOVED***activeWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***effect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***args***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pass***REMOVED***undefined***REMOVED***as***REMOVED***the***REMOVED***old***REMOVED***value***REMOVED***when***REMOVED***it's***REMOVED***changed***REMOVED***for***REMOVED***the***REMOVED***first***REMOVED***time
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***===***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***isMultiSource***REMOVED***&&***REMOVED***oldValue[0]***REMOVED***===***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***oldValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***boundCleanup
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***newValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***call***REMOVED***?***REMOVED***call(cb,***REMOVED***3,***REMOVED***args)***REMOVED***:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(...args)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***currentWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(augmentJob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***augmentJob(job);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***effect***REMOVED***=***REMOVED***new***REMOVED***ReactiveEffect(getter);
***REMOVED******REMOVED***effect.scheduler***REMOVED***=***REMOVED***scheduler***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***scheduler(job,***REMOVED***false)***REMOVED***:***REMOVED***job;
***REMOVED******REMOVED***boundCleanup***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***onWatcherCleanup(fn,***REMOVED***false,***REMOVED***effect);
***REMOVED******REMOVED***cleanup***REMOVED***=***REMOVED***effect.onStop***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cleanups***REMOVED***=***REMOVED***cleanupMap.get(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanups)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(call)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***call(cleanups,***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***cleanup2***REMOVED***of***REMOVED***cleanups)***REMOVED***cleanup2();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupMap.delete(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrack***REMOVED***=***REMOVED***options.onTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrigger***REMOVED***=***REMOVED***options.onTrigger;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(immediate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job(true);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(scheduler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scheduler(job.bind(null,***REMOVED***true),***REMOVED***true);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.run();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***watchHandle.pause***REMOVED***=***REMOVED***effect.pause.bind(effect);
***REMOVED******REMOVED***watchHandle.resume***REMOVED***=***REMOVED***effect.resume.bind(effect);
***REMOVED******REMOVED***watchHandle.stop***REMOVED***=***REMOVED***watchHandle;
***REMOVED******REMOVED***return***REMOVED***watchHandle;
}
function***REMOVED***traverse(value,***REMOVED***depth***REMOVED***=***REMOVED***Infinity,***REMOVED***seen)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(depth***REMOVED***<=***REMOVED***0***REMOVED***||***REMOVED***!isObject(value)***REMOVED***||***REMOVED***value["__v_skip"])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***seen***REMOVED***=***REMOVED***seen***REMOVED***||***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***if***REMOVED***((seen.get(value)***REMOVED***||***REMOVED***0)***REMOVED***>=***REMOVED***depth)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***seen.set(value,***REMOVED***depth);
***REMOVED******REMOVED***depth--;
***REMOVED******REMOVED***if***REMOVED***(isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***traverse(value.value,***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[i],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSet(value)***REMOVED***||***REMOVED***isMap(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value.forEach((v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(v,***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isPlainObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[key],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.getOwnPropertySymbols(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Object.prototype.propertyIsEnumerable.call(value,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[key],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
}

export***REMOVED***{***REMOVED***ARRAY_ITERATE_KEY,***REMOVED***EffectFlags,***REMOVED***EffectScope,***REMOVED***ITERATE_KEY,***REMOVED***MAP_KEY_ITERATE_KEY,***REMOVED***ReactiveEffect,***REMOVED***ReactiveFlags,***REMOVED***TrackOpTypes,***REMOVED***TriggerOpTypes,***REMOVED***WatchErrorCodes,***REMOVED***computed,***REMOVED***customRef,***REMOVED***effect,***REMOVED***effectScope,***REMOVED***enableTracking,***REMOVED***getCurrentScope,***REMOVED***getCurrentWatcher,***REMOVED***isProxy,***REMOVED***isReactive,***REMOVED***isReadonly,***REMOVED***isRef,***REMOVED***isShallow,***REMOVED***markRaw,***REMOVED***onEffectCleanup,***REMOVED***onScopeDispose,***REMOVED***onWatcherCleanup,***REMOVED***pauseTracking,***REMOVED***proxyRefs,***REMOVED***reactive,***REMOVED***reactiveReadArray,***REMOVED***readonly,***REMOVED***ref,***REMOVED***resetTracking,***REMOVED***shallowReactive,***REMOVED***shallowReadArray,***REMOVED***shallowReadonly,***REMOVED***shallowRef,***REMOVED***stop,***REMOVED***toRaw,***REMOVED***toReactive,***REMOVED***toReadonly,***REMOVED***toRef,***REMOVED***toRefs,***REMOVED***toValue,***REMOVED***track,***REMOVED***traverse,***REMOVED***trigger,***REMOVED***triggerRef,***REMOVED***unref,***REMOVED***watch***REMOVED***};
