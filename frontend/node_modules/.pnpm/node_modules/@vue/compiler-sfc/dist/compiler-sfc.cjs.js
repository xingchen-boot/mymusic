/**
****REMOVED***@vue/compiler-sfc***REMOVED***v3.5.21
****REMOVED***(c)***REMOVED***2018-present***REMOVED***Yuxi***REMOVED***(Evan)***REMOVED***You***REMOVED***and***REMOVED***Vue***REMOVED***contributors
****REMOVED***@license***REMOVED***MIT
**/
'use***REMOVED***strict';

Object.defineProperty(exports,***REMOVED***'__esModule',***REMOVED***{***REMOVED***value:***REMOVED***true***REMOVED***});

var***REMOVED***compilerCore***REMOVED***=***REMOVED***require('@vue/compiler-core');
var***REMOVED***CompilerDOM***REMOVED***=***REMOVED***require('@vue/compiler-dom');
var***REMOVED***sourceMapJs***REMOVED***=***REMOVED***require('source-map-js');
var***REMOVED***shared***REMOVED***=***REMOVED***require('@vue/shared');
var***REMOVED***path$1***REMOVED***=***REMOVED***require('path');
var***REMOVED***url***REMOVED***=***REMOVED***require('url');
var***REMOVED***CompilerSSR***REMOVED***=***REMOVED***require('@vue/compiler-ssr');
var***REMOVED***require$$2***REMOVED***=***REMOVED***require('util');
var***REMOVED***require$$0***REMOVED***=***REMOVED***require('fs');
var***REMOVED***require$$0$1***REMOVED***=***REMOVED***require('postcss');
var***REMOVED***estreeWalker***REMOVED***=***REMOVED***require('estree-walker');
var***REMOVED***MagicString***REMOVED***=***REMOVED***require('magic-string');
var***REMOVED***parser$2***REMOVED***=***REMOVED***require('@babel/parser');
var***REMOVED***process$1***REMOVED***=***REMOVED***require('process');

function***REMOVED***_interopNamespaceDefault(e)***REMOVED***{
	var***REMOVED***n***REMOVED***=***REMOVED***Object.create(null);
	if***REMOVED***(e)***REMOVED***{
		for***REMOVED***(var***REMOVED***k***REMOVED***in***REMOVED***e)***REMOVED***{
			n[k]***REMOVED***=***REMOVED***e[k];
		}
	}
	n.default***REMOVED***=***REMOVED***e;
	return***REMOVED***Object.freeze(n);
}

var***REMOVED***CompilerDOM__namespace***REMOVED***=***REMOVED***/*#__PURE__*/_interopNamespaceDefault(CompilerDOM);
var***REMOVED***CompilerSSR__namespace***REMOVED***=***REMOVED***/*#__PURE__*/_interopNamespaceDefault(CompilerSSR);
var***REMOVED***process__namespace***REMOVED***=***REMOVED***/*#__PURE__*/_interopNamespaceDefault(process$1);

var***REMOVED***commonjsGlobal***REMOVED***=***REMOVED***typeof***REMOVED***globalThis***REMOVED***!==***REMOVED***'undefined'***REMOVED***?***REMOVED***globalThis***REMOVED***:***REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***'undefined'***REMOVED***?***REMOVED***window***REMOVED***:***REMOVED***typeof***REMOVED***global***REMOVED***!==***REMOVED***'undefined'***REMOVED***?***REMOVED***global***REMOVED***:***REMOVED***typeof***REMOVED***self***REMOVED***!==***REMOVED***'undefined'***REMOVED***?***REMOVED***self***REMOVED***:***REMOVED***{};

function***REMOVED***getDefaultExportFromCjs***REMOVED***(x)***REMOVED***{
	return***REMOVED***x***REMOVED***&&***REMOVED***x.__esModule***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(x,***REMOVED***'default')***REMOVED***?***REMOVED***x['default']***REMOVED***:***REMOVED***x;
}

var***REMOVED***hashSum;
var***REMOVED***hasRequiredHashSum;

function***REMOVED***requireHashSum***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredHashSum)***REMOVED***return***REMOVED***hashSum;
	hasRequiredHashSum***REMOVED***=***REMOVED***1;

	function***REMOVED***pad***REMOVED***(hash,***REMOVED***len)***REMOVED***{
	***REMOVED******REMOVED***while***REMOVED***(hash.length***REMOVED***<***REMOVED***len)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***'0'***REMOVED***+***REMOVED***hash;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***hash;
	}

	function***REMOVED***fold***REMOVED***(hash,***REMOVED***text)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***i;
	***REMOVED******REMOVED***var***REMOVED***chr;
	***REMOVED******REMOVED***var***REMOVED***len;
	***REMOVED******REMOVED***if***REMOVED***(text.length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hash;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***text.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***chr***REMOVED***=***REMOVED***text.charCodeAt(i);
	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***((hash***REMOVED***<<***REMOVED***5)***REMOVED***-***REMOVED***hash)***REMOVED***+***REMOVED***chr;
	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***|=***REMOVED***0;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***hash***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***hash***REMOVED*******REMOVED***-2***REMOVED***:***REMOVED***hash;
	}

	function***REMOVED***foldObject***REMOVED***(hash,***REMOVED***o,***REMOVED***seen)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Object.keys(o).sort().reduce(foldKey,***REMOVED***hash);
	***REMOVED******REMOVED***function***REMOVED***foldKey***REMOVED***(hash,***REMOVED***key)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***foldValue(hash,***REMOVED***o[key],***REMOVED***key,***REMOVED***seen);
	***REMOVED******REMOVED***}
	}

	function***REMOVED***foldValue***REMOVED***(input,***REMOVED***value,***REMOVED***key,***REMOVED***seen)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***hash***REMOVED***=***REMOVED***fold(fold(fold(input,***REMOVED***key),***REMOVED***toString(value)),***REMOVED***typeof***REMOVED***value);
	***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fold(hash,***REMOVED***'null');
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fold(hash,***REMOVED***'undefined');
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***'object'***REMOVED***||***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***'function')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(seen.indexOf(value)***REMOVED***!==***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fold(hash,***REMOVED***'[Circular]'***REMOVED***+***REMOVED***key);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***seen.push(value);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***objHash***REMOVED***=***REMOVED***foldObject(hash,***REMOVED***value,***REMOVED***seen);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!('valueOf'***REMOVED***in***REMOVED***value)***REMOVED***||***REMOVED***typeof***REMOVED***value.valueOf***REMOVED***!==***REMOVED***'function')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***objHash;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fold(objHash,***REMOVED***String(value.valueOf()))
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fold(objHash,***REMOVED***'[valueOf***REMOVED***exception]'***REMOVED***+***REMOVED***(err.stack***REMOVED***||***REMOVED***err.message))
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***fold(hash,***REMOVED***value.toString());
	}

	function***REMOVED***toString***REMOVED***(o)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Object.prototype.toString.call(o);
	}

	function***REMOVED***sum***REMOVED***(o)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***pad(foldValue(0,***REMOVED***o,***REMOVED***'',***REMOVED***[]).toString(16),***REMOVED***8);
	}

	hashSum***REMOVED***=***REMOVED***sum;
	return***REMOVED***hashSum;
}

var***REMOVED***hashSumExports***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireHashSum();
var***REMOVED***hash***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(hashSumExports);

const***REMOVED***CSS_VARS_HELPER***REMOVED***=***REMOVED***`useCssVars`;
function***REMOVED***genCssVarsFromList(vars,***REMOVED***id,***REMOVED***isProd,***REMOVED***isSSR***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***`{
***REMOVED******REMOVED***${vars.map(
***REMOVED******REMOVED******REMOVED******REMOVED***(key)***REMOVED***=>***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***`:`***REMOVED***prefix***REMOVED***here***REMOVED***is***REMOVED***used***REMOVED***in***REMOVED***`ssrRenderStyle`***REMOVED***to***REMOVED***distinguish***REMOVED***whether
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***custom***REMOVED***property***REMOVED***comes***REMOVED***from***REMOVED***`ssrCssVars`.***REMOVED***If***REMOVED***it***REMOVED***does,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***reset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***its***REMOVED***value***REMOVED***to***REMOVED***`initial`***REMOVED***on***REMOVED***the***REMOVED***component***REMOVED***instance***REMOVED***to***REMOVED***avoid***REMOVED***unintentionally
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***inheriting***REMOVED***the***REMOVED***same***REMOVED***property***REMOVED***value***REMOVED***from***REMOVED***a***REMOVED***different***REMOVED***instance***REMOVED***of***REMOVED***the***REMOVED***same
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***component***REMOVED***in***REMOVED***the***REMOVED***outer***REMOVED***scope.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"${isSSR***REMOVED***?***REMOVED***`:--`***REMOVED***:***REMOVED***``}${genVarName(id,***REMOVED***key,***REMOVED***isProd,***REMOVED***isSSR)}":***REMOVED***(${key})`
***REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED***).join(",\n***REMOVED******REMOVED***")}
}`;
}
function***REMOVED***genVarName(id,***REMOVED***raw,***REMOVED***isProd,***REMOVED***isSSR***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isProd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hash(id***REMOVED***+***REMOVED***raw);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${id}-${shared.getEscapedCssVarName(raw,***REMOVED***isSSR)}`;
***REMOVED******REMOVED***}
}
function***REMOVED***normalizeExpression(exp)***REMOVED***{
***REMOVED******REMOVED***exp***REMOVED***=***REMOVED***exp.trim();
***REMOVED******REMOVED***if***REMOVED***(exp[0]***REMOVED***===***REMOVED***`'`***REMOVED***&&***REMOVED***exp[exp.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***`'`***REMOVED***||***REMOVED***exp[0]***REMOVED***===***REMOVED***`"`***REMOVED***&&***REMOVED***exp[exp.length***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***`"`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exp.slice(1,***REMOVED***-1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***exp;
}
const***REMOVED***vBindRE***REMOVED***=***REMOVED***/v-bind\s*\(/g;
function***REMOVED***parseCssVars(sfc)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***vars***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***sfc.styles.forEach((style)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***style.content.replace(/\/\*([\s\S]*?)\*\/|\/\/.*/g,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(match***REMOVED***=***REMOVED***vBindRE.exec(content))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***match.index***REMOVED***+***REMOVED***match[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***lexBinding(content,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***normalizeExpression(content.slice(start,***REMOVED***end));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!vars.includes(variable))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vars.push(variable);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***vars;
}
function***REMOVED***lexBinding(content,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***state***REMOVED***=***REMOVED***0***REMOVED***/****REMOVED***inParens***REMOVED****/;
***REMOVED******REMOVED***let***REMOVED***parenDepth***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***content.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***char***REMOVED***=***REMOVED***content.charAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(state)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***0***REMOVED***/****REMOVED***inParens***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`'`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***1***REMOVED***/****REMOVED***inSingleQuoteString***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`"`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***2***REMOVED***/****REMOVED***inDoubleQuoteString***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`(`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenDepth++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`)`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parenDepth***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenDepth--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***1***REMOVED***/****REMOVED***inSingleQuoteString***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`'`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***0***REMOVED***/****REMOVED***inParens***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***2***REMOVED***/****REMOVED***inDoubleQuoteString***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(char***REMOVED***===***REMOVED***`"`)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***state***REMOVED***=***REMOVED***0***REMOVED***/****REMOVED***inParens***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***null;
}
const***REMOVED***cssVarsPlugin***REMOVED***=***REMOVED***(opts)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***id,***REMOVED***isProd***REMOVED***}***REMOVED***=***REMOVED***opts;
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"vue-sfc-vars",
***REMOVED******REMOVED******REMOVED******REMOVED***Declaration(decl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***decl.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vBindRE.test(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vBindRE.lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***transformed***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***match;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(match***REMOVED***=***REMOVED***vBindRE.exec(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***match.index***REMOVED***+***REMOVED***match[0].length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***lexBinding(value,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(end***REMOVED***!==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***variable***REMOVED***=***REMOVED***normalizeExpression(value.slice(start,***REMOVED***end));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transformed***REMOVED***+=***REMOVED***value.slice(lastIndex,***REMOVED***match.index)***REMOVED***+***REMOVED***`var(--${genVarName(id,***REMOVED***variable,***REMOVED***isProd)})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***end***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***transformed***REMOVED***+***REMOVED***value.slice(lastIndex);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};
cssVarsPlugin.postcss***REMOVED***=***REMOVED***true;
function***REMOVED***genCssVarsCode(vars,***REMOVED***bindings,***REMOVED***id,***REMOVED***isProd)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***varsExp***REMOVED***=***REMOVED***genCssVarsFromList(vars,***REMOVED***id,***REMOVED***isProd);
***REMOVED******REMOVED***const***REMOVED***exp***REMOVED***=***REMOVED***CompilerDOM.createSimpleExpression(varsExp,***REMOVED***false);
***REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***CompilerDOM.createTransformContext(CompilerDOM.createRoot([]),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***inline:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***bindingMetadata:***REMOVED***bindings.__isScriptSetup***REMOVED***===***REMOVED***false***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***bindings
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***transformed***REMOVED***=***REMOVED***CompilerDOM.processExpression(exp,***REMOVED***context);
***REMOVED******REMOVED***const***REMOVED***transformedString***REMOVED***=***REMOVED***transformed.type***REMOVED***===***REMOVED***4***REMOVED***?***REMOVED***transformed.content***REMOVED***:***REMOVED***transformed.children.map((c)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***c***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***c***REMOVED***:***REMOVED***c.content;
***REMOVED******REMOVED***}).join("");
***REMOVED******REMOVED***return***REMOVED***`_${CSS_VARS_HELPER}(_ctx***REMOVED***=>***REMOVED***(${transformedString}))`;
}
function***REMOVED***genNormalScriptCssVarsCode(cssVars,***REMOVED***bindings,***REMOVED***id,***REMOVED***isProd,***REMOVED***defaultVar)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***`
import***REMOVED***{***REMOVED***${CSS_VARS_HELPER}***REMOVED***as***REMOVED***_${CSS_VARS_HELPER}***REMOVED***}***REMOVED***from***REMOVED***'vue'
const***REMOVED***__injectCSSVars__***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
${genCssVarsCode(
***REMOVED******REMOVED******REMOVED******REMOVED***cssVars,
***REMOVED******REMOVED******REMOVED******REMOVED***bindings,
***REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED***isProd
***REMOVED******REMOVED***)}}
const***REMOVED***__setup__***REMOVED***=***REMOVED***${defaultVar}.setup
${defaultVar}.setup***REMOVED***=***REMOVED***__setup__
***REMOVED******REMOVED***?***REMOVED***(props,***REMOVED***ctx)***REMOVED***=>***REMOVED***{***REMOVED***__injectCSSVars__();return***REMOVED***__setup__(props,***REMOVED***ctx)***REMOVED***}
***REMOVED******REMOVED***:***REMOVED***__injectCSSVars__
`;
}

/**
***REMOVED*******REMOVED***@module***REMOVED***LRUCache
***REMOVED****/
const***REMOVED***perf***REMOVED***=***REMOVED***typeof***REMOVED***performance***REMOVED***===***REMOVED***'object'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***performance***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***performance.now***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***performance
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***Date;
const***REMOVED***warned***REMOVED***=***REMOVED***new***REMOVED***Set();
/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
const***REMOVED***PROCESS***REMOVED***=***REMOVED***(typeof***REMOVED***process***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***!!process***REMOVED***?***REMOVED***process***REMOVED***:***REMOVED***{});
/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
const***REMOVED***emitWarning***REMOVED***=***REMOVED***(msg,***REMOVED***type,***REMOVED***code,***REMOVED***fn)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***PROCESS.emitWarning***REMOVED***===***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***PROCESS.emitWarning(msg,***REMOVED***type,***REMOVED***code,***REMOVED***fn)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***console.error(`[${code}]***REMOVED***${type}:***REMOVED***${msg}`);
};
let***REMOVED***AC***REMOVED***=***REMOVED***globalThis.AbortController;
let***REMOVED***AS***REMOVED***=***REMOVED***globalThis.AbortSignal;
/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
if***REMOVED***(typeof***REMOVED***AC***REMOVED***===***REMOVED***'undefined')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//@ts-ignore
***REMOVED******REMOVED******REMOVED******REMOVED***AS***REMOVED***=***REMOVED***class***REMOVED***AbortSignal***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onabort;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_onabort***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reason;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addEventListener(_,***REMOVED***fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._onabort.push(fn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***//@ts-ignore
***REMOVED******REMOVED******REMOVED******REMOVED***AC***REMOVED***=***REMOVED***class***REMOVED***AbortController***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constructor()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnACPolyfill();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal***REMOVED***=***REMOVED***new***REMOVED***AS();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***abort(reason)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.signal.aborted)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//@ts-ignore
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.signal.reason***REMOVED***=***REMOVED***reason;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//@ts-ignore
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.signal.aborted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//@ts-ignore
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***fn***REMOVED***of***REMOVED***this.signal._onabort)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn(reason);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.signal.onabort?.(reason);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***printACPolyfillWarning***REMOVED***=***REMOVED***PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING***REMOVED***!==***REMOVED***'1';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***warnACPolyfill***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!printACPolyfillWarning)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***printACPolyfillWarning***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitWarning('AbortController***REMOVED***is***REMOVED***not***REMOVED***defined.***REMOVED***If***REMOVED***using***REMOVED***lru-cache***REMOVED***in***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'node***REMOVED***14,***REMOVED***load***REMOVED***an***REMOVED***AbortController***REMOVED***polyfill***REMOVED***from***REMOVED***the***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'`node-abort-controller`***REMOVED***package.***REMOVED***A***REMOVED***minimal***REMOVED***polyfill***REMOVED***is***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'provided***REMOVED***for***REMOVED***use***REMOVED***by***REMOVED***LRUCache.fetch(),***REMOVED***but***REMOVED***it***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'relied***REMOVED***upon***REMOVED***in***REMOVED***other***REMOVED***contexts***REMOVED***(eg,***REMOVED***passing***REMOVED***it***REMOVED***to***REMOVED***other***REMOVED***APIs***REMOVED***that***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'use***REMOVED***AbortController/AbortSignal***REMOVED***might***REMOVED***have***REMOVED***undesirable***REMOVED***effects).***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'You***REMOVED***may***REMOVED***disable***REMOVED***this***REMOVED***with***REMOVED***LRU_CACHE_IGNORE_AC_WARNING=1***REMOVED***in***REMOVED***the***REMOVED***env.',***REMOVED***'NO_ABORT_CONTROLLER',***REMOVED***'ENOTSUP',***REMOVED***warnACPolyfill);
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
const***REMOVED***shouldWarn***REMOVED***=***REMOVED***(code)***REMOVED***=>***REMOVED***!warned.has(code);
const***REMOVED***isPosInt***REMOVED***=***REMOVED***(n)***REMOVED***=>***REMOVED***n***REMOVED***&&***REMOVED***n***REMOVED***===***REMOVED***Math.floor(n)***REMOVED***&&***REMOVED***n***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***isFinite(n);
/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
//***REMOVED***This***REMOVED***is***REMOVED***a***REMOVED***little***REMOVED***bit***REMOVED***ridiculous,***REMOVED***tbh.
//***REMOVED***The***REMOVED***maximum***REMOVED***array***REMOVED***length***REMOVED***is***REMOVED***2^32-1***REMOVED***or***REMOVED***thereabouts***REMOVED***on***REMOVED***most***REMOVED***JS***REMOVED***impls.
//***REMOVED***And***REMOVED***well***REMOVED***before***REMOVED***that***REMOVED***point,***REMOVED***you're***REMOVED***caching***REMOVED***the***REMOVED***entire***REMOVED***world,***REMOVED***I***REMOVED***mean,
//***REMOVED***that's***REMOVED***~32GB***REMOVED***of***REMOVED***just***REMOVED***integers***REMOVED***for***REMOVED***the***REMOVED***next/prev***REMOVED***links,***REMOVED***plus***REMOVED***whatever
//***REMOVED***else***REMOVED***to***REMOVED***hold***REMOVED***that***REMOVED***many***REMOVED***keys***REMOVED***and***REMOVED***values.***REMOVED******REMOVED***Just***REMOVED***filling***REMOVED***the***REMOVED***memory***REMOVED***with
//***REMOVED***zeroes***REMOVED***at***REMOVED***init***REMOVED***time***REMOVED***is***REMOVED***brutal***REMOVED***when***REMOVED***you***REMOVED***get***REMOVED***that***REMOVED***big.
//***REMOVED***But***REMOVED***why***REMOVED***not***REMOVED***be***REMOVED***complete?
//***REMOVED***Maybe***REMOVED***in***REMOVED***the***REMOVED***future,***REMOVED***these***REMOVED***limits***REMOVED***will***REMOVED***have***REMOVED***expanded.
const***REMOVED***getUintArray***REMOVED***=***REMOVED***(max)***REMOVED***=>***REMOVED***!isPosInt(max)
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***max***REMOVED***<=***REMOVED***Math.pow(2,***REMOVED***8)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***Uint8Array
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***max***REMOVED***<=***REMOVED***Math.pow(2,***REMOVED***16)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***Uint16Array
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***max***REMOVED***<=***REMOVED***Math.pow(2,***REMOVED***32)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***Uint32Array
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***max***REMOVED***<=***REMOVED***Number.MAX_SAFE_INTEGER
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***ZeroArray
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
class***REMOVED***ZeroArray***REMOVED***extends***REMOVED***Array***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(size);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fill(0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
class***REMOVED***Stack***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***heap;
***REMOVED******REMOVED******REMOVED******REMOVED***length;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***private***REMOVED***constructor
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***#constructing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***create(max)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***HeapCls***REMOVED***=***REMOVED***getUintArray(max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!HeapCls)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Stack.#constructing***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***new***REMOVED***Stack(max,***REMOVED***HeapCls);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Stack.#constructing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(max,***REMOVED***HeapCls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Stack.#constructing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('instantiate***REMOVED***Stack***REMOVED***using***REMOVED***Stack.create(n)');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.heap***REMOVED***=***REMOVED***new***REMOVED***HeapCls(max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***push(n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.heap[this.length++]***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***pop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.heap[--this.length];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
/**
***REMOVED*******REMOVED***Default***REMOVED***export,***REMOVED***the***REMOVED***thing***REMOVED***you're***REMOVED***using***REMOVED***this***REMOVED***module***REMOVED***to***REMOVED***get.
***REMOVED****
***REMOVED*******REMOVED***All***REMOVED***properties***REMOVED***from***REMOVED***the***REMOVED***options***REMOVED***object***REMOVED***(with***REMOVED***the***REMOVED***exception***REMOVED***of
***REMOVED*******REMOVED***{@link***REMOVED***OptionsBase.max}***REMOVED***and***REMOVED***{@link***REMOVED***OptionsBase.maxSize})***REMOVED***are***REMOVED***added***REMOVED***as
***REMOVED*******REMOVED***normal***REMOVED***public***REMOVED***members.***REMOVED***(`max`***REMOVED***and***REMOVED***`maxBase`***REMOVED***are***REMOVED***read-only***REMOVED***getters.)
***REMOVED*******REMOVED***Changing***REMOVED***any***REMOVED***of***REMOVED***these***REMOVED***will***REMOVED***alter***REMOVED***the***REMOVED***defaults***REMOVED***for***REMOVED***subsequent***REMOVED***method***REMOVED***calls,
***REMOVED*******REMOVED***but***REMOVED***is***REMOVED***otherwise***REMOVED***safe.
***REMOVED****/
class***REMOVED***LRUCache***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***properties***REMOVED***coming***REMOVED***in***REMOVED***from***REMOVED***the***REMOVED***options***REMOVED***of***REMOVED***these,***REMOVED***only***REMOVED***max***REMOVED***and***REMOVED***maxSize
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***really***REMOVED****need****REMOVED***to***REMOVED***be***REMOVED***protected.***REMOVED***The***REMOVED***rest***REMOVED***can***REMOVED***be***REMOVED***modified,***REMOVED***as***REMOVED***they***REMOVED***just
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***defaults***REMOVED***for***REMOVED***various***REMOVED***methods.
***REMOVED******REMOVED******REMOVED******REMOVED***#max;
***REMOVED******REMOVED******REMOVED******REMOVED***#maxSize;
***REMOVED******REMOVED******REMOVED******REMOVED***#dispose;
***REMOVED******REMOVED******REMOVED******REMOVED***#disposeAfter;
***REMOVED******REMOVED******REMOVED******REMOVED***#fetchMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.ttl}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ttl;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.ttlResolution}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ttlResolution;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.ttlAutopurge}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ttlAutopurge;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.updateAgeOnGet}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***updateAgeOnGet;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.updateAgeOnHas}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***updateAgeOnHas;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.allowStale}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***allowStale;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.noDisposeOnSet}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***noDisposeOnSet;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.noUpdateTTL}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***noUpdateTTL;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.maxEntrySize}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***maxEntrySize;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.sizeCalculation}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***sizeCalculation;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.noDeleteOnFetchRejection}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.noDeleteOnStaleGet}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnStaleGet;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.allowStaleOnFetchAbort}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***allowStaleOnFetchAbort;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.allowStaleOnFetchRejection}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***allowStaleOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.ignoreFetchAbort}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ignoreFetchAbort;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***computed***REMOVED***properties
***REMOVED******REMOVED******REMOVED******REMOVED***#size;
***REMOVED******REMOVED******REMOVED******REMOVED***#calculatedSize;
***REMOVED******REMOVED******REMOVED******REMOVED***#keyMap;
***REMOVED******REMOVED******REMOVED******REMOVED***#keyList;
***REMOVED******REMOVED******REMOVED******REMOVED***#valList;
***REMOVED******REMOVED******REMOVED******REMOVED***#next;
***REMOVED******REMOVED******REMOVED******REMOVED***#prev;
***REMOVED******REMOVED******REMOVED******REMOVED***#head;
***REMOVED******REMOVED******REMOVED******REMOVED***#tail;
***REMOVED******REMOVED******REMOVED******REMOVED***#free;
***REMOVED******REMOVED******REMOVED******REMOVED***#disposed;
***REMOVED******REMOVED******REMOVED******REMOVED***#sizes;
***REMOVED******REMOVED******REMOVED******REMOVED***#starts;
***REMOVED******REMOVED******REMOVED******REMOVED***#ttls;
***REMOVED******REMOVED******REMOVED******REMOVED***#hasDispose;
***REMOVED******REMOVED******REMOVED******REMOVED***#hasFetchMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***#hasDisposeAfter;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Do***REMOVED***not***REMOVED***call***REMOVED***this***REMOVED***method***REMOVED***unless***REMOVED***you***REMOVED***need***REMOVED***to***REMOVED***inspect***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***inner***REMOVED***workings***REMOVED***of***REMOVED***the***REMOVED***cache.***REMOVED******REMOVED***If***REMOVED***anything***REMOVED***returned***REMOVED***by***REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***object***REMOVED***is***REMOVED***modified***REMOVED***in***REMOVED***any***REMOVED***way,***REMOVED***strange***REMOVED***breakage***REMOVED***may***REMOVED***occur.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***These***REMOVED***fields***REMOVED***are***REMOVED***private***REMOVED***for***REMOVED***a***REMOVED***reason!
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***unsafeExposeInternals(c)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***properties
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starts:***REMOVED***c.#starts,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ttls:***REMOVED***c.#ttls,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizes:***REMOVED***c.#sizes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyMap:***REMOVED***c.#keyMap,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyList:***REMOVED***c.#keyList,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***valList:***REMOVED***c.#valList,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next:***REMOVED***c.#next,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev:***REMOVED***c.#prev,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***head()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c.#head;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***tail()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c.#tail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***free:***REMOVED***c.#free,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***methods
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBackgroundFetch:***REMOVED***(p)***REMOVED***=>***REMOVED***c.#isBackgroundFetch(p),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***backgroundFetch:***REMOVED***(k,***REMOVED***index,***REMOVED***options,***REMOVED***context)***REMOVED***=>***REMOVED***c.#backgroundFetch(k,***REMOVED***index,***REMOVED***options,***REMOVED***context),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moveToTail:***REMOVED***(index)***REMOVED***=>***REMOVED***c.#moveToTail(index),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indexes:***REMOVED***(options)***REMOVED***=>***REMOVED***c.#indexes(options),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rindexes:***REMOVED***(options)***REMOVED***=>***REMOVED***c.#rindexes(options),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isStale:***REMOVED***(index)***REMOVED***=>***REMOVED***c.#isStale(index),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Protected***REMOVED***read-only***REMOVED***members
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.max}***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***max()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#max;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.maxSize}***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***maxSize()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#maxSize;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***total***REMOVED***computed***REMOVED***size***REMOVED***of***REMOVED***items***REMOVED***in***REMOVED***the***REMOVED***cache***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***calculatedSize()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#calculatedSize;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***items***REMOVED***stored***REMOVED***in***REMOVED***the***REMOVED***cache***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***size()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#size;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.fetchMethod}***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***fetchMethod()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#fetchMethod;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.dispose}***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***dispose()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#dispose;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.disposeAfter}***REMOVED***(read-only)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***disposeAfter()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#disposeAfter;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***max***REMOVED***=***REMOVED***0,***REMOVED***ttl,***REMOVED***ttlResolution***REMOVED***=***REMOVED***1,***REMOVED***ttlAutopurge,***REMOVED***updateAgeOnGet,***REMOVED***updateAgeOnHas,***REMOVED***allowStale,***REMOVED***dispose,***REMOVED***disposeAfter,***REMOVED***noDisposeOnSet,***REMOVED***noUpdateTTL,***REMOVED***maxSize***REMOVED***=***REMOVED***0,***REMOVED***maxEntrySize***REMOVED***=***REMOVED***0,***REMOVED***sizeCalculation,***REMOVED***fetchMethod,***REMOVED***noDeleteOnFetchRejection,***REMOVED***noDeleteOnStaleGet,***REMOVED***allowStaleOnFetchRejection,***REMOVED***allowStaleOnFetchAbort,***REMOVED***ignoreFetchAbort,***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(max***REMOVED***!==***REMOVED***0***REMOVED***&&***REMOVED***!isPosInt(max))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('max***REMOVED***option***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***nonnegative***REMOVED***integer');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***UintArray***REMOVED***=***REMOVED***max***REMOVED***?***REMOVED***getUintArray(max)***REMOVED***:***REMOVED***Array;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!UintArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('invalid***REMOVED***max***REMOVED***value:***REMOVED***'***REMOVED***+***REMOVED***max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#max***REMOVED***=***REMOVED***max;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#maxSize***REMOVED***=***REMOVED***maxSize;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.maxEntrySize***REMOVED***=***REMOVED***maxEntrySize***REMOVED***||***REMOVED***this.#maxSize;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sizeCalculation***REMOVED***=***REMOVED***sizeCalculation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.sizeCalculation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#maxSize***REMOVED***&&***REMOVED***!this.maxEntrySize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('cannot***REMOVED***set***REMOVED***sizeCalculation***REMOVED***without***REMOVED***setting***REMOVED***maxSize***REMOVED***or***REMOVED***maxEntrySize');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.sizeCalculation***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('sizeCalculation***REMOVED***set***REMOVED***to***REMOVED***non-function');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fetchMethod***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***fetchMethod***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('fetchMethod***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***function***REMOVED***if***REMOVED***specified');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#fetchMethod***REMOVED***=***REMOVED***fetchMethod;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasFetchMethod***REMOVED***=***REMOVED***!!fetchMethod;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap***REMOVED***=***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList***REMOVED***=***REMOVED***new***REMOVED***Array(max).fill(undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList***REMOVED***=***REMOVED***new***REMOVED***Array(max).fill(undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#next***REMOVED***=***REMOVED***new***REMOVED***UintArray(max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#prev***REMOVED***=***REMOVED***new***REMOVED***UintArray(max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#tail***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#free***REMOVED***=***REMOVED***Stack.create(max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#size***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#calculatedSize***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***dispose***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose***REMOVED***=***REMOVED***dispose;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***disposeAfter***REMOVED***===***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter***REMOVED***=***REMOVED***disposeAfter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasDispose***REMOVED***=***REMOVED***!!this.#dispose;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasDisposeAfter***REMOVED***=***REMOVED***!!this.#disposeAfter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.noDisposeOnSet***REMOVED***=***REMOVED***!!noDisposeOnSet;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.noUpdateTTL***REMOVED***=***REMOVED***!!noUpdateTTL;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.noDeleteOnFetchRejection***REMOVED***=***REMOVED***!!noDeleteOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allowStaleOnFetchRejection***REMOVED***=***REMOVED***!!allowStaleOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allowStaleOnFetchAbort***REMOVED***=***REMOVED***!!allowStaleOnFetchAbort;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ignoreFetchAbort***REMOVED***=***REMOVED***!!ignoreFetchAbort;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***NB:***REMOVED***maxEntrySize***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***maxSize***REMOVED***if***REMOVED***it's***REMOVED***set
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.maxEntrySize***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#maxSize***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPosInt(this.#maxSize))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('maxSize***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***positive***REMOVED***integer***REMOVED***if***REMOVED***specified');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPosInt(this.maxEntrySize))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('maxEntrySize***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***positive***REMOVED***integer***REMOVED***if***REMOVED***specified');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#initializeSizeTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.allowStale***REMOVED***=***REMOVED***!!allowStale;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.noDeleteOnStaleGet***REMOVED***=***REMOVED***!!noDeleteOnStaleGet;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateAgeOnGet***REMOVED***=***REMOVED***!!updateAgeOnGet;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.updateAgeOnHas***REMOVED***=***REMOVED***!!updateAgeOnHas;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ttlResolution***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isPosInt(ttlResolution)***REMOVED***||***REMOVED***ttlResolution***REMOVED***===***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***ttlResolution
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ttlAutopurge***REMOVED***=***REMOVED***!!ttlAutopurge;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.ttl***REMOVED***=***REMOVED***ttl***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.ttl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPosInt(this.ttl))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('ttl***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***positive***REMOVED***integer***REMOVED***if***REMOVED***specified');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#initializeTTLTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***do***REMOVED***not***REMOVED***allow***REMOVED***completely***REMOVED***unbounded***REMOVED***caches
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#max***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.ttl***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.#maxSize***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('At***REMOVED***least***REMOVED***one***REMOVED***of***REMOVED***max,***REMOVED***maxSize,***REMOVED***or***REMOVED***ttl***REMOVED***is***REMOVED***required');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.ttlAutopurge***REMOVED***&&***REMOVED***!this.#max***REMOVED***&&***REMOVED***!this.#maxSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***code***REMOVED***=***REMOVED***'LRU_CACHE_UNBOUNDED';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldWarn(code))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warned.add(code);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***msg***REMOVED***=***REMOVED***'TTL***REMOVED***caching***REMOVED***without***REMOVED***ttlAutopurge,***REMOVED***max,***REMOVED***or***REMOVED***maxSize***REMOVED***can***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'result***REMOVED***in***REMOVED***unbounded***REMOVED***memory***REMOVED***consumption.';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitWarning(msg,***REMOVED***'UnboundedCacheWarning',***REMOVED***code,***REMOVED***LRUCache);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***remaining***REMOVED***TTL***REMOVED***time***REMOVED***for***REMOVED***a***REMOVED***given***REMOVED***entry***REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***getRemainingTTL(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#keyMap.has(key)***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#initializeTTLTracking()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ttls***REMOVED***=***REMOVED***new***REMOVED***ZeroArray(this.#max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***starts***REMOVED***=***REMOVED***new***REMOVED***ZeroArray(this.#max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#ttls***REMOVED***=***REMOVED***ttls;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#starts***REMOVED***=***REMOVED***starts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#setItemTTL***REMOVED***=***REMOVED***(index,***REMOVED***ttl,***REMOVED***start***REMOVED***=***REMOVED***perf.now())***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starts[index]***REMOVED***=***REMOVED***ttl***REMOVED***!==***REMOVED***0***REMOVED***?***REMOVED***start***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ttls[index]***REMOVED***=***REMOVED***ttl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ttl***REMOVED***!==***REMOVED***0***REMOVED***&&***REMOVED***this.ttlAutopurge)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***setTimeout(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isStale(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(this.#keyList[index]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***ttl***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unref()***REMOVED***not***REMOVED***supported***REMOVED***on***REMOVED***all***REMOVED***platforms
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(t.unref)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.unref();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#updateItemAge***REMOVED***=***REMOVED***index***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***starts[index]***REMOVED***=***REMOVED***ttls[index]***REMOVED***!==***REMOVED***0***REMOVED***?***REMOVED***perf.now()***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL***REMOVED***=***REMOVED***(status,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ttls[index])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ttl***REMOVED***=***REMOVED***ttls[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***starts[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***next***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ttl***REMOVED***||***REMOVED***!start)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.ttl***REMOVED***=***REMOVED***ttl;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.start***REMOVED***=***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.now***REMOVED***=***REMOVED***cachedNow***REMOVED***||***REMOVED***getNow();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***age***REMOVED***=***REMOVED***status.now***REMOVED***-***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.remainingTTL***REMOVED***=***REMOVED***ttl***REMOVED***-***REMOVED***age;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***debounce***REMOVED***calls***REMOVED***to***REMOVED***perf.now()***REMOVED***to***REMOVED***1s***REMOVED***so***REMOVED***we're***REMOVED***not***REMOVED***hitting
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***that***REMOVED***costly***REMOVED***call***REMOVED***repeatedly.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cachedNow***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getNow***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***perf.now();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.ttlResolution***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cachedNow***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***setTimeout(()***REMOVED***=>***REMOVED***(cachedNow***REMOVED***=***REMOVED***0),***REMOVED***this.ttlResolution);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***available***REMOVED***on***REMOVED***all***REMOVED***platforms
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(t.unref)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***t.unref();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.getRemainingTTL***REMOVED***=***REMOVED***key***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ttl***REMOVED***=***REMOVED***ttls[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***starts[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ttl***REMOVED***||***REMOVED***!start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***age***REMOVED***=***REMOVED***(cachedNow***REMOVED***||***REMOVED***getNow())***REMOVED***-***REMOVED***start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ttl***REMOVED***-***REMOVED***age;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#isStale***REMOVED***=***REMOVED***index***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***starts[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***ttls[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!t***REMOVED***&&***REMOVED***!!s***REMOVED***&&***REMOVED***(cachedNow***REMOVED***||***REMOVED***getNow())***REMOVED***-***REMOVED***s***REMOVED***>***REMOVED***t;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***conditionally***REMOVED***set***REMOVED***private***REMOVED***methods***REMOVED***related***REMOVED***to***REMOVED***TTL
***REMOVED******REMOVED******REMOVED******REMOVED***#updateItemAge***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***#statusTTL***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***#setItemTTL***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***#isStale***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***#initializeSizeTracking()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sizes***REMOVED***=***REMOVED***new***REMOVED***ZeroArray(this.#max);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#calculatedSize***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#sizes***REMOVED***=***REMOVED***sizes;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#removeItemSize***REMOVED***=***REMOVED***index***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#calculatedSize***REMOVED***-=***REMOVED***sizes[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizes[index]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#requireSize***REMOVED***=***REMOVED***(k,***REMOVED***v,***REMOVED***size,***REMOVED***sizeCalculation)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***provisionally***REMOVED***accept***REMOVED***background***REMOVED***fetches.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***actual***REMOVED***value***REMOVED***size***REMOVED***will***REMOVED***be***REMOVED***checked***REMOVED***when***REMOVED***they***REMOVED***return.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPosInt(size))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sizeCalculation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***sizeCalculation***REMOVED***!==***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('sizeCalculation***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***function');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size***REMOVED***=***REMOVED***sizeCalculation(v,***REMOVED***k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isPosInt(size))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('sizeCalculation***REMOVED***return***REMOVED***invalid***REMOVED***(expect***REMOVED***positive***REMOVED***integer)');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('invalid***REMOVED***size***REMOVED***value***REMOVED***(must***REMOVED***be***REMOVED***positive***REMOVED***integer).***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'When***REMOVED***maxSize***REMOVED***or***REMOVED***maxEntrySize***REMOVED***is***REMOVED***used,***REMOVED***sizeCalculation***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'or***REMOVED***size***REMOVED***must***REMOVED***be***REMOVED***set.');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#addItemSize***REMOVED***=***REMOVED***(index,***REMOVED***size,***REMOVED***status)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizes[index]***REMOVED***=***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#maxSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***maxSize***REMOVED***=***REMOVED***this.#maxSize***REMOVED***-***REMOVED***sizes[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.#calculatedSize***REMOVED***>***REMOVED***maxSize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#evict(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#calculatedSize***REMOVED***+=***REMOVED***sizes[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.entrySize***REMOVED***=***REMOVED***size;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.totalCalculatedSize***REMOVED***=***REMOVED***this.#calculatedSize;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#removeItemSize***REMOVED***=***REMOVED***_i***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***#addItemSize***REMOVED***=***REMOVED***(_i,***REMOVED***_s,***REMOVED***_st)***REMOVED***=>***REMOVED***{***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***#requireSize***REMOVED***=***REMOVED***(_k,***REMOVED***_v,***REMOVED***size,***REMOVED***sizeCalculation)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(size***REMOVED***||***REMOVED***sizeCalculation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('cannot***REMOVED***set***REMOVED***size***REMOVED***without***REMOVED***setting***REMOVED***maxSize***REMOVED***or***REMOVED***maxEntrySize***REMOVED***on***REMOVED***cache');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED****#indexes({***REMOVED***allowStale***REMOVED***=***REMOVED***this.allowStale***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.#tail;***REMOVED***true;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#isValidIndex(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowStale***REMOVED***||***REMOVED***!this.#isStale(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***this.#head)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***this.#prev[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED****#rindexes({***REMOVED***allowStale***REMOVED***=***REMOVED***this.allowStale***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***this.#head;***REMOVED***true;)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#isValidIndex(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowStale***REMOVED***||***REMOVED***!this.#isStale(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***this.#tail)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***this.#next[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#isValidIndex(index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(index***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap.get(this.#keyList[index])***REMOVED***===***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***`[key,***REMOVED***value]`***REMOVED***pairs,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***most***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***least***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****entries()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#valList[i]***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList[i]***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***[this.#keyList[i],***REMOVED***this.#valList[i]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Inverse***REMOVED***order***REMOVED***version***REMOVED***of***REMOVED***{@link***REMOVED***LRUCache.entries}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***`[key,***REMOVED***value]`***REMOVED***pairs,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***least***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***most***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****rentries()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#rindexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#valList[i]***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList[i]***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***[this.#keyList[i],***REMOVED***this.#valList[i]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***the***REMOVED***keys***REMOVED***in***REMOVED***the***REMOVED***cache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***most***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***least***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****keys()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***k***REMOVED***=***REMOVED***this.#keyList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(k***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***k;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Inverse***REMOVED***order***REMOVED***version***REMOVED***of***REMOVED***{@link***REMOVED***LRUCache.keys}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***the***REMOVED***keys***REMOVED***in***REMOVED***the***REMOVED***cache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***least***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***most***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****rkeys()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#rindexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***k***REMOVED***=***REMOVED***this.#keyList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(k***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***k;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***the***REMOVED***values***REMOVED***in***REMOVED***the***REMOVED***cache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***most***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***least***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****values()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Inverse***REMOVED***order***REMOVED***version***REMOVED***of***REMOVED***{@link***REMOVED***LRUCache.values}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***generator***REMOVED***yielding***REMOVED***the***REMOVED***values***REMOVED***in***REMOVED***the***REMOVED***cache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***order***REMOVED***from***REMOVED***least***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***most***REMOVED***recently***REMOVED***used.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED****rvalues()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#rindexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***!==***REMOVED***undefined***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#isBackgroundFetch(this.#valList[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Iterating***REMOVED***over***REMOVED***the***REMOVED***cache***REMOVED***itself***REMOVED***yields***REMOVED***the***REMOVED***same***REMOVED***results***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.entries}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.iterator]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.entries();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Find***REMOVED***a***REMOVED***value***REMOVED***for***REMOVED***which***REMOVED***the***REMOVED***supplied***REMOVED***fn***REMOVED***method***REMOVED***returns***REMOVED***a***REMOVED***truthy***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***similar***REMOVED***to***REMOVED***Array.find().***REMOVED******REMOVED***fn***REMOVED***is***REMOVED***called***REMOVED***as***REMOVED***fn(value,***REMOVED***key,***REMOVED***cache).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***find(fn,***REMOVED***getOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#isBackgroundFetch(v)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***v.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fn(value,***REMOVED***this.#keyList[i],***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.get(this.#keyList[i],***REMOVED***getOptions);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Call***REMOVED***the***REMOVED***supplied***REMOVED***function***REMOVED***on***REMOVED***each***REMOVED***item***REMOVED***in***REMOVED***the***REMOVED***cache,***REMOVED***in***REMOVED***order***REMOVED***from
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***most***REMOVED***recently***REMOVED***used***REMOVED***to***REMOVED***least***REMOVED***recently***REMOVED***used.***REMOVED******REMOVED***fn***REMOVED***is***REMOVED***called***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***fn(value,***REMOVED***key,***REMOVED***cache).***REMOVED******REMOVED***Does***REMOVED***not***REMOVED***update***REMOVED***age***REMOVED***or***REMOVED***recenty***REMOVED***of***REMOVED***use.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Does***REMOVED***not***REMOVED***iterate***REMOVED***over***REMOVED***stale***REMOVED***values.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(fn,***REMOVED***thisp***REMOVED***=***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#isBackgroundFetch(v)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***v.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn.call(thisp,***REMOVED***value,***REMOVED***this.#keyList[i],***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***same***REMOVED***as***REMOVED***{@link***REMOVED***LRUCache.forEach}***REMOVED***but***REMOVED***items***REMOVED***are***REMOVED***iterated***REMOVED***over***REMOVED***in
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***reverse***REMOVED***order.***REMOVED******REMOVED***(ie,***REMOVED***less***REMOVED***recently***REMOVED***used***REMOVED***items***REMOVED***are***REMOVED***iterated***REMOVED***over***REMOVED***first.)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***rforEach(fn,***REMOVED***thisp***REMOVED***=***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#rindexes())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#isBackgroundFetch(v)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***v.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fn.call(thisp,***REMOVED***value,***REMOVED***this.#keyList[i],***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Delete***REMOVED***any***REMOVED***stale***REMOVED***entries.***REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***anything***REMOVED***was***REMOVED***removed,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***false***REMOVED***otherwise.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***purgeStale()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***deleted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#rindexes({***REMOVED***allowStale:***REMOVED***true***REMOVED***}))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isStale(i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(this.#keyList[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deleted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***deleted;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Get***REMOVED***the***REMOVED***extended***REMOVED***info***REMOVED***about***REMOVED***a***REMOVED***given***REMOVED***entry,***REMOVED***to***REMOVED***get***REMOVED***its***REMOVED***value,***REMOVED***size,***REMOVED***and
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***TTL***REMOVED***info***REMOVED***simultaneously.***REMOVED***Like***REMOVED***{@link***REMOVED***LRUCache#dump},***REMOVED***but***REMOVED***just***REMOVED***for***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***single***REMOVED***key.***REMOVED***Always***REMOVED***returns***REMOVED***stale***REMOVED***values,***REMOVED***if***REMOVED***their***REMOVED***info***REMOVED***is***REMOVED***found***REMOVED***in***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***cache,***REMOVED***so***REMOVED***be***REMOVED***sure***REMOVED***to***REMOVED***check***REMOVED***for***REMOVED***expired***REMOVED***TTLs***REMOVED***if***REMOVED***relevant.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***info(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***this.#keyMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#isBackgroundFetch(v)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***v.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entry***REMOVED***=***REMOVED***{***REMOVED***value***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#ttls***REMOVED***&&***REMOVED***this.#starts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ttl***REMOVED***=***REMOVED***this.#ttls[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.#starts[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ttl***REMOVED***&&***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***remain***REMOVED***=***REMOVED***ttl***REMOVED***-***REMOVED***(perf.now()***REMOVED***-***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.ttl***REMOVED***=***REMOVED***remain;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.start***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#sizes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.size***REMOVED***=***REMOVED***this.#sizes[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entry;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***[key,***REMOVED***{@link***REMOVED***LRUCache.Entry}]***REMOVED***tuples***REMOVED***which***REMOVED***can***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***passed***REMOVED***to***REMOVED***cache.load()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***dump()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***i***REMOVED***of***REMOVED***this.#indexes({***REMOVED***allowStale:***REMOVED***true***REMOVED***}))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***this.#keyList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#isBackgroundFetch(v)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***v.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***undefined***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***entry***REMOVED***=***REMOVED***{***REMOVED***value***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#ttls***REMOVED***&&***REMOVED***this.#starts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.ttl***REMOVED***=***REMOVED***this.#ttls[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***always***REMOVED***dump***REMOVED***the***REMOVED***start***REMOVED***relative***REMOVED***to***REMOVED***a***REMOVED***portable***REMOVED***timestamp
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it's***REMOVED***ok***REMOVED***for***REMOVED***this***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***bit***REMOVED***slow,***REMOVED***it's***REMOVED***a***REMOVED***rare***REMOVED***operation.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***age***REMOVED***=***REMOVED***perf.now()***REMOVED***-***REMOVED***this.#starts[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.start***REMOVED***=***REMOVED***Math.floor(Date.now()***REMOVED***-***REMOVED***age);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#sizes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.size***REMOVED***=***REMOVED***this.#sizes[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arr.unshift([key,***REMOVED***entry]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arr;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Reset***REMOVED***the***REMOVED***cache***REMOVED***and***REMOVED***load***REMOVED***in***REMOVED***the***REMOVED***items***REMOVED***in***REMOVED***entries***REMOVED***in***REMOVED***the***REMOVED***order***REMOVED***listed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***the***REMOVED***shape***REMOVED***of***REMOVED***the***REMOVED***resulting***REMOVED***cache***REMOVED***may***REMOVED***be***REMOVED***different***REMOVED***if***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***same***REMOVED***options***REMOVED***are***REMOVED***not***REMOVED***used***REMOVED***in***REMOVED***both***REMOVED***caches.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***load(arr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***entry]***REMOVED***of***REMOVED***arr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(entry.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***entry.start***REMOVED***is***REMOVED***a***REMOVED***portable***REMOVED***timestamp,***REMOVED***but***REMOVED***we***REMOVED***may***REMOVED***be***REMOVED***using
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***node's***REMOVED***performance.now(),***REMOVED***so***REMOVED***calculate***REMOVED***the***REMOVED***offset,***REMOVED***so***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***get***REMOVED***the***REMOVED***intended***REMOVED***remaining***REMOVED***TTL,***REMOVED***no***REMOVED***matter***REMOVED***how***REMOVED***long***REMOVED***it's
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***been***REMOVED***on***REMOVED***ice.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it's***REMOVED***ok***REMOVED***for***REMOVED***this***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***bit***REMOVED***slow,***REMOVED***it's***REMOVED***a***REMOVED***rare***REMOVED***operation.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***age***REMOVED***=***REMOVED***Date.now()***REMOVED***-***REMOVED***entry.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entry.start***REMOVED***=***REMOVED***perf.now()***REMOVED***-***REMOVED***age;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set(key,***REMOVED***entry.value,***REMOVED***entry);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***value***REMOVED***to***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Note:***REMOVED***if***REMOVED***`undefined`***REMOVED***is***REMOVED***specified***REMOVED***as***REMOVED***a***REMOVED***value,***REMOVED***this***REMOVED***is***REMOVED***an***REMOVED***alias***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache#delete}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***set(k,***REMOVED***v,***REMOVED***setOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***ttl***REMOVED***=***REMOVED***this.ttl,***REMOVED***start,***REMOVED***noDisposeOnSet***REMOVED***=***REMOVED***this.noDisposeOnSet,***REMOVED***sizeCalculation***REMOVED***=***REMOVED***this.sizeCalculation,***REMOVED***status,***REMOVED***}***REMOVED***=***REMOVED***setOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***noUpdateTTL***REMOVED***=***REMOVED***this.noUpdateTTL***REMOVED***}***REMOVED***=***REMOVED***setOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***size***REMOVED***=***REMOVED***this.#requireSize(k,***REMOVED***v,***REMOVED***setOptions.size***REMOVED***||***REMOVED***0,***REMOVED***sizeCalculation);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***item***REMOVED***doesn't***REMOVED***fit,***REMOVED***don't***REMOVED***do***REMOVED***anything
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***NB:***REMOVED***maxEntrySize***REMOVED***set***REMOVED***to***REMOVED***maxSize***REMOVED***by***REMOVED***default
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.maxEntrySize***REMOVED***&&***REMOVED***size***REMOVED***>***REMOVED***this.maxEntrySize)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.set***REMOVED***=***REMOVED***'miss';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.maxEntrySizeExceeded***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***have***REMOVED***to***REMOVED***delete,***REMOVED***in***REMOVED***case***REMOVED***something***REMOVED***is***REMOVED***there***REMOVED***already.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***index***REMOVED***=***REMOVED***this.#size***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***addition
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***(this.#size***REMOVED***===***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.#tail
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.#free.length***REMOVED***!==***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.#free.pop()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.#size***REMOVED***===***REMOVED***this.#max
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.#evict(false)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.#size);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList[index]***REMOVED***=***REMOVED***k;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap.set(k,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#next[this.#tail]***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#prev[index]***REMOVED***=***REMOVED***this.#tail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#tail***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#size++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#addItemSize(index,***REMOVED***size,***REMOVED***status);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.set***REMOVED***=***REMOVED***'add';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noUpdateTTL***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***update
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#moveToTail(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldVal***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***!==***REMOVED***oldVal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasFetchMethod***REMOVED***&&***REMOVED***this.#isBackgroundFetch(oldVal))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldVal.__abortController.abort(new***REMOVED***Error('replaced'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***__staleWhileFetching:***REMOVED***s***REMOVED***}***REMOVED***=***REMOVED***oldVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(s***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***!noDisposeOnSet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDispose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose?.(s,***REMOVED***k,***REMOVED***'set');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed?.push([s,***REMOVED***k,***REMOVED***'set']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!noDisposeOnSet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDispose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose?.(oldVal,***REMOVED***k,***REMOVED***'set');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed?.push([oldVal,***REMOVED***k,***REMOVED***'set']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#removeItemSize(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#addItemSize(index,***REMOVED***size,***REMOVED***status);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.set***REMOVED***=***REMOVED***'replace';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***oldVal***REMOVED***&&***REMOVED***this.#isBackgroundFetch(oldVal)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***oldVal.__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***oldVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldValue***REMOVED***!==***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.oldValue***REMOVED***=***REMOVED***oldValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.set***REMOVED***=***REMOVED***'update';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ttl***REMOVED***!==***REMOVED***0***REMOVED***&&***REMOVED***!this.#ttls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#initializeTTLTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#ttls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noUpdateTTL)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#setItemTTL(index,***REMOVED***ttl,***REMOVED***start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL(status,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noDisposeOnSet***REMOVED***&&***REMOVED***this.#hasDisposeAfter***REMOVED***&&***REMOVED***this.#disposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dt***REMOVED***=***REMOVED***this.#disposed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***task;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((task***REMOVED***=***REMOVED***dt?.shift()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter?.(...task);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Evict***REMOVED***the***REMOVED***least***REMOVED***recently***REMOVED***used***REMOVED***item,***REMOVED***returning***REMOVED***its***REMOVED***value***REMOVED***or
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`undefined`***REMOVED***if***REMOVED***cache***REMOVED***is***REMOVED***empty.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***pop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.#size)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***val***REMOVED***=***REMOVED***this.#valList[this.#head];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#evict(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val.__staleWhileFetching)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***val.__staleWhileFetching;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(val***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter***REMOVED***&&***REMOVED***this.#disposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dt***REMOVED***=***REMOVED***this.#disposed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***task;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((task***REMOVED***=***REMOVED***dt?.shift()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter?.(...task);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#evict(free)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***head***REMOVED***=***REMOVED***this.#head;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***k***REMOVED***=***REMOVED***this.#keyList[head];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[head];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasFetchMethod***REMOVED***&&***REMOVED***this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v.__abortController.abort(new***REMOVED***Error('evicted'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.#hasDispose***REMOVED***||***REMOVED***this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDispose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose?.(v,***REMOVED***k,***REMOVED***'evict');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed?.push([v,***REMOVED***k,***REMOVED***'evict']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#removeItemSize(head);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***aren't***REMOVED***about***REMOVED***to***REMOVED***use***REMOVED***the***REMOVED***index,***REMOVED***then***REMOVED***null***REMOVED***these***REMOVED***out
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(free)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList[head]***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[head]***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#free.push(head);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#size***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***this.#tail***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#free.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***this.#next[head];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#size--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***head;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Check***REMOVED***if***REMOVED***a***REMOVED***key***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***cache,***REMOVED***without***REMOVED***updating***REMOVED***the***REMOVED***recency***REMOVED***of***REMOVED***use.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Will***REMOVED***return***REMOVED***false***REMOVED***if***REMOVED***the***REMOVED***item***REMOVED***is***REMOVED***stale,***REMOVED***even***REMOVED***though***REMOVED***it***REMOVED***is***REMOVED***technically
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Will***REMOVED***not***REMOVED***update***REMOVED***item***REMOVED***age***REMOVED***unless
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.updateAgeOnHas}***REMOVED***is***REMOVED***set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***has(k,***REMOVED***hasOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***updateAgeOnHas***REMOVED***=***REMOVED***this.updateAgeOnHas,***REMOVED***status***REMOVED***}***REMOVED***=***REMOVED***hasOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v)***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v.__staleWhileFetching***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#isStale(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(updateAgeOnHas)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#updateItemAge(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.has***REMOVED***=***REMOVED***'hit';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL(status,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.has***REMOVED***=***REMOVED***'stale';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL(status,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.has***REMOVED***=***REMOVED***'miss';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Like***REMOVED***{@link***REMOVED***LRUCache#get}***REMOVED***but***REMOVED***doesn't***REMOVED***update***REMOVED***recency***REMOVED***or***REMOVED***delete***REMOVED***stale
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***items.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***`undefined`***REMOVED***if***REMOVED***the***REMOVED***item***REMOVED***is***REMOVED***stale,***REMOVED***unless
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{@link***REMOVED***LRUCache.OptionsBase.allowStale}***REMOVED***is***REMOVED***set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***peek(k,***REMOVED***peekOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***allowStale***REMOVED***=***REMOVED***this.allowStale***REMOVED***}***REMOVED***=***REMOVED***peekOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***undefined***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!allowStale***REMOVED***&&***REMOVED***this.#isStale(index)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***either***REMOVED***stale***REMOVED***and***REMOVED***allowed,***REMOVED***or***REMOVED***forcing***REMOVED***a***REMOVED***refresh***REMOVED***of***REMOVED***non-stale***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#isBackgroundFetch(v)***REMOVED***?***REMOVED***v.__staleWhileFetching***REMOVED***:***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#backgroundFetch(k,***REMOVED***index,***REMOVED***options,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***index***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ac***REMOVED***=***REMOVED***new***REMOVED***AC();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***signal***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when/if***REMOVED***our***REMOVED***AC***REMOVED***signals,***REMOVED***then***REMOVED***stop***REMOVED***listening***REMOVED***to***REMOVED***theirs.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal?.addEventListener('abort',***REMOVED***()***REMOVED***=>***REMOVED***ac.abort(signal.reason),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal:***REMOVED***ac.signal,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fetchOpts***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal:***REMOVED***ac.signal,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cb***REMOVED***=***REMOVED***(v,***REMOVED***updateCache***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***aborted***REMOVED***}***REMOVED***=***REMOVED***ac.signal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ignoreAbort***REMOVED***=***REMOVED***options.ignoreFetchAbort***REMOVED***&&***REMOVED***v***REMOVED***!==***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aborted***REMOVED***&&***REMOVED***!updateCache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchAborted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchError***REMOVED***=***REMOVED***ac.signal.reason;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ignoreAbort)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchAbortIgnored***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchResolved***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aborted***REMOVED***&&***REMOVED***!ignoreAbort***REMOVED***&&***REMOVED***!updateCache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fetchFail(ac.signal.reason);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***either***REMOVED***we***REMOVED***didn't***REMOVED***abort,***REMOVED***and***REMOVED***are***REMOVED***still***REMOVED***here,***REMOVED***or***REMOVED***we***REMOVED***did,***REMOVED***and***REMOVED***ignored
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bf***REMOVED***=***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#valList[index]***REMOVED***===***REMOVED***p)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(v***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bf.__staleWhileFetching)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***bf.__staleWhileFetching;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchUpdated***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set(k,***REMOVED***v,***REMOVED***fetchOpts.options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***eb***REMOVED***=***REMOVED***(er)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchRejected***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchError***REMOVED***=***REMOVED***er;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fetchFail(er);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fetchFail***REMOVED***=***REMOVED***(er)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***aborted***REMOVED***}***REMOVED***=***REMOVED***ac.signal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowStaleAborted***REMOVED***=***REMOVED***aborted***REMOVED***&&***REMOVED***options.allowStaleOnFetchAbort;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowStale***REMOVED***=***REMOVED***allowStaleAborted***REMOVED***||***REMOVED***options.allowStaleOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noDelete***REMOVED***=***REMOVED***allowStale***REMOVED***||***REMOVED***options.noDeleteOnFetchRejection;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bf***REMOVED***=***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#valList[index]***REMOVED***===***REMOVED***p)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***allow***REMOVED***stale***REMOVED***on***REMOVED***fetch***REMOVED***rejections,***REMOVED***then***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***ensure***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***stale***REMOVED***value***REMOVED***is***REMOVED***not***REMOVED***removed***REMOVED***from***REMOVED***the***REMOVED***cache***REMOVED***when***REMOVED***the***REMOVED***fetch***REMOVED***fails.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***del***REMOVED***=***REMOVED***!noDelete***REMOVED***||***REMOVED***bf.__staleWhileFetching***REMOVED***===***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(del)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(!allowStaleAborted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***still***REMOVED***replace***REMOVED***the***REMOVED****promise****REMOVED***with***REMOVED***the***REMOVED***stale***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***since***REMOVED***we***REMOVED***are***REMOVED***done***REMOVED***with***REMOVED***the***REMOVED***promise***REMOVED***at***REMOVED***this***REMOVED***point.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***leave***REMOVED***it***REMOVED***untouched***REMOVED***if***REMOVED***we're***REMOVED***still***REMOVED***waiting***REMOVED***for***REMOVED***an
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***aborted***REMOVED***background***REMOVED***fetch***REMOVED***that***REMOVED***hasn't***REMOVED***yet***REMOVED***returned.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***bf.__staleWhileFetching;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowStale)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.status***REMOVED***&&***REMOVED***bf.__staleWhileFetching***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.returnedStale***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***bf.__staleWhileFetching;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(bf.__returned***REMOVED***===***REMOVED***bf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***er;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pcall***REMOVED***=***REMOVED***(res,***REMOVED***rej)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fmp***REMOVED***=***REMOVED***this.#fetchMethod?.(k,***REMOVED***v,***REMOVED***fetchOpts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fmp***REMOVED***&&***REMOVED***fmp***REMOVED***instanceof***REMOVED***Promise)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fmp.then(v***REMOVED***=>***REMOVED***res(v***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***v),***REMOVED***rej);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ignored,***REMOVED***we***REMOVED***go***REMOVED***until***REMOVED***we***REMOVED***finish,***REMOVED***regardless.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***defer***REMOVED***check***REMOVED***until***REMOVED***we***REMOVED***are***REMOVED***actually***REMOVED***aborting,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***fetchMethod***REMOVED***can***REMOVED***override.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ac.signal.addEventListener('abort',***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.ignoreFetchAbort***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.allowStaleOnFetchAbort)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res(undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***it***REMOVED***eventually***REMOVED***resolves,***REMOVED***update***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.allowStaleOnFetchAbort)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***v***REMOVED***=>***REMOVED***cb(v,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.status.fetchDispatched***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***new***REMOVED***Promise(pcall).then(cb,***REMOVED***eb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bf***REMOVED***=***REMOVED***Object.assign(p,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__abortController:***REMOVED***ac,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__staleWhileFetching:***REMOVED***v,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***__returned:***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***internal,***REMOVED***don't***REMOVED***expose***REMOVED***status.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set(k,***REMOVED***bf,***REMOVED***{***REMOVED***...fetchOpts.options,***REMOVED***status:***REMOVED***undefined***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***bf;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***bf;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#isBackgroundFetch(p)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#hasFetchMethod)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***b***REMOVED***=***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(!!b***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***b***REMOVED***instanceof***REMOVED***Promise***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***b.hasOwnProperty('__staleWhileFetching')***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***b.__abortController***REMOVED***instanceof***REMOVED***AC);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***fetch(k,***REMOVED***fetchOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStale***REMOVED***=***REMOVED***this.allowStale,***REMOVED***updateAgeOnGet***REMOVED***=***REMOVED***this.updateAgeOnGet,***REMOVED***noDeleteOnStaleGet***REMOVED***=***REMOVED***this.noDeleteOnStaleGet,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ttl***REMOVED***=***REMOVED***this.ttl,***REMOVED***noDisposeOnSet***REMOVED***=***REMOVED***this.noDisposeOnSet,***REMOVED***size***REMOVED***=***REMOVED***0,***REMOVED***sizeCalculation***REMOVED***=***REMOVED***this.sizeCalculation,***REMOVED***noUpdateTTL***REMOVED***=***REMOVED***this.noUpdateTTL,***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fetch***REMOVED***exclusive***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnFetchRejection***REMOVED***=***REMOVED***this.noDeleteOnFetchRejection,***REMOVED***allowStaleOnFetchRejection***REMOVED***=***REMOVED***this.allowStaleOnFetchRejection,***REMOVED***ignoreFetchAbort***REMOVED***=***REMOVED***this.ignoreFetchAbort,***REMOVED***allowStaleOnFetchAbort***REMOVED***=***REMOVED***this.allowStaleOnFetchAbort,***REMOVED***context,***REMOVED***forceRefresh***REMOVED***=***REMOVED***false,***REMOVED***status,***REMOVED***signal,***REMOVED***}***REMOVED***=***REMOVED***fetchOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#hasFetchMethod)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.fetch***REMOVED***=***REMOVED***'get';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.get(k,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStale,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateAgeOnGet,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnStaleGet,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStale,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateAgeOnGet,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnStaleGet,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ttl,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noDisposeOnSet,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***size,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sizeCalculation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noUpdateTTL,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***noDeleteOnFetchRejection,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStaleOnFetchRejection,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStaleOnFetchAbort,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ignoreFetchAbort,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.fetch***REMOVED***=***REMOVED***'miss';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***this.#backgroundFetch(k,***REMOVED***index,***REMOVED***options,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(p.__returned***REMOVED***=***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***cache,***REMOVED***maybe***REMOVED***already***REMOVED***fetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stale***REMOVED***=***REMOVED***allowStale***REMOVED***&&***REMOVED***v.__staleWhileFetching***REMOVED***!==***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.fetch***REMOVED***=***REMOVED***'inflight';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stale)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.returnedStale***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stale***REMOVED***?***REMOVED***v.__staleWhileFetching***REMOVED***:***REMOVED***(v.__returned***REMOVED***=***REMOVED***v);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***force***REMOVED***a***REMOVED***refresh,***REMOVED***that***REMOVED***means***REMOVED***do***REMOVED***NOT***REMOVED***serve***REMOVED***the***REMOVED***cached***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unless***REMOVED***we***REMOVED***are***REMOVED***already***REMOVED***in***REMOVED***the***REMOVED***process***REMOVED***of***REMOVED***refreshing***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isStale***REMOVED***=***REMOVED***this.#isStale(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!forceRefresh***REMOVED***&&***REMOVED***!isStale)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.fetch***REMOVED***=***REMOVED***'hit';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#moveToTail(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(updateAgeOnGet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#updateItemAge(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL(status,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ok,***REMOVED***it***REMOVED***is***REMOVED***stale***REMOVED***or***REMOVED***a***REMOVED***forced***REMOVED***refresh,***REMOVED***and***REMOVED***not***REMOVED***already***REMOVED***fetching.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***refresh***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***this.#backgroundFetch(k,***REMOVED***index,***REMOVED***options,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasStale***REMOVED***=***REMOVED***p.__staleWhileFetching***REMOVED***!==***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***staleVal***REMOVED***=***REMOVED***hasStale***REMOVED***&&***REMOVED***allowStale;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.fetch***REMOVED***=***REMOVED***isStale***REMOVED***?***REMOVED***'stale'***REMOVED***:***REMOVED***'refresh';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(staleVal***REMOVED***&&***REMOVED***isStale)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.returnedStale***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***staleVal***REMOVED***?***REMOVED***p.__staleWhileFetching***REMOVED***:***REMOVED***(p.__returned***REMOVED***=***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***a***REMOVED***value***REMOVED***from***REMOVED***the***REMOVED***cache.***REMOVED***Will***REMOVED***update***REMOVED***the***REMOVED***recency***REMOVED***of***REMOVED***the***REMOVED***cache
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***entry***REMOVED***found.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***key***REMOVED***is***REMOVED***not***REMOVED***found,***REMOVED***get()***REMOVED***will***REMOVED***return***REMOVED***`undefined`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***get(k,***REMOVED***getOptions***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***allowStale***REMOVED***=***REMOVED***this.allowStale,***REMOVED***updateAgeOnGet***REMOVED***=***REMOVED***this.updateAgeOnGet,***REMOVED***noDeleteOnStaleGet***REMOVED***=***REMOVED***this.noDeleteOnStaleGet,***REMOVED***status,***REMOVED***}***REMOVED***=***REMOVED***getOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fetching***REMOVED***=***REMOVED***this.#isBackgroundFetch(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#statusTTL(status,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isStale(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.get***REMOVED***=***REMOVED***'stale';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***delete***REMOVED***only***REMOVED***if***REMOVED***not***REMOVED***an***REMOVED***in-flight***REMOVED***background***REMOVED***fetch
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!fetching)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!noDeleteOnStaleGet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status***REMOVED***&&***REMOVED***allowStale)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.returnedStale***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***allowStale***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowStale***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.__staleWhileFetching***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.returnedStale***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***allowStale***REMOVED***?***REMOVED***value.__staleWhileFetching***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(status)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.get***REMOVED***=***REMOVED***'hit';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we're***REMOVED***currently***REMOVED***fetching***REMOVED***it,***REMOVED***we***REMOVED***don't***REMOVED***actually***REMOVED***have***REMOVED***it***REMOVED***yet
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it's***REMOVED***not***REMOVED***stale,***REMOVED***which***REMOVED***means***REMOVED***this***REMOVED***isn't***REMOVED***a***REMOVED***staleWhileRefetching.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***it's***REMOVED***not***REMOVED***stale,***REMOVED***and***REMOVED***fetching,***REMOVED***AND***REMOVED***has***REMOVED***a***REMOVED***__staleWhileFetching
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***value,***REMOVED***then***REMOVED***that***REMOVED***means***REMOVED***the***REMOVED***user***REMOVED***fetched***REMOVED***with***REMOVED***{forceRefresh:true},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***it's***REMOVED***safe***REMOVED***to***REMOVED***return***REMOVED***that***REMOVED***value.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fetching)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.__staleWhileFetching;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#moveToTail(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(updateAgeOnGet)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#updateItemAge(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(status)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***status.get***REMOVED***=***REMOVED***'miss';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#connect(p,***REMOVED***n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#prev[n]***REMOVED***=***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#next[p]***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#moveToTail(index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***tail***REMOVED***already,***REMOVED***nothing***REMOVED***to***REMOVED***do
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***head,***REMOVED***move***REMOVED***head***REMOVED***to***REMOVED***next[index]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***move***REMOVED***next[prev[index]]***REMOVED***to***REMOVED***next[index]***REMOVED***(head***REMOVED***has***REMOVED***no***REMOVED***prev)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***move***REMOVED***prev[next[index]]***REMOVED***to***REMOVED***prev[index]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***prev[index]***REMOVED***=***REMOVED***tail
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***next[tail]***REMOVED***=***REMOVED***index
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***tail***REMOVED***=***REMOVED***index
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***!==***REMOVED***this.#tail)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***this.#head)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***this.#next[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#connect(this.#prev[index],***REMOVED***this.#next[index]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#connect(this.#tail,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#tail***REMOVED***=***REMOVED***index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Deletes***REMOVED***a***REMOVED***key***REMOVED***out***REMOVED***of***REMOVED***the***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***key***REMOVED***was***REMOVED***deleted,***REMOVED***false***REMOVED***otherwise.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delete(k)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***deleted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#size***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***this.#keyMap.get(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deleted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#size***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#removeItemSize(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v.__abortController.abort(new***REMOVED***Error('deleted'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.#hasDispose***REMOVED***||***REMOVED***this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDispose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose?.(v,***REMOVED***k,***REMOVED***'delete');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed?.push([v,***REMOVED***k,***REMOVED***'delete']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap.delete(k);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList[index]***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList[index]***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***this.#tail)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#tail***REMOVED***=***REMOVED***this.#prev[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***this.#head)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***this.#next[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pi***REMOVED***=***REMOVED***this.#prev[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#next[pi]***REMOVED***=***REMOVED***this.#next[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ni***REMOVED***=***REMOVED***this.#next[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#prev[ni]***REMOVED***=***REMOVED***this.#prev[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#size--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#free.push(index);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter***REMOVED***&&***REMOVED***this.#disposed?.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dt***REMOVED***=***REMOVED***this.#disposed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***task;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((task***REMOVED***=***REMOVED***dt?.shift()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter?.(...task);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***deleted;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Clear***REMOVED***the***REMOVED***cache***REMOVED***entirely,***REMOVED***throwing***REMOVED***away***REMOVED***all***REMOVED***values.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***clear()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***index***REMOVED***of***REMOVED***this.#rindexes({***REMOVED***allowStale:***REMOVED***true***REMOVED***}))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***v***REMOVED***=***REMOVED***this.#valList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#isBackgroundFetch(v))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v.__abortController.abort(new***REMOVED***Error('deleted'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***k***REMOVED***=***REMOVED***this.#keyList[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDispose)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#dispose?.(v,***REMOVED***k,***REMOVED***'delete');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposed?.push([v,***REMOVED***k,***REMOVED***'delete']);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyMap.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#valList.fill(undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#keyList.fill(undefined);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#ttls***REMOVED***&&***REMOVED***this.#starts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#ttls.fill(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#starts.fill(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#sizes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#sizes.fill(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#head***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#tail***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#free.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#calculatedSize***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#size***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasDisposeAfter***REMOVED***&&***REMOVED***this.#disposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dt***REMOVED***=***REMOVED***this.#disposed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***task;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((task***REMOVED***=***REMOVED***dt?.shift()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#disposeAfter?.(...task);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

function***REMOVED***createCache(max***REMOVED***=***REMOVED***500)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***LRUCache({***REMOVED***max***REMOVED***});
}

function***REMOVED***isImportUsed(local,***REMOVED***sfc)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***resolveTemplateUsedIdentifiers(sfc).has(local);
}
const***REMOVED***templateUsageCheckCache***REMOVED***=***REMOVED***createCache();
function***REMOVED***resolveTemplateUsedIdentifiers(sfc)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***content,***REMOVED***ast***REMOVED***}***REMOVED***=***REMOVED***sfc.template;
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***templateUsageCheckCache.get(content);
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***ids***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***ast.children.forEach(walk);
***REMOVED******REMOVED***function***REMOVED***walk(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***1:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tag***REMOVED***=***REMOVED***node.tag;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tag.includes("."))***REMOVED***tag***REMOVED***=***REMOVED***tag.split(".")[0].trim();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!CompilerDOM.parserOptions.isNativeTag(tag)***REMOVED***&&***REMOVED***!CompilerDOM.parserOptions.isBuiltInComponent(tag))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(shared.camelize(tag));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(shared.capitalize(shared.camelize(tag)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***node.props.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***node.props[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***7)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shared.isBuiltInDirective(prop.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(`v${shared.capitalize(shared.camelize(prop.name))}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.arg***REMOVED***&&***REMOVED***!prop.arg.isStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractIdentifiers(ids,***REMOVED***prop.arg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.name***REMOVED***===***REMOVED***"for")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractIdentifiers(ids,***REMOVED***prop.forParseResult.source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.exp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractIdentifiers(ids,***REMOVED***prop.exp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.name***REMOVED***===***REMOVED***"bind"***REMOVED***&&***REMOVED***!prop.exp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(shared.camelize(prop.arg.content));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***6***REMOVED***&&***REMOVED***prop.name***REMOVED***===***REMOVED***"ref"***REMOVED***&&***REMOVED***((_a***REMOVED***=***REMOVED***prop.value)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.content))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ids.add(prop.value.content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.children.forEach(walk);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***5:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractIdentifiers(ids,***REMOVED***node.content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***templateUsageCheckCache.set(content,***REMOVED***ids);
***REMOVED******REMOVED***return***REMOVED***ids;
}
function***REMOVED***extractIdentifiers(ids,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.ast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***CompilerDOM.walkIdentifiers(node.ast,***REMOVED***(n)***REMOVED***=>***REMOVED***ids.add(n.name));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.ast***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ids.add(node.content);
***REMOVED******REMOVED***}
}

const***REMOVED***DEFAULT_FILENAME***REMOVED***=***REMOVED***"anonymous.vue";
const***REMOVED***parseCache$1***REMOVED***=***REMOVED***createCache();
function***REMOVED***parse$1(source,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***const***REMOVED***sourceKey***REMOVED***=***REMOVED***shared.genCacheKey(source,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED***compiler:***REMOVED***{***REMOVED***parse:***REMOVED***(_a***REMOVED***=***REMOVED***options.compiler)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.parse***REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***parseCache$1.get(sourceKey);
***REMOVED******REMOVED***if***REMOVED***(cache)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cache;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***DEFAULT_FILENAME,
***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***=***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED***pad***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***ignoreEmpty***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***compiler***REMOVED***=***REMOVED***CompilerDOM__namespace,
***REMOVED******REMOVED******REMOVED******REMOVED***templateParseOptions***REMOVED***=***REMOVED***{}
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***descriptor***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED***template:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***script:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***scriptSetup:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***styles:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***customBlocks:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***cssVars:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***slotted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***shouldForceReload:***REMOVED***(prevImports)***REMOVED***=>***REMOVED***hmrShouldReload(prevImports,***REMOVED***descriptor)
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***compiler.parse(source,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parseMode:***REMOVED***"sfc",
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***...templateParseOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***onError:***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(e);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***ast.children.forEach((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ignoreEmpty***REMOVED***&&***REMOVED***node.tag***REMOVED***!==***REMOVED***"template"***REMOVED***&&***REMOVED***isEmpty(node)***REMOVED***&&***REMOVED***!hasSrc(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.tag)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"template":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!descriptor.template)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***templateBlock***REMOVED***=***REMOVED***descriptor.template***REMOVED***=***REMOVED***createBlock(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!templateBlock.attrs.src)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateBlock.ast***REMOVED***=***REMOVED***compilerCore.createRoot(node.children,***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(templateBlock.attrs.functional)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***err***REMOVED***=***REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`<template***REMOVED***functional>***REMOVED***is***REMOVED***no***REMOVED***longer***REMOVED***supported***REMOVED***in***REMOVED***Vue***REMOVED***3,***REMOVED***since***REMOVED***functional***REMOVED***components***REMOVED***no***REMOVED***longer***REMOVED***have***REMOVED***significant***REMOVED***performance***REMOVED***difference***REMOVED***from***REMOVED***stateful***REMOVED***ones.***REMOVED***Just***REMOVED***use***REMOVED***a***REMOVED***normal***REMOVED***<template>***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc***REMOVED***=***REMOVED***node.props.find(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(p)***REMOVED***=>***REMOVED***p.type***REMOVED***===***REMOVED***6***REMOVED***&&***REMOVED***p.name***REMOVED***===***REMOVED***"functional"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).loc;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(createDuplicateBlockError(node));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"script":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptBlock***REMOVED***=***REMOVED***createBlock(node,***REMOVED***source,***REMOVED***pad);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSetup***REMOVED***=***REMOVED***!!scriptBlock.attrs.setup;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSetup***REMOVED***&&***REMOVED***!descriptor.scriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.scriptSetup***REMOVED***=***REMOVED***scriptBlock;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isSetup***REMOVED***&&***REMOVED***!descriptor.script)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.script***REMOVED***=***REMOVED***scriptBlock;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(createDuplicateBlockError(node,***REMOVED***isSetup));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"style":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***styleBlock***REMOVED***=***REMOVED***createBlock(node,***REMOVED***source,***REMOVED***pad);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(styleBlock.attrs.vars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`<style***REMOVED***vars>***REMOVED***has***REMOVED***been***REMOVED***replaced***REMOVED***by***REMOVED***a***REMOVED***new***REMOVED***proposal:***REMOVED***https://github.com/vuejs/rfcs/pull/231`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.styles.push(styleBlock);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.customBlocks.push(createBlock(node,***REMOVED***source,***REMOVED***pad));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(!descriptor.template***REMOVED***&&***REMOVED***!descriptor.script***REMOVED***&&***REMOVED***!descriptor.scriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***errors.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`At***REMOVED***least***REMOVED***one***REMOVED***<template>***REMOVED***or***REMOVED***<script>***REMOVED***is***REMOVED***required***REMOVED***in***REMOVED***a***REMOVED***single***REMOVED***file***REMOVED***component.***REMOVED***${descriptor.filename}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(descriptor.scriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(descriptor.scriptSetup.src)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`<script***REMOVED***setup>***REMOVED***cannot***REMOVED***use***REMOVED***the***REMOVED***"src"***REMOVED***attribute***REMOVED***because***REMOVED***its***REMOVED***syntax***REMOVED***will***REMOVED***be***REMOVED***ambiguous***REMOVED***outside***REMOVED***of***REMOVED***the***REMOVED***component.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.scriptSetup***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(descriptor.script***REMOVED***&&***REMOVED***descriptor.script.src)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`<script>***REMOVED***cannot***REMOVED***use***REMOVED***the***REMOVED***"src"***REMOVED***attribute***REMOVED***when***REMOVED***<script***REMOVED***setup>***REMOVED***is***REMOVED***also***REMOVED***present***REMOVED***because***REMOVED***they***REMOVED***must***REMOVED***be***REMOVED***processed***REMOVED***together.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.script***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***templateColumnOffset***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(descriptor.template***REMOVED***&&***REMOVED***(descriptor.template.lang***REMOVED***===***REMOVED***"pug"***REMOVED***||***REMOVED***descriptor.template.lang***REMOVED***===***REMOVED***"jade"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[descriptor.template.content,***REMOVED***templateColumnOffset]***REMOVED***=***REMOVED***dedent(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.template.content
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(sourceMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***genMap***REMOVED***=***REMOVED***(block,***REMOVED***columnOffset***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(block***REMOVED***&&***REMOVED***!block.src)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.map***REMOVED***=***REMOVED***generateSourceMap(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.content,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!pad***REMOVED***||***REMOVED***block.type***REMOVED***===***REMOVED***"template"***REMOVED***?***REMOVED***block.loc.start.line***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***columnOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***genMap(descriptor.template,***REMOVED***templateColumnOffset);
***REMOVED******REMOVED******REMOVED******REMOVED***genMap(descriptor.script);
***REMOVED******REMOVED******REMOVED******REMOVED***descriptor.styles.forEach((s)***REMOVED***=>***REMOVED***genMap(s));
***REMOVED******REMOVED******REMOVED******REMOVED***descriptor.customBlocks.forEach((s)***REMOVED***=>***REMOVED***genMap(s));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***descriptor.cssVars***REMOVED***=***REMOVED***parseCssVars(descriptor);
***REMOVED******REMOVED***const***REMOVED***slottedRE***REMOVED***=***REMOVED***/(?:::v-|:)slotted\(/;
***REMOVED******REMOVED***descriptor.slotted***REMOVED***=***REMOVED***descriptor.styles.some(
***REMOVED******REMOVED******REMOVED******REMOVED***(s)***REMOVED***=>***REMOVED***s.scoped***REMOVED***&&***REMOVED***slottedRE.test(s.content)
***REMOVED******REMOVED***);
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***descriptor,
***REMOVED******REMOVED******REMOVED******REMOVED***errors
***REMOVED******REMOVED***};
***REMOVED******REMOVED***parseCache$1.set(sourceKey,***REMOVED***result);
***REMOVED******REMOVED***return***REMOVED***result;
}
function***REMOVED***createDuplicateBlockError(node,***REMOVED***isScriptSetup***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***err***REMOVED***=***REMOVED***new***REMOVED***SyntaxError(
***REMOVED******REMOVED******REMOVED******REMOVED***`Single***REMOVED***file***REMOVED***component***REMOVED***can***REMOVED***contain***REMOVED***only***REMOVED***one***REMOVED***<${node.tag}${isScriptSetup***REMOVED***?***REMOVED***`***REMOVED***setup`***REMOVED***:***REMOVED***``}>***REMOVED***element`
***REMOVED******REMOVED***);
***REMOVED******REMOVED***err.loc***REMOVED***=***REMOVED***node.loc;
***REMOVED******REMOVED***return***REMOVED***err;
}
function***REMOVED***createBlock(node,***REMOVED***source,***REMOVED***pad)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***node.tag;
***REMOVED******REMOVED***const***REMOVED***loc***REMOVED***=***REMOVED***node.innerLoc;
***REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***block***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***source.slice(loc.start.offset,***REMOVED***loc.end.offset),
***REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED***attrs
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(pad)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***block.content***REMOVED***=***REMOVED***padContent(source,***REMOVED***block,***REMOVED***pad)***REMOVED***+***REMOVED***block.content;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***node.props.forEach((p)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.type***REMOVED***===***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***p.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[name]***REMOVED***=***REMOVED***p.value***REMOVED***?***REMOVED***p.value.content***REMOVED***||***REMOVED***true***REMOVED***:***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"lang")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.lang***REMOVED***=***REMOVED***p.value***REMOVED***&&***REMOVED***p.value.content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"src")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.src***REMOVED***=***REMOVED***p.value***REMOVED***&&***REMOVED***p.value.content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"style")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"scoped")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.scoped***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"module")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.module***REMOVED***=***REMOVED***attrs[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"script"***REMOVED***&&***REMOVED***name***REMOVED***===***REMOVED***"setup")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***block.setup***REMOVED***=***REMOVED***attrs.setup;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***block;
}
const***REMOVED***splitRE***REMOVED***=***REMOVED***/\r?\n/g;
const***REMOVED***emptyRE***REMOVED***=***REMOVED***/^(?:\/\/)?\s*$/;
const***REMOVED***replaceRE***REMOVED***=***REMOVED***/./g;
function***REMOVED***generateSourceMap(filename,***REMOVED***source,***REMOVED***generated,***REMOVED***sourceRoot,***REMOVED***lineOffset,***REMOVED***columnOffset)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapGenerator({
***REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***filename.replace(/\\/g,***REMOVED***"/"),
***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot:***REMOVED***sourceRoot.replace(/\\/g,***REMOVED***"/")
***REMOVED******REMOVED***});
***REMOVED******REMOVED***map.setSourceContent(filename,***REMOVED***source);
***REMOVED******REMOVED***map._sources.add(filename);
***REMOVED******REMOVED***generated.split(splitRE).forEach((line,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!emptyRE.test(line))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalLine***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1***REMOVED***+***REMOVED***lineOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***generatedLine***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***line.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/\s/.test(line[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map._mappings.add({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***i***REMOVED***+***REMOVED***columnOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***i,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***map.toJSON();
}
function***REMOVED***padContent(content,***REMOVED***block,***REMOVED***pad)***REMOVED***{
***REMOVED******REMOVED***content***REMOVED***=***REMOVED***content.slice(0,***REMOVED***block.loc.start.offset);
***REMOVED******REMOVED***if***REMOVED***(pad***REMOVED***===***REMOVED***"space")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content.replace(replaceRE,***REMOVED***"***REMOVED***");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***offset***REMOVED***=***REMOVED***content.split(splitRE).length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***padChar***REMOVED***=***REMOVED***block.type***REMOVED***===***REMOVED***"script"***REMOVED***&&***REMOVED***!block.lang***REMOVED***?***REMOVED***"//\n"***REMOVED***:***REMOVED***"\n";
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Array(offset).join(padChar);
***REMOVED******REMOVED***}
}
function***REMOVED***hasSrc(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.props.some((p)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.type***REMOVED***!==***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p.name***REMOVED***===***REMOVED***"src";
***REMOVED******REMOVED***});
}
function***REMOVED***isEmpty(node)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***node.children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***node.children[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***!==***REMOVED***2***REMOVED***||***REMOVED***child.content.trim()***REMOVED***!==***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***hmrShouldReload(prevImports,***REMOVED***next)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!next.scriptSetup***REMOVED***||***REMOVED***next.scriptSetup.lang***REMOVED***!==***REMOVED***"ts"***REMOVED***&&***REMOVED***next.scriptSetup.lang***REMOVED***!==***REMOVED***"tsx")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***prevImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevImports[key].isUsedInTemplate***REMOVED***&&***REMOVED***isImportUsed(key,***REMOVED***next))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***dedent(s)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***lines***REMOVED***=***REMOVED***s.split("\n");
***REMOVED******REMOVED***const***REMOVED***minIndent***REMOVED***=***REMOVED***lines.reduce(function(minIndent2,***REMOVED***line)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(line.trim()***REMOVED***===***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***minIndent2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***indent***REMOVED***=***REMOVED***((_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***line.match(/^\s*/))***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a[0])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.length)***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Math.min(indent,***REMOVED***minIndent2);
***REMOVED******REMOVED***},***REMOVED***Infinity);
***REMOVED******REMOVED***if***REMOVED***(minIndent***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[s,***REMOVED***minIndent];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***lines.map(function(line)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***line.slice(minIndent);
***REMOVED******REMOVED******REMOVED******REMOVED***}).join("\n"),
***REMOVED******REMOVED******REMOVED******REMOVED***minIndent
***REMOVED******REMOVED***];
}

function***REMOVED***isRelativeUrl(url)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***firstChar***REMOVED***=***REMOVED***url.charAt(0);
***REMOVED******REMOVED***return***REMOVED***firstChar***REMOVED***===***REMOVED***"."***REMOVED***||***REMOVED***firstChar***REMOVED***===***REMOVED***"~"***REMOVED***||***REMOVED***firstChar***REMOVED***===***REMOVED***"@";
}
const***REMOVED***externalRE***REMOVED***=***REMOVED***/^(?:https?:)?\/\//;
function***REMOVED***isExternalUrl(url)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***externalRE.test(url);
}
const***REMOVED***dataUrlRE***REMOVED***=***REMOVED***/^\s*data:/i;
function***REMOVED***isDataUrl(url)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***dataUrlRE.test(url);
}
function***REMOVED***parseUrl(url)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***firstChar***REMOVED***=***REMOVED***url.charAt(0);
***REMOVED******REMOVED***if***REMOVED***(firstChar***REMOVED***===***REMOVED***"~")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***secondChar***REMOVED***=***REMOVED***url.charAt(1);
***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***url.slice(secondChar***REMOVED***===***REMOVED***"/"***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***parseUriParts(url);
}
function***REMOVED***parseUriParts(urlString)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***url.parse(shared.isString(urlString)***REMOVED***?***REMOVED***urlString***REMOVED***:***REMOVED***"",***REMOVED***false,***REMOVED***true);
}

const***REMOVED***defaultAssetUrlOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***base:***REMOVED***null,
***REMOVED******REMOVED***includeAbsolute:***REMOVED***false,
***REMOVED******REMOVED***tags:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***video:***REMOVED***["src",***REMOVED***"poster"],
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***["src"],
***REMOVED******REMOVED******REMOVED******REMOVED***img:***REMOVED***["src"],
***REMOVED******REMOVED******REMOVED******REMOVED***image:***REMOVED***["xlink:href",***REMOVED***"href"],
***REMOVED******REMOVED******REMOVED******REMOVED***use:***REMOVED***["xlink:href",***REMOVED***"href"]
***REMOVED******REMOVED***}
};
const***REMOVED***normalizeOptions***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(Object.keys(options).some((key)***REMOVED***=>***REMOVED***shared.isArray(options[key])))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...defaultAssetUrlOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tags:***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...defaultAssetUrlOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***...options
***REMOVED******REMOVED***};
};
const***REMOVED***createAssetUrlTransformWithOptions***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(node,***REMOVED***context)***REMOVED***=>***REMOVED***transformAssetUrl(node,***REMOVED***context,***REMOVED***options);
};
const***REMOVED***transformAssetUrl***REMOVED***=***REMOVED***(node,***REMOVED***context,***REMOVED***options***REMOVED***=***REMOVED***defaultAssetUrlOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.props.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tags***REMOVED***=***REMOVED***options.tags***REMOVED***||***REMOVED***defaultAssetUrlOptions.tags;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***tags[node.tag];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wildCardAttrs***REMOVED***=***REMOVED***tags["*"];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!attrs***REMOVED***&&***REMOVED***!wildCardAttrs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetAttrs***REMOVED***=***REMOVED***(attrs***REMOVED***||***REMOVED***[]).concat(wildCardAttrs***REMOVED***||***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***node.props.forEach((attr,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attr.type***REMOVED***!==***REMOVED***6***REMOVED***||***REMOVED***!assetAttrs.includes(attr.name)***REMOVED***||***REMOVED***!attr.value***REMOVED***||***REMOVED***isExternalUrl(attr.value.content)***REMOVED***||***REMOVED***isDataUrl(attr.value.content)***REMOVED***||***REMOVED***attr.value.content[0]***REMOVED***===***REMOVED***"#"***REMOVED***||***REMOVED***!options.includeAbsolute***REMOVED***&&***REMOVED***!isRelativeUrl(attr.value.content))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***url***REMOVED***=***REMOVED***parseUrl(attr.value.content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.base***REMOVED***&&***REMOVED***attr.value.content[0]***REMOVED***===***REMOVED***".")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***parseUrl(options.base);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***protocol***REMOVED***=***REMOVED***base.protocol***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***host***REMOVED***=***REMOVED***base.host***REMOVED***?***REMOVED***protocol***REMOVED***+***REMOVED***"//"***REMOVED***+***REMOVED***base.host***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***basePath***REMOVED***=***REMOVED***base.path***REMOVED***||***REMOVED***"/";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.value.content***REMOVED***=***REMOVED***host***REMOVED***+***REMOVED***(path$1.posix***REMOVED***||***REMOVED***path$1).join(basePath,***REMOVED***url.path***REMOVED***+***REMOVED***(url.hash***REMOVED***||***REMOVED***""));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exp***REMOVED***=***REMOVED***getImportsExpressionExp(url.path,***REMOVED***url.hash,***REMOVED***attr.loc,***REMOVED***context);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.props[index]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***7,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"bind",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arg:***REMOVED***compilerCore.createSimpleExpression(attr.name,***REMOVED***true,***REMOVED***attr.loc),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifiers:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***attr.loc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
};
function***REMOVED***getImportsExpressionExp(path2,***REMOVED***hash,***REMOVED***loc,***REMOVED***context)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(path2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exp;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingIndex***REMOVED***=***REMOVED***context.imports.findIndex((i)***REMOVED***=>***REMOVED***i.path***REMOVED***===***REMOVED***path2);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingIndex***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***`_imports_${existingIndex}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp***REMOVED***=***REMOVED***context.imports[existingIndex].exp;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***`_imports_${context.imports.length}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp***REMOVED***=***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.imports.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***decodeURIComponent(path2)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hash)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***exp;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashExp***REMOVED***=***REMOVED***`${name}***REMOVED***+***REMOVED***'${hash}'`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finalExp***REMOVED***=***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashExp,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.hoistStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***finalExp;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingHoistIndex***REMOVED***=***REMOVED***context.hoists.findIndex((h)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***h***REMOVED***&&***REMOVED***h.type***REMOVED***===***REMOVED***4***REMOVED***&&***REMOVED***!h.isStatic***REMOVED***&&***REMOVED***h.content***REMOVED***===***REMOVED***hashExp;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingHoistIndex***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`_hoisted_${existingHoistIndex***REMOVED***+***REMOVED***1}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***context.hoist(finalExp);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***compilerCore.createSimpleExpression(`''`,***REMOVED***false,***REMOVED***loc,***REMOVED***3);
***REMOVED******REMOVED***}
}

const***REMOVED***srcsetTags***REMOVED***=***REMOVED***["img",***REMOVED***"source"];
const***REMOVED***escapedSpaceCharacters***REMOVED***=***REMOVED***/(***REMOVED***|\\t|\\n|\\f|\\r)+/g;
const***REMOVED***createSrcsetTransformWithOptions***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(node,***REMOVED***context)***REMOVED***=>***REMOVED***transformSrcset(node,***REMOVED***context,***REMOVED***options);
};
const***REMOVED***transformSrcset***REMOVED***=***REMOVED***(node,***REMOVED***context,***REMOVED***options***REMOVED***=***REMOVED***defaultAssetUrlOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(srcsetTags.includes(node.tag)***REMOVED***&&***REMOVED***node.props.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.props.forEach((attr,***REMOVED***index)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attr.name***REMOVED***===***REMOVED***"srcset"***REMOVED***&&***REMOVED***attr.type***REMOVED***===***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!attr.value)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***attr.value.content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!value)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imageCandidates***REMOVED***=***REMOVED***value.split(",").map((s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[url,***REMOVED***descriptor]***REMOVED***=***REMOVED***s.replace(escapedSpaceCharacters,***REMOVED***"***REMOVED***").trim().split("***REMOVED***",***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***url,***REMOVED***descriptor***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***imageCandidates.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***url***REMOVED***}***REMOVED***=***REMOVED***imageCandidates[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDataUrl(url))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imageCandidates[i***REMOVED***+***REMOVED***1].url***REMOVED***=***REMOVED***url***REMOVED***+***REMOVED***","***REMOVED***+***REMOVED***imageCandidates[i***REMOVED***+***REMOVED***1].url;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imageCandidates.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldProcessUrl***REMOVED***=***REMOVED***(url)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***url***REMOVED***&&***REMOVED***!isExternalUrl(url)***REMOVED***&&***REMOVED***!isDataUrl(url)***REMOVED***&&***REMOVED***(options.includeAbsolute***REMOVED***||***REMOVED***isRelativeUrl(url));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!imageCandidates.some(({***REMOVED***url***REMOVED***})***REMOVED***=>***REMOVED***shouldProcessUrl(url)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.base)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***options.base;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***set***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***needImportTransform***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imageCandidates.forEach((candidate)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***url,***REMOVED***descriptor***REMOVED***}***REMOVED***=***REMOVED***candidate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor***REMOVED***=***REMOVED***descriptor***REMOVED***?***REMOVED***`***REMOVED***${descriptor}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(url[0]***REMOVED***===***REMOVED***".")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***candidate.url***REMOVED***=***REMOVED***(path$1.posix***REMOVED***||***REMOVED***path$1).join(base,***REMOVED***url);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set.push(candidate.url***REMOVED***+***REMOVED***descriptor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shouldProcessUrl(url))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needImportTransform***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set.push(url***REMOVED***+***REMOVED***descriptor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!needImportTransform)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.value.content***REMOVED***=***REMOVED***set.join(",***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***compoundExpression***REMOVED***=***REMOVED***compilerCore.createCompoundExpression([],***REMOVED***attr.loc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imageCandidates.forEach(({***REMOVED***url,***REMOVED***descriptor***REMOVED***},***REMOVED***index2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldProcessUrl(url))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***path:***REMOVED***path2***REMOVED***}***REMOVED***=***REMOVED***parseUrl(url);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exp2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingImportsIndex***REMOVED***=***REMOVED***context.imports.findIndex(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(i)***REMOVED***=>***REMOVED***i.path***REMOVED***===***REMOVED***path2
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingImportsIndex***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp2***REMOVED***=***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`_imports_${existingImportsIndex}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp2***REMOVED***=***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`_imports_${context.imports.length}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.imports.push({***REMOVED***exp:***REMOVED***exp2,***REMOVED***path:***REMOVED***path2***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compoundExpression.children.push(exp2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exp2***REMOVED***=***REMOVED***compilerCore.createSimpleExpression(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"${url}"`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.loc,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***3
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compoundExpression.children.push(exp2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isNotLast***REMOVED***=***REMOVED***imageCandidates.length***REMOVED***-***REMOVED***1***REMOVED***>***REMOVED***index2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(descriptor***REMOVED***&&***REMOVED***isNotLast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compoundExpression.children.push(`***REMOVED***+***REMOVED***'***REMOVED***${descriptor},***REMOVED***'***REMOVED***+***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(descriptor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compoundExpression.children.push(`***REMOVED***+***REMOVED***'***REMOVED***${descriptor}'`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isNotLast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compoundExpression.children.push(`***REMOVED***+***REMOVED***',***REMOVED***'***REMOVED***+***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exp***REMOVED***=***REMOVED***compoundExpression;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.hoistStatic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp***REMOVED***=***REMOVED***context.hoist(compoundExpression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp.constType***REMOVED***=***REMOVED***3;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.props[index]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***7,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"bind",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arg:***REMOVED***compilerCore.createSimpleExpression("srcset",***REMOVED***true,***REMOVED***attr.loc),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifiers:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***attr.loc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

function***REMOVED***commonjsRequire(path)***REMOVED***{
	throw***REMOVED***new***REMOVED***Error('Could***REMOVED***not***REMOVED***dynamically***REMOVED***require***REMOVED***"'***REMOVED***+***REMOVED***path***REMOVED***+***REMOVED***'".***REMOVED***Please***REMOVED***configure***REMOVED***the***REMOVED***dynamicRequireTargets***REMOVED***or/and***REMOVED***ignoreDynamicRequires***REMOVED***option***REMOVED***of***REMOVED***@rollup/plugin-commonjs***REMOVED***appropriately***REMOVED***for***REMOVED***this***REMOVED***require***REMOVED***call***REMOVED***to***REMOVED***work.');
}

var***REMOVED***consolidate$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredConsolidate$1;

function***REMOVED***requireConsolidate$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredConsolidate$1)***REMOVED***return***REMOVED***consolidate$2.exports;
	hasRequiredConsolidate$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{
		/*
		***REMOVED*******REMOVED***Engines***REMOVED***which***REMOVED***do***REMOVED***not***REMOVED***support***REMOVED***caching***REMOVED***of***REMOVED***their***REMOVED***file***REMOVED***contents
		***REMOVED*******REMOVED***should***REMOVED***use***REMOVED***the***REMOVED***`read()`***REMOVED***function***REMOVED***defined***REMOVED***in***REMOVED***consolidate.js
		***REMOVED*******REMOVED***On***REMOVED***top***REMOVED***of***REMOVED***this,***REMOVED***when***REMOVED***an***REMOVED***engine***REMOVED***compiles***REMOVED***to***REMOVED***a***REMOVED***`Function`,
		***REMOVED*******REMOVED***these***REMOVED***functions***REMOVED***should***REMOVED***either***REMOVED***be***REMOVED***cached***REMOVED***within***REMOVED***consolidate.js
		***REMOVED*******REMOVED***or***REMOVED***the***REMOVED***engine***REMOVED***itself***REMOVED***via***REMOVED***`options.cache`.***REMOVED***This***REMOVED***will***REMOVED***allow
		***REMOVED*******REMOVED***users***REMOVED***and***REMOVED***frameworks***REMOVED***to***REMOVED***pass***REMOVED***`options.cache***REMOVED***=***REMOVED***true`***REMOVED***for
		***REMOVED*******REMOVED***`NODE_ENV=production`,***REMOVED***however***REMOVED***edit***REMOVED***the***REMOVED***file(s)***REMOVED***without
		***REMOVED*******REMOVED***re-loading***REMOVED***the***REMOVED***application***REMOVED***in***REMOVED***development.
		***REMOVED****/

		/**
		***REMOVED*******REMOVED***Module***REMOVED***dependencies.
		***REMOVED****/

		var***REMOVED***fs***REMOVED***=***REMOVED***require$$0;
		var***REMOVED***path***REMOVED***=***REMOVED***path$1;
		var***REMOVED***util***REMOVED***=***REMOVED***require$$2;

		var***REMOVED***join***REMOVED***=***REMOVED***path.join;
		var***REMOVED***resolve***REMOVED***=***REMOVED***path.resolve;
		var***REMOVED***extname***REMOVED***=***REMOVED***path.extname;
		var***REMOVED***dirname***REMOVED***=***REMOVED***path.dirname;
		var***REMOVED***isAbsolute***REMOVED***=***REMOVED***path.isAbsolute;

		var***REMOVED***readCache***REMOVED***=***REMOVED***{};

		/**
		***REMOVED*******REMOVED***Require***REMOVED***cache.
		***REMOVED****/

		var***REMOVED***cacheStore***REMOVED***=***REMOVED***{};

		/**
		***REMOVED*******REMOVED***Require***REMOVED***cache.
		***REMOVED****/

		var***REMOVED***requires***REMOVED***=***REMOVED***{};

		/**
		***REMOVED*******REMOVED***Clear***REMOVED***the***REMOVED***cache.
		***REMOVED****
		***REMOVED*******REMOVED***@api***REMOVED***public
		***REMOVED****/

		exports.clearCache***REMOVED***=***REMOVED***function()***REMOVED***{
		***REMOVED******REMOVED***readCache***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED***cacheStore***REMOVED***=***REMOVED***{};
		};

		/**
		***REMOVED*******REMOVED***Conditionally***REMOVED***cache***REMOVED***`compiled`***REMOVED***template***REMOVED***based
		***REMOVED*******REMOVED***on***REMOVED***the***REMOVED***`options`***REMOVED***filename***REMOVED***and***REMOVED***`.cache`***REMOVED***boolean.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***options
		***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***compiled
		***REMOVED*******REMOVED***@return***REMOVED***{Function}
		***REMOVED*******REMOVED***@api***REMOVED***private
		***REMOVED****/

		function***REMOVED***cache(options,***REMOVED***compiled)***REMOVED***{
		***REMOVED******REMOVED***//***REMOVED***cachable
		***REMOVED******REMOVED***if***REMOVED***(compiled***REMOVED***&&***REMOVED***options.filename***REMOVED***&&***REMOVED***options.cache)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***readCache[options.filename];
		***REMOVED******REMOVED******REMOVED******REMOVED***cacheStore[options.filename]***REMOVED***=***REMOVED***compiled;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***compiled;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***check***REMOVED***cache
		***REMOVED******REMOVED***if***REMOVED***(options.filename***REMOVED***&&***REMOVED***options.cache)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cacheStore[options.filename];
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***compiled;
		}

		/**
		***REMOVED*******REMOVED***Read***REMOVED***`path`***REMOVED***with***REMOVED***`options`***REMOVED***with
		***REMOVED*******REMOVED***callback***REMOVED***`(err,***REMOVED***str)`.***REMOVED***When***REMOVED***`options.cache`
		***REMOVED*******REMOVED***is***REMOVED***true***REMOVED***the***REMOVED***template***REMOVED***string***REMOVED***will***REMOVED***be***REMOVED***cached.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***options
		***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***cb
		***REMOVED*******REMOVED***@api***REMOVED***private
		***REMOVED****/

		function***REMOVED***read(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***readCache[path];
		***REMOVED******REMOVED***var***REMOVED***cached***REMOVED***=***REMOVED***options.cache***REMOVED***&&***REMOVED***str***REMOVED***&&***REMOVED***typeof***REMOVED***str***REMOVED***===***REMOVED***'string';

		***REMOVED******REMOVED***//***REMOVED***cached***REMOVED***(only***REMOVED***if***REMOVED***cached***REMOVED***is***REMOVED***a***REMOVED***string***REMOVED***and***REMOVED***not***REMOVED***a***REMOVED***compiled***REMOVED***template***REMOVED***function)
		***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***return***REMOVED***cb(null,***REMOVED***str);

		***REMOVED******REMOVED***//***REMOVED***read
		***REMOVED******REMOVED***fs.readFile(path,***REMOVED***'utf8',***REMOVED***function(err,***REMOVED***str)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***return***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***remove***REMOVED***extraneous***REMOVED***utf8***REMOVED***BOM***REMOVED***marker
		***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.replace(/^\uFEFF/,***REMOVED***'');
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.cache)***REMOVED***readCache[path]***REMOVED***=***REMOVED***str;
		***REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***str);
		***REMOVED******REMOVED***});
		}

		/**
		***REMOVED*******REMOVED***Read***REMOVED***`path`***REMOVED***with***REMOVED***`options`***REMOVED***with
		***REMOVED*******REMOVED***callback***REMOVED***`(err,***REMOVED***str)`.***REMOVED***When***REMOVED***`options.cache`
		***REMOVED*******REMOVED***is***REMOVED***true***REMOVED***the***REMOVED***partial***REMOVED***string***REMOVED***will***REMOVED***be***REMOVED***cached.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***{String}***REMOVED***options
		***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***fn
		***REMOVED*******REMOVED***@api***REMOVED***private
		***REMOVED****/

		function***REMOVED***readPartials(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(!options.partials)***REMOVED***return***REMOVED***cb();
		***REMOVED******REMOVED***var***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(options.partials);
		***REMOVED******REMOVED***var***REMOVED***partials***REMOVED***=***REMOVED***{};

		***REMOVED******REMOVED***function***REMOVED***next(index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***keys.length)***REMOVED***return***REMOVED***cb(null,***REMOVED***partials);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***keys[index];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***partialPath***REMOVED***=***REMOVED***options.partials[key];

		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(partialPath***REMOVED***===***REMOVED***undefined***REMOVED***||***REMOVED***partialPath***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***partialPath***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***next(++index);
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***file;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAbsolute(partialPath))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extname(partialPath)***REMOVED***!==***REMOVED***'')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***partialPath;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***join(partialPath***REMOVED***+***REMOVED***extname(path));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***join(dirname(path),***REMOVED***partialPath***REMOVED***+***REMOVED***extname(path));
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***read(file,***REMOVED***options,***REMOVED***function(err,***REMOVED***str)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***return***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***partials[key]***REMOVED***=***REMOVED***str;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next(++index);
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***next(0);
		}

		/**
		***REMOVED*******REMOVED***promisify
		***REMOVED****/
		function***REMOVED***promisify(cb,***REMOVED***fn)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise(function(resolve,***REMOVED***reject)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***cb***REMOVED***||***REMOVED***function(err,***REMOVED***html)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reject(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(html);
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***fn(cb);
		***REMOVED******REMOVED***});
		}

		/**
		***REMOVED*******REMOVED***fromStringRenderer
		***REMOVED****/

		function***REMOVED***fromStringRenderer(name)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***options.filename***REMOVED***=***REMOVED***path;

		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readPartials(path,***REMOVED***options,***REMOVED***function(err,***REMOVED***partials)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***extend***REMOVED***=***REMOVED***(requires.extend***REMOVED***||***REMOVED***(requires.extend***REMOVED***=***REMOVED***require$$2._extend));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***opts***REMOVED***=***REMOVED***extend({},***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts.partials***REMOVED***=***REMOVED***partials;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***return***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache(opts))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[name].render('',***REMOVED***opts,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***read(path,***REMOVED***opts,***REMOVED***function(err,***REMOVED***str)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***return***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[name].render(str,***REMOVED***opts,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		}

		/**
		***REMOVED*******REMOVED***velocity***REMOVED***support.
		***REMOVED****/

		exports.velocityjs***REMOVED***=***REMOVED***fromStringRenderer('velocityjs');

		/**
		***REMOVED*******REMOVED***velocity***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.velocityjs.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.velocityjs***REMOVED***||***REMOVED***(requires.velocityjs***REMOVED***=***REMOVED***require('velocityjs'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.locals***REMOVED***=***REMOVED***options;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options).trimLeft());
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Liquid***REMOVED***support.
		***REMOVED****/

		exports.liquid***REMOVED***=***REMOVED***fromStringRenderer('liquid');

		/**
		***REMOVED*******REMOVED***Liquid***REMOVED***string***REMOVED***support.
		***REMOVED****/

		/**
		***REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***get***REMOVED***filters***REMOVED***and***REMOVED***custom***REMOVED***tags***REMOVED***we've***REMOVED***had***REMOVED***to***REMOVED***push
		***REMOVED*******REMOVED***all***REMOVED***user-defined***REMOVED***locals***REMOVED***down***REMOVED***into***REMOVED***@locals.***REMOVED***However,***REMOVED***just***REMOVED***to***REMOVED***make***REMOVED***things
		***REMOVED*******REMOVED***backwards-compatible,***REMOVED***any***REMOVED***property***REMOVED***of***REMOVED***`options`***REMOVED***that***REMOVED***is***REMOVED***left***REMOVED***after
		***REMOVED*******REMOVED***processing***REMOVED***and***REMOVED***removing***REMOVED***`locals`,***REMOVED***`meta`,***REMOVED***`filters`,***REMOVED***`customTags`***REMOVED***and
		***REMOVED*******REMOVED***`includeDir`***REMOVED***will***REMOVED***also***REMOVED***become***REMOVED***a***REMOVED***local.
		***REMOVED****/

		function***REMOVED***_renderTinyliquid(engine,***REMOVED***str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***context***REMOVED***=***REMOVED***engine.newContext();
		***REMOVED******REMOVED***var***REMOVED***k;

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***there's***REMOVED***a***REMOVED***bug***REMOVED***in***REMOVED***the***REMOVED***library***REMOVED***that***REMOVED***doesn't***REMOVED***allow***REMOVED***us***REMOVED***to***REMOVED***pass
		***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***locals***REMOVED***to***REMOVED***newContext(),***REMOVED***hence***REMOVED***looping***REMOVED***through***REMOVED***the***REMOVED***keys:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***if***REMOVED***(options.locals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(k***REMOVED***in***REMOVED***options.locals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.setLocals(k,***REMOVED***options.locals[k]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.locals;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(options.meta)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***context.setLocals('page',***REMOVED***options.meta);
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.meta;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Add***REMOVED***any***REMOVED***defined***REMOVED***filters:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***if***REMOVED***(options.filters)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(k***REMOVED***in***REMOVED***options.filters)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.setFilter(k,***REMOVED***options.filters[k]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.filters;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***up***REMOVED***a***REMOVED***callback***REMOVED***for***REMOVED***the***REMOVED***include***REMOVED***directory:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***var***REMOVED***includeDir***REMOVED***=***REMOVED***options.includeDir***REMOVED***||***REMOVED***process.cwd();

		***REMOVED******REMOVED***context.onInclude(function(name,***REMOVED***callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***extname***REMOVED***=***REMOVED***path.extname(name)***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'.liquid';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***filename***REMOVED***=***REMOVED***path.resolve(includeDir,***REMOVED***name***REMOVED***+***REMOVED***extname);

		***REMOVED******REMOVED******REMOVED******REMOVED***fs.readFile(filename,***REMOVED***{encoding:***REMOVED***'utf8'},***REMOVED***function(err,***REMOVED***data)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***return***REMOVED***callback(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback(null,***REMOVED***engine.parse(data));
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***});
		***REMOVED******REMOVED***delete***REMOVED***options.includeDir;

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***custom***REMOVED***tag***REMOVED***functions***REMOVED***need***REMOVED***to***REMOVED***have***REMOVED***their***REMOVED***results***REMOVED***pushed***REMOVED***back
		***REMOVED******REMOVED******REMOVED*******REMOVED***through***REMOVED***the***REMOVED***parser,***REMOVED***so***REMOVED***set***REMOVED***up***REMOVED***a***REMOVED***shim***REMOVED***before***REMOVED***calling***REMOVED***the***REMOVED***provided
		***REMOVED******REMOVED******REMOVED*******REMOVED***callback:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***var***REMOVED***compileOptions***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***customTags:***REMOVED***{}
		***REMOVED******REMOVED***};

		***REMOVED******REMOVED***if***REMOVED***(options.customTags)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tagFunctions***REMOVED***=***REMOVED***options.customTags;

		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(k***REMOVED***in***REMOVED***options.customTags)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/*Tell***REMOVED***jshint***REMOVED***there's***REMOVED***no***REMOVED***problem***REMOVED***with***REMOVED***having***REMOVED***this***REMOVED***function***REMOVED***in***REMOVED***the***REMOVED***loop***REMOVED****/
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/*jshint***REMOVED***-W083***REMOVED****/
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compileOptions.customTags[k]***REMOVED***=***REMOVED***function(context,***REMOVED***name,***REMOVED***body)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tpl***REMOVED***=***REMOVED***tagFunctions[name](body.trim());
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.astStack.push(engine.parse(tpl));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/*jshint***REMOVED***+W083***REMOVED****/
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.customTags;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Now***REMOVED***anything***REMOVED***left***REMOVED***in***REMOVED***`options`***REMOVED***becomes***REMOVED***a***REMOVED***local:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***for***REMOVED***(k***REMOVED***in***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***context.setLocals(k,***REMOVED***options[k]);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Finally,***REMOVED***execute***REMOVED***the***REMOVED***template:
		***REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(context)***REMOVED***||***REMOVED***cache(context,***REMOVED***engine.compile(str,***REMOVED***compileOptions));
		***REMOVED******REMOVED***tmpl(context,***REMOVED***cb);
		}

		exports.liquid.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.liquid;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***Liquid;

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***up***REMOVED***tinyliquid***REMOVED***engine
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.liquid***REMOVED***=***REMOVED***require('tinyliquid');

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***tinyliquid***REMOVED***engine
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_renderTinyliquid(engine,***REMOVED***str,***REMOVED***options,***REMOVED***cb);

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;

		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***up***REMOVED***liquid-node***REMOVED***engine
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Liquid***REMOVED***=***REMOVED***requires.liquid***REMOVED***=***REMOVED***require('liquid-node');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***new***REMOVED***Liquid.Engine();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***liquid-node***REMOVED***engine
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***locals***REMOVED***=***REMOVED***options.locals***REMOVED***||***REMOVED***{};

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.meta)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***locals.pages***REMOVED***=***REMOVED***options.meta;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.meta;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Add***REMOVED***any***REMOVED***defined***REMOVED***filters:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.filters)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.registerFilters(options.filters);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.filters;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***up***REMOVED***a***REMOVED***callback***REMOVED***for***REMOVED***the***REMOVED***include***REMOVED***directory:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***includeDir***REMOVED***=***REMOVED***options.includeDir***REMOVED***||***REMOVED***process.cwd();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.fileSystem***REMOVED***=***REMOVED***new***REMOVED***Liquid.LocalFileSystem(includeDir,***REMOVED***'liquid');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.includeDir;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***custom***REMOVED***tag***REMOVED***functions***REMOVED***need***REMOVED***to***REMOVED***have***REMOVED***their***REMOVED***results***REMOVED***pushed***REMOVED***back
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***through***REMOVED***the***REMOVED***parser,***REMOVED***so***REMOVED***set***REMOVED***up***REMOVED***a***REMOVED***shim***REMOVED***before***REMOVED***calling***REMOVED***the***REMOVED***provided
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***callback:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.customTags)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tagFunctions***REMOVED***=***REMOVED***options.customTags;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(k***REMOVED***in***REMOVED***options.customTags)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.registerTag(k,***REMOVED***tagFunctions[k]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.customTags;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Now***REMOVED***anything***REMOVED***left***REMOVED***in***REMOVED***`options`***REMOVED***becomes***REMOVED***a***REMOVED***local:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***k***REMOVED***in***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***locals[k]***REMOVED***=***REMOVED***options[k];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Finally,***REMOVED***execute***REMOVED***the***REMOVED***template:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***engine
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.parseAndRender(str,***REMOVED***locals)
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.nodeify(function(err,***REMOVED***result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cb(null,***REMOVED***result);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Jade***REMOVED***support.
		***REMOVED****/

		exports.jade***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.jade;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.jade***REMOVED***=***REMOVED***require('jade');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.jade***REMOVED***=***REMOVED***require('then-jade');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(otherError)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compileFile(path,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Jade***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.jade.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.jade;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.jade***REMOVED***=***REMOVED***require('jade');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.jade***REMOVED***=***REMOVED***require('then-jade');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(otherError)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Dust***REMOVED***support.
		***REMOVED****/

		exports.dust***REMOVED***=***REMOVED***fromStringRenderer('dust');

		/**
		***REMOVED*******REMOVED***Dust***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.dust.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.dust;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.dust***REMOVED***=***REMOVED***require('dust');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.dust***REMOVED***=***REMOVED***require('dustjs-helpers');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.dust***REMOVED***=***REMOVED***require('dustjs-linkedin');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ext***REMOVED***=***REMOVED***'dust';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***views***REMOVED***=***REMOVED***'.';

		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.ext)***REMOVED***ext***REMOVED***=***REMOVED***options.ext;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.views)***REMOVED***views***REMOVED***=***REMOVED***options.views;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.settings***REMOVED***&&***REMOVED***options.settings.views)***REMOVED***views***REMOVED***=***REMOVED***options.settings.views;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options***REMOVED***||***REMOVED***(options***REMOVED***&&***REMOVED***!options.cache))***REMOVED***engine.cache***REMOVED***=***REMOVED***{};

		***REMOVED******REMOVED******REMOVED******REMOVED***engine.onLoad***REMOVED***=***REMOVED***function(path,***REMOVED***callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extname(path)***REMOVED***===***REMOVED***'')***REMOVED***path***REMOVED***+=***REMOVED***'.'***REMOVED***+***REMOVED***ext;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path[0]***REMOVED***!==***REMOVED***'/')***REMOVED***path***REMOVED***=***REMOVED***views***REMOVED***+***REMOVED***'/'***REMOVED***+***REMOVED***path;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***read(path,***REMOVED***options,***REMOVED***callback);
		***REMOVED******REMOVED******REMOVED******REMOVED***};

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***templateName;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.filename)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateName***REMOVED***=***REMOVED***options.filename.replace(new***REMOVED***RegExp('^'***REMOVED***+***REMOVED***views***REMOVED***+***REMOVED***'/'),***REMOVED***'').replace(new***REMOVED***RegExp('\\.'***REMOVED***+***REMOVED***ext),***REMOVED***'');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compileFn(str,***REMOVED***templateName));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpl(options,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Swig***REMOVED***support.
		***REMOVED****/

		exports.swig***REMOVED***=***REMOVED***fromStringRenderer('swig');

		/**
		***REMOVED*******REMOVED***Swig***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.swig.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.swig;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.swig***REMOVED***=***REMOVED***require('swig');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.swig***REMOVED***=***REMOVED***require('swig-templates');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(otherError)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.cache***REMOVED***===***REMOVED***true)***REMOVED***options.cache***REMOVED***=***REMOVED***'memory';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.setDefaults({***REMOVED***cache:***REMOVED***options.cache***REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Razor***REMOVED***support.
		***REMOVED****/

		exports.razor***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.razor;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.razor***REMOVED***=***REMOVED***require('razor-tmpl');

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***(locals)***REMOVED***=>***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log('Rendering***REMOVED***razor***REMOVED***file',***REMOVED***path);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***engine.renderFileSync(path,***REMOVED***locals);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***razor***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.razor.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.razor***REMOVED***=***REMOVED***require('razor-tmpl');
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tf***REMOVED***=***REMOVED***engine.compile(str);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***tf);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Atpl***REMOVED***support.
		***REMOVED****/

		exports.atpl***REMOVED***=***REMOVED***fromStringRenderer('atpl');

		/**
		***REMOVED*******REMOVED***Atpl***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.atpl.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.atpl***REMOVED***||***REMOVED***(requires.atpl***REMOVED***=***REMOVED***require('atpl'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Liquor***REMOVED***support,
		***REMOVED****/

		exports.liquor***REMOVED***=***REMOVED***fromStringRenderer('liquor');

		/**
		***REMOVED*******REMOVED***Liquor***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.liquor.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.liquor***REMOVED***||***REMOVED***(requires.liquor***REMOVED***=***REMOVED***require('liquor'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Twig***REMOVED***support.
		***REMOVED****/

		exports.twig***REMOVED***=***REMOVED***fromStringRenderer('twig');

		/**
		***REMOVED*******REMOVED***Twig***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.twig.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.twig***REMOVED***||***REMOVED***(requires.twig***REMOVED***=***REMOVED***require('twig').twig);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***templateData***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***str,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allowInlineIncludes:***REMOVED***options.allowInlineIncludes,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespaces:***REMOVED***options.namespaces,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***options.path
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(templateData)***REMOVED***||***REMOVED***cache(templateData,***REMOVED***engine(templateData));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl.render(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***EJS***REMOVED***support.
		***REMOVED****/

		exports.ejs***REMOVED***=***REMOVED***fromStringRenderer('ejs');

		/**
		***REMOVED*******REMOVED***EJS***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.ejs.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.ejs***REMOVED***||***REMOVED***(requires.ejs***REMOVED***=***REMOVED***require('ejs'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Eco***REMOVED***support.
		***REMOVED****/

		exports.eco***REMOVED***=***REMOVED***fromStringRenderer('eco');

		/**
		***REMOVED*******REMOVED***Eco***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.eco.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.eco***REMOVED***||***REMOVED***(requires.eco***REMOVED***=***REMOVED***require('eco'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Jazz***REMOVED***support.
		***REMOVED****/

		exports.jazz***REMOVED***=***REMOVED***fromStringRenderer('jazz');

		/**
		***REMOVED*******REMOVED***Jazz***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.jazz.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.jazz***REMOVED***||***REMOVED***(requires.jazz***REMOVED***=***REMOVED***require('jazz'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpl.eval(options,***REMOVED***function(str)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***str);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***JQTPL***REMOVED***support.
		***REMOVED****/

		exports.jqtpl***REMOVED***=***REMOVED***fromStringRenderer('jqtpl');

		/**
		***REMOVED*******REMOVED***JQTPL***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.jqtpl.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.jqtpl***REMOVED***||***REMOVED***(requires.jqtpl***REMOVED***=***REMOVED***require('jqtpl'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.template(str,***REMOVED***str);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.tmpl(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Haml***REMOVED***support.
		***REMOVED****/

		exports.haml***REMOVED***=***REMOVED***fromStringRenderer('haml');

		/**
		***REMOVED*******REMOVED***Haml***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.haml.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.haml***REMOVED***||***REMOVED***(requires.haml***REMOVED***=***REMOVED***require('hamljs'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.locals***REMOVED***=***REMOVED***options;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options).trimLeft());
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Hamlet***REMOVED***support.
		***REMOVED****/

		exports.hamlet***REMOVED***=***REMOVED***fromStringRenderer('hamlet');

		/**
		***REMOVED*******REMOVED***Hamlet***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.hamlet.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.hamlet***REMOVED***||***REMOVED***(requires.hamlet***REMOVED***=***REMOVED***require('hamlet'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.locals***REMOVED***=***REMOVED***options;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options).trimLeft());
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Whiskers***REMOVED***support.
		***REMOVED****/

		exports.whiskers***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.whiskers***REMOVED***||***REMOVED***(requires.whiskers***REMOVED***=***REMOVED***require('whiskers'));
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.__express(path,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Whiskers***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.whiskers.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.whiskers***REMOVED***||***REMOVED***(requires.whiskers***REMOVED***=***REMOVED***require('whiskers'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Coffee-HAML***REMOVED***support.
		***REMOVED****/

		exports['haml-coffee']***REMOVED***=***REMOVED***fromStringRenderer('haml-coffee');

		/**
		***REMOVED*******REMOVED***Coffee-HAML***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports['haml-coffee'].render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires['haml-coffee']***REMOVED***||***REMOVED***(requires['haml-coffee']***REMOVED***=***REMOVED***require('haml-coffee'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Hogan***REMOVED***support.
		***REMOVED****/

		exports.hogan***REMOVED***=***REMOVED***fromStringRenderer('hogan');

		/**
		***REMOVED*******REMOVED***Hogan***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.hogan.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.hogan***REMOVED***||***REMOVED***(requires.hogan***REMOVED***=***REMOVED***require('hogan.js'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl.render(options,***REMOVED***options.partials));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***templayed.js***REMOVED***support.
		***REMOVED****/

		exports.templayed***REMOVED***=***REMOVED***fromStringRenderer('templayed');

		/**
		***REMOVED*******REMOVED***templayed.js***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.templayed.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.templayed***REMOVED***||***REMOVED***(requires.templayed***REMOVED***=***REMOVED***require('templayed'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine(str));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Handlebars***REMOVED***support.
		***REMOVED****/

		exports.handlebars***REMOVED***=***REMOVED***fromStringRenderer('handlebars');

		/**
		***REMOVED*******REMOVED***Handlebars***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.handlebars.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.handlebars***REMOVED***||***REMOVED***(requires.handlebars***REMOVED***=***REMOVED***require('handlebars'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***partial***REMOVED***in***REMOVED***options.partials)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.registerPartial(partial,***REMOVED***options.partials[partial]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***helper***REMOVED***in***REMOVED***options.helpers)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.registerHelper(helper,***REMOVED***options.helpers[helper]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Underscore***REMOVED***support.
		***REMOVED****/

		exports.underscore***REMOVED***=***REMOVED***fromStringRenderer('underscore');

		/**
		***REMOVED*******REMOVED***Underscore***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.underscore.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.underscore***REMOVED***||***REMOVED***(requires.underscore***REMOVED***=***REMOVED***require('underscore'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***partials***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***partial***REMOVED***in***REMOVED***options.partials)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***partials[partial]***REMOVED***=***REMOVED***engine.template(options.partials[partial]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.partials***REMOVED***=***REMOVED***partials;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.template(str,***REMOVED***null,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options).replace(/\n$/,***REMOVED***''));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Lodash***REMOVED***support.
		***REMOVED****/

		exports.lodash***REMOVED***=***REMOVED***fromStringRenderer('lodash');

		/**
		***REMOVED*******REMOVED***Lodash***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.lodash.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.lodash***REMOVED***||***REMOVED***(requires.lodash***REMOVED***=***REMOVED***require('lodash'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.template(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options).replace(/\n$/,***REMOVED***''));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Pug***REMOVED***support.***REMOVED***(formerly***REMOVED***Jade)
		***REMOVED****/

		exports.pug***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.pug;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.pug***REMOVED***=***REMOVED***require('pug');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.pug***REMOVED***=***REMOVED***require('then-pug');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(otherError)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compileFile(path,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Pug***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.pug.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.pug;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.pug***REMOVED***=***REMOVED***require('pug');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.pug***REMOVED***=***REMOVED***require('then-pug');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(otherError)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***QEJS***REMOVED***support.
		***REMOVED****/

		exports.qejs***REMOVED***=***REMOVED***fromStringRenderer('qejs');

		/**
		***REMOVED*******REMOVED***QEJS***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.qejs.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.qejs***REMOVED***||***REMOVED***(requires.qejs***REMOVED***=***REMOVED***require('qejs'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.render(str,***REMOVED***options).then(function(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***result);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***function(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).done();
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Walrus***REMOVED***support.
		***REMOVED****/

		exports.walrus***REMOVED***=***REMOVED***fromStringRenderer('walrus');

		/**
		***REMOVED*******REMOVED***Walrus***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.walrus.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.walrus***REMOVED***||***REMOVED***(requires.walrus***REMOVED***=***REMOVED***require('walrus'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.parse(str));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl.compile(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Mustache***REMOVED***support.
		***REMOVED****/

		exports.mustache***REMOVED***=***REMOVED***fromStringRenderer('mustache');

		/**
		***REMOVED*******REMOVED***Mustache***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.mustache.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.mustache***REMOVED***||***REMOVED***(requires.mustache***REMOVED***=***REMOVED***require('mustache'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***engine.render(str,***REMOVED***options,***REMOVED***options.partials));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Just***REMOVED***support.
		***REMOVED****/

		exports.just***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.just;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***JUST***REMOVED***=***REMOVED***require('just');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.just***REMOVED***=***REMOVED***new***REMOVED***JUST();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.configure({***REMOVED***useCache:***REMOVED***options.cache***REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.render(path,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Just***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.just.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***JUST***REMOVED***=***REMOVED***require('just');
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***new***REMOVED***JUST({***REMOVED***root:***REMOVED***{***REMOVED***page:***REMOVED***str***REMOVED***}});
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.render('page',***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***ECT***REMOVED***support.
		***REMOVED****/

		exports.ect***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.ect;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ECT***REMOVED***=***REMOVED***require('ect');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires.ect***REMOVED***=***REMOVED***new***REMOVED***ECT(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.configure({***REMOVED***cache:***REMOVED***options.cache***REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.render(path,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***ECT***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.ect.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ECT***REMOVED***=***REMOVED***require('ect');
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***new***REMOVED***ECT({***REMOVED***root:***REMOVED***{***REMOVED***page:***REMOVED***str***REMOVED***}});
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.render('page',***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***mote***REMOVED***support.
		***REMOVED****/

		exports.mote***REMOVED***=***REMOVED***fromStringRenderer('mote');

		/**
		***REMOVED*******REMOVED***mote***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.mote.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.mote***REMOVED***||***REMOVED***(requires.mote***REMOVED***=***REMOVED***require('mote'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Toffee***REMOVED***support.
		***REMOVED****/

		exports.toffee***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***toffee***REMOVED***=***REMOVED***requires.toffee***REMOVED***||***REMOVED***(requires.toffee***REMOVED***=***REMOVED***require('toffee'));
		***REMOVED******REMOVED******REMOVED******REMOVED***toffee.__consolidate_engine_render(path,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Toffee***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.toffee.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.toffee***REMOVED***||***REMOVED***(requires.toffee***REMOVED***=***REMOVED***require('toffee'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.str_render(str,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***doT***REMOVED***support.
		***REMOVED****/

		exports.dot***REMOVED***=***REMOVED***fromStringRenderer('dot');

		/**
		***REMOVED*******REMOVED***doT***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.dot.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.dot***REMOVED***||***REMOVED***(requires.dot***REMOVED***=***REMOVED***require('dot'));
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***extend***REMOVED***=***REMOVED***(requires.extend***REMOVED***||***REMOVED***(requires.extend***REMOVED***=***REMOVED***require$$2._extend));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***settings***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***settings***REMOVED***=***REMOVED***extend(settings,***REMOVED***engine.templateSettings);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***settings***REMOVED***=***REMOVED***extend(settings,***REMOVED***options***REMOVED***?***REMOVED***options.dot***REMOVED***:***REMOVED***{});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.template(str,***REMOVED***settings,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***bracket***REMOVED***support.
		***REMOVED****/

		exports.bracket***REMOVED***=***REMOVED***fromStringRenderer('bracket');

		/**
		***REMOVED*******REMOVED***bracket***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.bracket.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.bracket***REMOVED***||***REMOVED***(requires.bracket***REMOVED***=***REMOVED***require('bracket-template'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.default.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Ractive***REMOVED***support.
		***REMOVED****/

		exports.ractive***REMOVED***=***REMOVED***fromStringRenderer('ractive');

		/**
		***REMOVED*******REMOVED***Ractive***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.ractive.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***Engine***REMOVED***=***REMOVED***requires.ractive***REMOVED***||***REMOVED***(requires.ractive***REMOVED***=***REMOVED***require('ractive'));

		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***template***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***Engine.parse(str));
		***REMOVED******REMOVED******REMOVED******REMOVED***options.template***REMOVED***=***REMOVED***template;

		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.data***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***options.data***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***extend***REMOVED***=***REMOVED***(requires.extend***REMOVED***||***REMOVED***(requires.extend***REMOVED***=***REMOVED***require$$2._extend));

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Shallow***REMOVED***clone***REMOVED***the***REMOVED***options***REMOVED***object
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.data***REMOVED***=***REMOVED***extend({},***REMOVED***options);

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***consolidate-specific***REMOVED***properties***REMOVED***from***REMOVED***the***REMOVED***clone
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***i;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***properties***REMOVED***=***REMOVED***['template',***REMOVED***'filename',***REMOVED***'cache',***REMOVED***'partials'];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***properties.length;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***property***REMOVED***=***REMOVED***properties[i];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.data[property];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***new***REMOVED***Engine(options).toHTML());
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Nunjucks***REMOVED***support.
		***REMOVED****/

		exports.nunjucks***REMOVED***=***REMOVED***fromStringRenderer('nunjucks');

		/**
		***REMOVED*******REMOVED***Nunjucks***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.nunjucks.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***options.nunjucksEnv***REMOVED***||***REMOVED***requires.nunjucks***REMOVED***||***REMOVED***(requires.nunjucks***REMOVED***=***REMOVED***require('nunjucks'));

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***env***REMOVED***=***REMOVED***engine;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***deprecated***REMOVED***fallback***REMOVED***support***REMOVED***for***REMOVED***express
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<https://github.com/tj/consolidate.js/pull/152>
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<https://github.com/tj/consolidate.js/pull/224>
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.settings***REMOVED***&&***REMOVED***options.settings.views)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***engine.configure(options.settings.views);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(options.nunjucks***REMOVED***&&***REMOVED***options.nunjucks.configure)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***engine.configure.apply(engine,***REMOVED***options.nunjucks.configure);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***because***REMOVED***`renderString`***REMOVED***does***REMOVED***not***REMOVED***initiate***REMOVED***loaders
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***must***REMOVED***manually***REMOVED***create***REMOVED***a***REMOVED***loader***REMOVED***for***REMOVED***it***REMOVED***based***REMOVED***off
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***either***REMOVED***`options.settings.views`***REMOVED***or***REMOVED***`options.nunjucks`***REMOVED***or***REMOVED***`options.nunjucks.root`
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<https://github.com/mozilla/nunjucks/issues/730>
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<https://github.com/crocodilejs/node-email-templates/issues/182>
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***instead***REMOVED***we***REMOVED***simply***REMOVED***check***REMOVED***if***REMOVED***we***REMOVED***passed***REMOVED***a***REMOVED***custom***REMOVED***loader
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***otherwise***REMOVED***we***REMOVED***create***REMOVED***a***REMOVED***simple***REMOVED***file***REMOVED***based***REMOVED***loader
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.loader)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***new***REMOVED***engine.Environment(options.loader);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(options.settings***REMOVED***&&***REMOVED***options.settings.views)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***new***REMOVED***engine.Environment(
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***engine.FileSystemLoader(options.settings.views)
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(options.nunjucks***REMOVED***&&***REMOVED***options.nunjucks.loader)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***options.nunjucks.loader***REMOVED***===***REMOVED***'string')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***new***REMOVED***engine.Environment(new***REMOVED***engine.FileSystemLoader(options.nunjucks.loader));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env***REMOVED***=***REMOVED***new***REMOVED***engine.Environment(
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***engine.FileSystemLoader(
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.nunjucks.loader[0],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.nunjucks.loader[1]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***env.renderString(str,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***HTMLing***REMOVED***support.
		***REMOVED****/

		exports.htmling***REMOVED***=***REMOVED***fromStringRenderer('htmling');

		/**
		***REMOVED*******REMOVED***HTMLing***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.htmling.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.htmling***REMOVED***||***REMOVED***(requires.htmling***REMOVED***=***REMOVED***require('htmling'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.string(str));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl.render(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED******REMOVED***Rendering***REMOVED***function
		***REMOVED****/
		function***REMOVED***requireReact(module,***REMOVED***filename)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***babel***REMOVED***=***REMOVED***requires.babel***REMOVED***||***REMOVED***(requires.babel***REMOVED***=***REMOVED***require('babel-core'));

		***REMOVED******REMOVED***var***REMOVED***compiled***REMOVED***=***REMOVED***babel.transformFileSync(filename,***REMOVED***{***REMOVED***presets:***REMOVED***[***REMOVED***'react'***REMOVED***]***REMOVED***}).code;

		***REMOVED******REMOVED***return***REMOVED***module._compile(compiled,***REMOVED***filename);
		}

		exports.requireReact***REMOVED***=***REMOVED***requireReact;

		/**
		***REMOVED*******REMOVED******REMOVED***Converting***REMOVED***a***REMOVED***string***REMOVED***into***REMOVED***a***REMOVED***node***REMOVED***module.
		***REMOVED****/
		function***REMOVED***requireReactString(src,***REMOVED***filename)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***babel***REMOVED***=***REMOVED***requires.babel***REMOVED***||***REMOVED***(requires.babel***REMOVED***=***REMOVED***require('babel-core'));

		***REMOVED******REMOVED***if***REMOVED***(!filename)***REMOVED***filename***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED***var***REMOVED***m***REMOVED***=***REMOVED***new***REMOVED***module.constructor();
		***REMOVED******REMOVED***filename***REMOVED***=***REMOVED***filename***REMOVED***||***REMOVED***'';

		***REMOVED******REMOVED***//***REMOVED***Compile***REMOVED***Using***REMOVED***React
		***REMOVED******REMOVED***var***REMOVED***compiled***REMOVED***=***REMOVED***babel.transform(src,***REMOVED***{***REMOVED***presets:***REMOVED***[***REMOVED***'react'***REMOVED***]***REMOVED***}).code;

		***REMOVED******REMOVED***//***REMOVED***Compile***REMOVED***as***REMOVED***a***REMOVED***module
		***REMOVED******REMOVED***m.paths***REMOVED***=***REMOVED***module.paths;
		***REMOVED******REMOVED***m._compile(compiled,***REMOVED***filename);

		***REMOVED******REMOVED***return***REMOVED***m.exports;
		}

		/**
		***REMOVED*******REMOVED***A***REMOVED***naive***REMOVED***helper***REMOVED***to***REMOVED***replace***REMOVED***{{tags}}***REMOVED***with***REMOVED***options.tags***REMOVED***content
		***REMOVED****/
		function***REMOVED***reactBaseTmpl(data,***REMOVED***options)***REMOVED***{

		***REMOVED******REMOVED***var***REMOVED***exp;
		***REMOVED******REMOVED***var***REMOVED***regex;

		***REMOVED******REMOVED***//***REMOVED***Iterates***REMOVED***through***REMOVED***the***REMOVED***keys***REMOVED***in***REMOVED***file***REMOVED***object
		***REMOVED******REMOVED***//***REMOVED***and***REMOVED***interpolate***REMOVED***/***REMOVED***replace***REMOVED***{{key}}***REMOVED***with***REMOVED***it's***REMOVED***value
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***k***REMOVED***in***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.hasOwnProperty(k))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exp***REMOVED***=***REMOVED***'{{'***REMOVED***+***REMOVED***k***REMOVED***+***REMOVED***'}}';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***regex***REMOVED***=***REMOVED***new***REMOVED***RegExp(exp,***REMOVED***'g');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(data.match(regex))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data***REMOVED***=***REMOVED***data.replace(regex,***REMOVED***options[k]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***data;
		}

		/**
		****REMOVED***Plates***REMOVED***Support.
		*/

		exports.plates***REMOVED***=***REMOVED***fromStringRenderer('plates');

		/**
		****REMOVED***Plates***REMOVED***string***REMOVED***support.
		*/

		exports.plates.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.plates***REMOVED***||***REMOVED***(requires.plates***REMOVED***=***REMOVED***require('plates'));
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***map***REMOVED***=***REMOVED***options.map***REMOVED***||***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***engine.bind(str,***REMOVED***options,***REMOVED***map);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED******REMOVED***The***REMOVED***main***REMOVED***render***REMOVED***parser***REMOVED***for***REMOVED***React***REMOVED***bsaed***REMOVED***templates
		***REMOVED****/
		function***REMOVED***reactRenderer(type)***REMOVED***{

		***REMOVED******REMOVED***if***REMOVED***(commonjsRequire.extensions)***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***JSX***REMOVED***is***REMOVED***transformed***REMOVED***on***REMOVED***require
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!commonjsRequire.extensions['.jsx'])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commonjsRequire.extensions['.jsx']***REMOVED***=***REMOVED***requireReact;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Supporting***REMOVED***.react***REMOVED***extension***REMOVED***as***REMOVED***well***REMOVED***as***REMOVED***test***REMOVED***cases
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Using***REMOVED***.react***REMOVED***extension***REMOVED***is***REMOVED***not***REMOVED***recommended.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!commonjsRequire.extensions['.react'])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commonjsRequire.extensions['.react']***REMOVED***=***REMOVED***requireReact;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***Return***REMOVED***rendering***REMOVED***fx
		***REMOVED******REMOVED***return***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***React***REMOVED***Import
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ReactDOM***REMOVED***=***REMOVED***requires.ReactDOM***REMOVED***||***REMOVED***(requires.ReactDOM***REMOVED***=***REMOVED***require('react-dom/server'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***react***REMOVED***=***REMOVED***requires.react***REMOVED***||***REMOVED***(requires.react***REMOVED***=***REMOVED***require('react'));

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Assign***REMOVED***HTML***REMOVED***Base
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***base***REMOVED***=***REMOVED***options.base;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.base;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***enableCache***REMOVED***=***REMOVED***options.cache;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.cache;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isNonStatic***REMOVED***=***REMOVED***options.isNonStatic;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.isNonStatic;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Start***REMOVED***Conversion
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***Code;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***Factory;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***baseStr;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parsed;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cache(options))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parsing
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***'path')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***path***REMOVED***=***REMOVED***resolve(str);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***require.cache[path];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Code***REMOVED***=***REMOVED***commonjsRequire(path);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Code***REMOVED***=***REMOVED***requireReactString(str);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Factory***REMOVED***=***REMOVED***cache(options,***REMOVED***react.createFactory(Code));

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Factory***REMOVED***=***REMOVED***cache(options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsed***REMOVED***=***REMOVED***new***REMOVED***Factory(options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***(isNonStatic)***REMOVED***?***REMOVED***ReactDOM.renderToString(parsed)***REMOVED***:***REMOVED***ReactDOM.renderToStaticMarkup(parsed);

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(base)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseStr***REMOVED***=***REMOVED***readCache[str]***REMOVED***||***REMOVED***fs.readFileSync(resolve(base),***REMOVED***'utf8');

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(enableCache)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***readCache[str]***REMOVED***=***REMOVED***baseStr;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.content***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***reactBaseTmpl(baseStr,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***content);

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		}

		/**
		***REMOVED*******REMOVED***React***REMOVED***JS***REMOVED***Support
		***REMOVED****/
		exports.react***REMOVED***=***REMOVED***reactRenderer('path');

		/**
		***REMOVED*******REMOVED***React***REMOVED***JS***REMOVED***string***REMOVED***support.
		***REMOVED****/
		exports.react.render***REMOVED***=***REMOVED***reactRenderer('string');

		/**
		***REMOVED*******REMOVED***ARC-templates***REMOVED***support.
		***REMOVED****/

		exports['arc-templates']***REMOVED***=***REMOVED***fromStringRenderer('arc-templates');

		/**
		***REMOVED*******REMOVED***ARC-templates***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports['arc-templates'].render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***readFileWithOptions***REMOVED***=***REMOVED***util.promisify(read);
		***REMOVED******REMOVED***var***REMOVED***consolidateFileSystem***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED***consolidateFileSystem.readFile***REMOVED***=***REMOVED***function(path)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***readFileWithOptions(path,***REMOVED***options);
		***REMOVED******REMOVED***};

		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires['arc-templates'];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!engine)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***Engine***REMOVED***=***REMOVED***require('arc-templates/dist/es5');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine***REMOVED***=***REMOVED***requires['arc-templates']***REMOVED***=***REMOVED***new***REMOVED***Engine({***REMOVED***filesystem:***REMOVED***consolidateFileSystem***REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***compiler***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compileString(str,***REMOVED***options.filename));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compiler.then(function(func)***REMOVED***{***REMOVED***return***REMOVED***func(options);***REMOVED***})
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.then(function(result)***REMOVED***{***REMOVED***cb(null,***REMOVED***result.content);***REMOVED***})
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.catch(cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Vash***REMOVED***support
		***REMOVED****/
		exports.vash***REMOVED***=***REMOVED***fromStringRenderer('vash');

		/**
		***REMOVED*******REMOVED***Vash***REMOVED***string***REMOVED***support
		***REMOVED****/
		exports.vash.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.vash***REMOVED***||***REMOVED***(requires.vash***REMOVED***=***REMOVED***require('vash'));

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***helper***REMOVED***system***REMOVED***:***REMOVED***https://github.com/kirbysayshi/vash#helper-system
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.helpers)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***options.helpers)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.helpers.hasOwnProperty(key)***REMOVED***||***REMOVED***typeof***REMOVED***options.helpers[key]***REMOVED***!==***REMOVED***'function')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.helpers[key]***REMOVED***=***REMOVED***options.helpers[key];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpl(options,***REMOVED***function***REMOVED***sealLayout(err,***REMOVED***ctx)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.finishLayout();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***ctx.toString().replace(/\n$/,***REMOVED***''));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Slm***REMOVED***support.
		***REMOVED****/

		exports.slm***REMOVED***=***REMOVED***fromStringRenderer('slm');

		/**
		***REMOVED*******REMOVED***Slm***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.slm.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.slm***REMOVED***||***REMOVED***(requires.slm***REMOVED***=***REMOVED***require('slm'));

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Marko***REMOVED***support.
		***REMOVED****/

		exports.marko***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.marko***REMOVED***||***REMOVED***(requires.marko***REMOVED***=***REMOVED***require('marko'));
		***REMOVED******REMOVED******REMOVED******REMOVED***options.writeToDisk***REMOVED***=***REMOVED***!!options.cache;

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.load(path,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpl.renderToString(options,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Marko***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.marko.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.marko***REMOVED***||***REMOVED***(requires.marko***REMOVED***=***REMOVED***require('marko'));
		***REMOVED******REMOVED******REMOVED******REMOVED***options.writeToDisk***REMOVED***=***REMOVED***!!options.cache;
		***REMOVED******REMOVED******REMOVED******REMOVED***options.filename***REMOVED***=***REMOVED***options.filename***REMOVED***||***REMOVED***'string.marko';

		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.load(options.filename,***REMOVED***str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpl.renderToString(options,***REMOVED***cb);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Teacup***REMOVED***support.
		***REMOVED****/
		exports.teacup***REMOVED***=***REMOVED***function(path,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.teacup***REMOVED***||***REMOVED***(requires.teacup***REMOVED***=***REMOVED***require('teacup/lib/express'));
		***REMOVED******REMOVED******REMOVED******REMOVED***commonjsRequire.extensions['.teacup']***REMOVED***=***REMOVED***commonjsRequire.extensions['.coffee'];
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(path[0]***REMOVED***!==***REMOVED***'/')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***join(process.cwd(),***REMOVED***path);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.cache)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***callback***REMOVED***=***REMOVED***cb;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***function()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***require.cache[path];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback.apply(this,***REMOVED***arguments);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***engine.renderFile(path,***REMOVED***options,***REMOVED***cb);
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Teacup***REMOVED***string***REMOVED***support.
		***REMOVED****/
		exports.teacup.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***coffee***REMOVED***=***REMOVED***require('coffee-script');
		***REMOVED******REMOVED***var***REMOVED***vm***REMOVED***=***REMOVED***require('vm');
		***REMOVED******REMOVED***var***REMOVED***sandbox***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***module:***REMOVED***{exports:***REMOVED***{}},
		***REMOVED******REMOVED******REMOVED******REMOVED***require:***REMOVED***commonjsRequire
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***vm.runInNewContext(coffee.compile(str),***REMOVED***sandbox);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***sandbox.module.exports;
		***REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options));
		***REMOVED******REMOVED***});
		};

		/**
		***REMOVED*******REMOVED***Squirrelly***REMOVED***support.
		***REMOVED****/

		exports.squirrelly***REMOVED***=***REMOVED***fromStringRenderer('squirrelly');

		/**
		***REMOVED*******REMOVED***Squirrelly***REMOVED***string***REMOVED***support.
		***REMOVED****/

		exports.squirrelly.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.squirrelly***REMOVED***||***REMOVED***(requires.squirrelly***REMOVED***=***REMOVED***require('squirrelly'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***partial***REMOVED***in***REMOVED***options.partials)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.definePartial(partial,***REMOVED***options.partials[partial]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***helper***REMOVED***in***REMOVED***options.helpers)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***engine.defineHelper(helper,***REMOVED***options.helpers[helper]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***engine.Compile(str,***REMOVED***options));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl(options,***REMOVED***engine));
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};
		/**
		***REMOVED*******REMOVED***Twing***REMOVED***support.
		***REMOVED****/

		exports.twing***REMOVED***=***REMOVED***fromStringRenderer('twing');

		/**
		***REMOVED*******REMOVED***Twing***REMOVED***string***REMOVED***support.
		***REMOVED****/***REMOVED***

		exports.twing.render***REMOVED***=***REMOVED***function(str,***REMOVED***options,***REMOVED***cb)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***promisify(cb,***REMOVED***function(cb)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***engine***REMOVED***=***REMOVED***requires.twing***REMOVED***||***REMOVED***(requires.twing***REMOVED***=***REMOVED***require('twing'));
		***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***engine.TwingEnvironment(new***REMOVED***engine.TwingLoaderNull()).createTemplate(str).then((twingTemplate)***REMOVED***=>***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***twingTemplate.render(options).then((rendTmpl)***REMOVED***=>***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tmpl***REMOVED***=***REMOVED***cache(options)***REMOVED***||***REMOVED***cache(options,***REMOVED***rendTmpl);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(null,***REMOVED***tmpl);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(err);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***});
		};
		/**
		***REMOVED*******REMOVED***expose***REMOVED***the***REMOVED***instance***REMOVED***of***REMOVED***the***REMOVED***engine
		***REMOVED****/
		exports.requires***REMOVED***=***REMOVED***requires;***REMOVED***
	}***REMOVED***(consolidate$2,***REMOVED***consolidate$2.exports));
	return***REMOVED***consolidate$2.exports;
}

var***REMOVED***consolidate$1;
var***REMOVED***hasRequiredConsolidate;

function***REMOVED***requireConsolidate***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredConsolidate)***REMOVED***return***REMOVED***consolidate$1;
	hasRequiredConsolidate***REMOVED***=***REMOVED***1;
	consolidate$1***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireConsolidate$1();
	return***REMOVED***consolidate$1;
}

var***REMOVED***consolidateExports***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireConsolidate();
var***REMOVED***consolidate***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(consolidateExports);

const***REMOVED***hasWarned***REMOVED***=***REMOVED***{};
function***REMOVED***warnOnce(msg)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isNodeProd***REMOVED***=***REMOVED***typeof***REMOVED***process***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***process.env.NODE_ENV***REMOVED***===***REMOVED***"production";
***REMOVED******REMOVED***if***REMOVED***(!isNodeProd***REMOVED***&&***REMOVED***true***REMOVED***&&***REMOVED***!hasWarned[msg])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasWarned[msg]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***warn(msg);
***REMOVED******REMOVED***}
}
function***REMOVED***warn(msg)***REMOVED***{
***REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED***`\x1B[1m\x1B[33m[@vue/compiler-sfc]\x1B[0m\x1B[33m***REMOVED***${msg}\x1B[0m
`
***REMOVED******REMOVED***);
}

function***REMOVED***preprocess$1({***REMOVED***source,***REMOVED***filename,***REMOVED***preprocessOptions***REMOVED***},***REMOVED***preprocessor)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***res***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***err***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***preprocessor.render(
***REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***filename,***REMOVED***...preprocessOptions***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***(_err,***REMOVED***_res)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_err)***REMOVED***err***REMOVED***=***REMOVED***_err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***_res;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***compileTemplate(options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***preprocessLang,***REMOVED***preprocessCustomRequire***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***preprocessor***REMOVED***=***REMOVED***preprocessLang***REMOVED***?***REMOVED***preprocessCustomRequire***REMOVED***?***REMOVED***preprocessCustomRequire(preprocessLang)***REMOVED***:***REMOVED***consolidate[preprocessLang]***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(preprocessor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***doCompileTemplate({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***preprocess$1(options,***REMOVED***preprocessor),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***void***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***invalidate***REMOVED***AST***REMOVED***if***REMOVED***template***REMOVED***goes***REMOVED***through***REMOVED***preprocessor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***`export***REMOVED***default***REMOVED***function***REMOVED***render()***REMOVED***{}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***options.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tips:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[e]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(preprocessLang)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***`export***REMOVED***default***REMOVED***function***REMOVED***render()***REMOVED***{}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***options.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tips:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***${options.filename}***REMOVED***uses***REMOVED***lang***REMOVED***${preprocessLang}***REMOVED***for***REMOVED***template.***REMOVED***Please***REMOVED***install***REMOVED***the***REMOVED***language***REMOVED***preprocessor.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***${options.filename}***REMOVED***uses***REMOVED***lang***REMOVED***${preprocessLang}***REMOVED***for***REMOVED***template,***REMOVED***however***REMOVED***it***REMOVED***is***REMOVED***not***REMOVED***installed.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***doCompileTemplate(options);
***REMOVED******REMOVED***}
}
function***REMOVED***doCompileTemplate({
***REMOVED******REMOVED***filename,
***REMOVED******REMOVED***id,
***REMOVED******REMOVED***scoped,
***REMOVED******REMOVED***slotted,
***REMOVED******REMOVED***inMap,
***REMOVED******REMOVED***source,
***REMOVED******REMOVED***ast:***REMOVED***inAST,
***REMOVED******REMOVED***ssr***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED***ssrCssVars,
***REMOVED******REMOVED***isProd***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED***compiler,
***REMOVED******REMOVED***compilerOptions***REMOVED***=***REMOVED***{},
***REMOVED******REMOVED***transformAssetUrls
})***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***warnings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***nodeTransforms***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(shared.isObject(transformAssetUrls))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***assetOptions***REMOVED***=***REMOVED***normalizeOptions(transformAssetUrls);
***REMOVED******REMOVED******REMOVED******REMOVED***nodeTransforms***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createAssetUrlTransformWithOptions(assetOptions),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createSrcsetTransformWithOptions(assetOptions)
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(transformAssetUrls***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nodeTransforms***REMOVED***=***REMOVED***[transformAssetUrl,***REMOVED***transformSrcset];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ssr***REMOVED***&&***REMOVED***!ssrCssVars)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`compileTemplate***REMOVED***is***REMOVED***called***REMOVED***with***REMOVED***\`ssr:***REMOVED***true\`***REMOVED***but***REMOVED***no***REMOVED***corresponding***REMOVED***\`cssVars\`***REMOVED***option.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnce(`compileTemplate***REMOVED***now***REMOVED***requires***REMOVED***the***REMOVED***\`id\`***REMOVED***option.`);
***REMOVED******REMOVED******REMOVED******REMOVED***id***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***shortId***REMOVED***=***REMOVED***id.replace(/^data-v-/,***REMOVED***"");
***REMOVED******REMOVED***const***REMOVED***longId***REMOVED***=***REMOVED***`data-v-${shortId}`;
***REMOVED******REMOVED***const***REMOVED***defaultCompiler***REMOVED***=***REMOVED***ssr***REMOVED***?***REMOVED***CompilerSSR__namespace***REMOVED***:***REMOVED***CompilerDOM__namespace;
***REMOVED******REMOVED***compiler***REMOVED***=***REMOVED***compiler***REMOVED***||***REMOVED***defaultCompiler;
***REMOVED******REMOVED***if***REMOVED***(compiler***REMOVED***!==***REMOVED***defaultCompiler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***inAST***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(inAST***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***inAST.transformed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newAST***REMOVED***=***REMOVED***(ssr***REMOVED***?***REMOVED***CompilerDOM__namespace***REMOVED***:***REMOVED***compiler).parse(inAST.source,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...compilerOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parseMode:***REMOVED***"sfc",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onError:***REMOVED***(e)***REMOVED***=>***REMOVED***errors.push(e)
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***template***REMOVED***=***REMOVED***newAST.children.find(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node)***REMOVED***=>***REMOVED***node.type***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***node.tag***REMOVED***===***REMOVED***"template"
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***inAST***REMOVED***=***REMOVED***compilerCore.createRoot(template.children,***REMOVED***inAST.source);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***{***REMOVED***code,***REMOVED***ast,***REMOVED***preamble,***REMOVED***map***REMOVED***}***REMOVED***=***REMOVED***compiler.compile(inAST***REMOVED***||***REMOVED***source,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***"module",
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***cacheHandlers:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCssVars:***REMOVED***ssr***REMOVED***&&***REMOVED***ssrCssVars***REMOVED***&&***REMOVED***ssrCssVars.length***REMOVED***?***REMOVED***genCssVarsFromList(ssrCssVars,***REMOVED***shortId,***REMOVED***isProd,***REMOVED***true)***REMOVED***:***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED***scopeId:***REMOVED***scoped***REMOVED***?***REMOVED***longId***REMOVED***:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***slotted,
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***...compilerOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***hmr:***REMOVED***!isProd,
***REMOVED******REMOVED******REMOVED******REMOVED***nodeTransforms:***REMOVED***nodeTransforms.concat(compilerOptions.nodeTransforms***REMOVED***||***REMOVED***[]),
***REMOVED******REMOVED******REMOVED******REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED***onError:***REMOVED***(e)***REMOVED***=>***REMOVED***errors.push(e),
***REMOVED******REMOVED******REMOVED******REMOVED***onWarn:***REMOVED***(w)***REMOVED***=>***REMOVED***warnings.push(w)
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(inMap***REMOVED***&&***REMOVED***!inAST)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map***REMOVED***=***REMOVED***mapLines(inMap,***REMOVED***map);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errors.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchErrors(errors,***REMOVED***source,***REMOVED***inMap);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***tips***REMOVED***=***REMOVED***warnings.map((w)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***msg***REMOVED***=***REMOVED***w.message;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(w.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***msg***REMOVED***+=***REMOVED***`
${shared.generateCodeFrame(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(inAST***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***inAST.source)***REMOVED***||***REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***w.loc.start.offset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***w.loc.end.offset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***msg;
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***{***REMOVED***code,***REMOVED***ast,***REMOVED***preamble,***REMOVED***source,***REMOVED***errors,***REMOVED***tips,***REMOVED***map***REMOVED***};
}
function***REMOVED***mapLines(oldMap,***REMOVED***newMap)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!oldMap)***REMOVED***return***REMOVED***newMap;
***REMOVED******REMOVED***if***REMOVED***(!newMap)***REMOVED***return***REMOVED***oldMap;
***REMOVED******REMOVED***const***REMOVED***oldMapConsumer***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapConsumer(oldMap);
***REMOVED******REMOVED***const***REMOVED***newMapConsumer***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapConsumer(newMap);
***REMOVED******REMOVED***const***REMOVED***mergedMapGenerator***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapGenerator();
***REMOVED******REMOVED***newMapConsumer.eachMapping((m)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.originalLine***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***origPosInOldMap***REMOVED***=***REMOVED***oldMapConsumer.originalPositionFor({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.originalColumn
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(origPosInOldMap.source***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***mergedMapGenerator.addMapping({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.generatedLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.generatedColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***origPosInOldMap.line,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***map***REMOVED***line
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***current***REMOVED***column,***REMOVED***since***REMOVED***the***REMOVED***oldMap***REMOVED***produced***REMOVED***by***REMOVED***@vue/compiler-sfc
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***does***REMOVED***not
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.originalColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***origPosInOldMap.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***origPosInOldMap.name
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});
***REMOVED******REMOVED***const***REMOVED***generator***REMOVED***=***REMOVED***mergedMapGenerator;
***REMOVED******REMOVED***oldMapConsumer.sources.forEach((sourceFile)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***generator._sources.add(sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceContent***REMOVED***=***REMOVED***oldMapConsumer.sourceContentFor(sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceContent***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergedMapGenerator.setSourceContent(sourceFile,***REMOVED***sourceContent);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***generator._sourceRoot***REMOVED***=***REMOVED***oldMap.sourceRoot;
***REMOVED******REMOVED***generator._file***REMOVED***=***REMOVED***oldMap.file;
***REMOVED******REMOVED***return***REMOVED***generator.toJSON();
}
function***REMOVED***patchErrors(errors,***REMOVED***source,***REMOVED***inMap)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***originalSource***REMOVED***=***REMOVED***inMap.sourcesContent[0];
***REMOVED******REMOVED***const***REMOVED***offset***REMOVED***=***REMOVED***originalSource.indexOf(source);
***REMOVED******REMOVED***const***REMOVED***lineOffset***REMOVED***=***REMOVED***originalSource.slice(0,***REMOVED***offset).split(/\r?\n/).length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***errors.forEach((err)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.start.line***REMOVED***+=***REMOVED***lineOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.start.offset***REMOVED***+=***REMOVED***offset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err.loc.end***REMOVED***!==***REMOVED***err.loc.start)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.end.line***REMOVED***+=***REMOVED***lineOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.end.offset***REMOVED***+=***REMOVED***offset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}

const***REMOVED***trimPlugin***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"vue-sfc-trim",
***REMOVED******REMOVED******REMOVED******REMOVED***Once(root)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walk(({***REMOVED***type,***REMOVED***raws***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"rule"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"atrule")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(raws.before)***REMOVED***raws.before***REMOVED***=***REMOVED***"\n";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("after"***REMOVED***in***REMOVED***raws***REMOVED***&&***REMOVED***raws.after)***REMOVED***raws.after***REMOVED***=***REMOVED***"\n";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};
trimPlugin.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***dist$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***processor$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***parser$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***root$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***container$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***node$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***util$2***REMOVED***=***REMOVED***{};

var***REMOVED***unesc$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredUnesc$1;

function***REMOVED***requireUnesc$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUnesc$1)***REMOVED***return***REMOVED***unesc$1.exports;
	hasRequiredUnesc$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***unesc;
		//***REMOVED***Many***REMOVED***thanks***REMOVED***for***REMOVED***this***REMOVED***post***REMOVED***which***REMOVED***made***REMOVED***this***REMOVED***migration***REMOVED***much***REMOVED***easier.
		//***REMOVED***https://mathiasbynens.be/notes/css-escapes

		/**
		***REMOVED*******REMOVED***
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***str***REMOVED***
		***REMOVED*******REMOVED***@returns***REMOVED***{[string,***REMOVED***number]|undefined}
		***REMOVED****/
		function***REMOVED***gobbleHex(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***lower***REMOVED***=***REMOVED***str.toLowerCase();
		***REMOVED******REMOVED***var***REMOVED***hex***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED***var***REMOVED***spaceTerminated***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***lower[i]***REMOVED***!==***REMOVED***undefined;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***lower.charCodeAt(i);
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***to***REMOVED***see***REMOVED***if***REMOVED***we***REMOVED***are***REMOVED***dealing***REMOVED***with***REMOVED***a***REMOVED***valid***REMOVED***hex***REMOVED***char***REMOVED***[a-f|0-9]
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valid***REMOVED***=***REMOVED***code***REMOVED***>=***REMOVED***97***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***102***REMOVED***||***REMOVED***code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57;
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#consume-escaped-code-point
		***REMOVED******REMOVED******REMOVED******REMOVED***spaceTerminated***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***32;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!valid)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***hex***REMOVED***+=***REMOVED***lower[i];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(hex.length***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***codePoint***REMOVED***=***REMOVED***parseInt(hex,***REMOVED***16);
		***REMOVED******REMOVED***var***REMOVED***isSurrogate***REMOVED***=***REMOVED***codePoint***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***codePoint***REMOVED***<=***REMOVED***0xDFFF;
		***REMOVED******REMOVED***//***REMOVED***Add***REMOVED***special***REMOVED***case***REMOVED***for
		***REMOVED******REMOVED***//***REMOVED***"If***REMOVED***this***REMOVED***number***REMOVED***is***REMOVED***zero,***REMOVED***or***REMOVED***is***REMOVED***for***REMOVED***a***REMOVED***surrogate,***REMOVED***or***REMOVED***is***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***maximum***REMOVED***allowed***REMOVED***code***REMOVED***point"
		***REMOVED******REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point
		***REMOVED******REMOVED***if***REMOVED***(isSurrogate***REMOVED***||***REMOVED***codePoint***REMOVED***===***REMOVED***0x0000***REMOVED***||***REMOVED***codePoint***REMOVED***>***REMOVED***0x10FFFF)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["\uFFFD",***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***[String.fromCodePoint(codePoint),***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
		}
		var***REMOVED***CONTAINS_ESCAPE***REMOVED***=***REMOVED***/\\/;
		function***REMOVED***unesc(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***needToProcess***REMOVED***=***REMOVED***CONTAINS_ESCAPE.test(str);
		***REMOVED******REMOVED***if***REMOVED***(!needToProcess)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***ret***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***str.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i]***REMOVED***===***REMOVED***"\\")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***gobbled***REMOVED***=***REMOVED***gobbleHex(str.slice(i***REMOVED***+***REMOVED***1,***REMOVED***i***REMOVED***+***REMOVED***7));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(gobbled***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***gobbled[0];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***gobbled[1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Retain***REMOVED***a***REMOVED***pair***REMOVED***of***REMOVED***\\***REMOVED***if***REMOVED***double***REMOVED***escaped***REMOVED***`\\\\`
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***"\\")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***"\\";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***\\***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***string***REMOVED***retain***REMOVED***it
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str.length***REMOVED***===***REMOVED***i***REMOVED***+***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***ret;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(unesc$1,***REMOVED***unesc$1.exports));
	return***REMOVED***unesc$1.exports;
}

var***REMOVED***getProp$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredGetProp$1;

function***REMOVED***requireGetProp$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGetProp$1)***REMOVED***return***REMOVED***getProp$1.exports;
	hasRequiredGetProp$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***getProp;
		function***REMOVED***getProp(obj)***REMOVED***{
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***obj;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(getProp$1,***REMOVED***getProp$1.exports));
	return***REMOVED***getProp$1.exports;
}

var***REMOVED***ensureObject$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredEnsureObject$1;

function***REMOVED***requireEnsureObject$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredEnsureObject$1)***REMOVED***return***REMOVED***ensureObject$1.exports;
	hasRequiredEnsureObject$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***ensureObject;
		function***REMOVED***ensureObject(obj)***REMOVED***{
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***obj[prop]***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
		***REMOVED******REMOVED***}
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(ensureObject$1,***REMOVED***ensureObject$1.exports));
	return***REMOVED***ensureObject$1.exports;
}

var***REMOVED***stripComments$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredStripComments$1;

function***REMOVED***requireStripComments$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredStripComments$1)***REMOVED***return***REMOVED***stripComments$1.exports;
	hasRequiredStripComments$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***stripComments;
		function***REMOVED***stripComments(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***s***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED***var***REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*");
		***REMOVED******REMOVED***var***REMOVED***lastEnd***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***while***REMOVED***(commentStart***REMOVED***>=***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd,***REMOVED***commentStart);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentEnd***REMOVED***=***REMOVED***str.indexOf("*/",***REMOVED***commentStart***REMOVED***+***REMOVED***2);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentEnd***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***lastEnd***REMOVED***=***REMOVED***commentEnd***REMOVED***+***REMOVED***2;
		***REMOVED******REMOVED******REMOVED******REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*",***REMOVED***lastEnd);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd);
		***REMOVED******REMOVED***return***REMOVED***s;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(stripComments$1,***REMOVED***stripComments$1.exports));
	return***REMOVED***stripComments$1.exports;
}

var***REMOVED***hasRequiredUtil$2;

function***REMOVED***requireUtil$2***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUtil$2)***REMOVED***return***REMOVED***util$2;
	hasRequiredUtil$2***REMOVED***=***REMOVED***1;

	util$2.__esModule***REMOVED***=***REMOVED***true;
	util$2.unesc***REMOVED***=***REMOVED***util$2.stripComments***REMOVED***=***REMOVED***util$2.getProp***REMOVED***=***REMOVED***util$2.ensureObject***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUnesc$1());
	util$2.unesc***REMOVED***=***REMOVED***_unesc["default"];
	var***REMOVED***_getProp***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireGetProp$1());
	util$2.getProp***REMOVED***=***REMOVED***_getProp["default"];
	var***REMOVED***_ensureObject***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireEnsureObject$1());
	util$2.ensureObject***REMOVED***=***REMOVED***_ensureObject["default"];
	var***REMOVED***_stripComments***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireStripComments$1());
	util$2.stripComments***REMOVED***=***REMOVED***_stripComments["default"];
	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
	return***REMOVED***util$2;
}

var***REMOVED***hasRequiredNode$2;

function***REMOVED***requireNode$2***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNode$2)***REMOVED***return***REMOVED***node$2.exports;
	hasRequiredNode$2***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$2();
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		var***REMOVED***cloneNode***REMOVED***=***REMOVED***function***REMOVED***cloneNode(obj,***REMOVED***parent)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***obj***REMOVED***!==***REMOVED***'object'***REMOVED***||***REMOVED***obj***REMOVED***===***REMOVED***null)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***obj;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***new***REMOVED***obj.constructor();
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***in***REMOVED***obj)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj.hasOwnProperty(i))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***obj[i];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***'parent'***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***'object')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***parent;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***instanceof***REMOVED***Array)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***value.map(function***REMOVED***(j)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloneNode(j,***REMOVED***cloned);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***cloneNode(value,***REMOVED***cloned);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***cloned;
		};
		var***REMOVED***Node***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Node(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this,***REMOVED***opts);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.spaces***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.before***REMOVED***=***REMOVED***this.spaces.before***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.after***REMOVED***=***REMOVED***this.spaces.after***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Node.prototype;
		***REMOVED******REMOVED***_proto.remove***REMOVED***=***REMOVED***function***REMOVED***remove()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.removeChild(this);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.replaceWith***REMOVED***=***REMOVED***function***REMOVED***replaceWith()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***index***REMOVED***in***REMOVED***arguments)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.insertBefore(this,***REMOVED***arguments[index]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.remove();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.next***REMOVED***=***REMOVED***function***REMOVED***next()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.prev***REMOVED***=***REMOVED***function***REMOVED***prev()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.clone***REMOVED***=***REMOVED***function***REMOVED***clone(overrides)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(overrides***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overrides***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***cloneNode(this);
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***name***REMOVED***in***REMOVED***overrides)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[name]***REMOVED***=***REMOVED***overrides[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***non***REMOVED***standard***REMOVED***syntax***REMOVED***to***REMOVED***be***REMOVED***appended***REMOVED***to***REMOVED***an***REMOVED***existing***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***by***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value.***REMOVED***By***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value,
		***REMOVED******REMOVED******REMOVED*******REMOVED***illegal***REMOVED***characters***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***optional.***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.appendToPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***appendToPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalValue***REMOVED***=***REMOVED***this[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalEscaped***REMOVED***=***REMOVED***this.raws[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***originalValue***REMOVED***+***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalEscaped***REMOVED***||***REMOVED***valueEscaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***(originalEscaped***REMOVED***||***REMOVED***originalValue)***REMOVED***+***REMOVED***valueEscaped;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];***REMOVED***//***REMOVED***delete***REMOVED***any***REMOVED***escaped***REMOVED***value***REMOVED***that***REMOVED***was***REMOVED***created***REMOVED***by***REMOVED***the***REMOVED***setter.
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***to***REMOVED***be***REMOVED***specified***REMOVED***directly,***REMOVED***allowing***REMOVED***illegal
		***REMOVED******REMOVED******REMOVED*******REMOVED***characters***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***valueEscaped;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***When***REMOVED***you***REMOVED***want***REMOVED***a***REMOVED***value***REMOVED***to***REMOVED***passed***REMOVED***through***REMOVED***to***REMOVED***CSS***REMOVED***directly.***REMOVED***This***REMOVED***method
		***REMOVED******REMOVED******REMOVED*******REMOVED***deletes***REMOVED***the***REMOVED***corresponding***REMOVED***raw***REMOVED***value***REMOVED***causing***REMOVED***the***REMOVED***stringifier***REMOVED***to***REMOVED***fallback
		***REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***the***REMOVED***unescaped***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***that***REMOVED***is***REMOVED***both***REMOVED***escaped***REMOVED***and***REMOVED***unescaped.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setPropertyWithoutEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyWithoutEscape(name,***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***column***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.isAtPosition***REMOVED***=***REMOVED***function***REMOVED***isAtPosition(line,***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source***REMOVED***&&***REMOVED***this.source.start***REMOVED***&&***REMOVED***this.source.end)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***>***REMOVED***line)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***<***REMOVED***line)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.start.column***REMOVED***>***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.end.column***REMOVED***<***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.stringifyProperty***REMOVED***=***REMOVED***function***REMOVED***stringifyProperty(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws[name]***REMOVED***||***REMOVED***this[name];
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(this.stringifyProperty("value"));
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.valueToString(),***REMOVED***this.rawSpaceAfter].join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Node,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceBefore",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.before;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces***REMOVED***&&***REMOVED***this.spaces.before;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.before***REMOVED***=***REMOVED***raw;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceAfter",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.after;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces.after;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.after***REMOVED***=***REMOVED***raw;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Node;
		}();
		exports["default"]***REMOVED***=***REMOVED***Node;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(node$2,***REMOVED***node$2.exports));
	return***REMOVED***node$2.exports;
}

var***REMOVED***types$2***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredTypes$1;

function***REMOVED***requireTypes$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTypes$1)***REMOVED***return***REMOVED***types$2;
	hasRequiredTypes$1***REMOVED***=***REMOVED***1;

	types$2.__esModule***REMOVED***=***REMOVED***true;
	types$2.UNIVERSAL***REMOVED***=***REMOVED***types$2.TAG***REMOVED***=***REMOVED***types$2.STRING***REMOVED***=***REMOVED***types$2.SELECTOR***REMOVED***=***REMOVED***types$2.ROOT***REMOVED***=***REMOVED***types$2.PSEUDO***REMOVED***=***REMOVED***types$2.NESTING***REMOVED***=***REMOVED***types$2.ID***REMOVED***=***REMOVED***types$2.COMMENT***REMOVED***=***REMOVED***types$2.COMBINATOR***REMOVED***=***REMOVED***types$2.CLASS***REMOVED***=***REMOVED***types$2.ATTRIBUTE***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***TAG***REMOVED***=***REMOVED***'tag';
	types$2.TAG***REMOVED***=***REMOVED***TAG;
	var***REMOVED***STRING***REMOVED***=***REMOVED***'string';
	types$2.STRING***REMOVED***=***REMOVED***STRING;
	var***REMOVED***SELECTOR***REMOVED***=***REMOVED***'selector';
	types$2.SELECTOR***REMOVED***=***REMOVED***SELECTOR;
	var***REMOVED***ROOT***REMOVED***=***REMOVED***'root';
	types$2.ROOT***REMOVED***=***REMOVED***ROOT;
	var***REMOVED***PSEUDO***REMOVED***=***REMOVED***'pseudo';
	types$2.PSEUDO***REMOVED***=***REMOVED***PSEUDO;
	var***REMOVED***NESTING***REMOVED***=***REMOVED***'nesting';
	types$2.NESTING***REMOVED***=***REMOVED***NESTING;
	var***REMOVED***ID***REMOVED***=***REMOVED***'id';
	types$2.ID***REMOVED***=***REMOVED***ID;
	var***REMOVED***COMMENT***REMOVED***=***REMOVED***'comment';
	types$2.COMMENT***REMOVED***=***REMOVED***COMMENT;
	var***REMOVED***COMBINATOR***REMOVED***=***REMOVED***'combinator';
	types$2.COMBINATOR***REMOVED***=***REMOVED***COMBINATOR;
	var***REMOVED***CLASS***REMOVED***=***REMOVED***'class';
	types$2.CLASS***REMOVED***=***REMOVED***CLASS;
	var***REMOVED***ATTRIBUTE***REMOVED***=***REMOVED***'attribute';
	types$2.ATTRIBUTE***REMOVED***=***REMOVED***ATTRIBUTE;
	var***REMOVED***UNIVERSAL***REMOVED***=***REMOVED***'universal';
	types$2.UNIVERSAL***REMOVED***=***REMOVED***UNIVERSAL;
	return***REMOVED***types$2;
}

var***REMOVED***hasRequiredContainer$1;

function***REMOVED***requireContainer$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredContainer$1)***REMOVED***return***REMOVED***container$1.exports;
	hasRequiredContainer$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***types***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTypes$1());
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_createForOfIteratorHelperLoose(o,***REMOVED***allowArrayLike)***REMOVED***{***REMOVED***var***REMOVED***it***REMOVED***=***REMOVED***typeof***REMOVED***Symbol***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***o[Symbol.iterator]***REMOVED***||***REMOVED***o["@@iterator"];***REMOVED***if***REMOVED***(it)***REMOVED***return***REMOVED***(it***REMOVED***=***REMOVED***it.call(o)).next.bind(it);***REMOVED***if***REMOVED***(Array.isArray(o)***REMOVED***||***REMOVED***(it***REMOVED***=***REMOVED***_unsupportedIterableToArray(o))***REMOVED***||***REMOVED***allowArrayLike)***REMOVED***{***REMOVED***if***REMOVED***(it)***REMOVED***o***REMOVED***=***REMOVED***it;***REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***return***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***o.length)***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***true***REMOVED***};***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***false,***REMOVED***value:***REMOVED***o[i++]***REMOVED***};***REMOVED***};***REMOVED***}***REMOVED***throw***REMOVED***new***REMOVED***TypeError("Invalid***REMOVED***attempt***REMOVED***to***REMOVED***iterate***REMOVED***non-iterable***REMOVED***instance.\nIn***REMOVED***order***REMOVED***to***REMOVED***be***REMOVED***iterable,***REMOVED***non-array***REMOVED***objects***REMOVED***must***REMOVED***have***REMOVED***a***REMOVED***[Symbol.iterator]()***REMOVED***method.");***REMOVED***}
		function***REMOVED***_unsupportedIterableToArray(o,***REMOVED***minLen)***REMOVED***{***REMOVED***if***REMOVED***(!o)***REMOVED***return;***REMOVED***if***REMOVED***(typeof***REMOVED***o***REMOVED***===***REMOVED***"string")***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***Object.prototype.toString.call(o).slice(8,***REMOVED***-1);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Object"***REMOVED***&&***REMOVED***o.constructor)***REMOVED***n***REMOVED***=***REMOVED***o.constructor.name;***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Map"***REMOVED***||***REMOVED***n***REMOVED***===***REMOVED***"Set")***REMOVED***return***REMOVED***Array.from(o);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Arguments"***REMOVED***||***REMOVED***/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***}
		function***REMOVED***_arrayLikeToArray(arr,***REMOVED***len)***REMOVED***{***REMOVED***if***REMOVED***(len***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***len***REMOVED***>***REMOVED***arr.length)***REMOVED***len***REMOVED***=***REMOVED***arr.length;***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***arr2***REMOVED***=***REMOVED***new***REMOVED***Array(len);***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{***REMOVED***arr2[i]***REMOVED***=***REMOVED***arr[i];***REMOVED***}***REMOVED***return***REMOVED***arr2;***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Container***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Container,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Container(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_this.nodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this.nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Container.prototype;
		***REMOVED******REMOVED***_proto.append***REMOVED***=***REMOVED***function***REMOVED***append(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.push(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.prepend***REMOVED***=***REMOVED***function***REMOVED***prepend(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.unshift(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.at***REMOVED***=***REMOVED***function***REMOVED***at(index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes[index];
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.index***REMOVED***=***REMOVED***function***REMOVED***index(child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***child***REMOVED***===***REMOVED***'number')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***child;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.indexOf(child);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.removeChild***REMOVED***=***REMOVED***function***REMOVED***removeChild(child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***child***REMOVED***=***REMOVED***this.index(child);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.at(child).parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(child,***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.removeAll***REMOVED***=***REMOVED***function***REMOVED***removeAll()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_iterator***REMOVED***=***REMOVED***_createForOfIteratorHelperLoose(this.nodes),***REMOVED***_step;***REMOVED***!(_step***REMOVED***=***REMOVED***_iterator()).done;)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***_step.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.empty***REMOVED***=***REMOVED***function***REMOVED***empty()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.removeAll();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.insertAfter***REMOVED***=***REMOVED***function***REMOVED***insertAfter(oldNode,***REMOVED***newNode)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$nodes;
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***resetNode***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***2;***REMOVED***i***REMOVED***<***REMOVED***arguments.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetNode.push(arguments[i]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***(_this$nodes***REMOVED***=***REMOVED***this.nodes).splice.apply(_this$nodes,***REMOVED***[oldIndex***REMOVED***+***REMOVED***1,***REMOVED***0,***REMOVED***newNode].concat(resetNode));
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldIndex***REMOVED***<***REMOVED***index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***arguments.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.insertBefore***REMOVED***=***REMOVED***function***REMOVED***insertBefore(oldNode,***REMOVED***newNode)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$nodes2;
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***resetNode***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***2;***REMOVED***i***REMOVED***<***REMOVED***arguments.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetNode.push(arguments[i]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***(_this$nodes2***REMOVED***=***REMOVED***this.nodes).splice.apply(_this$nodes2,***REMOVED***[oldIndex,***REMOVED***0,***REMOVED***newNode].concat(resetNode));
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***oldIndex)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***arguments.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._findChildAtPosition***REMOVED***=***REMOVED***function***REMOVED***_findChildAtPosition(line,***REMOVED***col)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***found***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.each(function***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.atPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***foundChild***REMOVED***=***REMOVED***node.atPosition(line,***REMOVED***col);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundChild)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***foundChild;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.isAtPosition(line,***REMOVED***col))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***found;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***most***REMOVED***specific***REMOVED***node***REMOVED***at***REMOVED***the***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***number***REMOVED***given.
		***REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***source***REMOVED***location***REMOVED***is***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***original***REMOVED***parsed***REMOVED***location,***REMOVED***locations***REMOVED***aren't
		***REMOVED******REMOVED******REMOVED*******REMOVED***updated***REMOVED***as***REMOVED***selector***REMOVED***nodes***REMOVED***are***REMOVED***mutated.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***location***REMOVED***is***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***first***REMOVED***character
		***REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***selector,***REMOVED***and***REMOVED***not***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***in***REMOVED***the***REMOVED***overall***REMOVED***document
		***REMOVED******REMOVED******REMOVED*******REMOVED***when***REMOVED***used***REMOVED***in***REMOVED***conjunction***REMOVED***with***REMOVED***postcss.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***not***REMOVED***found,***REMOVED***returns***REMOVED***undefined.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***col***REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.atPosition***REMOVED***=***REMOVED***function***REMOVED***atPosition(line,***REMOVED***col)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAtPosition(line,***REMOVED***col))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._findChildAtPosition(line,***REMOVED***col)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._inferEndPosition***REMOVED***=***REMOVED***function***REMOVED***_inferEndPosition()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.last***REMOVED***&&***REMOVED***this.last.source***REMOVED***&&***REMOVED***this.last.source.end)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***this.source***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.end***REMOVED***=***REMOVED***this.source.end***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this.source.end,***REMOVED***this.last.source.end);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.each***REMOVED***=***REMOVED***function***REMOVED***each(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.lastEach)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach++;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***id***REMOVED***=***REMOVED***this.lastEach;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index,***REMOVED***result;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.indexes[id]***REMOVED***<***REMOVED***this.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***callback(this.at(index),***REMOVED***index);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walk***REMOVED***=***REMOVED***function***REMOVED***walk(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.each(function***REMOVED***(node,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***callback(node,***REMOVED***i);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***node.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***node.walk(callback);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkAttributes***REMOVED***=***REMOVED***function***REMOVED***walkAttributes(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.ATTRIBUTE)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this2,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkClasses***REMOVED***=***REMOVED***function***REMOVED***walkClasses(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.CLASS)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this3,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkCombinators***REMOVED***=***REMOVED***function***REMOVED***walkCombinators(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.COMBINATOR)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this4,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkComments***REMOVED***=***REMOVED***function***REMOVED***walkComments(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.COMMENT)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this5,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkIds***REMOVED***=***REMOVED***function***REMOVED***walkIds(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this6***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.ID)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this6,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkNesting***REMOVED***=***REMOVED***function***REMOVED***walkNesting(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this7***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.NESTING)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this7,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkPseudos***REMOVED***=***REMOVED***function***REMOVED***walkPseudos(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this8***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.PSEUDO)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this8,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkTags***REMOVED***=***REMOVED***function***REMOVED***walkTags(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this9***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.TAG)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this9,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkUniversals***REMOVED***=***REMOVED***function***REMOVED***walkUniversals(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this10***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.UNIVERSAL)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this10,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.split***REMOVED***=***REMOVED***function***REMOVED***split(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this11***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***node,***REMOVED***index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***split***REMOVED***=***REMOVED***callback.call(_this11,***REMOVED***node);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current.push(node);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(split)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***_this11.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.map***REMOVED***=***REMOVED***function***REMOVED***map(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.map(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.reduce***REMOVED***=***REMOVED***function***REMOVED***reduce(callback,***REMOVED***memo)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.reduce(callback,***REMOVED***memo);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.every***REMOVED***=***REMOVED***function***REMOVED***every(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.every(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.some***REMOVED***=***REMOVED***function***REMOVED***some(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.some(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.filter***REMOVED***=***REMOVED***function***REMOVED***filter(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.filter(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.sort***REMOVED***=***REMOVED***function***REMOVED***sort(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.sort(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.map(String).join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Container,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"first",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(0);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"last",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(this.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"length",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Container;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Container;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(container$1,***REMOVED***container$1.exports));
	return***REMOVED***container$1.exports;
}

var***REMOVED***hasRequiredRoot$1;

function***REMOVED***requireRoot$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredRoot$1)***REMOVED***return***REMOVED***root$1.exports;
	hasRequiredRoot$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Root***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Root,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Root(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ROOT;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Root.prototype;
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(String(selector));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]).join(',');
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.trailingComma***REMOVED***?***REMOVED***str***REMOVED***+***REMOVED***','***REMOVED***:***REMOVED***str;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._error)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._error(message,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Root,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"errorGenerator",
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(handler)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._error***REMOVED***=***REMOVED***handler;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Root;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Root;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(root$1,***REMOVED***root$1.exports));
	return***REMOVED***root$1.exports;
}

var***REMOVED***selector$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredSelector$1;

function***REMOVED***requireSelector$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSelector$1)***REMOVED***return***REMOVED***selector$1.exports;
	hasRequiredSelector$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Selector***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Selector,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Selector(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.SELECTOR;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Selector;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Selector;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(selector$1,***REMOVED***selector$1.exports));
	return***REMOVED***selector$1.exports;
}

var***REMOVED***className$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

/*!***REMOVED***https://mths.be/cssesc***REMOVED***v3.0.0***REMOVED***by***REMOVED***@mathias***REMOVED****/

var***REMOVED***cssesc_1;
var***REMOVED***hasRequiredCssesc;

function***REMOVED***requireCssesc***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredCssesc)***REMOVED***return***REMOVED***cssesc_1;
	hasRequiredCssesc***REMOVED***=***REMOVED***1;

	var***REMOVED***object***REMOVED***=***REMOVED***{};
	var***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***object.hasOwnProperty;
	var***REMOVED***merge***REMOVED***=***REMOVED***function***REMOVED***merge(options,***REMOVED***defaults)***REMOVED***{
		if***REMOVED***(!options)***REMOVED***{
			return***REMOVED***defaults;
		}
		var***REMOVED***result***REMOVED***=***REMOVED***{};
		for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***defaults)***REMOVED***{
			//***REMOVED***`if***REMOVED***(defaults.hasOwnProperty(key)***REMOVED***{***REMOVED***…***REMOVED***}`***REMOVED***is***REMOVED***not***REMOVED***needed***REMOVED***here,***REMOVED***since
			//***REMOVED***only***REMOVED***recognized***REMOVED***option***REMOVED***names***REMOVED***are***REMOVED***used.
			result[key]***REMOVED***=***REMOVED***hasOwnProperty.call(options,***REMOVED***key)***REMOVED***?***REMOVED***options[key]***REMOVED***:***REMOVED***defaults[key];
		}
		return***REMOVED***result;
	};

	var***REMOVED***regexAnySingleEscape***REMOVED***=***REMOVED***/[***REMOVED***-,\.\/:-@\[-\^`\{-~]/;
	var***REMOVED***regexSingleEscape***REMOVED***=***REMOVED***/[***REMOVED***-,\.\/:-@\[\]\^`\{-~]/;
	var***REMOVED***regexExcessiveSpaces***REMOVED***=***REMOVED***/(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;

	//***REMOVED***https://mathiasbynens.be/notes/css-escapes#css
	var***REMOVED***cssesc***REMOVED***=***REMOVED***function***REMOVED***cssesc(string,***REMOVED***options)***REMOVED***{
		options***REMOVED***=***REMOVED***merge(options,***REMOVED***cssesc.options);
		if***REMOVED***(options.quotes***REMOVED***!=***REMOVED***'single'***REMOVED***&&***REMOVED***options.quotes***REMOVED***!=***REMOVED***'double')***REMOVED***{
			options.quotes***REMOVED***=***REMOVED***'single';
		}
		var***REMOVED***quote***REMOVED***=***REMOVED***options.quotes***REMOVED***==***REMOVED***'double'***REMOVED***?***REMOVED***'"'***REMOVED***:***REMOVED***'\'';
		var***REMOVED***isIdentifier***REMOVED***=***REMOVED***options.isIdentifier;

		var***REMOVED***firstChar***REMOVED***=***REMOVED***string.charAt(0);
		var***REMOVED***output***REMOVED***=***REMOVED***'';
		var***REMOVED***counter***REMOVED***=***REMOVED***0;
		var***REMOVED***length***REMOVED***=***REMOVED***string.length;
		while***REMOVED***(counter***REMOVED***<***REMOVED***length)***REMOVED***{
			var***REMOVED***character***REMOVED***=***REMOVED***string.charAt(counter++);
			var***REMOVED***codePoint***REMOVED***=***REMOVED***character.charCodeAt();
			var***REMOVED***value***REMOVED***=***REMOVED***void***REMOVED***0;
			//***REMOVED***If***REMOVED***it’s***REMOVED***not***REMOVED***a***REMOVED***printable***REMOVED***ASCII***REMOVED***character…
			if***REMOVED***(codePoint***REMOVED***<***REMOVED***0x20***REMOVED***||***REMOVED***codePoint***REMOVED***>***REMOVED***0x7E)***REMOVED***{
				if***REMOVED***(codePoint***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***codePoint***REMOVED***<=***REMOVED***0xDBFF***REMOVED***&&***REMOVED***counter***REMOVED***<***REMOVED***length)***REMOVED***{
					//***REMOVED***It’s***REMOVED***a***REMOVED***high***REMOVED***surrogate,***REMOVED***and***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***next***REMOVED***character.
					var***REMOVED***extra***REMOVED***=***REMOVED***string.charCodeAt(counter++);
					if***REMOVED***((extra***REMOVED***&***REMOVED***0xFC00)***REMOVED***==***REMOVED***0xDC00)***REMOVED***{
						//***REMOVED***next***REMOVED***character***REMOVED***is***REMOVED***low***REMOVED***surrogate
						codePoint***REMOVED***=***REMOVED***((codePoint***REMOVED***&***REMOVED***0x3FF)***REMOVED***<<***REMOVED***10)***REMOVED***+***REMOVED***(extra***REMOVED***&***REMOVED***0x3FF)***REMOVED***+***REMOVED***0x10000;
					}***REMOVED***else***REMOVED***{
						//***REMOVED***It’s***REMOVED***an***REMOVED***unmatched***REMOVED***surrogate;***REMOVED***only***REMOVED***append***REMOVED***this***REMOVED***code***REMOVED***unit,***REMOVED***in***REMOVED***case
						//***REMOVED***the***REMOVED***next***REMOVED***code***REMOVED***unit***REMOVED***is***REMOVED***the***REMOVED***high***REMOVED***surrogate***REMOVED***of***REMOVED***a***REMOVED***surrogate***REMOVED***pair.
						counter--;
					}
				}
				value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
			}***REMOVED***else***REMOVED***{
				if***REMOVED***(options.escapeEverything)***REMOVED***{
					if***REMOVED***(regexAnySingleEscape.test(character))***REMOVED***{
						value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***character;
					}***REMOVED***else***REMOVED***{
						value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
					}
				}***REMOVED***else***REMOVED***if***REMOVED***(/[\t\n\f\r\x0B]/.test(character))***REMOVED***{
					value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***codePoint.toString(16).toUpperCase()***REMOVED***+***REMOVED***'***REMOVED***';
				}***REMOVED***else***REMOVED***if***REMOVED***(character***REMOVED***==***REMOVED***'\\'***REMOVED***||***REMOVED***!isIdentifier***REMOVED***&&***REMOVED***(character***REMOVED***==***REMOVED***'"'***REMOVED***&&***REMOVED***quote***REMOVED***==***REMOVED***character***REMOVED***||***REMOVED***character***REMOVED***==***REMOVED***'\''***REMOVED***&&***REMOVED***quote***REMOVED***==***REMOVED***character)***REMOVED***||***REMOVED***isIdentifier***REMOVED***&&***REMOVED***regexSingleEscape.test(character))***REMOVED***{
					value***REMOVED***=***REMOVED***'\\'***REMOVED***+***REMOVED***character;
				}***REMOVED***else***REMOVED***{
					value***REMOVED***=***REMOVED***character;
				}
			}
			output***REMOVED***+=***REMOVED***value;
		}

		if***REMOVED***(isIdentifier)***REMOVED***{
			if***REMOVED***(/^-[-\d]/.test(output))***REMOVED***{
				output***REMOVED***=***REMOVED***'\\-'***REMOVED***+***REMOVED***output.slice(1);
			}***REMOVED***else***REMOVED***if***REMOVED***(/\d/.test(firstChar))***REMOVED***{
				output***REMOVED***=***REMOVED***'\\3'***REMOVED***+***REMOVED***firstChar***REMOVED***+***REMOVED***'***REMOVED***'***REMOVED***+***REMOVED***output.slice(1);
			}
		}

		//***REMOVED***Remove***REMOVED***spaces***REMOVED***after***REMOVED***`\HEX`***REMOVED***escapes***REMOVED***that***REMOVED***are***REMOVED***not***REMOVED***followed***REMOVED***by***REMOVED***a***REMOVED***hex***REMOVED***digit,
		//***REMOVED***since***REMOVED***they’re***REMOVED***redundant.***REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***possible***REMOVED***if***REMOVED***the***REMOVED***escape
		//***REMOVED***sequence***REMOVED***isn’t***REMOVED***preceded***REMOVED***by***REMOVED***an***REMOVED***odd***REMOVED***number***REMOVED***of***REMOVED***backslashes.
		output***REMOVED***=***REMOVED***output.replace(regexExcessiveSpaces,***REMOVED***function***REMOVED***($0,***REMOVED***$1,***REMOVED***$2)***REMOVED***{
			if***REMOVED***($1***REMOVED***&&***REMOVED***$1.length***REMOVED***%***REMOVED***2)***REMOVED***{
				//***REMOVED***It’s***REMOVED***not***REMOVED***safe***REMOVED***to***REMOVED***remove***REMOVED***the***REMOVED***space,***REMOVED***so***REMOVED***don’t.
				return***REMOVED***$0;
			}
			//***REMOVED***Strip***REMOVED***the***REMOVED***space.
			return***REMOVED***($1***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***$2;
		});

		if***REMOVED***(!isIdentifier***REMOVED***&&***REMOVED***options.wrap)***REMOVED***{
			return***REMOVED***quote***REMOVED***+***REMOVED***output***REMOVED***+***REMOVED***quote;
		}
		return***REMOVED***output;
	};

	//***REMOVED***Expose***REMOVED***default***REMOVED***options***REMOVED***(so***REMOVED***they***REMOVED***can***REMOVED***be***REMOVED***overridden***REMOVED***globally).
	cssesc.options***REMOVED***=***REMOVED***{
		'escapeEverything':***REMOVED***false,
		'isIdentifier':***REMOVED***false,
		'quotes':***REMOVED***'single',
		'wrap':***REMOVED***false
	};

	cssesc.version***REMOVED***=***REMOVED***'3.0.0';

	cssesc_1***REMOVED***=***REMOVED***cssesc;
	return***REMOVED***cssesc_1;
}

var***REMOVED***hasRequiredClassName$1;

function***REMOVED***requireClassName$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredClassName$1)***REMOVED***return***REMOVED***className$1.exports;
	hasRequiredClassName$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$2();
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***ClassName***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(ClassName,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***ClassName(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.CLASS;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ClassName.prototype;
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'.'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(ClassName,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***ClassName;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***ClassName;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(className$1,***REMOVED***className$1.exports));
	return***REMOVED***className$1.exports;
}

var***REMOVED***comment$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredComment$1;

function***REMOVED***requireComment$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredComment$1)***REMOVED***return***REMOVED***comment$1.exports;
	hasRequiredComment$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Comment***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Comment,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Comment(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMMENT;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Comment;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Comment;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(comment$1,***REMOVED***comment$1.exports));
	return***REMOVED***comment$1.exports;
}

var***REMOVED***id$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredId$1;

function***REMOVED***requireId$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredId$1)***REMOVED***return***REMOVED***id$1.exports;
	hasRequiredId$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***ID***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(ID,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***ID(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ID;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ID.prototype;
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'#'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***ID;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***ID;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(id$1,***REMOVED***id$1.exports));
	return***REMOVED***id$1.exports;
}

var***REMOVED***tag$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***namespace$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredNamespace$1;

function***REMOVED***requireNamespace$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNamespace$1)***REMOVED***return***REMOVED***namespace$1.exports;
	hasRequiredNamespace$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$2();
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Namespace***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Namespace,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Namespace()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_Node.apply(this,***REMOVED***arguments)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Namespace.prototype;
		***REMOVED******REMOVED***_proto.qualifiedName***REMOVED***=***REMOVED***function***REMOVED***qualifiedName(value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespaceString***REMOVED***+***REMOVED***"|"***REMOVED***+***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(_Node.prototype.valueToString.call(this));
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Namespace,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespace",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"&")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(namespace,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.namespace***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"ns",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespaceString",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ns***REMOVED***=***REMOVED***this.stringifyProperty("namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns***REMOVED***===***REMOVED***true)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ns;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Namespace;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Namespace;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(namespace$1,***REMOVED***namespace$1.exports));
	return***REMOVED***namespace$1.exports;
}

var***REMOVED***hasRequiredTag$1;

function***REMOVED***requireTag$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTag$1)***REMOVED***return***REMOVED***tag$1.exports;
	hasRequiredTag$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Tag***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Tag,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Tag(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.TAG;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Tag;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Tag;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(tag$1,***REMOVED***tag$1.exports));
	return***REMOVED***tag$1.exports;
}

var***REMOVED***string$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredString$1;

function***REMOVED***requireString$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredString$1)***REMOVED***return***REMOVED***string$1.exports;
	hasRequiredString$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***String***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(String,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***String(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.STRING;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***String;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***String;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(string$1,***REMOVED***string$1.exports));
	return***REMOVED***string$1.exports;
}

var***REMOVED***pseudo$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredPseudo$1;

function***REMOVED***requirePseudo$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredPseudo$1)***REMOVED***return***REMOVED***pseudo$1.exports;
	hasRequiredPseudo$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Pseudo***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Pseudo,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Pseudo(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.PSEUDO;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Pseudo.prototype;
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***params***REMOVED***=***REMOVED***this.length***REMOVED***?***REMOVED***'('***REMOVED***+***REMOVED***this.map(String).join(',')***REMOVED***+***REMOVED***')'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.stringifyProperty("value"),***REMOVED***params,***REMOVED***this.rawSpaceAfter].join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***Pseudo;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Pseudo;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(pseudo$1,***REMOVED***pseudo$1.exports));
	return***REMOVED***pseudo$1.exports;
}

var***REMOVED***attribute$1***REMOVED***=***REMOVED***{};

var***REMOVED***node$1;
var***REMOVED***hasRequiredNode$1;

function***REMOVED***requireNode$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNode$1)***REMOVED***return***REMOVED***node$1;
	hasRequiredNode$1***REMOVED***=***REMOVED***1;
	/**
	***REMOVED*******REMOVED***For***REMOVED***Node.js,***REMOVED***simply***REMOVED***re-export***REMOVED***the***REMOVED***core***REMOVED***`util.deprecate`***REMOVED***function.
	***REMOVED****/

	node$1***REMOVED***=***REMOVED***require$$2.deprecate;
	return***REMOVED***node$1;
}

var***REMOVED***hasRequiredAttribute$1;

function***REMOVED***requireAttribute$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredAttribute$1)***REMOVED***return***REMOVED***attribute$1;
	hasRequiredAttribute$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		exports.unescapeValue***REMOVED***=***REMOVED***unescapeValue;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUnesc$1());
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		var***REMOVED***_CSSESC_QUOTE_OPTIONS;
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***deprecate***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireNode$1();
		var***REMOVED***WRAPPED_IN_QUOTES***REMOVED***=***REMOVED***/^('|")([^]*)\1$/;
		var***REMOVED***warnOfDeprecatedValueAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***an***REMOVED***attribute***REMOVED***a***REMOVED***value***REMOVED***containing***REMOVED***characters***REMOVED***that***REMOVED***might***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***escaped***REMOVED***is***REMOVED***deprecated.***REMOVED***"***REMOVED***+***REMOVED***"Call***REMOVED***attribute.setValue()***REMOVED***instead.");
		var***REMOVED***warnOfDeprecatedQuotedAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***attr.quoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***Assign***REMOVED***to***REMOVED***attr.quoteMark***REMOVED***instead.");
		var***REMOVED***warnOfDeprecatedConstructor***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Constructing***REMOVED***an***REMOVED***Attribute***REMOVED***selector***REMOVED***with***REMOVED***a***REMOVED***value***REMOVED***without***REMOVED***specifying***REMOVED***quoteMark***REMOVED***is***REMOVED***deprecated.***REMOVED***Note:***REMOVED***The***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unescaped***REMOVED***now.");
		function***REMOVED***unescapeValue(value)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***deprecatedUsage***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED***var***REMOVED***unescaped***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED***var***REMOVED***m***REMOVED***=***REMOVED***unescaped.match(WRAPPED_IN_QUOTES);
		***REMOVED******REMOVED***if***REMOVED***(m)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***m[1];
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***m[2];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_unesc["default"])(unescaped);
		***REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage:***REMOVED***deprecatedUsage,
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped:***REMOVED***unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark:***REMOVED***quoteMark
		***REMOVED******REMOVED***};
		}
		function***REMOVED***handleDeprecatedContructorOpts(opts)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(opts.quoteMark***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(opts.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***warnOfDeprecatedConstructor();
		***REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***unescapeValue(opts.value),
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark,
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped;
		***REMOVED******REMOVED***if***REMOVED***(!opts.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(opts.raws.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws.value***REMOVED***=***REMOVED***opts.value;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***opts.value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED***opts.quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED***return***REMOVED***opts;
		}
		var***REMOVED***Attribute***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Attribute,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Attribute(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***handleDeprecatedContructorOpts(opts))***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ATTRIBUTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.raws***REMOVED***=***REMOVED***_this.raws***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(_this.raws,***REMOVED***'unquoted',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"attr.raws.unquoted***REMOVED***is***REMOVED***deprecated.***REMOVED***Call***REMOVED***attr.value***REMOVED***instead."),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"Setting***REMOVED***attr.raws.unquoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***attr.value***REMOVED***is***REMOVED***unescaped***REMOVED***by***REMOVED***default***REMOVED***now.")
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***Attribute's***REMOVED***value***REMOVED***quoted***REMOVED***such***REMOVED***that***REMOVED***it***REMOVED***would***REMOVED***be***REMOVED***legal***REMOVED***to***REMOVED***use
		***REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***a***REMOVED***css***REMOVED***file.***REMOVED***The***REMOVED***original***REMOVED***value's***REMOVED***quotation***REMOVED***setting
		***REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***for***REMOVED***stringification***REMOVED***is***REMOVED***left***REMOVED***unchanged.***REMOVED***See***REMOVED***`setValue(value,***REMOVED***options)`
		***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***control***REMOVED***the***REMOVED***quote***REMOVED***settings***REMOVED***of***REMOVED***a***REMOVED***new***REMOVED***value***REMOVED***for***REMOVED***the***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***You***REMOVED***can***REMOVED***also***REMOVED***change***REMOVED***the***REMOVED***quotation***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***value***REMOVED***by***REMOVED***setting***REMOVED***quoteMark.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***Options:
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***quoteMark***REMOVED***{'"'***REMOVED***|***REMOVED***"'"***REMOVED***|***REMOVED***null}***REMOVED***-***REMOVED***Use***REMOVED***this***REMOVED***value***REMOVED***to***REMOVED***quote***REMOVED***the***REMOVED***value.***REMOVED***If***REMOVED***this
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***set,***REMOVED***the***REMOVED***original***REMOVED***value***REMOVED***for***REMOVED***quoteMark***REMOVED***will***REMOVED***be***REMOVED***used.***REMOVED***If
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminate,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.***REMOVED***The***REMOVED***legal***REMOVED***values***REMOVED***are:
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`null`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***unquoted***REMOVED***and***REMOVED***characters***REMOVED***will***REMOVED***be***REMOVED***escaped***REMOVED***as***REMOVED***necessary.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`'`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***single***REMOVED***quote***REMOVED***and***REMOVED***single***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`"`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***and***REMOVED***double***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***preferCurrentQuoteMark***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***prefer***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***over***REMOVED***the***REMOVED***quoteMark***REMOVED***option***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***smart***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***will***REMOVED***select***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***and***REMOVED***the***REMOVED***other***REMOVED***options***REMOVED***specified***REMOVED***here.***REMOVED***See***REMOVED***the***REMOVED***`smartQuoteMark()`
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.
		***REMOVED******REMOVED******REMOVED*****/
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Attribute.prototype;
		***REMOVED******REMOVED***_proto.getQuotedValue***REMOVED***=***REMOVED***function***REMOVED***getQuotedValue(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cssescopts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quoteMark];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***cssescopts);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escaped;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._determineQuoteMark***REMOVED***=***REMOVED***function***REMOVED***_determineQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.smart***REMOVED***?***REMOVED***this.smartQuoteMark(options)***REMOVED***:***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***quotation***REMOVED***options.***REMOVED***The***REMOVED***value
		***REMOVED******REMOVED******REMOVED*******REMOVED***provided***REMOVED***must***REMOVED***not***REMOVED***include***REMOVED***any***REMOVED***wrapping***REMOVED***quote***REMOVED***marks***REMOVED***--***REMOVED***those***REMOVED***quotes***REMOVED***will
		***REMOVED******REMOVED******REMOVED*******REMOVED***be***REMOVED***interpreted***REMOVED***as***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***value***REMOVED***and***REMOVED***escaped***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setValue***REMOVED***=***REMOVED***function***REMOVED***setValue(value,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Intelligently***REMOVED***select***REMOVED***a***REMOVED***quoteMark***REMOVED***value***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value's***REMOVED***contents.***REMOVED***If
		***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***a***REMOVED***legal***REMOVED***CSS***REMOVED***ident,***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***quoted.***REMOVED***Otherwise***REMOVED***a***REMOVED***quote
		***REMOVED******REMOVED******REMOVED*******REMOVED***mark***REMOVED***will***REMOVED***be***REMOVED***picked***REMOVED***that***REMOVED***minimizes***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***escapes.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***there's***REMOVED***no***REMOVED***clear***REMOVED***winner,***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***from***REMOVED***these***REMOVED***options***REMOVED***is***REMOVED***used,
		***REMOVED******REMOVED******REMOVED*******REMOVED***then***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark***REMOVED***(this***REMOVED***is***REMOVED***inverted***REMOVED***if***REMOVED***`preferCurrentQuoteMark`***REMOVED***is
		***REMOVED******REMOVED******REMOVED*******REMOVED***true).***REMOVED***If***REMOVED***the***REMOVED***quoteMark***REMOVED***is***REMOVED***unspecified,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***This***REMOVED***takes***REMOVED***the***REMOVED***quoteMark***REMOVED***and***REMOVED***preferCurrentQuoteMark***REMOVED***options
		***REMOVED******REMOVED******REMOVED*******REMOVED***from***REMOVED***the***REMOVED***quoteValue***REMOVED***method.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.smartQuoteMark***REMOVED***=***REMOVED***function***REMOVED***smartQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***v***REMOVED***=***REMOVED***this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numSingleQuotes***REMOVED***=***REMOVED***v.replace(/[^']/g,***REMOVED***'').length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numDoubleQuotes***REMOVED***=***REMOVED***v.replace(/[^"]/g,***REMOVED***'').length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(numSingleQuotes***REMOVED***+***REMOVED***numDoubleQuotes***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***===***REMOVED***v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.NO_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pref***REMOVED***=***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pref***REMOVED***===***REMOVED***Attribute.NO_QUOTE)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pick***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***that***REMOVED***isn't***REMOVED***none***REMOVED***and***REMOVED***see***REMOVED***if***REMOVED***it's***REMOVED***smaller
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quote***REMOVED***=***REMOVED***this.quoteMark***REMOVED***||***REMOVED***options.quoteMark***REMOVED***||***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***opts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quote];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***opts);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteValue.length***REMOVED***<***REMOVED***escaped.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quote;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pref;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***===***REMOVED***numSingleQuotes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***<***REMOVED***numSingleQuotes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.SINGLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Selects***REMOVED***the***REMOVED***preferred***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***options***REMOVED***and***REMOVED***the***REMOVED***current***REMOVED***quote***REMOVED***mark***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***depend***REMOVED***on***REMOVED***the***REMOVED***attribute***REMOVED***value,***REMOVED***call***REMOVED***`smartQuoteMark(opts)`
		***REMOVED******REMOVED******REMOVED*******REMOVED***instead.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.preferredQuoteMark***REMOVED***=***REMOVED***function***REMOVED***preferredQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***this.quoteMark***REMOVED***:***REMOVED***options.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***options.quoteMark***REMOVED***:***REMOVED***this.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quoteMark;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._syncRawValue***REMOVED***=***REMOVED***function***REMOVED***_syncRawValue()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***CSSESC_QUOTE_OPTIONS[this.quoteMark]);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue***REMOVED***===***REMOVED***this._value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***rawValue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._handleEscapes***REMOVED***=***REMOVED***function***REMOVED***_handleEscapes(prop,***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(value,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[prop]***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[prop];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._spacesFor***REMOVED***=***REMOVED***function***REMOVED***_spacesFor(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***'',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***this.spaces[name]***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaces***REMOVED***=***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces[name]***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(attrSpaces,***REMOVED***spaces,***REMOVED***rawSpaces);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._stringFor***REMOVED***=***REMOVED***function***REMOVED***_stringFor(name,***REMOVED***spaceName,***REMOVED***concat)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceName***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceName***REMOVED***=***REMOVED***name;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(concat***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***concat***REMOVED***=***REMOVED***defaultAttrConcat;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***this._spacesFor(spaceName);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***concat(this.stringifyProperty(name),***REMOVED***attrSpaces);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***offset***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***part***REMOVED***specified***REMOVED***relative***REMOVED***to***REMOVED***the
		***REMOVED******REMOVED******REMOVED*******REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***of***REMOVED***the***REMOVED***output***REMOVED***string.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"ns"***REMOVED***-***REMOVED***alias***REMOVED***for***REMOVED***"namespace"
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"namespace"***REMOVED***-***REMOVED***the***REMOVED***namespace***REMOVED***if***REMOVED***it***REMOVED***exists.
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attribute"***REMOVED***-***REMOVED***the***REMOVED***attribute***REMOVED***name
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attributeNS"***REMOVED***-***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***or***REMOVED***its***REMOVED***namespace
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"operator"***REMOVED***-***REMOVED***the***REMOVED***match***REMOVED***operator***REMOVED***of***REMOVED***the***REMOVED***attribute
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"value"***REMOVED***-***REMOVED***The***REMOVED***value***REMOVED***(string***REMOVED***or***REMOVED***identifier)
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"insensitive"***REMOVED***-***REMOVED***the***REMOVED***case***REMOVED***insensitivity***REMOVED***flag;
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***part***REMOVED***One***REMOVED***of***REMOVED***the***REMOVED***possible***REMOVED***values***REMOVED***inside***REMOVED***an***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***-1***REMOVED***if***REMOVED***the***REMOVED***name***REMOVED***is***REMOVED***invalid***REMOVED***or***REMOVED***the***REMOVED***value***REMOVED***doesn't***REMOVED***exist***REMOVED***in***REMOVED***this***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.offsetOf***REMOVED***=***REMOVED***function***REMOVED***offsetOf(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***count***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attributeSpaces***REMOVED***=***REMOVED***this._spacesFor("attribute");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"namespace"***REMOVED***||***REMOVED***name***REMOVED***===***REMOVED***"ns")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attributeNS")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.namespaceString.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attribute")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.stringifyProperty("attribute").length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operatorSpaces***REMOVED***=***REMOVED***this._spacesFor("operator");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operator***REMOVED***=***REMOVED***this.stringifyProperty("operator");
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"operator")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***operator***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operator.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valueSpaces***REMOVED***=***REMOVED***this._spacesFor("value");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***this.stringifyProperty("value");
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"value")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***value.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitiveSpaces***REMOVED***=***REMOVED***this._spacesFor("insensitive");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***insensitiveSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"insensitive")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***[this.rawSpaceBefore,***REMOVED***'['];
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('qualifiedAttribute',***REMOVED***'attribute'));
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***&&***REMOVED***(this.value***REMOVED***||***REMOVED***this.value***REMOVED***===***REMOVED***''))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('operator'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('value'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('insensitiveFlag',***REMOVED***'insensitive',***REMOVED***function***REMOVED***(attrValue,***REMOVED***attrSpaces)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrValue.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!_this2.quoted***REMOVED***&&***REMOVED***attrSpaces.before.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***!(_this2.spaces.value***REMOVED***&&***REMOVED***_this2.spaces.value.after))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrSpaces.before***REMOVED***=***REMOVED***"***REMOVED***";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(']');
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this.rawSpaceAfter);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selector.join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Attribute,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoted",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***qm***REMOVED***=***REMOVED***this.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***qm***REMOVED***===***REMOVED***"'"***REMOVED***||***REMOVED***qm***REMOVED***===***REMOVED***'"';
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedQuotedAssignment();
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***a***REMOVED***single***REMOVED***(`'`)***REMOVED***or***REMOVED***double***REMOVED***(`"`)***REMOVED***quote***REMOVED***character***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***not***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`undefined`***REMOVED***if***REMOVED***the***REMOVED***quotation***REMOVED***state***REMOVED***is***REMOVED***unknown***REMOVED***(this***REMOVED***can***REMOVED***happen***REMOVED***when
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***constructed***REMOVED***without***REMOVED***specifying***REMOVED***a***REMOVED***quote***REMOVED***mark.)
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoteMark",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***by***REMOVED***this***REMOVED***attribute's***REMOVED***value.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.value`***REMOVED***of***REMOVED***the***REMOVED***attribute
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***value***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{"'"***REMOVED***|***REMOVED***'"'***REMOVED***|***REMOVED***null}***REMOVED***quoteMark***REMOVED***The***REMOVED***quote***REMOVED***mark***REMOVED***or***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unquoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/,
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._quoteMark***REMOVED***!==***REMOVED***quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"qualifiedAttribute",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(this.raws.attribute***REMOVED***||***REMOVED***this.attribute);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitiveFlag",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***'i'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:
		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Before***REMOVED***3.0,***REMOVED***the***REMOVED***value***REMOVED***had***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***an***REMOVED***escaped***REMOVED***value***REMOVED***including***REMOVED***any***REMOVED***wrapped
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***quote***REMOVED***marks.***REMOVED***In***REMOVED***3.0,***REMOVED***the***REMOVED***semantics***REMOVED***of***REMOVED***`Attribute.value`***REMOVED***changed***REMOVED***so***REMOVED***that***REMOVED***the***REMOVED***value
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***is***REMOVED***unescaped***REMOVED***during***REMOVED***parsing***REMOVED***and***REMOVED***any***REMOVED***quote***REMOVED***marks***REMOVED***are***REMOVED***removed.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Because***REMOVED***the***REMOVED***ambiguity***REMOVED***of***REMOVED***this***REMOVED***semantic***REMOVED***change,***REMOVED***if***REMOVED***you***REMOVED***set***REMOVED***`attr.value***REMOVED***=***REMOVED***newValue`,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***deprecation***REMOVED***warning***REMOVED***is***REMOVED***raised***REMOVED***when***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***contains***REMOVED***any***REMOVED***characters***REMOVED***that***REMOVED***would
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***require***REMOVED***escaping***REMOVED***(including***REMOVED***if***REMOVED***it***REMOVED***contains***REMOVED***wrapped***REMOVED***quotes).
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Instead,***REMOVED***you***REMOVED***should***REMOVED***call***REMOVED***`attr.setValue(newValue,***REMOVED***opts)`***REMOVED***and***REMOVED***pass***REMOVED***options***REMOVED***that***REMOVED***describe
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***how***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***is***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***set(v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue2***REMOVED***=***REMOVED***unescapeValue(v),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***_unescapeValue2.deprecatedUsage,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue2.unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue2.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deprecatedUsage)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedValueAssignment();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***===***REMOVED***this._value***REMOVED***&&***REMOVED***quoteMark***REMOVED***===***REMOVED***this._quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitive",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.insensitiveFlag`
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{true***REMOVED***|***REMOVED***false}***REMOVED***insensitive***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***attribute***REMOVED***should***REMOVED***match***REMOVED***case-insensitively.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/,
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(insensitive)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***false;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"i"***REMOVED***and***REMOVED***"I"***REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***"this.raws.insensitiveFlag"***REMOVED***to***REMOVED***store***REMOVED***the***REMOVED***original***REMOVED***notation.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***setting***REMOVED***`attr.insensitive***REMOVED***=***REMOVED***false`***REMOVED***both***REMOVED***should***REMOVED***be***REMOVED***erased***REMOVED***to***REMOVED***ensure***REMOVED***correct***REMOVED***serialization.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws***REMOVED***&&***REMOVED***(this.raws.insensitiveFlag***REMOVED***===***REMOVED***'I'***REMOVED***||***REMOVED***this.raws.insensitiveFlag***REMOVED***===***REMOVED***'i'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.insensitiveFlag***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"attribute",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._attribute;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._handleEscapes("attribute",***REMOVED***name);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._attribute***REMOVED***=***REMOVED***name;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Attribute;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Attribute;
		Attribute.NO_QUOTE***REMOVED***=***REMOVED***null;
		Attribute.SINGLE_QUOTE***REMOVED***=***REMOVED***"'";
		Attribute.DOUBLE_QUOTE***REMOVED***=***REMOVED***'"';
		var***REMOVED***CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***(_CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***"'":***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'single',
		***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
		***REMOVED******REMOVED***},
		***REMOVED******REMOVED***'"':***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'double',
		***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
		***REMOVED******REMOVED***}
		},***REMOVED***_CSSESC_QUOTE_OPTIONS[null]***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***isIdentifier:***REMOVED***true
		},***REMOVED***_CSSESC_QUOTE_OPTIONS);
		function***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***""***REMOVED***+***REMOVED***attrSpaces.before***REMOVED***+***REMOVED***attrValue***REMOVED***+***REMOVED***attrSpaces.after;
		}***REMOVED***
	}***REMOVED***(attribute$1));
	return***REMOVED***attribute$1;
}

var***REMOVED***universal$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredUniversal$1;

function***REMOVED***requireUniversal$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUniversal$1)***REMOVED***return***REMOVED***universal$1.exports;
	hasRequiredUniversal$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace$1());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Universal***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Universal,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Universal(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.UNIVERSAL;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'*';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Universal;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Universal;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(universal$1,***REMOVED***universal$1.exports));
	return***REMOVED***universal$1.exports;
}

var***REMOVED***combinator$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredCombinator$1;

function***REMOVED***requireCombinator$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredCombinator$1)***REMOVED***return***REMOVED***combinator$1.exports;
	hasRequiredCombinator$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Combinator***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Combinator,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Combinator(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMBINATOR;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Combinator;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Combinator;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(combinator$1,***REMOVED***combinator$1.exports));
	return***REMOVED***combinator$1.exports;
}

var***REMOVED***nesting$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredNesting$1;

function***REMOVED***requireNesting$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNesting$1)***REMOVED***return***REMOVED***nesting$1.exports;
	hasRequiredNesting$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode$2());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Nesting***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Nesting,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Nesting(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.NESTING;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'&';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Nesting;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Nesting;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(nesting$1,***REMOVED***nesting$1.exports));
	return***REMOVED***nesting$1.exports;
}

var***REMOVED***sortAscending$1***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredSortAscending$1;

function***REMOVED***requireSortAscending$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSortAscending$1)***REMOVED***return***REMOVED***sortAscending$1.exports;
	hasRequiredSortAscending$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***sortAscending;
		function***REMOVED***sortAscending(list)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***list.sort(function***REMOVED***(a,***REMOVED***b)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***-***REMOVED***b;
		***REMOVED******REMOVED***});
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(sortAscending$1,***REMOVED***sortAscending$1.exports));
	return***REMOVED***sortAscending$1.exports;
}

var***REMOVED***tokenize$1***REMOVED***=***REMOVED***{};

var***REMOVED***tokenTypes$1***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredTokenTypes$1;

function***REMOVED***requireTokenTypes$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTokenTypes$1)***REMOVED***return***REMOVED***tokenTypes$1;
	hasRequiredTokenTypes$1***REMOVED***=***REMOVED***1;

	tokenTypes$1.__esModule***REMOVED***=***REMOVED***true;
	tokenTypes$1.word***REMOVED***=***REMOVED***tokenTypes$1.tilde***REMOVED***=***REMOVED***tokenTypes$1.tab***REMOVED***=***REMOVED***tokenTypes$1.str***REMOVED***=***REMOVED***tokenTypes$1.space***REMOVED***=***REMOVED***tokenTypes$1.slash***REMOVED***=***REMOVED***tokenTypes$1.singleQuote***REMOVED***=***REMOVED***tokenTypes$1.semicolon***REMOVED***=***REMOVED***tokenTypes$1.plus***REMOVED***=***REMOVED***tokenTypes$1.pipe***REMOVED***=***REMOVED***tokenTypes$1.openSquare***REMOVED***=***REMOVED***tokenTypes$1.openParenthesis***REMOVED***=***REMOVED***tokenTypes$1.newline***REMOVED***=***REMOVED***tokenTypes$1.greaterThan***REMOVED***=***REMOVED***tokenTypes$1.feed***REMOVED***=***REMOVED***tokenTypes$1.equals***REMOVED***=***REMOVED***tokenTypes$1.doubleQuote***REMOVED***=***REMOVED***tokenTypes$1.dollar***REMOVED***=***REMOVED***tokenTypes$1.cr***REMOVED***=***REMOVED***tokenTypes$1.comment***REMOVED***=***REMOVED***tokenTypes$1.comma***REMOVED***=***REMOVED***tokenTypes$1.combinator***REMOVED***=***REMOVED***tokenTypes$1.colon***REMOVED***=***REMOVED***tokenTypes$1.closeSquare***REMOVED***=***REMOVED***tokenTypes$1.closeParenthesis***REMOVED***=***REMOVED***tokenTypes$1.caret***REMOVED***=***REMOVED***tokenTypes$1.bang***REMOVED***=***REMOVED***tokenTypes$1.backslash***REMOVED***=***REMOVED***tokenTypes$1.at***REMOVED***=***REMOVED***tokenTypes$1.asterisk***REMOVED***=***REMOVED***tokenTypes$1.ampersand***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***ampersand***REMOVED***=***REMOVED***38;***REMOVED***//***REMOVED***`&`.charCodeAt(0);
	tokenTypes$1.ampersand***REMOVED***=***REMOVED***ampersand;
	var***REMOVED***asterisk***REMOVED***=***REMOVED***42;***REMOVED***//***REMOVED***`*`.charCodeAt(0);
	tokenTypes$1.asterisk***REMOVED***=***REMOVED***asterisk;
	var***REMOVED***at***REMOVED***=***REMOVED***64;***REMOVED***//***REMOVED***`@`.charCodeAt(0);
	tokenTypes$1.at***REMOVED***=***REMOVED***at;
	var***REMOVED***comma***REMOVED***=***REMOVED***44;***REMOVED***//***REMOVED***`,`.charCodeAt(0);
	tokenTypes$1.comma***REMOVED***=***REMOVED***comma;
	var***REMOVED***colon***REMOVED***=***REMOVED***58;***REMOVED***//***REMOVED***`:`.charCodeAt(0);
	tokenTypes$1.colon***REMOVED***=***REMOVED***colon;
	var***REMOVED***semicolon***REMOVED***=***REMOVED***59;***REMOVED***//***REMOVED***`;`.charCodeAt(0);
	tokenTypes$1.semicolon***REMOVED***=***REMOVED***semicolon;
	var***REMOVED***openParenthesis***REMOVED***=***REMOVED***40;***REMOVED***//***REMOVED***`(`.charCodeAt(0);
	tokenTypes$1.openParenthesis***REMOVED***=***REMOVED***openParenthesis;
	var***REMOVED***closeParenthesis***REMOVED***=***REMOVED***41;***REMOVED***//***REMOVED***`)`.charCodeAt(0);
	tokenTypes$1.closeParenthesis***REMOVED***=***REMOVED***closeParenthesis;
	var***REMOVED***openSquare***REMOVED***=***REMOVED***91;***REMOVED***//***REMOVED***`[`.charCodeAt(0);
	tokenTypes$1.openSquare***REMOVED***=***REMOVED***openSquare;
	var***REMOVED***closeSquare***REMOVED***=***REMOVED***93;***REMOVED***//***REMOVED***`]`.charCodeAt(0);
	tokenTypes$1.closeSquare***REMOVED***=***REMOVED***closeSquare;
	var***REMOVED***dollar***REMOVED***=***REMOVED***36;***REMOVED***//***REMOVED***`$`.charCodeAt(0);
	tokenTypes$1.dollar***REMOVED***=***REMOVED***dollar;
	var***REMOVED***tilde***REMOVED***=***REMOVED***126;***REMOVED***//***REMOVED***`~`.charCodeAt(0);
	tokenTypes$1.tilde***REMOVED***=***REMOVED***tilde;
	var***REMOVED***caret***REMOVED***=***REMOVED***94;***REMOVED***//***REMOVED***`^`.charCodeAt(0);
	tokenTypes$1.caret***REMOVED***=***REMOVED***caret;
	var***REMOVED***plus***REMOVED***=***REMOVED***43;***REMOVED***//***REMOVED***`+`.charCodeAt(0);
	tokenTypes$1.plus***REMOVED***=***REMOVED***plus;
	var***REMOVED***equals***REMOVED***=***REMOVED***61;***REMOVED***//***REMOVED***`=`.charCodeAt(0);
	tokenTypes$1.equals***REMOVED***=***REMOVED***equals;
	var***REMOVED***pipe***REMOVED***=***REMOVED***124;***REMOVED***//***REMOVED***`|`.charCodeAt(0);
	tokenTypes$1.pipe***REMOVED***=***REMOVED***pipe;
	var***REMOVED***greaterThan***REMOVED***=***REMOVED***62;***REMOVED***//***REMOVED***`>`.charCodeAt(0);
	tokenTypes$1.greaterThan***REMOVED***=***REMOVED***greaterThan;
	var***REMOVED***space***REMOVED***=***REMOVED***32;***REMOVED***//***REMOVED***`***REMOVED***`.charCodeAt(0);
	tokenTypes$1.space***REMOVED***=***REMOVED***space;
	var***REMOVED***singleQuote***REMOVED***=***REMOVED***39;***REMOVED***//***REMOVED***`'`.charCodeAt(0);
	tokenTypes$1.singleQuote***REMOVED***=***REMOVED***singleQuote;
	var***REMOVED***doubleQuote***REMOVED***=***REMOVED***34;***REMOVED***//***REMOVED***`"`.charCodeAt(0);
	tokenTypes$1.doubleQuote***REMOVED***=***REMOVED***doubleQuote;
	var***REMOVED***slash***REMOVED***=***REMOVED***47;***REMOVED***//***REMOVED***`/`.charCodeAt(0);
	tokenTypes$1.slash***REMOVED***=***REMOVED***slash;
	var***REMOVED***bang***REMOVED***=***REMOVED***33;***REMOVED***//***REMOVED***`!`.charCodeAt(0);
	tokenTypes$1.bang***REMOVED***=***REMOVED***bang;
	var***REMOVED***backslash***REMOVED***=***REMOVED***92;***REMOVED***//***REMOVED***'\\'.charCodeAt(0);
	tokenTypes$1.backslash***REMOVED***=***REMOVED***backslash;
	var***REMOVED***cr***REMOVED***=***REMOVED***13;***REMOVED***//***REMOVED***'\r'.charCodeAt(0);
	tokenTypes$1.cr***REMOVED***=***REMOVED***cr;
	var***REMOVED***feed***REMOVED***=***REMOVED***12;***REMOVED***//***REMOVED***'\f'.charCodeAt(0);
	tokenTypes$1.feed***REMOVED***=***REMOVED***feed;
	var***REMOVED***newline***REMOVED***=***REMOVED***10;***REMOVED***//***REMOVED***'\n'.charCodeAt(0);
	tokenTypes$1.newline***REMOVED***=***REMOVED***newline;
	var***REMOVED***tab***REMOVED***=***REMOVED***9;***REMOVED***//***REMOVED***'\t'.charCodeAt(0);

	//***REMOVED***Expose***REMOVED***aliases***REMOVED***primarily***REMOVED***for***REMOVED***readability.
	tokenTypes$1.tab***REMOVED***=***REMOVED***tab;
	var***REMOVED***str***REMOVED***=***REMOVED***singleQuote;

	//***REMOVED***No***REMOVED***good***REMOVED***single***REMOVED***character***REMOVED***representation!
	tokenTypes$1.str***REMOVED***=***REMOVED***str;
	var***REMOVED***comment***REMOVED***=***REMOVED***-1;
	tokenTypes$1.comment***REMOVED***=***REMOVED***comment;
	var***REMOVED***word***REMOVED***=***REMOVED***-2;
	tokenTypes$1.word***REMOVED***=***REMOVED***word;
	var***REMOVED***combinator***REMOVED***=***REMOVED***-3;
	tokenTypes$1.combinator***REMOVED***=***REMOVED***combinator;
	return***REMOVED***tokenTypes$1;
}

var***REMOVED***hasRequiredTokenize$1;

function***REMOVED***requireTokenize$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTokenize$1)***REMOVED***return***REMOVED***tokenize$1;
	hasRequiredTokenize$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports.FIELDS***REMOVED***=***REMOVED***void***REMOVED***0;
		exports["default"]***REMOVED***=***REMOVED***tokenize;
		var***REMOVED***t***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenTypes$1());
		var***REMOVED***_unescapable,***REMOVED***_wordDelimiters;
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		var***REMOVED***unescapable***REMOVED***=***REMOVED***(_unescapable***REMOVED***=***REMOVED***{},***REMOVED***_unescapable[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable);
		var***REMOVED***wordDelimiters***REMOVED***=***REMOVED***(_wordDelimiters***REMOVED***=***REMOVED***{},***REMOVED***_wordDelimiters[t.space]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.ampersand]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.asterisk]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.bang]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.comma]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.colon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.semicolon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.singleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.doubleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.plus]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.pipe]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tilde]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.greaterThan]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.equals]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.dollar]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.caret]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.slash]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters);
		var***REMOVED***hex***REMOVED***=***REMOVED***{};
		var***REMOVED***hexChars***REMOVED***=***REMOVED***"0123456789abcdefABCDEF";
		for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***hexChars.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED***hex[hexChars.charCodeAt(i)]***REMOVED***=***REMOVED***true;
		}

		/**
		***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***bar***REMOVED***css***REMOVED***word
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***word***REMOVED***begins
		***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***word's***REMOVED***first***REMOVED***letter***REMOVED***occurs
		***REMOVED****/
		function***REMOVED***consumeWord(css,***REMOVED***start)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED***var***REMOVED***code;
		***REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(wordDelimiters[code])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeEscape(css,***REMOVED***next)***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***other***REMOVED***characters***REMOVED***are***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***word
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(next***REMOVED***<***REMOVED***css.length);
		***REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
		}

		/**
		***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***escape***REMOVED***sequence
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***sequence***REMOVED***begins
		***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***escape***REMOVED***character***REMOVED***(`\`)***REMOVED***occurs.
		***REMOVED****/
		function***REMOVED***consumeEscape(css,***REMOVED***start)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED***if***REMOVED***(unescapable[code])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(hex[code])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hexDigits***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***consume***REMOVED***up***REMOVED***to***REMOVED***6***REMOVED***hex***REMOVED***chars
		***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hexDigits++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hex[code]***REMOVED***&&***REMOVED***hexDigits***REMOVED***<***REMOVED***6);
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***fewer***REMOVED***than***REMOVED***6***REMOVED***hex***REMOVED***chars,***REMOVED***a***REMOVED***trailing***REMOVED***space***REMOVED***ends***REMOVED***the***REMOVED***escape
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hexDigits***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***t.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***next***REMOVED***char***REMOVED***is***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***word
		***REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***next;
		}
		var***REMOVED***FIELDS***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***TYPE:***REMOVED***0,
		***REMOVED******REMOVED***START_LINE:***REMOVED***1,
		***REMOVED******REMOVED***START_COL:***REMOVED***2,
		***REMOVED******REMOVED***END_LINE:***REMOVED***3,
		***REMOVED******REMOVED***END_COL:***REMOVED***4,
		***REMOVED******REMOVED***START_POS:***REMOVED***5,
		***REMOVED******REMOVED***END_POS:***REMOVED***6
		};
		exports.FIELDS***REMOVED***=***REMOVED***FIELDS;
		function***REMOVED***tokenize(input)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***tokens***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED***var***REMOVED***css***REMOVED***=***REMOVED***input.css.valueOf();
		***REMOVED******REMOVED***var***REMOVED***_css***REMOVED***=***REMOVED***css,
		***REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***_css.length;
		***REMOVED******REMOVED***var***REMOVED***offset***REMOVED***=***REMOVED***-1;
		***REMOVED******REMOVED***var***REMOVED***line***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***var***REMOVED***end***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***var***REMOVED***code,***REMOVED***content,***REMOVED***endColumn,***REMOVED***endLine,***REMOVED***escaped,***REMOVED***escapePos,***REMOVED***last,***REMOVED***lines,***REMOVED***next,***REMOVED***nextLine,***REMOVED***nextOffset,***REMOVED***quote,***REMOVED***tokenType;
		***REMOVED******REMOVED***function***REMOVED***unclosed(what,***REMOVED***fix)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(input.safe)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fyi:***REMOVED***this***REMOVED***is***REMOVED***never***REMOVED***set***REMOVED***to***REMOVED***true.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css***REMOVED***+=***REMOVED***fix;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***input.error('Unclosed***REMOVED***'***REMOVED***+***REMOVED***what,***REMOVED***line,***REMOVED***start***REMOVED***-***REMOVED***offset,***REMOVED***start);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(start***REMOVED***<***REMOVED***length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(start);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tab:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.newline:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.cr:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.feed:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.space***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.newline***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tab***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.cr***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.feed);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.plus:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.greaterThan:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tilde:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.pipe:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.plus***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.greaterThan***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tilde***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.pipe);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.combinator;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Consume***REMOVED***these***REMOVED***characters***REMOVED***as***REMOVED***single***REMOVED***tokens.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.ampersand:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.bang:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.comma:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.colon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.semicolon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.singleQuote:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.doubleQuote:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quote***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***t.singleQuote***REMOVED***?***REMOVED***"'"***REMOVED***:***REMOVED***'"';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf(quote,***REMOVED***next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('quote',***REMOVED***quote);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(css.charCodeAt(escapePos***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***-=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***!escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(escaped);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.str;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash***REMOVED***&&***REMOVED***css.charCodeAt(start***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***t.asterisk)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf('*/',***REMOVED***start***REMOVED***+***REMOVED***2)***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('comment',***REMOVED***'*/');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***css.slice(start,***REMOVED***next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lines***REMOVED***=***REMOVED***content.split('\n');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last***REMOVED***=***REMOVED***lines.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line***REMOVED***+***REMOVED***last;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***lines[last].length;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.comment;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***=***REMOVED***nextLine;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***nextLine;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***nextOffset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeWord(css,***REMOVED***start);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.word;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***token***REMOVED***structure***REMOVED***remains***REMOVED***consistent
		***REMOVED******REMOVED******REMOVED******REMOVED***tokens.push([tokenType,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[0]***REMOVED***Token***REMOVED***type
		***REMOVED******REMOVED******REMOVED******REMOVED***line,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[1]***REMOVED***Starting***REMOVED***line
		***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***-***REMOVED***offset,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[2]***REMOVED***Starting***REMOVED***column
		***REMOVED******REMOVED******REMOVED******REMOVED***endLine,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[3]***REMOVED***Ending***REMOVED***line
		***REMOVED******REMOVED******REMOVED******REMOVED***endColumn,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[4]***REMOVED***Ending***REMOVED***column
		***REMOVED******REMOVED******REMOVED******REMOVED***start,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[5]***REMOVED***Start***REMOVED***position***REMOVED***/***REMOVED***Source***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***//***REMOVED***[6]***REMOVED***End***REMOVED***position
		***REMOVED******REMOVED******REMOVED******REMOVED***]);

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Reset***REMOVED***offset***REMOVED***for***REMOVED***the***REMOVED***next***REMOVED***token
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextOffset)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***nextOffset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***end;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***tokens;
		}***REMOVED***
	}***REMOVED***(tokenize$1));
	return***REMOVED***tokenize$1;
}

var***REMOVED***hasRequiredParser$2;

function***REMOVED***requireParser$2***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredParser$2)***REMOVED***return***REMOVED***parser$1.exports;
	hasRequiredParser$2***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireRoot$1());
		var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSelector$1());
		var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireClassName$1());
		var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireComment$1());
		var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireId$1());
		var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireTag$1());
		var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireString$1());
		var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requirePseudo$1());
		var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireAttribute$1());
		var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUniversal$1());
		var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCombinator$1());
		var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNesting$1());
		var***REMOVED***_sortAscending***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSortAscending$1());
		var***REMOVED***_tokenize***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenize$1());
		var***REMOVED***tokens***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenTypes$1());
		var***REMOVED***types***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTypes$1());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$2();
		var***REMOVED***_WHITESPACE_TOKENS,***REMOVED***_Object$assign;
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		var***REMOVED***WHITESPACE_TOKENS***REMOVED***=***REMOVED***(_WHITESPACE_TOKENS***REMOVED***=***REMOVED***{},***REMOVED***_WHITESPACE_TOKENS[tokens.space]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.cr]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.feed]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.newline]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.tab]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS);
		var***REMOVED***WHITESPACE_EQUIV_TOKENS***REMOVED***=***REMOVED***Object.assign({},***REMOVED***WHITESPACE_TOKENS,***REMOVED***(_Object$assign***REMOVED***=***REMOVED***{},***REMOVED***_Object$assign[tokens.comment]***REMOVED***=***REMOVED***true,***REMOVED***_Object$assign));
		function***REMOVED***tokenStart(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.START_LINE],
		***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.START_COL]
		***REMOVED******REMOVED***};
		}
		function***REMOVED***tokenEnd(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.END_LINE],
		***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.END_COL]
		***REMOVED******REMOVED***};
		}
		function***REMOVED***getSource(startLine,***REMOVED***startColumn,***REMOVED***endLine,***REMOVED***endColumn)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***startLine,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***startColumn
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***endLine,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***endColumn
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		}
		function***REMOVED***getTokenSource(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***getSource(token[_tokenize.FIELDS.START_LINE],***REMOVED***token[_tokenize.FIELDS.START_COL],***REMOVED***token[_tokenize.FIELDS.END_LINE],***REMOVED***token[_tokenize.FIELDS.END_COL]);
		}
		function***REMOVED***getTokenSourceSpan(startToken,***REMOVED***endToken)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(!startToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***getSource(startToken[_tokenize.FIELDS.START_LINE],***REMOVED***startToken[_tokenize.FIELDS.START_COL],***REMOVED***endToken[_tokenize.FIELDS.END_LINE],***REMOVED***endToken[_tokenize.FIELDS.END_COL]);
		}
		function***REMOVED***unescapeProp(node,***REMOVED***prop)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***node[prop];
		***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"string")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(value.indexOf("\\")***REMOVED***!==***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED***node[prop]***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(value);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws[prop]***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[prop]***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***node;
		}
		function***REMOVED***indexesOf(array,***REMOVED***item)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***-1;
		***REMOVED******REMOVED***var***REMOVED***indexes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED***while***REMOVED***((i***REMOVED***=***REMOVED***array.indexOf(item,***REMOVED***i***REMOVED***+***REMOVED***1))***REMOVED***!==***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***indexes.push(i);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***indexes;
		}
		function***REMOVED***uniqs()***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***list***REMOVED***=***REMOVED***Array.prototype.concat.apply([],***REMOVED***arguments);
		***REMOVED******REMOVED***return***REMOVED***list.filter(function***REMOVED***(item,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***===***REMOVED***list.indexOf(item);
		***REMOVED******REMOVED***});
		}
		var***REMOVED***Parser***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Parser(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.rule***REMOVED***=***REMOVED***rule;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***Object.assign({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***false,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***false
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.css***REMOVED***=***REMOVED***typeof***REMOVED***this.rule***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***this.rule***REMOVED***:***REMOVED***this.rule.selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens***REMOVED***=***REMOVED***(0,***REMOVED***_tokenize["default"])({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css:***REMOVED***this.css,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***this._errorGenerator(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***this.options.safe
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rootSource***REMOVED***=***REMOVED***getTokenSourceSpan(this.tokens[0],***REMOVED***this.tokens[this.tokens.length***REMOVED***-***REMOVED***1]);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***new***REMOVED***_root["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***rootSource
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root.errorGenerator***REMOVED***=***REMOVED***this._errorGenerator();
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***1,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***1
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***0
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.loop();
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Parser.prototype;
		***REMOVED******REMOVED***_proto._errorGenerator***REMOVED***=***REMOVED***function***REMOVED***_errorGenerator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(message,***REMOVED***errorOptions)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***_this.rule***REMOVED***===***REMOVED***'string')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.rule.error(message,***REMOVED***errorOptions);
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.attribute***REMOVED***=***REMOVED***function***REMOVED***attribute()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attr***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.push(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***attr.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(startingToken[1],***REMOVED***startingToken[2],***REMOVED***this.currToken[3],***REMOVED***this.currToken[4]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(len***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE]))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***attr[0][_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastAdded***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***len)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***token***REMOVED***=***REMOVED***attr[pos];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***attr[pos***REMOVED***+***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(token[_tokenize.FIELDS.TYPE])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***(
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***===***REMOVED***1***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[TOKEN.START_POS],***REMOVED***content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***lastAdded);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prevContent***REMOVED***=***REMOVED***node.spaces[lastAdded].after***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces[lastAdded].after***REMOVED***=***REMOVED***prevContent***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***existingComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingComment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***existingComment***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***spaceBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((!node.namespace***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"namespace"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***&&***REMOVED***next)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***(node.namespace***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'namespace')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.namespace***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded***REMOVED***===***REMOVED***"value")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***"$";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldRawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***oldRawValue***REMOVED***+***REMOVED***"$";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Falls***REMOVED***through
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***===***REMOVED***'~'***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!==***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.namespace***REMOVED***&&***REMOVED***!node.attribute)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.equals***REMOVED***&&
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***look-ahead***REMOVED***probably***REMOVED***fails***REMOVED***with***REMOVED***comment***REMOVED***nodes***REMOVED***involved.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!node.operator***REMOVED***&&***REMOVED***!node.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"attribute"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***commentBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attribute***REMOVED***=***REMOVED***(node.attribute***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'attribute')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_rawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.attribute***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'attribute';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.value***REMOVED***&&***REMOVED***node.value***REMOVED***!==***REMOVED***""***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"value"***REMOVED***&&***REMOVED***!(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***node.quoteMark))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value')***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldValue***REMOVED***=***REMOVED***node.value***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***oldValue***REMOVED***+***REMOVED***_unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_unescaped***REMOVED***!==***REMOVED***content***REMOVED***||***REMOVED***_oldRawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***(_oldRawValue***REMOVED***||***REMOVED***oldValue)***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitive***REMOVED***=***REMOVED***content***REMOVED***===***REMOVED***'i'***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***&&***REMOVED***(node.quoteMark***REMOVED***||***REMOVED***spaceAfterMeaningfulToken))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.insensitive***REMOVED***=***REMOVED***insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.insensitiveFlag***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'insensitive';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'insensitive');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.insensitive.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'insensitive');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.insensitive.before***REMOVED***=***REMOVED***commentBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws.value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***!node.operator)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***an***REMOVED***attribute***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***operator***REMOVED***preceding***REMOVED***the***REMOVED***string.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***(0,***REMOVED***_attribute.unescapeValue)(content),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[_tokenize.FIELDS.START_POS],***REMOVED***content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Unexpected***REMOVED***"="***REMOVED***found;***REMOVED***an***REMOVED***operator***REMOVED***was***REMOVED***already***REMOVED***defined.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***node.operator***REMOVED***?***REMOVED***node.operator***REMOVED***+***REMOVED***content***REMOVED***:***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***'insensitive')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***lastComment;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***rawLastComment***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastValue***REMOVED***=***REMOVED***node[lastAdded]***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***lastAdded)***REMOVED***||***REMOVED***lastValue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[lastAdded]***REMOVED***=***REMOVED***rawLastValue***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***\""***REMOVED***+***REMOVED***content***REMOVED***+***REMOVED***"\"***REMOVED***found.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"attribute");
		***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_attribute["default"](node));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***return***REMOVED***a***REMOVED***node***REMOVED***containing***REMOVED***meaningless***REMOVED***garbage***REMOVED***up***REMOVED***to***REMOVED***(but***REMOVED***not***REMOVED***including)***REMOVED***the***REMOVED***specified***REMOVED***token***REMOVED***position.
		***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***the***REMOVED***token***REMOVED***position***REMOVED***is***REMOVED***negative,***REMOVED***all***REMOVED***remaining***REMOVED***tokens***REMOVED***are***REMOVED***consumed.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***returns***REMOVED***an***REMOVED***array***REMOVED***containing***REMOVED***a***REMOVED***single***REMOVED***string***REMOVED***node***REMOVED***if***REMOVED***all***REMOVED***whitespace,
		***REMOVED******REMOVED******REMOVED*******REMOVED***otherwise***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***comment***REMOVED***nodes***REMOVED***with***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***These***REMOVED***tokens***REMOVED***are***REMOVED***not***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***selector,***REMOVED***the***REMOVED***caller***REMOVED***can***REMOVED***add***REMOVED***them***REMOVED***or***REMOVED***use***REMOVED***them***REMOVED***to***REMOVED***amend
		***REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***previous***REMOVED***node's***REMOVED***space***REMOVED***metadata.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***In***REMOVED***lossy***REMOVED***mode,***REMOVED***this***REMOVED***returns***REMOVED***only***REMOVED***comments.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.parseWhitespaceEquivalentTokens***REMOVED***=***REMOVED***function***REMOVED***parseWhitespaceEquivalentTokens(stopPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stopPosition***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopPosition***REMOVED***=***REMOVED***this.tokens.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startPosition***REMOVED***=***REMOVED***this.position;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment***REMOVED***=***REMOVED***new***REMOVED***_comment["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(lastComment);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(++this.position***REMOVED***<***REMOVED***stopPosition);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastComment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment.spaces.after***REMOVED***=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.tokens[startPosition];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastToken***REMOVED***=***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(firstToken[_tokenize.FIELDS.START_LINE],***REMOVED***firstToken[_tokenize.FIELDS.START_COL],***REMOVED***lastToken[_tokenize.FIELDS.END_LINE],***REMOVED***lastToken[_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***nodes
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.convertWhitespaceNodesToSpace***REMOVED***=***REMOVED***function***REMOVED***convertWhitespaceNodesToSpace(nodes,***REMOVED***requiredSpace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredSpace***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredSpace***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.spaces.before,***REMOVED***requiredSpace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.rawSpaceBefore,***REMOVED***requiredSpace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***_this2.lossySpace(n.spaces.after,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***spaceBefore.length***REMOVED***===***REMOVED***0);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***n.value***REMOVED***+***REMOVED***_this2.lossySpace(n.rawSpaceAfter,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***rawSpaceBefore.length***REMOVED***===***REMOVED***0);
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space:***REMOVED***space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace:***REMOVED***rawSpace
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.isNamedCombinator***REMOVED***=***REMOVED***function***REMOVED***isNamedCombinator(position)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position***REMOVED***=***REMOVED***this.position;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.namedCombinator***REMOVED***=***REMOVED***function***REMOVED***namedCombinator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nameRaw***REMOVED***=***REMOVED***this.content(this.tokens[this.position***REMOVED***+***REMOVED***1]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(nameRaw).toLowerCase();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***nameRaw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***"/"***REMOVED***+***REMOVED***nameRaw***REMOVED***+***REMOVED***"/";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"/"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"/",
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(this.currToken[_tokenize.FIELDS.START_LINE],***REMOVED***this.currToken[_tokenize.FIELDS.START_COL],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_LINE],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***3;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.combinator***REMOVED***=***REMOVED***function***REMOVED***combinator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.content()***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***decide***REMOVED***between***REMOVED***a***REMOVED***space***REMOVED***that's***REMOVED***a***REMOVED***descendant***REMOVED***combinator***REMOVED***and***REMOVED***meaningless***REMOVED***whitespace***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***selector.
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextSigTokenPos***REMOVED***=***REMOVED***this.locateNextMeaningfulToken(this.position);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodes.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(nodes),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***_this$convertWhitespa.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.rawSpaceAfter***REMOVED***+=***REMOVED***rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.spaces.after***REMOVED***+=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this3.newNode(n);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***>***REMOVED***this.position)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.namedCombinator();
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.combinator)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(!spaceOrDescendantSelectorNodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceOrDescendantSelectorNodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa2***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space***REMOVED***=***REMOVED***_this$convertWhitespa2.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa2.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***_space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rawSpaceBefore***REMOVED***=***REMOVED***_rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***descendant***REMOVED***combinator
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa3***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes,***REMOVED***true),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space2***REMOVED***=***REMOVED***_this$convertWhitespa3.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_this$convertWhitespa3.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_rawSpace2)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_space2;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_space2.endsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.endsWith('***REMOVED***'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***_space2.slice(0,***REMOVED***_space2.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.before***REMOVED***=***REMOVED***_rawSpace2.slice(0,***REMOVED***_rawSpace2.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_space2.startsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.startsWith('***REMOVED***'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.after***REMOVED***=***REMOVED***_space2.slice(1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.after***REMOVED***=***REMOVED***_rawSpace2.slice(1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***_rawSpace2;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'***REMOVED***',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(firstToken,***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(this.content());
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.newNode(node);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.comma***REMOVED***=***REMOVED***function***REMOVED***comma()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.trailingComma***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position***REMOVED***+***REMOVED***1])
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***1][_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.comment***REMOVED***=***REMOVED***function***REMOVED***comment()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_comment["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.root.error(message,***REMOVED***opts);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingBackslash***REMOVED***=***REMOVED***function***REMOVED***missingBackslash()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Expected***REMOVED***a***REMOVED***backslash***REMOVED***preceding***REMOVED***the***REMOVED***semicolon.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingParenthesis***REMOVED***=***REMOVED***function***REMOVED***missingParenthesis()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingSquareBracket***REMOVED***=***REMOVED***function***REMOVED***missingSquareBracket()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.unexpected***REMOVED***=***REMOVED***function***REMOVED***unexpected()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***'"***REMOVED***+***REMOVED***this.content()***REMOVED***+***REMOVED***"'.***REMOVED***Escaping***REMOVED***special***REMOVED***characters***REMOVED***with***REMOVED***\\***REMOVED***may***REMOVED***help.",***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.unexpectedPipe***REMOVED***=***REMOVED***function***REMOVED***unexpectedPipe()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***'|'.",***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.namespace***REMOVED***=***REMOVED***function***REMOVED***namespace()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***before***REMOVED***=***REMOVED***this.prevToken***REMOVED***&&***REMOVED***this.content(this.prevToken)***REMOVED***||***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.word(before);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.asterisk)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.universal(before);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpectedPipe();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.nesting***REMOVED***=***REMOVED***function***REMOVED***nesting()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextContent***REMOVED***=***REMOVED***this.content(this.nextToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextContent***REMOVED***===***REMOVED***"|")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_nesting["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parentheses***REMOVED***=***REMOVED***function***REMOVED***parentheses()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***unbalanced***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last.type***REMOVED***===***REMOVED***types.PSEUDO)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position])
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.tokens[this.position][_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***this.current;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***cache;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***I***REMOVED***think***REMOVED***this***REMOVED***case***REMOVED***should***REMOVED***be***REMOVED***an***REMOVED***error.***REMOVED***It's***REMOVED***used***REMOVED***to***REMOVED***implement***REMOVED***a***REMOVED***basic***REMOVED***parse***REMOVED***of***REMOVED***media***REMOVED***queries
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***I***REMOVED***don't***REMOVED***think***REMOVED***it's***REMOVED***a***REMOVED***good***REMOVED***idea.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenStart***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenValue***REMOVED***=***REMOVED***"(";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenEnd;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenEnd***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenValue***REMOVED***+=***REMOVED***this.parseParenthesisToken(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.appendToPropertyAndEscape("value",***REMOVED***parenValue,***REMOVED***parenValue);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***parenValue,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(parenStart[_tokenize.FIELDS.START_LINE],***REMOVED***parenStart[_tokenize.FIELDS.START_COL],***REMOVED***parenEnd[_tokenize.FIELDS.END_LINE],***REMOVED***parenEnd[_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***parenStart[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pseudoStr***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.colon)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.currToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.position***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.splitWord(false,***REMOVED***function***REMOVED***(first,***REMOVED***length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***first;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.newNode(new***REMOVED***_pseudo["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***pseudoStr,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(startingToken,***REMOVED***_this4.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***_this4.nextToken***REMOVED***&&***REMOVED***_this4.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.error('Misplaced***REMOVED***parenthesis.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***_this4.nextToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.space***REMOVED***=***REMOVED***function***REMOVED***space()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after***REMOVED***the***REMOVED***selector
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis***REMOVED***||***REMOVED***this.current.nodes.every(function***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***'comment';
		***REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.optionalSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.last.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.string***REMOVED***=***REMOVED***function***REMOVED***string()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.universal***REMOVED***=***REMOVED***function***REMOVED***universal(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_universal["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***namespace);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.splitWord***REMOVED***=***REMOVED***function***REMOVED***splitWord(namespace,***REMOVED***firstCallback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***word***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(nextToken***REMOVED***&&***REMOVED***~[tokens.dollar,***REMOVED***tokens.caret,***REMOVED***tokens.equals,***REMOVED***tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE]))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***current;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.lastIndexOf('\\')***REMOVED***===***REMOVED***current.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***this.requiredSpace(this.content(next));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasClass***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'.').filter(function***REMOVED***(i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***escaped***REMOVED***dot***REMOVED***within***REMOVED***class***REMOVED***name
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escapedDot***REMOVED***=***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'\\';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***decimal***REMOVED***numbers***REMOVED***percent***REMOVED***in***REMOVED***@keyframes
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isKeyframesPercent***REMOVED***=***REMOVED***/^\d+\.\d+%$/.test(word);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!escapedDot***REMOVED***&&***REMOVED***!isKeyframesPercent;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasId***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#').filter(function***REMOVED***(i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***'\\';
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Eliminate***REMOVED***Sass***REMOVED***interpolations***REMOVED***from***REMOVED***the***REMOVED***list***REMOVED***of***REMOVED***id***REMOVED***indexes
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***interpolations***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#{');
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interpolations.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasId***REMOVED***=***REMOVED***hasId.filter(function***REMOVED***(hashIndex)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!~interpolations.indexOf(hashIndex);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***indices***REMOVED***=***REMOVED***(0,***REMOVED***_sortAscending["default"])(uniqs([0].concat(hasClass,***REMOVED***hasId)));
		***REMOVED******REMOVED******REMOVED******REMOVED***indices.forEach(function***REMOVED***(ind,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***indices[i***REMOVED***+***REMOVED***1]***REMOVED***||***REMOVED***word.length;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***word.slice(ind,***REMOVED***index);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***firstCallback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***firstCallback.call(_this5,***REMOVED***value,***REMOVED***indices.length);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***_this5.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceIndex***REMOVED***=***REMOVED***current[_tokenize.FIELDS.START_POS]***REMOVED***+***REMOVED***indices[i];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***getSource(current[1],***REMOVED***current[2]***REMOVED***+***REMOVED***ind,***REMOVED***current[3],***REMOVED***current[2]***REMOVED***+***REMOVED***(index***REMOVED***-***REMOVED***1));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(~hasClass.indexOf(ind))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***classNameOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_className["default"](unescapeProp(classNameOpts,***REMOVED***"value"));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(~hasId.indexOf(ind))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***idOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_id["default"](unescapeProp(idOpts,***REMOVED***"value"));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tagOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(tagOpts,***REMOVED***"value");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_tag["default"](tagOpts);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this5.newNode(node,***REMOVED***namespace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***namespace***REMOVED***is***REMOVED***used***REMOVED***only***REMOVED***once
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.word***REMOVED***=***REMOVED***function***REMOVED***word(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.splitWord(namespace);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.loop***REMOVED***=***REMOVED***function***REMOVED***loop()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse(true);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.root;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parse***REMOVED***=***REMOVED***function***REMOVED***parse(throwOnParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.space();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comment();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parentheses();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwOnParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingParenthesis();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.attribute();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.word();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.colon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pseudo();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comma:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comma();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.universal();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.ampersand:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nesting();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.slash:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***cases***REMOVED***throw;***REMOVED***no***REMOVED***break***REMOVED***needed.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingSquareBracket();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.semicolon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingBackslash();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Helpers
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.expected***REMOVED***=***REMOVED***function***REMOVED***expected(description,***REMOVED***index,***REMOVED***found)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(description))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***description.pop();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***description***REMOVED***=***REMOVED***description.join(',***REMOVED***')***REMOVED***+***REMOVED***"***REMOVED***or***REMOVED***"***REMOVED***+***REMOVED***last;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***an***REMOVED***=***REMOVED***/^[aeiou]/.test(description[0])***REMOVED***?***REMOVED***'an'***REMOVED***:***REMOVED***'a';
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!found)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***".",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***",***REMOVED***found***REMOVED***\""***REMOVED***+***REMOVED***found***REMOVED***+***REMOVED***"\"***REMOVED***instead.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.requiredSpace***REMOVED***=***REMOVED***function***REMOVED***requiredSpace(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***space;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.optionalSpace***REMOVED***=***REMOVED***function***REMOVED***optionalSpace(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***space;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.lossySpace***REMOVED***=***REMOVED***function***REMOVED***lossySpace(space,***REMOVED***required)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***required***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parseParenthesisToken***REMOVED***=***REMOVED***function***REMOVED***parseParenthesisToken(token)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.requiredSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.newNode***REMOVED***=***REMOVED***function***REMOVED***newNode(node,***REMOVED***namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/^***REMOVED***+$/.test(namespace))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***(this.spaces***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.spaces)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***this.spaces;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.current.append(node);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.content***REMOVED***=***REMOVED***function***REMOVED***content(token)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.css.slice(token[_tokenize.FIELDS.START_POS],***REMOVED***token[_tokenize.FIELDS.END_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***next***REMOVED***non-whitespace,***REMOVED***non-comment***REMOVED***token.
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***-1***REMOVED***if***REMOVED***no***REMOVED***meaningful***REMOVED***token***REMOVED***is***REMOVED***found.
		***REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED***_proto.locateNextMeaningfulToken***REMOVED***=***REMOVED***function***REMOVED***locateNextMeaningfulToken(startPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startPosition***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startPosition***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***searchPosition***REMOVED***=***REMOVED***startPosition;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(searchPosition***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchPosition++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchPosition;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Parser,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"currToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"nextToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"prevToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Parser;
		}();
		exports["default"]***REMOVED***=***REMOVED***Parser;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(parser$1,***REMOVED***parser$1.exports));
	return***REMOVED***parser$1.exports;
}

var***REMOVED***hasRequiredProcessor$1;

function***REMOVED***requireProcessor$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredProcessor$1)***REMOVED***return***REMOVED***processor$1.exports;
	hasRequiredProcessor$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_parser***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireParser$2());
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		var***REMOVED***Processor***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Processor(func,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***this.func***REMOVED***=***REMOVED***func***REMOVED***||***REMOVED***function***REMOVED***noop()***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***this.funcRes***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Processor.prototype;
		***REMOVED******REMOVED***_proto._shouldUpdateSelector***REMOVED***=***REMOVED***function***REMOVED***_shouldUpdateSelector(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.updateSelector***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string";
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._isLossy***REMOVED***=***REMOVED***function***REMOVED***_isLossy(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.lossless***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._root***REMOVED***=***REMOVED***function***REMOVED***_root(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_parser["default"](rule,***REMOVED***this._parseOptions(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser.root;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._parseOptions***REMOVED***=***REMOVED***function***REMOVED***_parseOptions(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***this._isLossy(options)
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._run***REMOVED***=***REMOVED***function***REMOVED***_run(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise(function***REMOVED***(resolve,***REMOVED***reject)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***_this._root(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Promise.resolve(_this.func(root)).then(function***REMOVED***(transform)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_this._shouldUpdateSelector(rule,***REMOVED***options))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).then(resolve,***REMOVED***reject);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(e);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._runSync***REMOVED***=***REMOVED***function***REMOVED***_runSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***this._root(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***transform***REMOVED***=***REMOVED***this.func(root);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transform***REMOVED***&&***REMOVED***typeof***REMOVED***transform.then***REMOVED***===***REMOVED***"function")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Selector***REMOVED***processor***REMOVED***returned***REMOVED***a***REMOVED***promise***REMOVED***to***REMOVED***a***REMOVED***synchronous***REMOVED***call.");
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.updateSelector***REMOVED***&&***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<parser.Root>}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.ast***REMOVED***=***REMOVED***function***REMOVED***ast(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.root;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{parser.Root}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.astSync***REMOVED***=***REMOVED***function***REMOVED***astSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).root;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***asynchronously
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<any>}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.transform***REMOVED***=***REMOVED***function***REMOVED***transform(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.transform;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{any}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.transformSync***REMOVED***=***REMOVED***function***REMOVED***transformSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).transform;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***asynchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.process***REMOVED***=***REMOVED***function***REMOVED***process(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.processSync***REMOVED***=***REMOVED***function***REMOVED***processSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this._runSync(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***Processor;
		}();
		exports["default"]***REMOVED***=***REMOVED***Processor;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(processor$1,***REMOVED***processor$1.exports));
	return***REMOVED***processor$1.exports;
}

var***REMOVED***selectors$1***REMOVED***=***REMOVED***{};

var***REMOVED***constructors$1***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredConstructors$1;

function***REMOVED***requireConstructors$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredConstructors$1)***REMOVED***return***REMOVED***constructors$1;
	hasRequiredConstructors$1***REMOVED***=***REMOVED***1;

	constructors$1.__esModule***REMOVED***=***REMOVED***true;
	constructors$1.universal***REMOVED***=***REMOVED***constructors$1.tag***REMOVED***=***REMOVED***constructors$1.string***REMOVED***=***REMOVED***constructors$1.selector***REMOVED***=***REMOVED***constructors$1.root***REMOVED***=***REMOVED***constructors$1.pseudo***REMOVED***=***REMOVED***constructors$1.nesting***REMOVED***=***REMOVED***constructors$1.id***REMOVED***=***REMOVED***constructors$1.comment***REMOVED***=***REMOVED***constructors$1.combinator***REMOVED***=***REMOVED***constructors$1.className***REMOVED***=***REMOVED***constructors$1.attribute***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireAttribute$1());
	var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireClassName$1());
	var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCombinator$1());
	var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireComment$1());
	var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireId$1());
	var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNesting$1());
	var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requirePseudo$1());
	var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireRoot$1());
	var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSelector$1());
	var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireString$1());
	var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireTag$1());
	var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUniversal$1());
	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
	var***REMOVED***attribute***REMOVED***=***REMOVED***function***REMOVED***attribute(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_attribute["default"](opts);
	};
	constructors$1.attribute***REMOVED***=***REMOVED***attribute;
	var***REMOVED***className***REMOVED***=***REMOVED***function***REMOVED***className(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_className["default"](opts);
	};
	constructors$1.className***REMOVED***=***REMOVED***className;
	var***REMOVED***combinator***REMOVED***=***REMOVED***function***REMOVED***combinator(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_combinator["default"](opts);
	};
	constructors$1.combinator***REMOVED***=***REMOVED***combinator;
	var***REMOVED***comment***REMOVED***=***REMOVED***function***REMOVED***comment(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_comment["default"](opts);
	};
	constructors$1.comment***REMOVED***=***REMOVED***comment;
	var***REMOVED***id***REMOVED***=***REMOVED***function***REMOVED***id(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_id["default"](opts);
	};
	constructors$1.id***REMOVED***=***REMOVED***id;
	var***REMOVED***nesting***REMOVED***=***REMOVED***function***REMOVED***nesting(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_nesting["default"](opts);
	};
	constructors$1.nesting***REMOVED***=***REMOVED***nesting;
	var***REMOVED***pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_pseudo["default"](opts);
	};
	constructors$1.pseudo***REMOVED***=***REMOVED***pseudo;
	var***REMOVED***root***REMOVED***=***REMOVED***function***REMOVED***root(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_root["default"](opts);
	};
	constructors$1.root***REMOVED***=***REMOVED***root;
	var***REMOVED***selector***REMOVED***=***REMOVED***function***REMOVED***selector(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_selector["default"](opts);
	};
	constructors$1.selector***REMOVED***=***REMOVED***selector;
	var***REMOVED***string***REMOVED***=***REMOVED***function***REMOVED***string(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_string["default"](opts);
	};
	constructors$1.string***REMOVED***=***REMOVED***string;
	var***REMOVED***tag***REMOVED***=***REMOVED***function***REMOVED***tag(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_tag["default"](opts);
	};
	constructors$1.tag***REMOVED***=***REMOVED***tag;
	var***REMOVED***universal***REMOVED***=***REMOVED***function***REMOVED***universal(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_universal["default"](opts);
	};
	constructors$1.universal***REMOVED***=***REMOVED***universal;
	return***REMOVED***constructors$1;
}

var***REMOVED***guards$1***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredGuards$1;

function***REMOVED***requireGuards$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGuards$1)***REMOVED***return***REMOVED***guards$1;
	hasRequiredGuards$1***REMOVED***=***REMOVED***1;

	guards$1.__esModule***REMOVED***=***REMOVED***true;
	guards$1.isComment***REMOVED***=***REMOVED***guards$1.isCombinator***REMOVED***=***REMOVED***guards$1.isClassName***REMOVED***=***REMOVED***guards$1.isAttribute***REMOVED***=***REMOVED***void***REMOVED***0;
	guards$1.isContainer***REMOVED***=***REMOVED***isContainer;
	guards$1.isIdentifier***REMOVED***=***REMOVED***void***REMOVED***0;
	guards$1.isNamespace***REMOVED***=***REMOVED***isNamespace;
	guards$1.isNesting***REMOVED***=***REMOVED***void***REMOVED***0;
	guards$1.isNode***REMOVED***=***REMOVED***isNode;
	guards$1.isPseudo***REMOVED***=***REMOVED***void***REMOVED***0;
	guards$1.isPseudoClass***REMOVED***=***REMOVED***isPseudoClass;
	guards$1.isPseudoElement***REMOVED***=***REMOVED***isPseudoElement;
	guards$1.isUniversal***REMOVED***=***REMOVED***guards$1.isTag***REMOVED***=***REMOVED***guards$1.isString***REMOVED***=***REMOVED***guards$1.isSelector***REMOVED***=***REMOVED***guards$1.isRoot***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
	var***REMOVED***_IS_TYPE;
	var***REMOVED***IS_TYPE***REMOVED***=***REMOVED***(_IS_TYPE***REMOVED***=***REMOVED***{},***REMOVED***_IS_TYPE[_types.ATTRIBUTE]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.CLASS]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMBINATOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMMENT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ID]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.NESTING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.PSEUDO]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ROOT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.SELECTOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.STRING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.TAG]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.UNIVERSAL]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE);
	function***REMOVED***isNode(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***node***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***IS_TYPE[node.type];
	}
	function***REMOVED***isNodeType(type,***REMOVED***node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isNode(node)***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***type;
	}
	var***REMOVED***isAttribute***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ATTRIBUTE);
	guards$1.isAttribute***REMOVED***=***REMOVED***isAttribute;
	var***REMOVED***isClassName***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.CLASS);
	guards$1.isClassName***REMOVED***=***REMOVED***isClassName;
	var***REMOVED***isCombinator***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMBINATOR);
	guards$1.isCombinator***REMOVED***=***REMOVED***isCombinator;
	var***REMOVED***isComment***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMMENT);
	guards$1.isComment***REMOVED***=***REMOVED***isComment;
	var***REMOVED***isIdentifier***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ID);
	guards$1.isIdentifier***REMOVED***=***REMOVED***isIdentifier;
	var***REMOVED***isNesting***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.NESTING);
	guards$1.isNesting***REMOVED***=***REMOVED***isNesting;
	var***REMOVED***isPseudo***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.PSEUDO);
	guards$1.isPseudo***REMOVED***=***REMOVED***isPseudo;
	var***REMOVED***isRoot***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ROOT);
	guards$1.isRoot***REMOVED***=***REMOVED***isRoot;
	var***REMOVED***isSelector***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.SELECTOR);
	guards$1.isSelector***REMOVED***=***REMOVED***isSelector;
	var***REMOVED***isString***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.STRING);
	guards$1.isString***REMOVED***=***REMOVED***isString;
	var***REMOVED***isTag***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.TAG);
	guards$1.isTag***REMOVED***=***REMOVED***isTag;
	var***REMOVED***isUniversal***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.UNIVERSAL);
	guards$1.isUniversal***REMOVED***=***REMOVED***isUniversal;
	function***REMOVED***isPseudoElement(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***node.value***REMOVED***&&***REMOVED***(node.value.startsWith("::")***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":before"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":after"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-letter"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-line");
	}
	function***REMOVED***isPseudoClass(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***!isPseudoElement(node);
	}
	function***REMOVED***isContainer(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***!!(isNode(node)***REMOVED***&&***REMOVED***node.walk);
	}
	function***REMOVED***isNamespace(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isAttribute(node)***REMOVED***||***REMOVED***isTag(node);
	}
	return***REMOVED***guards$1;
}

var***REMOVED***hasRequiredSelectors$1;

function***REMOVED***requireSelectors$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSelectors$1)***REMOVED***return***REMOVED***selectors$1;
	hasRequiredSelectors$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes$1();
		Object.keys(_types).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_types[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_types[key];
		});
		var***REMOVED***_constructors***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireConstructors$1();
		Object.keys(_constructors).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_constructors[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_constructors[key];
		});
		var***REMOVED***_guards***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireGuards$1();
		Object.keys(_guards).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_guards[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_guards[key];
		});***REMOVED***
	}***REMOVED***(selectors$1));
	return***REMOVED***selectors$1;
}

var***REMOVED***hasRequiredDist$1;

function***REMOVED***requireDist$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredDist$1)***REMOVED***return***REMOVED***dist$1.exports;
	hasRequiredDist$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_processor***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireProcessor$1());
		var***REMOVED***selectors***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireSelectors$1());
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		var***REMOVED***parser***REMOVED***=***REMOVED***function***REMOVED***parser(processor)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_processor["default"](processor);
		};
		Object.assign(parser,***REMOVED***selectors);
		delete***REMOVED***parser.__esModule;
		var***REMOVED***_default***REMOVED***=***REMOVED***parser;
		exports["default"]***REMOVED***=***REMOVED***_default;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(dist$1,***REMOVED***dist$1.exports));
	return***REMOVED***dist$1.exports;
}

var***REMOVED***distExports***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireDist$1();
var***REMOVED***selectorParser***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(distExports);

const***REMOVED***animationNameRE***REMOVED***=***REMOVED***/^(?:-\w+-)?animation-name$/;
const***REMOVED***animationRE***REMOVED***=***REMOVED***/^(?:-\w+-)?animation$/;
const***REMOVED***keyframesRE***REMOVED***=***REMOVED***/^(?:-\w+-)?keyframes$/;
const***REMOVED***scopedPlugin***REMOVED***=***REMOVED***(id***REMOVED***=***REMOVED***"")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***keyframes***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***const***REMOVED***shortId***REMOVED***=***REMOVED***id.replace(/^data-v-/,***REMOVED***"");
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"vue-sfc-scoped",
***REMOVED******REMOVED******REMOVED******REMOVED***Rule(rule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processRule(id,***REMOVED***rule);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***AtRule(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keyframesRE.test(node.name)***REMOVED***&&***REMOVED***!node.params.endsWith(`-${shortId}`))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyframes[node.params]***REMOVED***=***REMOVED***node.params***REMOVED***=***REMOVED***node.params***REMOVED***+***REMOVED***"-"***REMOVED***+***REMOVED***shortId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***OnceExit(root)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Object.keys(keyframes).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkDecls((decl)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(animationNameRE.test(decl.prop))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***decl.value.split(",").map((v)***REMOVED***=>***REMOVED***keyframes[v.trim()]***REMOVED***||***REMOVED***v.trim()).join(",");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(animationRE.test(decl.prop))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***decl.value.split(",").map((v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***vals***REMOVED***=***REMOVED***v.trim().split(/\s+/);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***vals.findIndex((val)***REMOVED***=>***REMOVED***keyframes[val]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vals.splice(i,***REMOVED***1,***REMOVED***keyframes[vals[i]]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***vals.join("***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).join(",");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
};
const***REMOVED***processedRules***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();
function***REMOVED***processRule(id,***REMOVED***rule)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(processedRules.has(rule)***REMOVED***||***REMOVED***rule.parent***REMOVED***&&***REMOVED***rule.parent.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&***REMOVED***keyframesRE.test(rule.parent.name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***processedRules.add(rule);
***REMOVED******REMOVED***let***REMOVED***deep***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***rule.parent;
***REMOVED******REMOVED***while***REMOVED***(parent***REMOVED***&&***REMOVED***parent.type***REMOVED***!==***REMOVED***"root")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent.__deep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deep***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parent;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***selectorParser((selectorRoot)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***selectorRoot.each((selector)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rewriteSelector(id,***REMOVED***rule,***REMOVED***selector,***REMOVED***selectorRoot,***REMOVED***deep);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}).processSync(rule.selector);
}
function***REMOVED***rewriteSelector(id,***REMOVED***rule,***REMOVED***selector,***REMOVED***selectorRoot,***REMOVED***deep,***REMOVED***slotted***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***node***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***let***REMOVED***shouldInject***REMOVED***=***REMOVED***!deep;
***REMOVED******REMOVED***selector.each((n)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&***REMOVED***(n.value***REMOVED***===***REMOVED***">>>"***REMOVED***||***REMOVED***n.value***REMOVED***===***REMOVED***"/deep/"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n.value***REMOVED***=***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n.spaces.before***REMOVED***=***REMOVED***n.spaces.after***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`the***REMOVED***>>>***REMOVED***and***REMOVED***/deep/***REMOVED***combinators***REMOVED***have***REMOVED***been***REMOVED***deprecated.***REMOVED***Use***REMOVED***:deep()***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.type***REMOVED***===***REMOVED***"pseudo")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***value***REMOVED***}***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***":deep"***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***"::v-deep")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.__deep***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.nodes.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***last***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n.nodes[0].each((ss)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.insertAfter(last,***REMOVED***ss);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last***REMOVED***=***REMOVED***ss;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***selector.at(selector.index(n)***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prev***REMOVED***||***REMOVED***!isSpaceCombinator(prev))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.insertAfter(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selectorParser.combinator({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"***REMOVED***"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${value}***REMOVED***usage***REMOVED***as***REMOVED***a***REMOVED***combinator***REMOVED***has***REMOVED***been***REMOVED***deprecated.***REMOVED***Use***REMOVED***:deep(<inner-selector>)***REMOVED***instead***REMOVED***of***REMOVED***${value}***REMOVED***<inner-selector>.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***selector.at(selector.index(n)***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***isSpaceCombinator(prev))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(prev);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***":slotted"***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***"::v-slotted")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rewriteSelector(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n.nodes[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selectorRoot,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deep,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***last***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n.nodes[0].each((ss)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.insertAfter(last,***REMOVED***ss);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last***REMOVED***=***REMOVED***ss;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldInject***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***":global"***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***"::v-global")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.replaceWith(n.nodes[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.type***REMOVED***===***REMOVED***"universal")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***selector.at(selector.index(n)***REMOVED***-***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***selector.at(selector.index(n)***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prev)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&***REMOVED***next.value***REMOVED***===***REMOVED***"***REMOVED***")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***selectorParser.combinator({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.insertBefore(n,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.removeChild(n);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.type***REMOVED***!==***REMOVED***"pseudo"***REMOVED***&&***REMOVED***n.type***REMOVED***!==***REMOVED***"combinator"***REMOVED***||***REMOVED***n.type***REMOVED***===***REMOVED***"pseudo"***REMOVED***&&***REMOVED***(n.value***REMOVED***===***REMOVED***":is"***REMOVED***||***REMOVED***n.value***REMOVED***===***REMOVED***":where")***REMOVED***&&***REMOVED***!node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(rule.nodes.some((node2)***REMOVED***=>***REMOVED***node2.type***REMOVED***===***REMOVED***"rule"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deep2***REMOVED***=***REMOVED***rule.__deep;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!deep2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractAndWrapNodes(rule);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***atruleNodes***REMOVED***=***REMOVED***rule.nodes.filter((node2)***REMOVED***=>***REMOVED***node2.type***REMOVED***===***REMOVED***"atrule");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***atnode***REMOVED***of***REMOVED***atruleNodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractAndWrapNodes(atnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***shouldInject***REMOVED***=***REMOVED***deep2;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***value***REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"pseudo"***REMOVED***&&***REMOVED***(value***REMOVED***===***REMOVED***":is"***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***":where"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes.forEach(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(value2)***REMOVED***=>***REMOVED***rewriteSelector(id,***REMOVED***rule,***REMOVED***value2,***REMOVED***selectorRoot,***REMOVED***deep,***REMOVED***slotted)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldInject***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.after***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***selector.first.spaces.before***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(shouldInject)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***idToAdd***REMOVED***=***REMOVED***slotted***REMOVED***?***REMOVED***id***REMOVED***+***REMOVED***"-s"***REMOVED***:***REMOVED***id;
***REMOVED******REMOVED******REMOVED******REMOVED***selector.insertAfter(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***node***REMOVED***is***REMOVED***null***REMOVED***it***REMOVED***means***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***inject***REMOVED***[id]***REMOVED***at***REMOVED***the***REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***insertAfter***REMOVED***can***REMOVED***handle***REMOVED***`null`***REMOVED***here
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selectorParser.attribute({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attribute:***REMOVED***idToAdd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***idToAdd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark:***REMOVED***`"`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***isSpaceCombinator(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&***REMOVED***/^\s+$/.test(node.value);
}
function***REMOVED***extractAndWrapNodes(parentNode)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!parentNode.nodes)***REMOVED***return;
***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***parentNode.nodes.filter(
***REMOVED******REMOVED******REMOVED******REMOVED***(node)***REMOVED***=>***REMOVED***node.type***REMOVED***===***REMOVED***"decl"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"comment"
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(nodes.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***nodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentNode.removeChild(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrappedRule***REMOVED***=***REMOVED***new***REMOVED***require$$0$1.Rule({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***"&"
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***parentNode.prepend(wrappedRule);
***REMOVED******REMOVED***}
}
scopedPlugin.postcss***REMOVED***=***REMOVED***true;

var***REMOVED***sourceMap***REMOVED***=***REMOVED***{};

var***REMOVED***sourceMapGenerator***REMOVED***=***REMOVED***{};

var***REMOVED***base64Vlq***REMOVED***=***REMOVED***{};

var***REMOVED***base64***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredBase64;

function***REMOVED***requireBase64***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBase64)***REMOVED***return***REMOVED***base64;
	hasRequiredBase64***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***intToCharMap***REMOVED***=***REMOVED***'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

	/**
	***REMOVED*******REMOVED***Encode***REMOVED***an***REMOVED***integer***REMOVED***in***REMOVED***the***REMOVED***range***REMOVED***of***REMOVED***0***REMOVED***to***REMOVED***63***REMOVED***to***REMOVED***a***REMOVED***single***REMOVED***base***REMOVED***64***REMOVED***digit.
	***REMOVED****/
	base64.encode***REMOVED***=***REMOVED***function***REMOVED***(number)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(0***REMOVED***<=***REMOVED***number***REMOVED***&&***REMOVED***number***REMOVED***<***REMOVED***intToCharMap.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***intToCharMap[number];
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Must***REMOVED***be***REMOVED***between***REMOVED***0***REMOVED***and***REMOVED***63:***REMOVED***"***REMOVED***+***REMOVED***number);
	};

	/**
	***REMOVED*******REMOVED***Decode***REMOVED***a***REMOVED***single***REMOVED***base***REMOVED***64***REMOVED***character***REMOVED***code***REMOVED***digit***REMOVED***to***REMOVED***an***REMOVED***integer.***REMOVED***Returns***REMOVED***-1***REMOVED***on
	***REMOVED*******REMOVED***failure.
	***REMOVED****/
	base64.decode***REMOVED***=***REMOVED***function***REMOVED***(charCode)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***bigA***REMOVED***=***REMOVED***65;***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'A'
	***REMOVED******REMOVED***var***REMOVED***bigZ***REMOVED***=***REMOVED***90;***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'Z'

	***REMOVED******REMOVED***var***REMOVED***littleA***REMOVED***=***REMOVED***97;***REMOVED******REMOVED***//***REMOVED***'a'
	***REMOVED******REMOVED***var***REMOVED***littleZ***REMOVED***=***REMOVED***122;***REMOVED***//***REMOVED***'z'

	***REMOVED******REMOVED***var***REMOVED***zero***REMOVED***=***REMOVED***48;***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'0'
	***REMOVED******REMOVED***var***REMOVED***nine***REMOVED***=***REMOVED***57;***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'9'

	***REMOVED******REMOVED***var***REMOVED***plus***REMOVED***=***REMOVED***43;***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'+'
	***REMOVED******REMOVED***var***REMOVED***slash***REMOVED***=***REMOVED***47;***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'/'

	***REMOVED******REMOVED***var***REMOVED***littleOffset***REMOVED***=***REMOVED***26;
	***REMOVED******REMOVED***var***REMOVED***numberOffset***REMOVED***=***REMOVED***52;

	***REMOVED******REMOVED***//***REMOVED***0***REMOVED***-***REMOVED***25:***REMOVED***ABCDEFGHIJKLMNOPQRSTUVWXYZ
	***REMOVED******REMOVED***if***REMOVED***(bigA***REMOVED***<=***REMOVED***charCode***REMOVED***&&***REMOVED***charCode***REMOVED***<=***REMOVED***bigZ)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(charCode***REMOVED***-***REMOVED***bigA);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***26***REMOVED***-***REMOVED***51:***REMOVED***abcdefghijklmnopqrstuvwxyz
	***REMOVED******REMOVED***if***REMOVED***(littleA***REMOVED***<=***REMOVED***charCode***REMOVED***&&***REMOVED***charCode***REMOVED***<=***REMOVED***littleZ)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(charCode***REMOVED***-***REMOVED***littleA***REMOVED***+***REMOVED***littleOffset);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***52***REMOVED***-***REMOVED***61:***REMOVED***0123456789
	***REMOVED******REMOVED***if***REMOVED***(zero***REMOVED***<=***REMOVED***charCode***REMOVED***&&***REMOVED***charCode***REMOVED***<=***REMOVED***nine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(charCode***REMOVED***-***REMOVED***zero***REMOVED***+***REMOVED***numberOffset);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***62:***REMOVED***+
	***REMOVED******REMOVED***if***REMOVED***(charCode***REMOVED***==***REMOVED***plus)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***62;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***63:***REMOVED***/
	***REMOVED******REMOVED***if***REMOVED***(charCode***REMOVED***==***REMOVED***slash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***63;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***Invalid***REMOVED***base64***REMOVED***digit.
	***REMOVED******REMOVED***return***REMOVED***-1;
	};
	return***REMOVED***base64;
}

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredBase64Vlq;

function***REMOVED***requireBase64Vlq***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBase64Vlq)***REMOVED***return***REMOVED***base64Vlq;
	hasRequiredBase64Vlq***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****
	***REMOVED*******REMOVED***Based***REMOVED***on***REMOVED***the***REMOVED***Base***REMOVED***64***REMOVED***VLQ***REMOVED***implementation***REMOVED***in***REMOVED***Closure***REMOVED***Compiler:
	***REMOVED*******REMOVED***https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
	***REMOVED****
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***The***REMOVED***Closure***REMOVED***Compiler***REMOVED***Authors.***REMOVED***All***REMOVED***rights***REMOVED***reserved.
	***REMOVED*******REMOVED***Redistribution***REMOVED***and***REMOVED***use***REMOVED***in***REMOVED***source***REMOVED***and***REMOVED***binary***REMOVED***forms,***REMOVED***with***REMOVED***or***REMOVED***without
	***REMOVED*******REMOVED***modification,***REMOVED***are***REMOVED***permitted***REMOVED***provided***REMOVED***that***REMOVED***the***REMOVED***following***REMOVED***conditions***REMOVED***are
	***REMOVED*******REMOVED***met:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED*******REMOVED***Redistributions***REMOVED***of***REMOVED***source***REMOVED***code***REMOVED***must***REMOVED***retain***REMOVED***the***REMOVED***above***REMOVED***copyright
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***notice,***REMOVED***this***REMOVED***list***REMOVED***of***REMOVED***conditions***REMOVED***and***REMOVED***the***REMOVED***following***REMOVED***disclaimer.
	***REMOVED*******REMOVED******REMOVED*******REMOVED***Redistributions***REMOVED***in***REMOVED***binary***REMOVED***form***REMOVED***must***REMOVED***reproduce***REMOVED***the***REMOVED***above
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***copyright***REMOVED***notice,***REMOVED***this***REMOVED***list***REMOVED***of***REMOVED***conditions***REMOVED***and***REMOVED***the***REMOVED***following
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***disclaimer***REMOVED***in***REMOVED***the***REMOVED***documentation***REMOVED***and/or***REMOVED***other***REMOVED***materials***REMOVED***provided
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***with***REMOVED***the***REMOVED***distribution.
	***REMOVED*******REMOVED******REMOVED*******REMOVED***Neither***REMOVED***the***REMOVED***name***REMOVED***of***REMOVED***Google***REMOVED***Inc.***REMOVED***nor***REMOVED***the***REMOVED***names***REMOVED***of***REMOVED***its
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***contributors***REMOVED***may***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***endorse***REMOVED***or***REMOVED***promote***REMOVED***products***REMOVED***derived
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***from***REMOVED***this***REMOVED***software***REMOVED***without***REMOVED***specific***REMOVED***prior***REMOVED***written***REMOVED***permission.
	***REMOVED****
	***REMOVED*******REMOVED***THIS***REMOVED***SOFTWARE***REMOVED***IS***REMOVED***PROVIDED***REMOVED***BY***REMOVED***THE***REMOVED***COPYRIGHT***REMOVED***HOLDERS***REMOVED***AND***REMOVED***CONTRIBUTORS
	***REMOVED*******REMOVED***"AS***REMOVED***IS"***REMOVED***AND***REMOVED***ANY***REMOVED***EXPRESS***REMOVED***OR***REMOVED***IMPLIED***REMOVED***WARRANTIES,***REMOVED***INCLUDING,***REMOVED***BUT***REMOVED***NOT
	***REMOVED*******REMOVED***LIMITED***REMOVED***TO,***REMOVED***THE***REMOVED***IMPLIED***REMOVED***WARRANTIES***REMOVED***OF***REMOVED***MERCHANTABILITY***REMOVED***AND***REMOVED***FITNESS***REMOVED***FOR
	***REMOVED*******REMOVED***A***REMOVED***PARTICULAR***REMOVED***PURPOSE***REMOVED***ARE***REMOVED***DISCLAIMED.***REMOVED***IN***REMOVED***NO***REMOVED***EVENT***REMOVED***SHALL***REMOVED***THE***REMOVED***COPYRIGHT
	***REMOVED*******REMOVED***OWNER***REMOVED***OR***REMOVED***CONTRIBUTORS***REMOVED***BE***REMOVED***LIABLE***REMOVED***FOR***REMOVED***ANY***REMOVED***DIRECT,***REMOVED***INDIRECT,***REMOVED***INCIDENTAL,
	***REMOVED*******REMOVED***SPECIAL,***REMOVED***EXEMPLARY,***REMOVED***OR***REMOVED***CONSEQUENTIAL***REMOVED***DAMAGES***REMOVED***(INCLUDING,***REMOVED***BUT***REMOVED***NOT
	***REMOVED*******REMOVED***LIMITED***REMOVED***TO,***REMOVED***PROCUREMENT***REMOVED***OF***REMOVED***SUBSTITUTE***REMOVED***GOODS***REMOVED***OR***REMOVED***SERVICES;***REMOVED***LOSS***REMOVED***OF***REMOVED***USE,
	***REMOVED*******REMOVED***DATA,***REMOVED***OR***REMOVED***PROFITS;***REMOVED***OR***REMOVED***BUSINESS***REMOVED***INTERRUPTION)***REMOVED***HOWEVER***REMOVED***CAUSED***REMOVED***AND***REMOVED***ON***REMOVED***ANY
	***REMOVED*******REMOVED***THEORY***REMOVED***OF***REMOVED***LIABILITY,***REMOVED***WHETHER***REMOVED***IN***REMOVED***CONTRACT,***REMOVED***STRICT***REMOVED***LIABILITY,***REMOVED***OR***REMOVED***TORT
	***REMOVED*******REMOVED***(INCLUDING***REMOVED***NEGLIGENCE***REMOVED***OR***REMOVED***OTHERWISE)***REMOVED***ARISING***REMOVED***IN***REMOVED***ANY***REMOVED***WAY***REMOVED***OUT***REMOVED***OF***REMOVED***THE***REMOVED***USE
	***REMOVED*******REMOVED***OF***REMOVED***THIS***REMOVED***SOFTWARE,***REMOVED***EVEN***REMOVED***IF***REMOVED***ADVISED***REMOVED***OF***REMOVED***THE***REMOVED***POSSIBILITY***REMOVED***OF***REMOVED***SUCH***REMOVED***DAMAGE.
	***REMOVED****/

	var***REMOVED***base64***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBase64();

	//***REMOVED***A***REMOVED***single***REMOVED***base***REMOVED***64***REMOVED***digit***REMOVED***can***REMOVED***contain***REMOVED***6***REMOVED***bits***REMOVED***of***REMOVED***data.***REMOVED***For***REMOVED***the***REMOVED***base***REMOVED***64***REMOVED***variable
	//***REMOVED***length***REMOVED***quantities***REMOVED***we***REMOVED***use***REMOVED***in***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec,***REMOVED***the***REMOVED***first***REMOVED***bit***REMOVED***is***REMOVED***the***REMOVED***sign,
	//***REMOVED***the***REMOVED***next***REMOVED***four***REMOVED***bits***REMOVED***are***REMOVED***the***REMOVED***actual***REMOVED***value,***REMOVED***and***REMOVED***the***REMOVED***6th***REMOVED***bit***REMOVED***is***REMOVED***the
	//***REMOVED***continuation***REMOVED***bit.***REMOVED***The***REMOVED***continuation***REMOVED***bit***REMOVED***tells***REMOVED***us***REMOVED***whether***REMOVED***there***REMOVED***are***REMOVED***more
	//***REMOVED***digits***REMOVED***in***REMOVED***this***REMOVED***value***REMOVED***following***REMOVED***this***REMOVED***digit.
	//
	//***REMOVED******REMOVED******REMOVED***Continuation
	//***REMOVED******REMOVED******REMOVED***|***REMOVED******REMOVED******REMOVED******REMOVED***Sign
	//***REMOVED******REMOVED******REMOVED***|***REMOVED******REMOVED******REMOVED******REMOVED***|
	//***REMOVED******REMOVED******REMOVED***V***REMOVED******REMOVED******REMOVED******REMOVED***V
	//***REMOVED******REMOVED******REMOVED***101011

	var***REMOVED***VLQ_BASE_SHIFT***REMOVED***=***REMOVED***5;

	//***REMOVED***binary:***REMOVED***100000
	var***REMOVED***VLQ_BASE***REMOVED***=***REMOVED***1***REMOVED***<<***REMOVED***VLQ_BASE_SHIFT;

	//***REMOVED***binary:***REMOVED***011111
	var***REMOVED***VLQ_BASE_MASK***REMOVED***=***REMOVED***VLQ_BASE***REMOVED***-***REMOVED***1;

	//***REMOVED***binary:***REMOVED***100000
	var***REMOVED***VLQ_CONTINUATION_BIT***REMOVED***=***REMOVED***VLQ_BASE;

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***from***REMOVED***a***REMOVED***two-complement***REMOVED***value***REMOVED***to***REMOVED***a***REMOVED***value***REMOVED***where***REMOVED***the***REMOVED***sign***REMOVED***bit***REMOVED***is
	***REMOVED*******REMOVED***placed***REMOVED***in***REMOVED***the***REMOVED***least***REMOVED***significant***REMOVED***bit.***REMOVED******REMOVED***For***REMOVED***example,***REMOVED***as***REMOVED***decimals:
	***REMOVED*******REMOVED******REMOVED******REMOVED***1***REMOVED***becomes***REMOVED***2***REMOVED***(10***REMOVED***binary),***REMOVED***-1***REMOVED***becomes***REMOVED***3***REMOVED***(11***REMOVED***binary)
	***REMOVED*******REMOVED******REMOVED******REMOVED***2***REMOVED***becomes***REMOVED***4***REMOVED***(100***REMOVED***binary),***REMOVED***-2***REMOVED***becomes***REMOVED***5***REMOVED***(101***REMOVED***binary)
	***REMOVED****/
	function***REMOVED***toVLQSigned(aValue)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***aValue***REMOVED***<***REMOVED***0
	***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***((-aValue)***REMOVED***<<***REMOVED***1)***REMOVED***+***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***(aValue***REMOVED***<<***REMOVED***1)***REMOVED***+***REMOVED***0;
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***to***REMOVED***a***REMOVED***two-complement***REMOVED***value***REMOVED***from***REMOVED***a***REMOVED***value***REMOVED***where***REMOVED***the***REMOVED***sign***REMOVED***bit***REMOVED***is
	***REMOVED*******REMOVED***placed***REMOVED***in***REMOVED***the***REMOVED***least***REMOVED***significant***REMOVED***bit.***REMOVED******REMOVED***For***REMOVED***example,***REMOVED***as***REMOVED***decimals:
	***REMOVED*******REMOVED******REMOVED******REMOVED***2***REMOVED***(10***REMOVED***binary)***REMOVED***becomes***REMOVED***1,***REMOVED***3***REMOVED***(11***REMOVED***binary)***REMOVED***becomes***REMOVED***-1
	***REMOVED*******REMOVED******REMOVED******REMOVED***4***REMOVED***(100***REMOVED***binary)***REMOVED***becomes***REMOVED***2,***REMOVED***5***REMOVED***(101***REMOVED***binary)***REMOVED***becomes***REMOVED***-2
	***REMOVED****/
	function***REMOVED***fromVLQSigned(aValue)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***isNegative***REMOVED***=***REMOVED***(aValue***REMOVED***&***REMOVED***1)***REMOVED***===***REMOVED***1;
	***REMOVED******REMOVED***var***REMOVED***shifted***REMOVED***=***REMOVED***aValue***REMOVED***>>***REMOVED***1;
	***REMOVED******REMOVED***return***REMOVED***isNegative
	***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***-shifted
	***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***shifted;
	}

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***base***REMOVED***64***REMOVED***VLQ***REMOVED***encoded***REMOVED***value.
	***REMOVED****/
	base64Vlq.encode***REMOVED***=***REMOVED***function***REMOVED***base64VLQ_encode(aValue)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***encoded***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***var***REMOVED***digit;

	***REMOVED******REMOVED***var***REMOVED***vlq***REMOVED***=***REMOVED***toVLQSigned(aValue);

	***REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***digit***REMOVED***=***REMOVED***vlq***REMOVED***&***REMOVED***VLQ_BASE_MASK;
	***REMOVED******REMOVED******REMOVED******REMOVED***vlq***REMOVED***>>>=***REMOVED***VLQ_BASE_SHIFT;
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vlq***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***are***REMOVED***still***REMOVED***more***REMOVED***digits***REMOVED***in***REMOVED***this***REMOVED***value,***REMOVED***so***REMOVED***we***REMOVED***must***REMOVED***make***REMOVED***sure***REMOVED***the
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***continuation***REMOVED***bit***REMOVED***is***REMOVED***marked.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digit***REMOVED***|=***REMOVED***VLQ_CONTINUATION_BIT;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***encoded***REMOVED***+=***REMOVED***base64.encode(digit);
	***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(vlq***REMOVED***>***REMOVED***0);

	***REMOVED******REMOVED***return***REMOVED***encoded;
	};

	/**
	***REMOVED*******REMOVED***Decodes***REMOVED***the***REMOVED***next***REMOVED***base***REMOVED***64***REMOVED***VLQ***REMOVED***value***REMOVED***from***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***and***REMOVED***returns***REMOVED***the
	***REMOVED*******REMOVED***value***REMOVED***and***REMOVED***the***REMOVED***rest***REMOVED***of***REMOVED***the***REMOVED***string***REMOVED***via***REMOVED***the***REMOVED***out***REMOVED***parameter.
	***REMOVED****/
	base64Vlq.decode***REMOVED***=***REMOVED***function***REMOVED***base64VLQ_decode(aStr,***REMOVED***aIndex,***REMOVED***aOutParam)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***strLen***REMOVED***=***REMOVED***aStr.length;
	***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***shift***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***continuation,***REMOVED***digit;

	***REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aIndex***REMOVED***>=***REMOVED***strLen)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Expected***REMOVED***more***REMOVED***digits***REMOVED***in***REMOVED***base***REMOVED***64***REMOVED***VLQ***REMOVED***value.");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***digit***REMOVED***=***REMOVED***base64.decode(aStr.charCodeAt(aIndex++));
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(digit***REMOVED***===***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***base64***REMOVED***digit:***REMOVED***"***REMOVED***+***REMOVED***aStr.charAt(aIndex***REMOVED***-***REMOVED***1));
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***continuation***REMOVED***=***REMOVED***!!(digit***REMOVED***&***REMOVED***VLQ_CONTINUATION_BIT);
	***REMOVED******REMOVED******REMOVED******REMOVED***digit***REMOVED***&=***REMOVED***VLQ_BASE_MASK;
	***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***result***REMOVED***+***REMOVED***(digit***REMOVED***<<***REMOVED***shift);
	***REMOVED******REMOVED******REMOVED******REMOVED***shift***REMOVED***+=***REMOVED***VLQ_BASE_SHIFT;
	***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(continuation);

	***REMOVED******REMOVED***aOutParam.value***REMOVED***=***REMOVED***fromVLQSigned(result);
	***REMOVED******REMOVED***aOutParam.rest***REMOVED***=***REMOVED***aIndex;
	};
	return***REMOVED***base64Vlq;
}

var***REMOVED***util$1***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredUtil$1;

function***REMOVED***requireUtil$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUtil$1)***REMOVED***return***REMOVED***util$1;
	hasRequiredUtil$1***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{
		/*
		***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
		***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
		***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
		***REMOVED****/

		/**
		***REMOVED*******REMOVED***This***REMOVED***is***REMOVED***a***REMOVED***helper***REMOVED***function***REMOVED***for***REMOVED***getting***REMOVED***values***REMOVED***from***REMOVED***parameter/options
		***REMOVED*******REMOVED***objects.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***args***REMOVED***The***REMOVED***object***REMOVED***we***REMOVED***are***REMOVED***extracting***REMOVED***values***REMOVED***from
		***REMOVED*******REMOVED***@param***REMOVED***name***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***property***REMOVED***we***REMOVED***are***REMOVED***getting.
		***REMOVED*******REMOVED***@param***REMOVED***defaultValue***REMOVED***An***REMOVED***optional***REMOVED***value***REMOVED***to***REMOVED***return***REMOVED***if***REMOVED***the***REMOVED***property***REMOVED***is***REMOVED***missing
		***REMOVED*******REMOVED***from***REMOVED***the***REMOVED***object.***REMOVED***If***REMOVED***this***REMOVED***is***REMOVED***not***REMOVED***specified***REMOVED***and***REMOVED***the***REMOVED***property***REMOVED***is***REMOVED***missing,***REMOVED***an
		***REMOVED*******REMOVED***error***REMOVED***will***REMOVED***be***REMOVED***thrown.
		***REMOVED****/
		function***REMOVED***getArg(aArgs,***REMOVED***aName,***REMOVED***aDefaultValue)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(aName***REMOVED***in***REMOVED***aArgs)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aArgs[aName];
		***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(arguments.length***REMOVED***===***REMOVED***3)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aDefaultValue;
		***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***aName***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***a***REMOVED***required***REMOVED***argument.');
		***REMOVED******REMOVED***}
		}
		exports.getArg***REMOVED***=***REMOVED***getArg;

		var***REMOVED***urlRegexp***REMOVED***=***REMOVED***/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
		var***REMOVED***dataUrlRegexp***REMOVED***=***REMOVED***/^data:.+\,.+$/;

		function***REMOVED***urlParse(aUrl)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***match***REMOVED***=***REMOVED***aUrl.match(urlRegexp);
		***REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***scheme:***REMOVED***match[1],
		***REMOVED******REMOVED******REMOVED******REMOVED***auth:***REMOVED***match[2],
		***REMOVED******REMOVED******REMOVED******REMOVED***host:***REMOVED***match[3],
		***REMOVED******REMOVED******REMOVED******REMOVED***port:***REMOVED***match[4],
		***REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***match[5]
		***REMOVED******REMOVED***};
		}
		exports.urlParse***REMOVED***=***REMOVED***urlParse;

		function***REMOVED***urlGenerate(aParsedUrl)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***url***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED***if***REMOVED***(aParsedUrl.scheme)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***+=***REMOVED***aParsedUrl.scheme***REMOVED***+***REMOVED***':';
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***url***REMOVED***+=***REMOVED***'//';
		***REMOVED******REMOVED***if***REMOVED***(aParsedUrl.auth)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***+=***REMOVED***aParsedUrl.auth***REMOVED***+***REMOVED***'@';
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(aParsedUrl.host)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***+=***REMOVED***aParsedUrl.host;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(aParsedUrl.port)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***+=***REMOVED***":"***REMOVED***+***REMOVED***aParsedUrl.port;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(aParsedUrl.path)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***+=***REMOVED***aParsedUrl.path;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***url;
		}
		exports.urlGenerate***REMOVED***=***REMOVED***urlGenerate;

		/**
		***REMOVED*******REMOVED***Normalizes***REMOVED***a***REMOVED***path,***REMOVED***or***REMOVED***the***REMOVED***path***REMOVED***portion***REMOVED***of***REMOVED***a***REMOVED***URL:
		***REMOVED****
		***REMOVED*******REMOVED***-***REMOVED***Replaces***REMOVED***consecutive***REMOVED***slashes***REMOVED***with***REMOVED***one***REMOVED***slash.
		***REMOVED*******REMOVED***-***REMOVED***Removes***REMOVED***unnecessary***REMOVED***'.'***REMOVED***parts.
		***REMOVED*******REMOVED***-***REMOVED***Removes***REMOVED***unnecessary***REMOVED***'<dir>/..'***REMOVED***parts.
		***REMOVED****
		***REMOVED*******REMOVED***Based***REMOVED***on***REMOVED***code***REMOVED***in***REMOVED***the***REMOVED***Node.js***REMOVED***'path'***REMOVED***core***REMOVED***module.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***aPath***REMOVED***The***REMOVED***path***REMOVED***or***REMOVED***url***REMOVED***to***REMOVED***normalize.
		***REMOVED****/
		function***REMOVED***normalize(aPath)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***path***REMOVED***=***REMOVED***aPath;
		***REMOVED******REMOVED***var***REMOVED***url***REMOVED***=***REMOVED***urlParse(aPath);
		***REMOVED******REMOVED***if***REMOVED***(url)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!url.path)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aPath;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***url.path;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***isAbsolute***REMOVED***=***REMOVED***exports.isAbsolute(path);

		***REMOVED******REMOVED***var***REMOVED***parts***REMOVED***=***REMOVED***path.split(/\/+/);
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***part,***REMOVED***up***REMOVED***=***REMOVED***0,***REMOVED***i***REMOVED***=***REMOVED***parts.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***part***REMOVED***=***REMOVED***parts[i];
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(part***REMOVED***===***REMOVED***'.')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(i,***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(part***REMOVED***===***REMOVED***'..')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***up++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(up***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(part***REMOVED***===***REMOVED***'')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***first***REMOVED***part***REMOVED***is***REMOVED***blank***REMOVED***if***REMOVED***the***REMOVED***path***REMOVED***is***REMOVED***absolute.***REMOVED***Trying***REMOVED***to***REMOVED***go
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***above***REMOVED***the***REMOVED***root***REMOVED***is***REMOVED***a***REMOVED***no-op.***REMOVED***Therefore***REMOVED***we***REMOVED***can***REMOVED***remove***REMOVED***all***REMOVED***'..'***REMOVED***parts
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***directly***REMOVED***after***REMOVED***the***REMOVED***root.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(i***REMOVED***+***REMOVED***1,***REMOVED***up);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***up***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(i,***REMOVED***2);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***up--;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***path***REMOVED***=***REMOVED***parts.join('/');

		***REMOVED******REMOVED***if***REMOVED***(path***REMOVED***===***REMOVED***'')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***isAbsolute***REMOVED***?***REMOVED***'/'***REMOVED***:***REMOVED***'.';
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(url)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***url.path***REMOVED***=***REMOVED***path;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***urlGenerate(url);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***path;
		}
		exports.normalize***REMOVED***=***REMOVED***normalize;

		/**
		***REMOVED*******REMOVED***Joins***REMOVED***two***REMOVED***paths/URLs.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***aRoot***REMOVED***The***REMOVED***root***REMOVED***path***REMOVED***or***REMOVED***URL.
		***REMOVED*******REMOVED***@param***REMOVED***aPath***REMOVED***The***REMOVED***path***REMOVED***or***REMOVED***URL***REMOVED***to***REMOVED***be***REMOVED***joined***REMOVED***with***REMOVED***the***REMOVED***root.
		***REMOVED****
		***REMOVED*******REMOVED***-***REMOVED***If***REMOVED***aPath***REMOVED***is***REMOVED***a***REMOVED***URL***REMOVED***or***REMOVED***a***REMOVED***data***REMOVED***URI,***REMOVED***aPath***REMOVED***is***REMOVED***returned,***REMOVED***unless***REMOVED***aPath***REMOVED***is***REMOVED***a
		***REMOVED*******REMOVED******REMOVED******REMOVED***scheme-relative***REMOVED***URL:***REMOVED***Then***REMOVED***the***REMOVED***scheme***REMOVED***of***REMOVED***aRoot,***REMOVED***if***REMOVED***any,***REMOVED***is***REMOVED***prepended
		***REMOVED*******REMOVED******REMOVED******REMOVED***first.
		***REMOVED*******REMOVED***-***REMOVED***Otherwise***REMOVED***aPath***REMOVED***is***REMOVED***a***REMOVED***path.***REMOVED***If***REMOVED***aRoot***REMOVED***is***REMOVED***a***REMOVED***URL,***REMOVED***then***REMOVED***its***REMOVED***path***REMOVED***portion
		***REMOVED*******REMOVED******REMOVED******REMOVED***is***REMOVED***updated***REMOVED***with***REMOVED***the***REMOVED***result***REMOVED***and***REMOVED***aRoot***REMOVED***is***REMOVED***returned.***REMOVED***Otherwise***REMOVED***the***REMOVED***result
		***REMOVED*******REMOVED******REMOVED******REMOVED***is***REMOVED***returned.
		***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***If***REMOVED***aPath***REMOVED***is***REMOVED***absolute,***REMOVED***the***REMOVED***result***REMOVED***is***REMOVED***aPath.
		***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***Otherwise***REMOVED***the***REMOVED***two***REMOVED***paths***REMOVED***are***REMOVED***joined***REMOVED***with***REMOVED***a***REMOVED***slash.
		***REMOVED*******REMOVED***-***REMOVED***Joining***REMOVED***for***REMOVED***example***REMOVED***'http://'***REMOVED***and***REMOVED***'www.example.com'***REMOVED***is***REMOVED***also***REMOVED***supported.
		***REMOVED****/
		function***REMOVED***join(aRoot,***REMOVED***aPath)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(aRoot***REMOVED***===***REMOVED***"")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aRoot***REMOVED***=***REMOVED***".";
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(aPath***REMOVED***===***REMOVED***"")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aPath***REMOVED***=***REMOVED***".";
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***aPathUrl***REMOVED***=***REMOVED***urlParse(aPath);
		***REMOVED******REMOVED***var***REMOVED***aRootUrl***REMOVED***=***REMOVED***urlParse(aRoot);
		***REMOVED******REMOVED***if***REMOVED***(aRootUrl)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aRoot***REMOVED***=***REMOVED***aRootUrl.path***REMOVED***||***REMOVED***'/';
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***`join(foo,***REMOVED***'//www.example.org')`
		***REMOVED******REMOVED***if***REMOVED***(aPathUrl***REMOVED***&&***REMOVED***!aPathUrl.scheme)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aRootUrl)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aPathUrl.scheme***REMOVED***=***REMOVED***aRootUrl.scheme;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***urlGenerate(aPathUrl);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(aPathUrl***REMOVED***||***REMOVED***aPath.match(dataUrlRegexp))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aPath;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***`join('http://',***REMOVED***'www.example.com')`
		***REMOVED******REMOVED***if***REMOVED***(aRootUrl***REMOVED***&&***REMOVED***!aRootUrl.host***REMOVED***&&***REMOVED***!aRootUrl.path)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aRootUrl.host***REMOVED***=***REMOVED***aPath;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***urlGenerate(aRootUrl);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***var***REMOVED***joined***REMOVED***=***REMOVED***aPath.charAt(0)***REMOVED***===***REMOVED***'/'
		***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***aPath
		***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***normalize(aRoot.replace(/\/+$/,***REMOVED***'')***REMOVED***+***REMOVED***'/'***REMOVED***+***REMOVED***aPath);

		***REMOVED******REMOVED***if***REMOVED***(aRootUrl)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aRootUrl.path***REMOVED***=***REMOVED***joined;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***urlGenerate(aRootUrl);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***joined;
		}
		exports.join***REMOVED***=***REMOVED***join;

		exports.isAbsolute***REMOVED***=***REMOVED***function***REMOVED***(aPath)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***aPath.charAt(0)***REMOVED***===***REMOVED***'/'***REMOVED***||***REMOVED***urlRegexp.test(aPath);
		};

		/**
		***REMOVED*******REMOVED***Make***REMOVED***a***REMOVED***path***REMOVED***relative***REMOVED***to***REMOVED***a***REMOVED***URL***REMOVED***or***REMOVED***another***REMOVED***path.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***aRoot***REMOVED***The***REMOVED***root***REMOVED***path***REMOVED***or***REMOVED***URL.
		***REMOVED*******REMOVED***@param***REMOVED***aPath***REMOVED***The***REMOVED***path***REMOVED***or***REMOVED***URL***REMOVED***to***REMOVED***be***REMOVED***made***REMOVED***relative***REMOVED***to***REMOVED***aRoot.
		***REMOVED****/
		function***REMOVED***relative(aRoot,***REMOVED***aPath)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(aRoot***REMOVED***===***REMOVED***"")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***aRoot***REMOVED***=***REMOVED***".";
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***aRoot***REMOVED***=***REMOVED***aRoot.replace(/\/$/,***REMOVED***'');

		***REMOVED******REMOVED***//***REMOVED***It***REMOVED***is***REMOVED***possible***REMOVED***for***REMOVED***the***REMOVED***path***REMOVED***to***REMOVED***be***REMOVED***above***REMOVED***the***REMOVED***root.***REMOVED***In***REMOVED***this***REMOVED***case,***REMOVED***simply
		***REMOVED******REMOVED***//***REMOVED***checking***REMOVED***whether***REMOVED***the***REMOVED***root***REMOVED***is***REMOVED***a***REMOVED***prefix***REMOVED***of***REMOVED***the***REMOVED***path***REMOVED***won't***REMOVED***work.***REMOVED***Instead,***REMOVED***we
		***REMOVED******REMOVED***//***REMOVED***need***REMOVED***to***REMOVED***remove***REMOVED***components***REMOVED***from***REMOVED***the***REMOVED***root***REMOVED***one***REMOVED***by***REMOVED***one,***REMOVED***until***REMOVED***either***REMOVED***we***REMOVED***find
		***REMOVED******REMOVED***//***REMOVED***a***REMOVED***prefix***REMOVED***that***REMOVED***fits,***REMOVED***or***REMOVED***we***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***components***REMOVED***to***REMOVED***remove.
		***REMOVED******REMOVED***var***REMOVED***level***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***while***REMOVED***(aPath.indexOf(aRoot***REMOVED***+***REMOVED***'/')***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***aRoot.lastIndexOf("/");
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aPath;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***only***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***root***REMOVED***that***REMOVED***is***REMOVED***left***REMOVED***is***REMOVED***the***REMOVED***scheme***REMOVED***(i.e.***REMOVED***http://,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***file:///,***REMOVED***etc.),***REMOVED***one***REMOVED***or***REMOVED***more***REMOVED***slashes***REMOVED***(/),***REMOVED***or***REMOVED***simply***REMOVED***nothing***REMOVED***at***REMOVED***all,***REMOVED***we
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***have***REMOVED***exhausted***REMOVED***all***REMOVED***components,***REMOVED***so***REMOVED***the***REMOVED***path***REMOVED***is***REMOVED***not***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***root.
		***REMOVED******REMOVED******REMOVED******REMOVED***aRoot***REMOVED***=***REMOVED***aRoot.slice(0,***REMOVED***index);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aRoot.match(/^([^\/]+:\/)?\/*$/))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aPath;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***++level;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***Make***REMOVED***sure***REMOVED***we***REMOVED***add***REMOVED***a***REMOVED***"../"***REMOVED***for***REMOVED***each***REMOVED***component***REMOVED***we***REMOVED***removed***REMOVED***from***REMOVED***the***REMOVED***root.
		***REMOVED******REMOVED***return***REMOVED***Array(level***REMOVED***+***REMOVED***1).join("../")***REMOVED***+***REMOVED***aPath.substr(aRoot.length***REMOVED***+***REMOVED***1);
		}
		exports.relative***REMOVED***=***REMOVED***relative;

		var***REMOVED***supportsNullProto***REMOVED***=***REMOVED***(function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***obj***REMOVED***=***REMOVED***Object.create(null);
		***REMOVED******REMOVED***return***REMOVED***!('__proto__'***REMOVED***in***REMOVED***obj);
		}());

		function***REMOVED***identity***REMOVED***(s)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***s;
		}

		/**
		***REMOVED*******REMOVED***Because***REMOVED***behavior***REMOVED***goes***REMOVED***wacky***REMOVED***when***REMOVED***you***REMOVED***set***REMOVED***`__proto__`***REMOVED***on***REMOVED***objects,***REMOVED***we
		***REMOVED*******REMOVED***have***REMOVED***to***REMOVED***prefix***REMOVED***all***REMOVED***the***REMOVED***strings***REMOVED***in***REMOVED***our***REMOVED***set***REMOVED***with***REMOVED***an***REMOVED***arbitrary***REMOVED***character.
		***REMOVED****
		***REMOVED*******REMOVED***See***REMOVED***https://github.com/mozilla/source-map/pull/31***REMOVED***and
		***REMOVED*******REMOVED***https://github.com/mozilla/source-map/issues/30
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
		***REMOVED****/
		function***REMOVED***toSetString(aStr)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(isProtoString(aStr))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'$'***REMOVED***+***REMOVED***aStr;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***aStr;
		}
		exports.toSetString***REMOVED***=***REMOVED***supportsNullProto***REMOVED***?***REMOVED***identity***REMOVED***:***REMOVED***toSetString;

		function***REMOVED***fromSetString(aStr)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(isProtoString(aStr))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aStr.slice(1);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***aStr;
		}
		exports.fromSetString***REMOVED***=***REMOVED***supportsNullProto***REMOVED***?***REMOVED***identity***REMOVED***:***REMOVED***fromSetString;

		function***REMOVED***isProtoString(s)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(!s)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***s.length;

		***REMOVED******REMOVED***if***REMOVED***(length***REMOVED***<***REMOVED***9***REMOVED***/****REMOVED***"__proto__".length***REMOVED****/)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(s.charCodeAt(length***REMOVED***-***REMOVED***1)***REMOVED***!==***REMOVED***95***REMOVED******REMOVED***/****REMOVED***'_'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***2)***REMOVED***!==***REMOVED***95***REMOVED******REMOVED***/****REMOVED***'_'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***3)***REMOVED***!==***REMOVED***111***REMOVED***/****REMOVED***'o'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***4)***REMOVED***!==***REMOVED***116***REMOVED***/****REMOVED***'t'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***5)***REMOVED***!==***REMOVED***111***REMOVED***/****REMOVED***'o'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***6)***REMOVED***!==***REMOVED***114***REMOVED***/****REMOVED***'r'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***7)***REMOVED***!==***REMOVED***112***REMOVED***/****REMOVED***'p'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***8)***REMOVED***!==***REMOVED***95***REMOVED******REMOVED***/****REMOVED***'_'***REMOVED****/***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.charCodeAt(length***REMOVED***-***REMOVED***9)***REMOVED***!==***REMOVED***95***REMOVED******REMOVED***/****REMOVED***'_'***REMOVED****/)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***length***REMOVED***-***REMOVED***10;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(s.charCodeAt(i)***REMOVED***!==***REMOVED***36***REMOVED***/****REMOVED***'$'***REMOVED****/)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***true;
		}

		/**
		***REMOVED*******REMOVED***Comparator***REMOVED***between***REMOVED***two***REMOVED***mappings***REMOVED***where***REMOVED***the***REMOVED***original***REMOVED***positions***REMOVED***are***REMOVED***compared.
		***REMOVED****
		***REMOVED*******REMOVED***Optionally***REMOVED***pass***REMOVED***in***REMOVED***`true`***REMOVED***as***REMOVED***`onlyCompareGenerated`***REMOVED***to***REMOVED***consider***REMOVED***two
		***REMOVED*******REMOVED***mappings***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***original***REMOVED***source/line/column,***REMOVED***but***REMOVED***different***REMOVED***generated
		***REMOVED*******REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***the***REMOVED***same.***REMOVED***Useful***REMOVED***when***REMOVED***searching***REMOVED***for***REMOVED***a***REMOVED***mapping***REMOVED***with***REMOVED***a
		***REMOVED*******REMOVED***stubbed***REMOVED***out***REMOVED***mapping.
		***REMOVED****/
		function***REMOVED***compareByOriginalPositions(mappingA,***REMOVED***mappingB,***REMOVED***onlyCompareOriginal)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***strcmp(mappingA.source,***REMOVED***mappingB.source);
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalLine***REMOVED***-***REMOVED***mappingB.originalLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalColumn***REMOVED***-***REMOVED***mappingB.originalColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***onlyCompareOriginal)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedColumn***REMOVED***-***REMOVED***mappingB.generatedColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedLine***REMOVED***-***REMOVED***mappingB.generatedLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***strcmp(mappingA.name,***REMOVED***mappingB.name);
		}
		exports.compareByOriginalPositions***REMOVED***=***REMOVED***compareByOriginalPositions;

		/**
		***REMOVED*******REMOVED***Comparator***REMOVED***between***REMOVED***two***REMOVED***mappings***REMOVED***with***REMOVED***deflated***REMOVED***source***REMOVED***and***REMOVED***name***REMOVED***indices***REMOVED***where
		***REMOVED*******REMOVED***the***REMOVED***generated***REMOVED***positions***REMOVED***are***REMOVED***compared.
		***REMOVED****
		***REMOVED*******REMOVED***Optionally***REMOVED***pass***REMOVED***in***REMOVED***`true`***REMOVED***as***REMOVED***`onlyCompareGenerated`***REMOVED***to***REMOVED***consider***REMOVED***two
		***REMOVED*******REMOVED***mappings***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column,***REMOVED***but***REMOVED***different
		***REMOVED*******REMOVED***source/name/original***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***the***REMOVED***same.***REMOVED***Useful***REMOVED***when***REMOVED***searching***REMOVED***for***REMOVED***a
		***REMOVED*******REMOVED***mapping***REMOVED***with***REMOVED***a***REMOVED***stubbed***REMOVED***out***REMOVED***mapping.
		***REMOVED****/
		function***REMOVED***compareByGeneratedPositionsDeflated(mappingA,***REMOVED***mappingB,***REMOVED***onlyCompareGenerated)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedLine***REMOVED***-***REMOVED***mappingB.generatedLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedColumn***REMOVED***-***REMOVED***mappingB.generatedColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0***REMOVED***||***REMOVED***onlyCompareGenerated)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***strcmp(mappingA.source,***REMOVED***mappingB.source);
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalLine***REMOVED***-***REMOVED***mappingB.originalLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalColumn***REMOVED***-***REMOVED***mappingB.originalColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***strcmp(mappingA.name,***REMOVED***mappingB.name);
		}
		exports.compareByGeneratedPositionsDeflated***REMOVED***=***REMOVED***compareByGeneratedPositionsDeflated;

		function***REMOVED***strcmp(aStr1,***REMOVED***aStr2)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(aStr1***REMOVED***===***REMOVED***aStr2)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(aStr1***REMOVED***===***REMOVED***null)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1;***REMOVED***//***REMOVED***aStr2***REMOVED***!==***REMOVED***null
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(aStr2***REMOVED***===***REMOVED***null)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;***REMOVED***//***REMOVED***aStr1***REMOVED***!==***REMOVED***null
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***if***REMOVED***(aStr1***REMOVED***>***REMOVED***aStr2)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***-1;
		}

		/**
		***REMOVED*******REMOVED***Comparator***REMOVED***between***REMOVED***two***REMOVED***mappings***REMOVED***with***REMOVED***inflated***REMOVED***source***REMOVED***and***REMOVED***name***REMOVED***strings***REMOVED***where
		***REMOVED*******REMOVED***the***REMOVED***generated***REMOVED***positions***REMOVED***are***REMOVED***compared.
		***REMOVED****/
		function***REMOVED***compareByGeneratedPositionsInflated(mappingA,***REMOVED***mappingB)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedLine***REMOVED***-***REMOVED***mappingB.generatedLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.generatedColumn***REMOVED***-***REMOVED***mappingB.generatedColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***strcmp(mappingA.source,***REMOVED***mappingB.source);
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalLine***REMOVED***-***REMOVED***mappingB.originalLine;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***cmp***REMOVED***=***REMOVED***mappingA.originalColumn***REMOVED***-***REMOVED***mappingB.originalColumn;
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***strcmp(mappingA.name,***REMOVED***mappingB.name);
		}
		exports.compareByGeneratedPositionsInflated***REMOVED***=***REMOVED***compareByGeneratedPositionsInflated;

		/**
		***REMOVED*******REMOVED***Strip***REMOVED***any***REMOVED***JSON***REMOVED***XSSI***REMOVED***avoidance***REMOVED***prefix***REMOVED***from***REMOVED***the***REMOVED***string***REMOVED***(as***REMOVED***documented
		***REMOVED*******REMOVED***in***REMOVED***the***REMOVED***source***REMOVED***maps***REMOVED***specification),***REMOVED***and***REMOVED***then***REMOVED***parse***REMOVED***the***REMOVED***string***REMOVED***as
		***REMOVED*******REMOVED***JSON.
		***REMOVED****/
		function***REMOVED***parseSourceMapInput(str)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***JSON.parse(str.replace(/^\)]}'[^\n]*\n/,***REMOVED***''));
		}
		exports.parseSourceMapInput***REMOVED***=***REMOVED***parseSourceMapInput;

		/**
		***REMOVED*******REMOVED***Compute***REMOVED***the***REMOVED***URL***REMOVED***of***REMOVED***a***REMOVED***source***REMOVED***given***REMOVED***the***REMOVED***the***REMOVED***source***REMOVED***root,***REMOVED***the***REMOVED***source's
		***REMOVED*******REMOVED***URL,***REMOVED***and***REMOVED***the***REMOVED***source***REMOVED***map's***REMOVED***URL.
		***REMOVED****/
		function***REMOVED***computeSourceURL(sourceRoot,***REMOVED***sourceURL,***REMOVED***sourceMapURL)***REMOVED***{
		***REMOVED******REMOVED***sourceURL***REMOVED***=***REMOVED***sourceURL***REMOVED***||***REMOVED***'';

		***REMOVED******REMOVED***if***REMOVED***(sourceRoot)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***follows***REMOVED***what***REMOVED***Chrome***REMOVED***does.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot[sourceRoot.length***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***'/'***REMOVED***&&***REMOVED***sourceURL[0]***REMOVED***!==***REMOVED***'/')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***+=***REMOVED***'/';
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***spec***REMOVED***says:
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***Line***REMOVED***4:***REMOVED***An***REMOVED***optional***REMOVED***source***REMOVED***root,***REMOVED***useful***REMOVED***for***REMOVED***relocating***REMOVED***source
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***files***REMOVED***on***REMOVED***a***REMOVED***server***REMOVED***or***REMOVED***removing***REMOVED***repeated***REMOVED***values***REMOVED***in***REMOVED***the
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***“sources”***REMOVED***entry.***REMOVED******REMOVED***This***REMOVED***value***REMOVED***is***REMOVED***prepended***REMOVED***to***REMOVED***the***REMOVED***individual
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***entries***REMOVED***in***REMOVED***the***REMOVED***“source”***REMOVED***field.
		***REMOVED******REMOVED******REMOVED******REMOVED***sourceURL***REMOVED***=***REMOVED***sourceRoot***REMOVED***+***REMOVED***sourceURL;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***Historically,***REMOVED***SourceMapConsumer***REMOVED***did***REMOVED***not***REMOVED***take***REMOVED***the***REMOVED***sourceMapURL***REMOVED***as
		***REMOVED******REMOVED***//***REMOVED***a***REMOVED***parameter.***REMOVED******REMOVED***This***REMOVED***mode***REMOVED***is***REMOVED***still***REMOVED***somewhat***REMOVED***supported,***REMOVED***which***REMOVED***is***REMOVED***why
		***REMOVED******REMOVED***//***REMOVED***this***REMOVED***code***REMOVED***block***REMOVED***is***REMOVED***conditional.***REMOVED******REMOVED***However,***REMOVED***it's***REMOVED***preferable***REMOVED***to***REMOVED***pass
		***REMOVED******REMOVED***//***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***URL***REMOVED***to***REMOVED***SourceMapConsumer,***REMOVED***so***REMOVED***that***REMOVED***this***REMOVED***function
		***REMOVED******REMOVED***//***REMOVED***can***REMOVED***implement***REMOVED***the***REMOVED***source***REMOVED***URL***REMOVED***resolution***REMOVED***algorithm***REMOVED***as***REMOVED***outlined***REMOVED***in
		***REMOVED******REMOVED***//***REMOVED***the***REMOVED***spec.***REMOVED******REMOVED***This***REMOVED***block***REMOVED***is***REMOVED***basically***REMOVED***the***REMOVED***equivalent***REMOVED***of:
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***URL(sourceURL,***REMOVED***sourceMapURL).toString()
		***REMOVED******REMOVED***//***REMOVED***...***REMOVED***except***REMOVED***it***REMOVED***avoids***REMOVED***using***REMOVED***URL,***REMOVED***which***REMOVED***wasn't***REMOVED***available***REMOVED***in***REMOVED***the
		***REMOVED******REMOVED***//***REMOVED***older***REMOVED***releases***REMOVED***of***REMOVED***node***REMOVED***still***REMOVED***supported***REMOVED***by***REMOVED***this***REMOVED***library.
		***REMOVED******REMOVED***//
		***REMOVED******REMOVED***//***REMOVED***The***REMOVED***spec***REMOVED***says:
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***If***REMOVED***the***REMOVED***sources***REMOVED***are***REMOVED***not***REMOVED***absolute***REMOVED***URLs***REMOVED***after***REMOVED***prepending***REMOVED***of***REMOVED***the
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***“sourceRoot”,***REMOVED***the***REMOVED***sources***REMOVED***are***REMOVED***resolved***REMOVED***relative***REMOVED***to***REMOVED***the
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***SourceMap***REMOVED***(like***REMOVED***resolving***REMOVED***script***REMOVED***src***REMOVED***in***REMOVED***a***REMOVED***html***REMOVED***document).
		***REMOVED******REMOVED***if***REMOVED***(sourceMapURL)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parsed***REMOVED***=***REMOVED***urlParse(sourceMapURL);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parsed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("sourceMapURL***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***parsed");
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsed.path)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Strip***REMOVED***the***REMOVED***last***REMOVED***path***REMOVED***component,***REMOVED***but***REMOVED***keep***REMOVED***the***REMOVED***"/".
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***parsed.path.lastIndexOf('/');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsed.path***REMOVED***=***REMOVED***parsed.path.substring(0,***REMOVED***index***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***sourceURL***REMOVED***=***REMOVED***join(urlGenerate(parsed),***REMOVED***sourceURL);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***normalize(sourceURL);
		}
		exports.computeSourceURL***REMOVED***=***REMOVED***computeSourceURL;***REMOVED***
	}***REMOVED***(util$1));
	return***REMOVED***util$1;
}

var***REMOVED***arraySet***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredArraySet;

function***REMOVED***requireArraySet***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredArraySet)***REMOVED***return***REMOVED***arraySet;
	hasRequiredArraySet***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$1();
	var***REMOVED***has***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
	var***REMOVED***hasNativeMap***REMOVED***=***REMOVED***typeof***REMOVED***Map***REMOVED***!==***REMOVED***"undefined";

	/**
	***REMOVED*******REMOVED***A***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***is***REMOVED***a***REMOVED***combination***REMOVED***of***REMOVED***an***REMOVED***array***REMOVED***and***REMOVED***a***REMOVED***set.***REMOVED***Adding***REMOVED***a***REMOVED***new
	***REMOVED*******REMOVED***member***REMOVED***is***REMOVED***O(1),***REMOVED***testing***REMOVED***for***REMOVED***membership***REMOVED***is***REMOVED***O(1),***REMOVED***and***REMOVED***finding***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***an
	***REMOVED*******REMOVED***element***REMOVED***is***REMOVED***O(1).***REMOVED***Removing***REMOVED***elements***REMOVED***from***REMOVED***the***REMOVED***set***REMOVED***is***REMOVED***not***REMOVED***supported.***REMOVED***Only
	***REMOVED*******REMOVED***strings***REMOVED***are***REMOVED***supported***REMOVED***for***REMOVED***membership.
	***REMOVED****/
	function***REMOVED***ArraySet()***REMOVED***{
	***REMOVED******REMOVED***this._array***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***this._set***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***new***REMOVED***Map()***REMOVED***:***REMOVED***Object.create(null);
	}

	/**
	***REMOVED*******REMOVED***Static***REMOVED***method***REMOVED***for***REMOVED***creating***REMOVED***ArraySet***REMOVED***instances***REMOVED***from***REMOVED***an***REMOVED***existing***REMOVED***array.
	***REMOVED****/
	ArraySet.fromArray***REMOVED***=***REMOVED***function***REMOVED***ArraySet_fromArray(aArray,***REMOVED***aAllowDuplicates)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***set***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***aArray.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***set.add(aArray[i],***REMOVED***aAllowDuplicates);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***set;
	};

	/**
	***REMOVED*******REMOVED***Return***REMOVED***how***REMOVED***many***REMOVED***unique***REMOVED***items***REMOVED***are***REMOVED***in***REMOVED***this***REMOVED***ArraySet.***REMOVED***If***REMOVED***duplicates***REMOVED***have***REMOVED***been
	***REMOVED*******REMOVED***added,***REMOVED***than***REMOVED***those***REMOVED***do***REMOVED***not***REMOVED***count***REMOVED***towards***REMOVED***the***REMOVED***size.
	***REMOVED****
	***REMOVED*******REMOVED***@returns***REMOVED***Number
	***REMOVED****/
	ArraySet.prototype.size***REMOVED***=***REMOVED***function***REMOVED***ArraySet_size()***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***hasNativeMap***REMOVED***?***REMOVED***this._set.size***REMOVED***:***REMOVED***Object.getOwnPropertyNames(this._set).length;
	};

	/**
	***REMOVED*******REMOVED***Add***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***to***REMOVED***this***REMOVED***set.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
	***REMOVED****/
	ArraySet.prototype.add***REMOVED***=***REMOVED***function***REMOVED***ArraySet_add(aStr,***REMOVED***aAllowDuplicates)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***aStr***REMOVED***:***REMOVED***util.toSetString(aStr);
	***REMOVED******REMOVED***var***REMOVED***isDuplicate***REMOVED***=***REMOVED***hasNativeMap***REMOVED***?***REMOVED***this.has(aStr)***REMOVED***:***REMOVED***has.call(this._set,***REMOVED***sStr);
	***REMOVED******REMOVED***var***REMOVED***idx***REMOVED***=***REMOVED***this._array.length;
	***REMOVED******REMOVED***if***REMOVED***(!isDuplicate***REMOVED***||***REMOVED***aAllowDuplicates)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this._array.push(aStr);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***if***REMOVED***(!isDuplicate)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._set.set(aStr,***REMOVED***idx);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._set[sStr]***REMOVED***=***REMOVED***idx;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	};

	/**
	***REMOVED*******REMOVED***Is***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***a***REMOVED***member***REMOVED***of***REMOVED***this***REMOVED***set?
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
	***REMOVED****/
	ArraySet.prototype.has***REMOVED***=***REMOVED***function***REMOVED***ArraySet_has(aStr)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._set.has(aStr);
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***util.toSetString(aStr);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***has.call(this._set,***REMOVED***sStr);
	***REMOVED******REMOVED***}
	};

	/**
	***REMOVED*******REMOVED***What***REMOVED***is***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***given***REMOVED***string***REMOVED***in***REMOVED***the***REMOVED***array?
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aStr
	***REMOVED****/
	ArraySet.prototype.indexOf***REMOVED***=***REMOVED***function***REMOVED***ArraySet_indexOf(aStr)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(hasNativeMap)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***idx***REMOVED***=***REMOVED***this._set.get(aStr);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***idx;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sStr***REMOVED***=***REMOVED***util.toSetString(aStr);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(has.call(this._set,***REMOVED***sStr))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._set[sStr];
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***aStr***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***set.');
	};

	/**
	***REMOVED*******REMOVED***What***REMOVED***is***REMOVED***the***REMOVED***element***REMOVED***at***REMOVED***the***REMOVED***given***REMOVED***index?
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***Number***REMOVED***aIdx
	***REMOVED****/
	ArraySet.prototype.at***REMOVED***=***REMOVED***function***REMOVED***ArraySet_at(aIdx)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(aIdx***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***aIdx***REMOVED***<***REMOVED***this._array.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._array[aIdx];
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('No***REMOVED***element***REMOVED***indexed***REMOVED***by***REMOVED***'***REMOVED***+***REMOVED***aIdx);
	};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***array***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***set***REMOVED***(which***REMOVED***has***REMOVED***the***REMOVED***proper***REMOVED***indices
	***REMOVED*******REMOVED***indicated***REMOVED***by***REMOVED***indexOf).***REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the***REMOVED***internal***REMOVED***array***REMOVED***used
	***REMOVED*******REMOVED***for***REMOVED***storing***REMOVED***the***REMOVED***members***REMOVED***so***REMOVED***that***REMOVED***no***REMOVED***one***REMOVED***can***REMOVED***mess***REMOVED***with***REMOVED***internal***REMOVED***state.
	***REMOVED****/
	ArraySet.prototype.toArray***REMOVED***=***REMOVED***function***REMOVED***ArraySet_toArray()***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***this._array.slice();
	};

	arraySet.ArraySet***REMOVED***=***REMOVED***ArraySet;
	return***REMOVED***arraySet;
}

var***REMOVED***mappingList***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredMappingList;

function***REMOVED***requireMappingList***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredMappingList)***REMOVED***return***REMOVED***mappingList;
	hasRequiredMappingList***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2014***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$1();

	/**
	***REMOVED*******REMOVED***Determine***REMOVED***whether***REMOVED***mappingB***REMOVED***is***REMOVED***after***REMOVED***mappingA***REMOVED***with***REMOVED***respect***REMOVED***to***REMOVED***generated
	***REMOVED*******REMOVED***position.
	***REMOVED****/
	function***REMOVED***generatedPositionAfter(mappingA,***REMOVED***mappingB)***REMOVED***{
	***REMOVED******REMOVED***//***REMOVED***Optimized***REMOVED***for***REMOVED***most***REMOVED***common***REMOVED***case
	***REMOVED******REMOVED***var***REMOVED***lineA***REMOVED***=***REMOVED***mappingA.generatedLine;
	***REMOVED******REMOVED***var***REMOVED***lineB***REMOVED***=***REMOVED***mappingB.generatedLine;
	***REMOVED******REMOVED***var***REMOVED***columnA***REMOVED***=***REMOVED***mappingA.generatedColumn;
	***REMOVED******REMOVED***var***REMOVED***columnB***REMOVED***=***REMOVED***mappingB.generatedColumn;
	***REMOVED******REMOVED***return***REMOVED***lineB***REMOVED***>***REMOVED***lineA***REMOVED***||***REMOVED***lineB***REMOVED***==***REMOVED***lineA***REMOVED***&&***REMOVED***columnB***REMOVED***>=***REMOVED***columnA***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByGeneratedPositionsInflated(mappingA,***REMOVED***mappingB)***REMOVED***<=***REMOVED***0;
	}

	/**
	***REMOVED*******REMOVED***A***REMOVED***data***REMOVED***structure***REMOVED***to***REMOVED***provide***REMOVED***a***REMOVED***sorted***REMOVED***view***REMOVED***of***REMOVED***accumulated***REMOVED***mappings***REMOVED***in***REMOVED***a
	***REMOVED*******REMOVED***performance***REMOVED***conscious***REMOVED***manner.***REMOVED***It***REMOVED***trades***REMOVED***a***REMOVED***neglibable***REMOVED***overhead***REMOVED***in***REMOVED***general
	***REMOVED*******REMOVED***case***REMOVED***for***REMOVED***a***REMOVED***large***REMOVED***speedup***REMOVED***in***REMOVED***case***REMOVED***of***REMOVED***mappings***REMOVED***being***REMOVED***added***REMOVED***in***REMOVED***order.
	***REMOVED****/
	function***REMOVED***MappingList()***REMOVED***{
	***REMOVED******REMOVED***this._array***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***this._sorted***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED***//***REMOVED***Serves***REMOVED***as***REMOVED***infimum
	***REMOVED******REMOVED***this._last***REMOVED***=***REMOVED***{generatedLine:***REMOVED***-1,***REMOVED***generatedColumn:***REMOVED***0};
	}

	/**
	***REMOVED*******REMOVED***Iterate***REMOVED***through***REMOVED***internal***REMOVED***items.***REMOVED***This***REMOVED***method***REMOVED***takes***REMOVED***the***REMOVED***same***REMOVED***arguments***REMOVED***that
	***REMOVED*******REMOVED***`Array.prototype.forEach`***REMOVED***takes.
	***REMOVED****
	***REMOVED*******REMOVED***NOTE:***REMOVED***The***REMOVED***order***REMOVED***of***REMOVED***the***REMOVED***mappings***REMOVED***is***REMOVED***NOT***REMOVED***guaranteed.
	***REMOVED****/
	MappingList.prototype.unsortedForEach***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***MappingList_forEach(aCallback,***REMOVED***aThisArg)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this._array.forEach(aCallback,***REMOVED***aThisArg);
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Add***REMOVED***the***REMOVED***given***REMOVED***source***REMOVED***mapping.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***Object***REMOVED***aMapping
	***REMOVED****/
	MappingList.prototype.add***REMOVED***=***REMOVED***function***REMOVED***MappingList_add(aMapping)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(generatedPositionAfter(this._last,***REMOVED***aMapping))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this._last***REMOVED***=***REMOVED***aMapping;
	***REMOVED******REMOVED******REMOVED******REMOVED***this._array.push(aMapping);
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this._sorted***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***this._array.push(aMapping);
	***REMOVED******REMOVED***}
	};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***flat,***REMOVED***sorted***REMOVED***array***REMOVED***of***REMOVED***mappings.***REMOVED***The***REMOVED***mappings***REMOVED***are***REMOVED***sorted***REMOVED***by
	***REMOVED*******REMOVED***generated***REMOVED***position.
	***REMOVED****
	***REMOVED*******REMOVED***WARNING:***REMOVED***This***REMOVED***method***REMOVED***returns***REMOVED***internal***REMOVED***data***REMOVED***without***REMOVED***copying,***REMOVED***for
	***REMOVED*******REMOVED***performance.***REMOVED***The***REMOVED***return***REMOVED***value***REMOVED***must***REMOVED***NOT***REMOVED***be***REMOVED***mutated,***REMOVED***and***REMOVED***should***REMOVED***be***REMOVED***treated***REMOVED***as
	***REMOVED*******REMOVED***an***REMOVED***immutable***REMOVED***borrow.***REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***take***REMOVED***ownership,***REMOVED***you***REMOVED***must***REMOVED***make***REMOVED***your***REMOVED***own
	***REMOVED*******REMOVED***copy.
	***REMOVED****/
	MappingList.prototype.toArray***REMOVED***=***REMOVED***function***REMOVED***MappingList_toArray()***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!this._sorted)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this._array.sort(util.compareByGeneratedPositionsInflated);
	***REMOVED******REMOVED******REMOVED******REMOVED***this._sorted***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***this._array;
	};

	mappingList.MappingList***REMOVED***=***REMOVED***MappingList;
	return***REMOVED***mappingList;
}

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredSourceMapGenerator;

function***REMOVED***requireSourceMapGenerator***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSourceMapGenerator)***REMOVED***return***REMOVED***sourceMapGenerator;
	hasRequiredSourceMapGenerator***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***base64VLQ***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBase64Vlq();
	var***REMOVED***util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$1();
	var***REMOVED***ArraySet***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireArraySet().ArraySet;
	var***REMOVED***MappingList***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireMappingList().MappingList;

	/**
	***REMOVED*******REMOVED***An***REMOVED***instance***REMOVED***of***REMOVED***the***REMOVED***SourceMapGenerator***REMOVED***represents***REMOVED***a***REMOVED***source***REMOVED***map***REMOVED***which***REMOVED***is
	***REMOVED*******REMOVED***being***REMOVED***built***REMOVED***incrementally.***REMOVED***You***REMOVED***may***REMOVED***pass***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***following
	***REMOVED*******REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***file:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***generated***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sourceRoot:***REMOVED***A***REMOVED***root***REMOVED***for***REMOVED***all***REMOVED***relative***REMOVED***URLs***REMOVED***in***REMOVED***this***REMOVED***source***REMOVED***map.
	***REMOVED****/
	function***REMOVED***SourceMapGenerator(aArgs)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***aArgs***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***this._file***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'file',***REMOVED***null);
	***REMOVED******REMOVED***this._sourceRoot***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'sourceRoot',***REMOVED***null);
	***REMOVED******REMOVED***this._skipValidation***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'skipValidation',***REMOVED***false);
	***REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
	***REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
	***REMOVED******REMOVED***this._mappings***REMOVED***=***REMOVED***new***REMOVED***MappingList();
	***REMOVED******REMOVED***this._sourcesContents***REMOVED***=***REMOVED***null;
	}

	SourceMapGenerator.prototype._version***REMOVED***=***REMOVED***3;

	/**
	***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***new***REMOVED***SourceMapGenerator***REMOVED***based***REMOVED***on***REMOVED***a***REMOVED***SourceMapConsumer
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aSourceMapConsumer***REMOVED***The***REMOVED***SourceMap.
	***REMOVED****/
	SourceMapGenerator.fromSourceMap***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_fromSourceMap(aSourceMapConsumer)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***aSourceMapConsumer.sourceRoot;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generator***REMOVED***=***REMOVED***new***REMOVED***SourceMapGenerator({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***aSourceMapConsumer.file,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot:***REMOVED***sourceRoot
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.eachMapping(function***REMOVED***(mapping)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newMapping***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***mapping.generatedLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***mapping.generatedColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.source***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newMapping.source***REMOVED***=***REMOVED***mapping.source;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newMapping.source***REMOVED***=***REMOVED***util.relative(sourceRoot,***REMOVED***newMapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newMapping.original***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***mapping.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***mapping.originalColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.name***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newMapping.name***REMOVED***=***REMOVED***mapping.name;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator.addMapping(newMapping);
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.sources.forEach(function***REMOVED***(sourceFile)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceRelative***REMOVED***=***REMOVED***sourceFile;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot***REMOVED***!==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRelative***REMOVED***=***REMOVED***util.relative(sourceRoot,***REMOVED***sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!generator._sources.has(sourceRelative))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator._sources.add(sourceRelative);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***aSourceMapConsumer.sourceContentFor(sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator.setSourceContent(sourceFile,***REMOVED***content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***generator;
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***single***REMOVED***mapping***REMOVED***from***REMOVED***original***REMOVED***source***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***to***REMOVED***the***REMOVED***generated
	***REMOVED*******REMOVED***source's***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***for***REMOVED***this***REMOVED***source***REMOVED***map***REMOVED***being***REMOVED***created.***REMOVED***The***REMOVED***mapping
	***REMOVED*******REMOVED***object***REMOVED***should***REMOVED***have***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***generated:***REMOVED***An***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***original:***REMOVED***An***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***original***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***original***REMOVED***source***REMOVED***file***REMOVED***(relative***REMOVED***to***REMOVED***the***REMOVED***sourceRoot).
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***name:***REMOVED***An***REMOVED***optional***REMOVED***original***REMOVED***token***REMOVED***name***REMOVED***for***REMOVED***this***REMOVED***mapping.
	***REMOVED****/
	SourceMapGenerator.prototype.addMapping***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_addMapping(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generated***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'generated');
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***original***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'original',***REMOVED***null);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'source',***REMOVED***null);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'name',***REMOVED***null);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._skipValidation)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._validateMapping(generated,***REMOVED***original,***REMOVED***source,***REMOVED***name);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***String(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._sources.has(source))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sources.add(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***String(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._names.has(name))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._names.add(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this._mappings.add({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***generated.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***generated.column,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***original***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***original.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***original***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***original.column,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***a***REMOVED***source***REMOVED***file.
	***REMOVED****/
	SourceMapGenerator.prototype.setSourceContent***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_setSourceContent(aSourceFile,***REMOVED***aSourceContent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***aSourceFile;
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.relative(this._sourceRoot,***REMOVED***source);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceContent***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Add***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***to***REMOVED***the***REMOVED***_sourcesContents***REMOVED***map.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Create***REMOVED***a***REMOVED***new***REMOVED***_sourcesContents***REMOVED***map***REMOVED***if***REMOVED***the***REMOVED***property***REMOVED***is***REMOVED***null.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._sourcesContents)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sourcesContents***REMOVED***=***REMOVED***Object.create(null);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sourcesContents[util.toSetString(source)]***REMOVED***=***REMOVED***aSourceContent;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this._sourcesContents)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***the***REMOVED***source***REMOVED***file***REMOVED***from***REMOVED***the***REMOVED***_sourcesContents***REMOVED***map.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***_sourcesContents***REMOVED***map***REMOVED***is***REMOVED***empty,***REMOVED***set***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***null.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this._sourcesContents[util.toSetString(source)];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Object.keys(this._sourcesContents).length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sourcesContents***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Applies***REMOVED***the***REMOVED***mappings***REMOVED***of***REMOVED***a***REMOVED***sub-source-map***REMOVED***for***REMOVED***a***REMOVED***specific***REMOVED***source***REMOVED***file***REMOVED***to***REMOVED***the
	***REMOVED*******REMOVED***source***REMOVED***map***REMOVED***being***REMOVED***generated.***REMOVED***Each***REMOVED***mapping***REMOVED***to***REMOVED***the***REMOVED***supplied***REMOVED***source***REMOVED***file***REMOVED***is
	***REMOVED*******REMOVED***rewritten***REMOVED***using***REMOVED***the***REMOVED***supplied***REMOVED***source***REMOVED***map.***REMOVED***Note:***REMOVED***The***REMOVED***resolution***REMOVED***for***REMOVED***the
	***REMOVED*******REMOVED***resulting***REMOVED***mappings***REMOVED***is***REMOVED***the***REMOVED***minimium***REMOVED***of***REMOVED***this***REMOVED***map***REMOVED***and***REMOVED***the***REMOVED***supplied***REMOVED***map.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aSourceMapConsumer***REMOVED***The***REMOVED***source***REMOVED***map***REMOVED***to***REMOVED***be***REMOVED***applied.
	***REMOVED*******REMOVED***@param***REMOVED***aSourceFile***REMOVED***Optional.***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***file.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***If***REMOVED***omitted,***REMOVED***SourceMapConsumer's***REMOVED***file***REMOVED***property***REMOVED***will***REMOVED***be***REMOVED***used.
	***REMOVED*******REMOVED***@param***REMOVED***aSourceMapPath***REMOVED***Optional.***REMOVED***The***REMOVED***dirname***REMOVED***of***REMOVED***the***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***source***REMOVED***map
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to***REMOVED***be***REMOVED***applied.***REMOVED***If***REMOVED***relative,***REMOVED***it***REMOVED***is***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***SourceMapConsumer.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***This***REMOVED***parameter***REMOVED***is***REMOVED***needed***REMOVED***when***REMOVED***the***REMOVED***two***REMOVED***source***REMOVED***maps***REMOVED***aren't***REMOVED***in***REMOVED***the***REMOVED***same
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory,***REMOVED***and***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***to***REMOVED***be***REMOVED***applied***REMOVED***contains***REMOVED***relative***REMOVED***source
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***paths.***REMOVED***If***REMOVED***so,***REMOVED***those***REMOVED***relative***REMOVED***source***REMOVED***paths***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***rewritten
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***SourceMapGenerator.
	***REMOVED****/
	SourceMapGenerator.prototype.applySourceMap***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_applySourceMap(aSourceMapConsumer,***REMOVED***aSourceFile,***REMOVED***aSourceMapPath)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceFile***REMOVED***=***REMOVED***aSourceFile;
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***aSourceFile***REMOVED***is***REMOVED***omitted,***REMOVED***we***REMOVED***will***REMOVED***use***REMOVED***the***REMOVED***file***REMOVED***property***REMOVED***of***REMOVED***the***REMOVED***SourceMap
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceFile***REMOVED***==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceMapConsumer.file***REMOVED***==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'SourceMapGenerator.prototype.applySourceMap***REMOVED***requires***REMOVED***either***REMOVED***an***REMOVED***explicit***REMOVED***source***REMOVED***file,***REMOVED***'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'or***REMOVED***the***REMOVED***source***REMOVED***map\'s***REMOVED***"file"***REMOVED***property.***REMOVED***Both***REMOVED***were***REMOVED***omitted.'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***aSourceMapConsumer.file;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***this._sourceRoot;
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Make***REMOVED***"sourceFile"***REMOVED***relative***REMOVED***if***REMOVED***an***REMOVED***absolute***REMOVED***Url***REMOVED***is***REMOVED***passed.
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***util.relative(sourceRoot,***REMOVED***sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Applying***REMOVED***the***REMOVED***SourceMap***REMOVED***can***REMOVED***add***REMOVED***and***REMOVED***remove***REMOVED***items***REMOVED***from***REMOVED***the***REMOVED***sources***REMOVED***and
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***names***REMOVED***array.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newSources***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newNames***REMOVED***=***REMOVED***new***REMOVED***ArraySet();

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***mappings***REMOVED***for***REMOVED***the***REMOVED***"sourceFile"
	***REMOVED******REMOVED******REMOVED******REMOVED***this._mappings.unsortedForEach(function***REMOVED***(mapping)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.source***REMOVED***===***REMOVED***sourceFile***REMOVED***&&***REMOVED***mapping.originalLine***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Check***REMOVED***if***REMOVED***it***REMOVED***can***REMOVED***be***REMOVED***mapped***REMOVED***by***REMOVED***the***REMOVED***source***REMOVED***map,***REMOVED***then***REMOVED***update***REMOVED***the***REMOVED***mapping.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***original***REMOVED***=***REMOVED***aSourceMapConsumer.originalPositionFor({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***mapping.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***mapping.originalColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original.source***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Copy***REMOVED***mapping
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.source***REMOVED***=***REMOVED***original.source;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceMapPath***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.source***REMOVED***=***REMOVED***util.join(aSourceMapPath,***REMOVED***mapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.source***REMOVED***=***REMOVED***util.relative(sourceRoot,***REMOVED***mapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***=***REMOVED***original.line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn***REMOVED***=***REMOVED***original.column;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original.name***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.name***REMOVED***=***REMOVED***original.name;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***mapping.source;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***!newSources.has(source))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newSources.add(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***mapping.name;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***!newNames.has(name))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNames.add(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
	***REMOVED******REMOVED******REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***newSources;
	***REMOVED******REMOVED******REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***newNames;

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Copy***REMOVED***sourcesContents***REMOVED***of***REMOVED***applied***REMOVED***map.
	***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.sources.forEach(function***REMOVED***(sourceFile)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***aSourceMapConsumer.sourceContentFor(sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceMapPath***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***util.join(aSourceMapPath,***REMOVED***sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***util.relative(sourceRoot,***REMOVED***sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setSourceContent(sourceFile,***REMOVED***content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***A***REMOVED***mapping***REMOVED***can***REMOVED***have***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***three***REMOVED***levels***REMOVED***of***REMOVED***data:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***1.***REMOVED***Just***REMOVED***the***REMOVED***generated***REMOVED***position.
	***REMOVED*******REMOVED******REMOVED******REMOVED***2.***REMOVED***The***REMOVED***Generated***REMOVED***position,***REMOVED***original***REMOVED***position,***REMOVED***and***REMOVED***original***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED***3.***REMOVED***Generated***REMOVED***and***REMOVED***original***REMOVED***position,***REMOVED***original***REMOVED***source,***REMOVED***as***REMOVED***well***REMOVED***as***REMOVED***a***REMOVED***name
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.
	***REMOVED****
	***REMOVED*******REMOVED***To***REMOVED***maintain***REMOVED***consistency,***REMOVED***we***REMOVED***validate***REMOVED***that***REMOVED***any***REMOVED***new***REMOVED***mapping***REMOVED***being***REMOVED***added***REMOVED***falls
	***REMOVED*******REMOVED***in***REMOVED***to***REMOVED***one***REMOVED***of***REMOVED***these***REMOVED***categories.
	***REMOVED****/
	SourceMapGenerator.prototype._validateMapping***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_validateMapping(aGenerated,***REMOVED***aOriginal,***REMOVED***aSource,
	aName)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***aOriginal***REMOVED***is***REMOVED***truthy***REMOVED***but***REMOVED***has***REMOVED***empty***REMOVED***values***REMOVED***for***REMOVED***.line***REMOVED***and***REMOVED***.column,
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it***REMOVED***is***REMOVED***most***REMOVED***likely***REMOVED***a***REMOVED***programmer***REMOVED***error.***REMOVED***In***REMOVED***this***REMOVED***case***REMOVED***we***REMOVED***throw***REMOVED***a***REMOVED***very
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***specific***REMOVED***error***REMOVED***message***REMOVED***to***REMOVED***try***REMOVED***to***REMOVED***guide***REMOVED***them***REMOVED***the***REMOVED***right***REMOVED***way.
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***For***REMOVED***example:***REMOVED***https://github.com/Polymer/polymer-bundler/pull/519
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aOriginal***REMOVED***&&***REMOVED***typeof***REMOVED***aOriginal.line***REMOVED***!==***REMOVED***'number'***REMOVED***&&***REMOVED***typeof***REMOVED***aOriginal.column***REMOVED***!==***REMOVED***'number')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'original.line***REMOVED***and***REMOVED***original.column***REMOVED***are***REMOVED***not***REMOVED***numbers***REMOVED***--***REMOVED***you***REMOVED***probably***REMOVED***meant***REMOVED***to***REMOVED***omit***REMOVED***'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'the***REMOVED***original***REMOVED***mapping***REMOVED***entirely***REMOVED***and***REMOVED***only***REMOVED***map***REMOVED***the***REMOVED***generated***REMOVED***position.***REMOVED***If***REMOVED***so,***REMOVED***pass***REMOVED***'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'null***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***mapping***REMOVED***instead***REMOVED***of***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***empty***REMOVED***or***REMOVED***null***REMOVED***values.'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aGenerated***REMOVED***&&***REMOVED***'line'***REMOVED***in***REMOVED***aGenerated***REMOVED***&&***REMOVED***'column'***REMOVED***in***REMOVED***aGenerated
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***aGenerated.line***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***aGenerated.column***REMOVED***>=***REMOVED***0
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***!aOriginal***REMOVED***&&***REMOVED***!aSource***REMOVED***&&***REMOVED***!aName)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Case***REMOVED***1.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aGenerated***REMOVED***&&***REMOVED***'line'***REMOVED***in***REMOVED***aGenerated***REMOVED***&&***REMOVED***'column'***REMOVED***in***REMOVED***aGenerated
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***aOriginal***REMOVED***&&***REMOVED***'line'***REMOVED***in***REMOVED***aOriginal***REMOVED***&&***REMOVED***'column'***REMOVED***in***REMOVED***aOriginal
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***aGenerated.line***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***aGenerated.column***REMOVED***>=***REMOVED***0
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***aOriginal.line***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***aOriginal.column***REMOVED***>=***REMOVED***0
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***aSource)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Cases***REMOVED***2***REMOVED***and***REMOVED***3.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Invalid***REMOVED***mapping:***REMOVED***'***REMOVED***+***REMOVED***JSON.stringify({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***aGenerated,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***aSource,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***aOriginal,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***aName
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Serialize***REMOVED***the***REMOVED***accumulated***REMOVED***mappings***REMOVED***in***REMOVED***to***REMOVED***the***REMOVED***stream***REMOVED***of***REMOVED***base***REMOVED***64***REMOVED***VLQs
	***REMOVED*******REMOVED***specified***REMOVED***by***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***format.
	***REMOVED****/
	SourceMapGenerator.prototype._serializeMappings***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_serializeMappings()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousGeneratedLine***REMOVED***=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalLine***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousName***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousSource***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nameIdx;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceIdx;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mappings***REMOVED***=***REMOVED***this._mappings.toArray();
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***mappings.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***mappings[i];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***'';

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.generatedLine***REMOVED***!==***REMOVED***previousGeneratedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(mapping.generatedLine***REMOVED***!==***REMOVED***previousGeneratedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***';';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedLine++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!util.compareByGeneratedPositionsInflated(mapping,***REMOVED***mappings[i***REMOVED***-***REMOVED***1]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***',';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***base64VLQ.encode(mapping.generatedColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***previousGeneratedColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.source***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIdx***REMOVED***=***REMOVED***this._sources.indexOf(mapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***base64VLQ.encode(sourceIdx***REMOVED***-***REMOVED***previousSource);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousSource***REMOVED***=***REMOVED***sourceIdx;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***lines***REMOVED***are***REMOVED***stored***REMOVED***0-based***REMOVED***in***REMOVED***SourceMap***REMOVED***spec***REMOVED***version***REMOVED***3
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***base64VLQ.encode(mapping.originalLine***REMOVED***-***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***previousOriginalLine);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalLine***REMOVED***=***REMOVED***mapping.originalLine***REMOVED***-***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***base64VLQ.encode(mapping.originalColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***previousOriginalColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***mapping.originalColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.name***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nameIdx***REMOVED***=***REMOVED***this._names.indexOf(mapping.name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***base64VLQ.encode(nameIdx***REMOVED***-***REMOVED***previousName);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousName***REMOVED***=***REMOVED***nameIdx;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***+=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
	***REMOVED******REMOVED***};

	SourceMapGenerator.prototype._generateSourcesContent***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_generateSourcesContent(aSources,***REMOVED***aSourceRoot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aSources.map(function***REMOVED***(source)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._sourcesContents)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aSourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.relative(aSourceRoot,***REMOVED***source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***key***REMOVED***=***REMOVED***util.toSetString(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.prototype.hasOwnProperty.call(this._sourcesContents,***REMOVED***key)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this._sourcesContents[key]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Externalize***REMOVED***the***REMOVED***source***REMOVED***map.
	***REMOVED****/
	SourceMapGenerator.prototype.toJSON***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_toJSON()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***map***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version:***REMOVED***this._version,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***this._sources.toArray(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***this._names.toArray(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***this._serializeMappings()
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._file***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.file***REMOVED***=***REMOVED***this._file;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.sourceRoot***REMOVED***=***REMOVED***this._sourceRoot;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._sourcesContents)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.sourcesContent***REMOVED***=***REMOVED***this._generateSourcesContent(map.sources,***REMOVED***map.sourceRoot);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***map;
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Render***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***being***REMOVED***generated***REMOVED***to***REMOVED***a***REMOVED***string.
	***REMOVED****/
	SourceMapGenerator.prototype.toString***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapGenerator_toString()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***JSON.stringify(this.toJSON());
	***REMOVED******REMOVED***};

	sourceMapGenerator.SourceMapGenerator***REMOVED***=***REMOVED***SourceMapGenerator;
	return***REMOVED***sourceMapGenerator;
}

var***REMOVED***sourceMapConsumer***REMOVED***=***REMOVED***{};

var***REMOVED***binarySearch***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredBinarySearch;

function***REMOVED***requireBinarySearch***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBinarySearch)***REMOVED***return***REMOVED***binarySearch;
	hasRequiredBinarySearch***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{
		/*
		***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
		***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
		***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
		***REMOVED****/

		exports.GREATEST_LOWER_BOUND***REMOVED***=***REMOVED***1;
		exports.LEAST_UPPER_BOUND***REMOVED***=***REMOVED***2;

		/**
		***REMOVED*******REMOVED***Recursive***REMOVED***implementation***REMOVED***of***REMOVED***binary***REMOVED***search.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***aLow***REMOVED***Indices***REMOVED***here***REMOVED***and***REMOVED***lower***REMOVED***do***REMOVED***not***REMOVED***contain***REMOVED***the***REMOVED***needle.
		***REMOVED*******REMOVED***@param***REMOVED***aHigh***REMOVED***Indices***REMOVED***here***REMOVED***and***REMOVED***higher***REMOVED***do***REMOVED***not***REMOVED***contain***REMOVED***the***REMOVED***needle.
		***REMOVED*******REMOVED***@param***REMOVED***aNeedle***REMOVED***The***REMOVED***element***REMOVED***being***REMOVED***searched***REMOVED***for.
		***REMOVED*******REMOVED***@param***REMOVED***aHaystack***REMOVED***The***REMOVED***non-empty***REMOVED***array***REMOVED***being***REMOVED***searched.
		***REMOVED*******REMOVED***@param***REMOVED***aCompare***REMOVED***Function***REMOVED***which***REMOVED***takes***REMOVED***two***REMOVED***elements***REMOVED***and***REMOVED***returns***REMOVED***-1,***REMOVED***0,***REMOVED***or***REMOVED***1.
		***REMOVED*******REMOVED***@param***REMOVED***aBias***REMOVED***Either***REMOVED***'binarySearch.GREATEST_LOWER_BOUND'***REMOVED***or
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'binarySearch.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
		***REMOVED****/
		function***REMOVED***recursiveSearch(aLow,***REMOVED***aHigh,***REMOVED***aNeedle,***REMOVED***aHaystack,***REMOVED***aCompare,***REMOVED***aBias)***REMOVED***{
		***REMOVED******REMOVED***//***REMOVED***This***REMOVED***function***REMOVED***terminates***REMOVED***when***REMOVED***one***REMOVED***of***REMOVED***the***REMOVED***following***REMOVED***is***REMOVED***true:
		***REMOVED******REMOVED***//
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***1.***REMOVED***We***REMOVED***find***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***we***REMOVED***are***REMOVED***looking***REMOVED***for.
		***REMOVED******REMOVED***//
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***2.***REMOVED***We***REMOVED***did***REMOVED***not***REMOVED***find***REMOVED***the***REMOVED***exact***REMOVED***element,***REMOVED***but***REMOVED***we***REMOVED***can***REMOVED***return***REMOVED***the***REMOVED***index***REMOVED***of
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***the***REMOVED***next-closest***REMOVED***element.
		***REMOVED******REMOVED***//
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***3.***REMOVED***We***REMOVED***did***REMOVED***not***REMOVED***find***REMOVED***the***REMOVED***exact***REMOVED***element,***REMOVED***and***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***next-closest
		***REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***element***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for,***REMOVED***so***REMOVED***we***REMOVED***return***REMOVED***-1.
		***REMOVED******REMOVED***var***REMOVED***mid***REMOVED***=***REMOVED***Math.floor((aHigh***REMOVED***-***REMOVED***aLow)***REMOVED***/***REMOVED***2)***REMOVED***+***REMOVED***aLow;
		***REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***aCompare(aNeedle,***REMOVED***aHaystack[mid],***REMOVED***true);
		***REMOVED******REMOVED***if***REMOVED***(cmp***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Found***REMOVED***the***REMOVED***element***REMOVED***we***REMOVED***are***REMOVED***looking***REMOVED***for.
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mid;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(cmp***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Our***REMOVED***needle***REMOVED***is***REMOVED***greater***REMOVED***than***REMOVED***aHaystack[mid].
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aHigh***REMOVED***-***REMOVED***mid***REMOVED***>***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***element***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***upper***REMOVED***half.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursiveSearch(mid,***REMOVED***aHigh,***REMOVED***aNeedle,***REMOVED***aHaystack,***REMOVED***aCompare,***REMOVED***aBias);
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***exact***REMOVED***needle***REMOVED***element***REMOVED***was***REMOVED***not***REMOVED***found***REMOVED***in***REMOVED***this***REMOVED***haystack.***REMOVED***Determine***REMOVED***if
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***are***REMOVED***in***REMOVED***termination***REMOVED***case***REMOVED***(3)***REMOVED***or***REMOVED***(2)***REMOVED***and***REMOVED***return***REMOVED***the***REMOVED***appropriate***REMOVED***thing.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aBias***REMOVED***==***REMOVED***exports.LEAST_UPPER_BOUND)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aHigh***REMOVED***<***REMOVED***aHaystack.length***REMOVED***?***REMOVED***aHigh***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mid;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Our***REMOVED***needle***REMOVED***is***REMOVED***less***REMOVED***than***REMOVED***aHaystack[mid].
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mid***REMOVED***-***REMOVED***aLow***REMOVED***>***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***element***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***lower***REMOVED***half.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***recursiveSearch(aLow,***REMOVED***mid,***REMOVED***aNeedle,***REMOVED***aHaystack,***REMOVED***aCompare,***REMOVED***aBias);
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***are***REMOVED***in***REMOVED***termination***REMOVED***case***REMOVED***(3)***REMOVED***or***REMOVED***(2)***REMOVED***and***REMOVED***return***REMOVED***the***REMOVED***appropriate***REMOVED***thing.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aBias***REMOVED***==***REMOVED***exports.LEAST_UPPER_BOUND)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mid;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aLow***REMOVED***<***REMOVED***0***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***aLow;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		}

		/**
		***REMOVED*******REMOVED***This***REMOVED***is***REMOVED***an***REMOVED***implementation***REMOVED***of***REMOVED***binary***REMOVED***search***REMOVED***which***REMOVED***will***REMOVED***always***REMOVED***try***REMOVED***and***REMOVED***return
		***REMOVED*******REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***closest***REMOVED***element***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***exact***REMOVED***hit.***REMOVED***This***REMOVED***is***REMOVED***because
		***REMOVED*******REMOVED***mappings***REMOVED***between***REMOVED***original***REMOVED***and***REMOVED***generated***REMOVED***line/col***REMOVED***pairs***REMOVED***are***REMOVED***single***REMOVED***points,
		***REMOVED*******REMOVED***and***REMOVED***there***REMOVED***is***REMOVED***an***REMOVED***implicit***REMOVED***region***REMOVED***between***REMOVED***each***REMOVED***of***REMOVED***them,***REMOVED***so***REMOVED***a***REMOVED***miss***REMOVED***just***REMOVED***means
		***REMOVED*******REMOVED***that***REMOVED***you***REMOVED***aren't***REMOVED***on***REMOVED***the***REMOVED***very***REMOVED***start***REMOVED***of***REMOVED***a***REMOVED***region.
		***REMOVED****
		***REMOVED*******REMOVED***@param***REMOVED***aNeedle***REMOVED***The***REMOVED***element***REMOVED***you***REMOVED***are***REMOVED***looking***REMOVED***for.
		***REMOVED*******REMOVED***@param***REMOVED***aHaystack***REMOVED***The***REMOVED***array***REMOVED***that***REMOVED***is***REMOVED***being***REMOVED***searched.
		***REMOVED*******REMOVED***@param***REMOVED***aCompare***REMOVED***A***REMOVED***function***REMOVED***which***REMOVED***takes***REMOVED***the***REMOVED***needle***REMOVED***and***REMOVED***an***REMOVED***element***REMOVED***in***REMOVED***the
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array***REMOVED***and***REMOVED***returns***REMOVED***-1,***REMOVED***0,***REMOVED***or***REMOVED***1***REMOVED***depending***REMOVED***on***REMOVED***whether***REMOVED***the***REMOVED***needle***REMOVED***is***REMOVED***less
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***than,***REMOVED***equal***REMOVED***to,***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***element,***REMOVED***respectively.
		***REMOVED*******REMOVED***@param***REMOVED***aBias***REMOVED***Either***REMOVED***'binarySearch.GREATEST_LOWER_BOUND'***REMOVED***or
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'binarySearch.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
		***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Defaults***REMOVED***to***REMOVED***'binarySearch.GREATEST_LOWER_BOUND'.
		***REMOVED****/
		exports.search***REMOVED***=***REMOVED***function***REMOVED***search(aNeedle,***REMOVED***aHaystack,***REMOVED***aCompare,***REMOVED***aBias)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(aHaystack.length***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***recursiveSearch(-1,***REMOVED***aHaystack.length,***REMOVED***aNeedle,***REMOVED***aHaystack,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aCompare,***REMOVED***aBias***REMOVED***||***REMOVED***exports.GREATEST_LOWER_BOUND);
		***REMOVED******REMOVED***if***REMOVED***(index***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***//***REMOVED***We***REMOVED***have***REMOVED***found***REMOVED***either***REMOVED***the***REMOVED***exact***REMOVED***element,***REMOVED***or***REMOVED***the***REMOVED***next-closest***REMOVED***element***REMOVED***than
		***REMOVED******REMOVED***//***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for.***REMOVED***However,***REMOVED***there***REMOVED***may***REMOVED***be***REMOVED***more***REMOVED***than***REMOVED***one***REMOVED***such
		***REMOVED******REMOVED***//***REMOVED***element.***REMOVED***Make***REMOVED***sure***REMOVED***we***REMOVED***always***REMOVED***return***REMOVED***the***REMOVED***smallest***REMOVED***of***REMOVED***these.
		***REMOVED******REMOVED***while***REMOVED***(index***REMOVED***-***REMOVED***1***REMOVED***>=***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aCompare(aHaystack[index],***REMOVED***aHaystack[index***REMOVED***-***REMOVED***1],***REMOVED***true)***REMOVED***!==***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***--index;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***return***REMOVED***index;
		};***REMOVED***
	}***REMOVED***(binarySearch));
	return***REMOVED***binarySearch;
}

var***REMOVED***quickSort***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredQuickSort;

function***REMOVED***requireQuickSort***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredQuickSort)***REMOVED***return***REMOVED***quickSort;
	hasRequiredQuickSort***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	//***REMOVED***It***REMOVED***turns***REMOVED***out***REMOVED***that***REMOVED***some***REMOVED***(most?)***REMOVED***JavaScript***REMOVED***engines***REMOVED***don't***REMOVED***self-host
	//***REMOVED***`Array.prototype.sort`.***REMOVED***This***REMOVED***makes***REMOVED***sense***REMOVED***because***REMOVED***C++***REMOVED***will***REMOVED***likely***REMOVED***remain
	//***REMOVED***faster***REMOVED***than***REMOVED***JS***REMOVED***when***REMOVED***doing***REMOVED***raw***REMOVED***CPU-intensive***REMOVED***sorting.***REMOVED***However,***REMOVED***when***REMOVED***using***REMOVED***a
	//***REMOVED***custom***REMOVED***comparator***REMOVED***function,***REMOVED***calling***REMOVED***back***REMOVED***and***REMOVED***forth***REMOVED***between***REMOVED***the***REMOVED***VM's***REMOVED***C++***REMOVED***and
	//***REMOVED***JIT'd***REMOVED***JS***REMOVED***is***REMOVED***rather***REMOVED***slow***REMOVED****and****REMOVED***loses***REMOVED***JIT***REMOVED***type***REMOVED***information,***REMOVED***resulting***REMOVED***in
	//***REMOVED***worse***REMOVED***generated***REMOVED***code***REMOVED***for***REMOVED***the***REMOVED***comparator***REMOVED***function***REMOVED***than***REMOVED***would***REMOVED***be***REMOVED***optimal.***REMOVED***In
	//***REMOVED***fact,***REMOVED***when***REMOVED***sorting***REMOVED***with***REMOVED***a***REMOVED***comparator,***REMOVED***these***REMOVED***costs***REMOVED***outweigh***REMOVED***the***REMOVED***benefits***REMOVED***of
	//***REMOVED***sorting***REMOVED***in***REMOVED***C++.***REMOVED***By***REMOVED***using***REMOVED***our***REMOVED***own***REMOVED***JS-implemented***REMOVED***Quick***REMOVED***Sort***REMOVED***(below),***REMOVED***we***REMOVED***get
	//***REMOVED***a***REMOVED***~3500ms***REMOVED***mean***REMOVED***speed-up***REMOVED***in***REMOVED***`bench/bench.html`.

	/**
	***REMOVED*******REMOVED***Swap***REMOVED***the***REMOVED***elements***REMOVED***indexed***REMOVED***by***REMOVED***`x`***REMOVED***and***REMOVED***`y`***REMOVED***in***REMOVED***the***REMOVED***array***REMOVED***`ary`.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***ary
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***array.
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***x
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***first***REMOVED***item.
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***y
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***second***REMOVED***item.
	***REMOVED****/
	function***REMOVED***swap(ary,***REMOVED***x,***REMOVED***y)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***temp***REMOVED***=***REMOVED***ary[x];
	***REMOVED******REMOVED***ary[x]***REMOVED***=***REMOVED***ary[y];
	***REMOVED******REMOVED***ary[y]***REMOVED***=***REMOVED***temp;
	}

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***a***REMOVED***random***REMOVED***integer***REMOVED***within***REMOVED***the***REMOVED***range***REMOVED***`low***REMOVED***..***REMOVED***high`***REMOVED***inclusive.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***low
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***lower***REMOVED***bound***REMOVED***on***REMOVED***the***REMOVED***range.
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***high
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***upper***REMOVED***bound***REMOVED***on***REMOVED***the***REMOVED***range.
	***REMOVED****/
	function***REMOVED***randomIntInRange(low,***REMOVED***high)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Math.round(low***REMOVED***+***REMOVED***(Math.random()***REMOVED*******REMOVED***(high***REMOVED***-***REMOVED***low)));
	}

	/**
	***REMOVED*******REMOVED***The***REMOVED***Quick***REMOVED***Sort***REMOVED***algorithm.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***ary
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***An***REMOVED***array***REMOVED***to***REMOVED***sort.
	***REMOVED*******REMOVED***@param***REMOVED***{function}***REMOVED***comparator
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Function***REMOVED***to***REMOVED***use***REMOVED***to***REMOVED***compare***REMOVED***two***REMOVED***items.
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***p
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Start***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***array
	***REMOVED*******REMOVED***@param***REMOVED***{Number}***REMOVED***r
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***End***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***array
	***REMOVED****/
	function***REMOVED***doQuickSort(ary,***REMOVED***comparator,***REMOVED***p,***REMOVED***r)***REMOVED***{
	***REMOVED******REMOVED***//***REMOVED***If***REMOVED***our***REMOVED***lower***REMOVED***bound***REMOVED***is***REMOVED***less***REMOVED***than***REMOVED***our***REMOVED***upper***REMOVED***bound,***REMOVED***we***REMOVED***(1)***REMOVED***partition***REMOVED***the
	***REMOVED******REMOVED***//***REMOVED***array***REMOVED***into***REMOVED***two***REMOVED***pieces***REMOVED***and***REMOVED***(2)***REMOVED***recurse***REMOVED***on***REMOVED***each***REMOVED***half.***REMOVED***If***REMOVED***it***REMOVED***is***REMOVED***not,***REMOVED***this***REMOVED***is
	***REMOVED******REMOVED***//***REMOVED***the***REMOVED***empty***REMOVED***array***REMOVED***and***REMOVED***our***REMOVED***base***REMOVED***case.

	***REMOVED******REMOVED***if***REMOVED***(p***REMOVED***<***REMOVED***r)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(1)***REMOVED***Partitioning.
	***REMOVED******REMOVED******REMOVED******REMOVED***//
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***partitioning***REMOVED***chooses***REMOVED***a***REMOVED***pivot***REMOVED***between***REMOVED***`p`***REMOVED***and***REMOVED***`r`***REMOVED***and***REMOVED***moves***REMOVED***all
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***elements***REMOVED***that***REMOVED***are***REMOVED***less***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***the***REMOVED***pivot***REMOVED***to***REMOVED***the***REMOVED***before***REMOVED***it,***REMOVED***and
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***all***REMOVED***the***REMOVED***elements***REMOVED***that***REMOVED***are***REMOVED***greater***REMOVED***than***REMOVED***it***REMOVED***after***REMOVED***it.***REMOVED***The***REMOVED***effect***REMOVED***is***REMOVED***that
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***once***REMOVED***partition***REMOVED***is***REMOVED***done,***REMOVED***the***REMOVED***pivot***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***exact***REMOVED***place***REMOVED***it***REMOVED***will***REMOVED***be***REMOVED***when
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***array***REMOVED***is***REMOVED***put***REMOVED***in***REMOVED***sorted***REMOVED***order,***REMOVED***and***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***moved
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***again.***REMOVED***This***REMOVED***runs***REMOVED***in***REMOVED***O(n)***REMOVED***time.

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Always***REMOVED***choose***REMOVED***a***REMOVED***random***REMOVED***pivot***REMOVED***so***REMOVED***that***REMOVED***an***REMOVED***input***REMOVED***array***REMOVED***which***REMOVED***is***REMOVED***reverse
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***sorted***REMOVED***does***REMOVED***not***REMOVED***cause***REMOVED***O(n^2)***REMOVED***running***REMOVED***time.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pivotIndex***REMOVED***=***REMOVED***randomIntInRange(p,***REMOVED***r);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***p***REMOVED***-***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED***swap(ary,***REMOVED***pivotIndex,***REMOVED***r);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pivot***REMOVED***=***REMOVED***ary[r];

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Immediately***REMOVED***after***REMOVED***`j`***REMOVED***is***REMOVED***incremented***REMOVED***in***REMOVED***this***REMOVED***loop,***REMOVED***the***REMOVED***following***REMOVED***hold
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***true:
	***REMOVED******REMOVED******REMOVED******REMOVED***//
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED*******REMOVED***Every***REMOVED***element***REMOVED***in***REMOVED***`ary[p***REMOVED***..***REMOVED***i]`***REMOVED***is***REMOVED***less***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***the***REMOVED***pivot.
	***REMOVED******REMOVED******REMOVED******REMOVED***//
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED*******REMOVED***Every***REMOVED***element***REMOVED***in***REMOVED***`ary[i+1***REMOVED***..***REMOVED***j-1]`***REMOVED***is***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***pivot.
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***j***REMOVED***=***REMOVED***p;***REMOVED***j***REMOVED***<***REMOVED***r;***REMOVED***j++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comparator(ary[j],***REMOVED***pivot)***REMOVED***<=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***swap(ary,***REMOVED***i,***REMOVED***j);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***swap(ary,***REMOVED***i***REMOVED***+***REMOVED***1,***REMOVED***j);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***q***REMOVED***=***REMOVED***i***REMOVED***+***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(2)***REMOVED***Recurse***REMOVED***on***REMOVED***each***REMOVED***half.

	***REMOVED******REMOVED******REMOVED******REMOVED***doQuickSort(ary,***REMOVED***comparator,***REMOVED***p,***REMOVED***q***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***doQuickSort(ary,***REMOVED***comparator,***REMOVED***q***REMOVED***+***REMOVED***1,***REMOVED***r);
	***REMOVED******REMOVED***}
	}

	/**
	***REMOVED*******REMOVED***Sort***REMOVED***the***REMOVED***given***REMOVED***array***REMOVED***in-place***REMOVED***with***REMOVED***the***REMOVED***given***REMOVED***comparator***REMOVED***function.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***ary
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***An***REMOVED***array***REMOVED***to***REMOVED***sort.
	***REMOVED*******REMOVED***@param***REMOVED***{function}***REMOVED***comparator
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Function***REMOVED***to***REMOVED***use***REMOVED***to***REMOVED***compare***REMOVED***two***REMOVED***items.
	***REMOVED****/
	quickSort.quickSort***REMOVED***=***REMOVED***function***REMOVED***(ary,***REMOVED***comparator)***REMOVED***{
	***REMOVED******REMOVED***doQuickSort(ary,***REMOVED***comparator,***REMOVED***0,***REMOVED***ary.length***REMOVED***-***REMOVED***1);
	};
	return***REMOVED***quickSort;
}

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredSourceMapConsumer;

function***REMOVED***requireSourceMapConsumer***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSourceMapConsumer)***REMOVED***return***REMOVED***sourceMapConsumer;
	hasRequiredSourceMapConsumer***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$1();
	var***REMOVED***binarySearch***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBinarySearch();
	var***REMOVED***ArraySet***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireArraySet().ArraySet;
	var***REMOVED***base64VLQ***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBase64Vlq();
	var***REMOVED***quickSort***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireQuickSort().quickSort;

	function***REMOVED***SourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***sourceMap.sections***REMOVED***!=***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***new***REMOVED***IndexedSourceMapConsumer(sourceMap,***REMOVED***aSourceMapURL)
	***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***new***REMOVED***BasicSourceMapConsumer(sourceMap,***REMOVED***aSourceMapURL);
	}

	SourceMapConsumer.fromSourceMap***REMOVED***=***REMOVED***function(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***BasicSourceMapConsumer.fromSourceMap(aSourceMap,***REMOVED***aSourceMapURL);
	};

	/**
	***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
	***REMOVED****/
	SourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

	//***REMOVED***`__generatedMappings`***REMOVED***and***REMOVED***`__originalMappings`***REMOVED***are***REMOVED***arrays***REMOVED***that***REMOVED***hold***REMOVED***the
	//***REMOVED***parsed***REMOVED***mapping***REMOVED***coordinates***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map's***REMOVED***"mappings"***REMOVED***attribute.***REMOVED***They
	//***REMOVED***are***REMOVED***lazily***REMOVED***instantiated,***REMOVED***accessed***REMOVED***via***REMOVED***the***REMOVED***`_generatedMappings`***REMOVED***and
	//***REMOVED***`_originalMappings`***REMOVED***getters***REMOVED***respectively,***REMOVED***and***REMOVED***we***REMOVED***only***REMOVED***parse***REMOVED***the***REMOVED***mappings
	//***REMOVED***and***REMOVED***create***REMOVED***these***REMOVED***arrays***REMOVED***once***REMOVED***queried***REMOVED***for***REMOVED***a***REMOVED***source***REMOVED***location.***REMOVED***We***REMOVED***jump***REMOVED***through
	//***REMOVED***these***REMOVED***hoops***REMOVED***because***REMOVED***there***REMOVED***can***REMOVED***be***REMOVED***many***REMOVED***thousands***REMOVED***of***REMOVED***mappings,***REMOVED***and***REMOVED***parsing
	//***REMOVED***them***REMOVED***is***REMOVED***expensive,***REMOVED***so***REMOVED***we***REMOVED***only***REMOVED***want***REMOVED***to***REMOVED***do***REMOVED***it***REMOVED***if***REMOVED***we***REMOVED***must.
	//
	//***REMOVED***Each***REMOVED***object***REMOVED***in***REMOVED***the***REMOVED***arrays***REMOVED***is***REMOVED***of***REMOVED***the***REMOVED***form:
	//
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***code,
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***code,
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***The***REMOVED***path***REMOVED***to***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***file***REMOVED***that***REMOVED***generated***REMOVED***this
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk***REMOVED***of***REMOVED***code,
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***that
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***corresponds***REMOVED***to***REMOVED***this***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***code,
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***that
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***corresponds***REMOVED***to***REMOVED***this***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***code,
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***symbol***REMOVED***which***REMOVED***generated***REMOVED***this***REMOVED***chunk***REMOVED***of
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code.
	//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	//
	//***REMOVED***All***REMOVED***properties***REMOVED***except***REMOVED***for***REMOVED***`generatedLine`***REMOVED***and***REMOVED***`generatedColumn`***REMOVED***can***REMOVED***be
	//***REMOVED***`null`.
	//
	//***REMOVED***`_generatedMappings`***REMOVED***is***REMOVED***ordered***REMOVED***by***REMOVED***the***REMOVED***generated***REMOVED***positions.
	//
	//***REMOVED***`_originalMappings`***REMOVED***is***REMOVED***ordered***REMOVED***by***REMOVED***the***REMOVED***original***REMOVED***positions.

	SourceMapConsumer.prototype.__generatedMappings***REMOVED***=***REMOVED***null;
	Object.defineProperty(SourceMapConsumer.prototype,***REMOVED***'_generatedMappings',***REMOVED***{
	***REMOVED******REMOVED***configurable:***REMOVED***true,
	***REMOVED******REMOVED***enumerable:***REMOVED***true,
	***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.__generatedMappings)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._parseMappings(this._mappings,***REMOVED***this.sourceRoot);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.__generatedMappings;
	***REMOVED******REMOVED***}
	});

	SourceMapConsumer.prototype.__originalMappings***REMOVED***=***REMOVED***null;
	Object.defineProperty(SourceMapConsumer.prototype,***REMOVED***'_originalMappings',***REMOVED***{
	***REMOVED******REMOVED***configurable:***REMOVED***true,
	***REMOVED******REMOVED***enumerable:***REMOVED***true,
	***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.__originalMappings)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._parseMappings(this._mappings,***REMOVED***this.sourceRoot);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.__originalMappings;
	***REMOVED******REMOVED***}
	});

	SourceMapConsumer.prototype._charIsMappingSeparator***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_charIsMappingSeparator(aStr,***REMOVED***index)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***c***REMOVED***=***REMOVED***aStr.charAt(index);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c***REMOVED***===***REMOVED***";"***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***",";
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
	***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
	***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
	***REMOVED****/
	SourceMapConsumer.prototype._parseMappings***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Subclasses***REMOVED***must***REMOVED***implement***REMOVED***_parseMappings");
	***REMOVED******REMOVED***};

	SourceMapConsumer.GENERATED_ORDER***REMOVED***=***REMOVED***1;
	SourceMapConsumer.ORIGINAL_ORDER***REMOVED***=***REMOVED***2;

	SourceMapConsumer.GREATEST_LOWER_BOUND***REMOVED***=***REMOVED***1;
	SourceMapConsumer.LEAST_UPPER_BOUND***REMOVED***=***REMOVED***2;

	/**
	***REMOVED*******REMOVED***Iterate***REMOVED***over***REMOVED***each***REMOVED***mapping***REMOVED***between***REMOVED***an***REMOVED***original***REMOVED***source/line/column***REMOVED***and***REMOVED***a
	***REMOVED*******REMOVED***generated***REMOVED***line/column***REMOVED***in***REMOVED***this***REMOVED***source***REMOVED***map.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***Function***REMOVED***aCallback
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***function***REMOVED***that***REMOVED***is***REMOVED***called***REMOVED***with***REMOVED***each***REMOVED***mapping.
	***REMOVED*******REMOVED***@param***REMOVED***Object***REMOVED***aContext
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Optional.***REMOVED***If***REMOVED***specified,***REMOVED***this***REMOVED***object***REMOVED***will***REMOVED***be***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***`this`***REMOVED***every
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***time***REMOVED***that***REMOVED***`aCallback`***REMOVED***is***REMOVED***called.
	***REMOVED*******REMOVED***@param***REMOVED***aOrder
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Either***REMOVED***`SourceMapConsumer.GENERATED_ORDER`***REMOVED***or
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`SourceMapConsumer.ORIGINAL_ORDER`.***REMOVED***Specifies***REMOVED***whether***REMOVED***you***REMOVED***want***REMOVED***to
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***iterate***REMOVED***over***REMOVED***the***REMOVED***mappings***REMOVED***sorted***REMOVED***by***REMOVED***the***REMOVED***generated***REMOVED***file's***REMOVED***line/column
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***order***REMOVED***or***REMOVED***the***REMOVED***original's***REMOVED***source/line/column***REMOVED***order,***REMOVED***respectively.***REMOVED***Defaults***REMOVED***to
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`SourceMapConsumer.GENERATED_ORDER`.
	***REMOVED****/
	SourceMapConsumer.prototype.eachMapping***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_eachMapping(aCallback,***REMOVED***aContext,***REMOVED***aOrder)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***context***REMOVED***=***REMOVED***aContext***REMOVED***||***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***order***REMOVED***=***REMOVED***aOrder***REMOVED***||***REMOVED***SourceMapConsumer.GENERATED_ORDER;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mappings;
	***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(order)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***SourceMapConsumer.GENERATED_ORDER:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings***REMOVED***=***REMOVED***this._generatedMappings;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***SourceMapConsumer.ORIGINAL_ORDER:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings***REMOVED***=***REMOVED***this._originalMappings;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***default:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Unknown***REMOVED***order***REMOVED***of***REMOVED***iteration.");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***this.sourceRoot;
	***REMOVED******REMOVED******REMOVED******REMOVED***mappings.map(function***REMOVED***(mapping)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***mapping.source***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this._sources.at(mapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(sourceRoot,***REMOVED***source,***REMOVED***this._sourceMapURL);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***mapping.generatedLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***mapping.generatedColumn,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***mapping.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***mapping.originalColumn,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***mapping.name***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***this._names.at(mapping.name)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this).forEach(aCallback,***REMOVED***context);
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***all***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
	***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***provided.***REMOVED***If***REMOVED***no***REMOVED***column***REMOVED***is***REMOVED***provided,***REMOVED***returns***REMOVED***all***REMOVED***mappings
	***REMOVED*******REMOVED***corresponding***REMOVED***to***REMOVED***a***REMOVED***either***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for***REMOVED***or***REMOVED***the***REMOVED***next
	***REMOVED*******REMOVED***closest***REMOVED***line***REMOVED***that***REMOVED***has***REMOVED***any***REMOVED***mappings.***REMOVED***Otherwise,***REMOVED***returns***REMOVED***all***REMOVED***mappings
	***REMOVED*******REMOVED***corresponding***REMOVED***to***REMOVED***the***REMOVED***given***REMOVED***line***REMOVED***and***REMOVED***either***REMOVED***the***REMOVED***column***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for
	***REMOVED*******REMOVED***or***REMOVED***the***REMOVED***next***REMOVED***closest***REMOVED***column***REMOVED***that***REMOVED***has***REMOVED***any***REMOVED***offsets.
	***REMOVED****
	***REMOVED*******REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***Optional.***REMOVED***the***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****
	***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***objects***REMOVED***is***REMOVED***returned,***REMOVED***each***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****/
	SourceMapConsumer.prototype.allGeneratedPositionsFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_allGeneratedPositionsFor(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***line***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'line');

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***exact***REMOVED***match,***REMOVED***BasicSourceMapConsumer.prototype._findMapping
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***closest***REMOVED***mapping***REMOVED***less***REMOVED***than***REMOVED***the***REMOVED***needle.***REMOVED***By
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***setting***REMOVED***needle.originalColumn***REMOVED***to***REMOVED***0,***REMOVED***we***REMOVED***thus***REMOVED***find***REMOVED***the***REMOVED***last***REMOVED***mapping***REMOVED***for
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***given***REMOVED***line,***REMOVED***provided***REMOVED***such***REMOVED***a***REMOVED***mapping***REMOVED***exists.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***util.getArg(aArgs,***REMOVED***'source'),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column',***REMOVED***0)
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***needle.source***REMOVED***=***REMOVED***this._findSourceIndex(needle.source);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needle.source***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mappings***REMOVED***=***REMOVED***[];

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(needle,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._originalMappings,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalLine",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalColumn",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByOriginalPositions,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binarySearch.LEAST_UPPER_BOUND);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[index];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aArgs.column***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalLine***REMOVED***=***REMOVED***mapping.originalLine;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Iterate***REMOVED***until***REMOVED***either***REMOVED***we***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***mappings,***REMOVED***or***REMOVED***we***REMOVED***run***REMOVED***into
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***mapping***REMOVED***for***REMOVED***a***REMOVED***different***REMOVED***line***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***found.***REMOVED***Since
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***this***REMOVED***is***REMOVED***guaranteed***REMOVED***to***REMOVED***find***REMOVED***all***REMOVED***mappings***REMOVED***for
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***found.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(mapping***REMOVED***&&***REMOVED***mapping.originalLine***REMOVED***===***REMOVED***originalLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[++index];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalColumn***REMOVED***=***REMOVED***mapping.originalColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Iterate***REMOVED***until***REMOVED***either***REMOVED***we***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***mappings,***REMOVED***or***REMOVED***we***REMOVED***run***REMOVED***into
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***mapping***REMOVED***for***REMOVED***a***REMOVED***different***REMOVED***line***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***were***REMOVED***searching***REMOVED***for.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Since***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***this***REMOVED***is***REMOVED***guaranteed***REMOVED***to***REMOVED***find***REMOVED***all***REMOVED***mappings***REMOVED***for
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***line***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(mapping***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***===***REMOVED***line***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn***REMOVED***==***REMOVED***originalColumn)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[++index];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mappings;
	***REMOVED******REMOVED***};

	sourceMapConsumer.SourceMapConsumer***REMOVED***=***REMOVED***SourceMapConsumer;

	/**
	***REMOVED*******REMOVED***A***REMOVED***BasicSourceMapConsumer***REMOVED***instance***REMOVED***represents***REMOVED***a***REMOVED***parsed***REMOVED***source***REMOVED***map***REMOVED***which***REMOVED***we***REMOVED***can
	***REMOVED*******REMOVED***query***REMOVED***for***REMOVED***information***REMOVED***about***REMOVED***the***REMOVED***original***REMOVED***file***REMOVED***positions***REMOVED***by***REMOVED***giving***REMOVED***it***REMOVED***a***REMOVED***file
	***REMOVED*******REMOVED***position***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.
	***REMOVED****
	***REMOVED*******REMOVED***The***REMOVED***first***REMOVED***parameter***REMOVED***is***REMOVED***the***REMOVED***raw***REMOVED***source***REMOVED***map***REMOVED***(either***REMOVED***as***REMOVED***a***REMOVED***JSON***REMOVED***string,***REMOVED***or
	***REMOVED*******REMOVED***already***REMOVED***parsed***REMOVED***to***REMOVED***an***REMOVED***object).***REMOVED***According***REMOVED***to***REMOVED***the***REMOVED***spec,***REMOVED***source***REMOVED***maps***REMOVED***have***REMOVED***the
	***REMOVED*******REMOVED***following***REMOVED***attributes:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***version:***REMOVED***Which***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec***REMOVED***this***REMOVED***map***REMOVED***is***REMOVED***following.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sources:***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***URLs***REMOVED***to***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***files.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***names:***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***identifiers***REMOVED***which***REMOVED***can***REMOVED***be***REMOVED***referrenced***REMOVED***by***REMOVED***individual***REMOVED***mappings.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sourceRoot:***REMOVED***Optional.***REMOVED***The***REMOVED***URL***REMOVED***root***REMOVED***from***REMOVED***which***REMOVED***all***REMOVED***sources***REMOVED***are***REMOVED***relative.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sourcesContent:***REMOVED***Optional.***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***contents***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***files.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***mappings:***REMOVED***A***REMOVED***string***REMOVED***of***REMOVED***base64***REMOVED***VLQs***REMOVED***which***REMOVED***contain***REMOVED***the***REMOVED***actual***REMOVED***mappings.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***file:***REMOVED***Optional.***REMOVED***The***REMOVED***generated***REMOVED***file***REMOVED***this***REMOVED***source***REMOVED***map***REMOVED***is***REMOVED***associated***REMOVED***with.
	***REMOVED****
	***REMOVED*******REMOVED***Here***REMOVED***is***REMOVED***an***REMOVED***example***REMOVED***source***REMOVED***map,***REMOVED***taken***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec[0]:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"out.js",
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***:***REMOVED***"",
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***["foo.js",***REMOVED***"bar.js"],
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***["src",***REMOVED***"maps",***REMOVED***"are",***REMOVED***"fun"],
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***"AA,AB;;ABCDE;"
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED****
	***REMOVED*******REMOVED***The***REMOVED***second***REMOVED***parameter,***REMOVED***if***REMOVED***given,***REMOVED***is***REMOVED***a***REMOVED***string***REMOVED***whose***REMOVED***value***REMOVED***is***REMOVED***the***REMOVED***URL
	***REMOVED*******REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***was***REMOVED***found.***REMOVED******REMOVED***This***REMOVED***URL***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***compute***REMOVED***the
	***REMOVED*******REMOVED***sources***REMOVED***array.
	***REMOVED****
	***REMOVED*******REMOVED***[0]:***REMOVED***https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
	***REMOVED****/
	function***REMOVED***BasicSourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***version***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'version');
	***REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sources');
	***REMOVED******REMOVED***//***REMOVED***Sass***REMOVED***3.3***REMOVED***leaves***REMOVED***out***REMOVED***the***REMOVED***'names'***REMOVED***array,***REMOVED***so***REMOVED***we***REMOVED***deviate***REMOVED***from***REMOVED***the***REMOVED***spec***REMOVED***(which
	***REMOVED******REMOVED***//***REMOVED***requires***REMOVED***the***REMOVED***array)***REMOVED***to***REMOVED***play***REMOVED***nice***REMOVED***here.
	***REMOVED******REMOVED***var***REMOVED***names***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'names',***REMOVED***[]);
	***REMOVED******REMOVED***var***REMOVED***sourceRoot***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sourceRoot',***REMOVED***null);
	***REMOVED******REMOVED***var***REMOVED***sourcesContent***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sourcesContent',***REMOVED***null);
	***REMOVED******REMOVED***var***REMOVED***mappings***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'mappings');
	***REMOVED******REMOVED***var***REMOVED***file***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'file',***REMOVED***null);

	***REMOVED******REMOVED***//***REMOVED***Once***REMOVED***again,***REMOVED***Sass***REMOVED***deviates***REMOVED***from***REMOVED***the***REMOVED***spec***REMOVED***and***REMOVED***supplies***REMOVED***the***REMOVED***version***REMOVED***as***REMOVED***a
	***REMOVED******REMOVED***//***REMOVED***string***REMOVED***rather***REMOVED***than***REMOVED***a***REMOVED***number,***REMOVED***so***REMOVED***we***REMOVED***use***REMOVED***loose***REMOVED***equality***REMOVED***checking***REMOVED***here.
	***REMOVED******REMOVED***if***REMOVED***(version***REMOVED***!=***REMOVED***this._version)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unsupported***REMOVED***version:***REMOVED***'***REMOVED***+***REMOVED***version);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(sourceRoot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot***REMOVED***=***REMOVED***util.normalize(sourceRoot);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***sources***REMOVED***=***REMOVED***sources
	***REMOVED******REMOVED******REMOVED******REMOVED***.map(String)
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Some***REMOVED***source***REMOVED***maps***REMOVED***produce***REMOVED***relative***REMOVED***source***REMOVED***paths***REMOVED***like***REMOVED***"./foo.js"***REMOVED***instead***REMOVED***of
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"foo.js".***REMOVED******REMOVED***Normalize***REMOVED***these***REMOVED***first***REMOVED***so***REMOVED***that***REMOVED***future***REMOVED***comparisons***REMOVED***will***REMOVED***succeed.
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***See***REMOVED***bugzil.la/1090768.
	***REMOVED******REMOVED******REMOVED******REMOVED***.map(util.normalize)
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Always***REMOVED***ensure***REMOVED***that***REMOVED***absolute***REMOVED***sources***REMOVED***are***REMOVED***internally***REMOVED***stored***REMOVED***relative***REMOVED***to
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***source***REMOVED***root,***REMOVED***if***REMOVED***the***REMOVED***source***REMOVED***root***REMOVED***is***REMOVED***absolute.***REMOVED***Not***REMOVED***doing***REMOVED***this***REMOVED***would
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***be***REMOVED***particularly***REMOVED***problematic***REMOVED***when***REMOVED***the***REMOVED***source***REMOVED***root***REMOVED***is***REMOVED***a***REMOVED***prefix***REMOVED***of***REMOVED***the
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***source***REMOVED***(valid,***REMOVED***but***REMOVED***why??).***REMOVED***See***REMOVED***github***REMOVED***issue***REMOVED***#199***REMOVED***and***REMOVED***bugzil.la/1188982.
	***REMOVED******REMOVED******REMOVED******REMOVED***.map(function***REMOVED***(source)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sourceRoot***REMOVED***&&***REMOVED***util.isAbsolute(sourceRoot)***REMOVED***&&***REMOVED***util.isAbsolute(source)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***util.relative(sourceRoot,***REMOVED***source)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***source;
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED***//***REMOVED***Pass***REMOVED***`true`***REMOVED***below***REMOVED***to***REMOVED***allow***REMOVED***duplicate***REMOVED***names***REMOVED***and***REMOVED***sources.***REMOVED***While***REMOVED***source***REMOVED***maps
	***REMOVED******REMOVED***//***REMOVED***are***REMOVED***intended***REMOVED***to***REMOVED***be***REMOVED***compressed***REMOVED***and***REMOVED***deduplicated,***REMOVED***the***REMOVED***TypeScript***REMOVED***compiler
	***REMOVED******REMOVED***//***REMOVED***sometimes***REMOVED***generates***REMOVED***source***REMOVED***maps***REMOVED***with***REMOVED***duplicates***REMOVED***in***REMOVED***them.***REMOVED***See***REMOVED***Github***REMOVED***issue
	***REMOVED******REMOVED***//***REMOVED***#72***REMOVED***and***REMOVED***bugzil.la/889492.
	***REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***ArraySet.fromArray(names.map(String),***REMOVED***true);
	***REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***ArraySet.fromArray(sources,***REMOVED***true);

	***REMOVED******REMOVED***this._absoluteSources***REMOVED***=***REMOVED***this._sources.toArray().map(function***REMOVED***(s)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***util.computeSourceURL(sourceRoot,***REMOVED***s,***REMOVED***aSourceMapURL);
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***this.sourceRoot***REMOVED***=***REMOVED***sourceRoot;
	***REMOVED******REMOVED***this.sourcesContent***REMOVED***=***REMOVED***sourcesContent;
	***REMOVED******REMOVED***this._mappings***REMOVED***=***REMOVED***mappings;
	***REMOVED******REMOVED***this._sourceMapURL***REMOVED***=***REMOVED***aSourceMapURL;
	***REMOVED******REMOVED***this.file***REMOVED***=***REMOVED***file;
	}

	BasicSourceMapConsumer.prototype***REMOVED***=***REMOVED***Object.create(SourceMapConsumer.prototype);
	BasicSourceMapConsumer.prototype.consumer***REMOVED***=***REMOVED***SourceMapConsumer;

	/**
	***REMOVED*******REMOVED***Utility***REMOVED***function***REMOVED***to***REMOVED***find***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***a***REMOVED***source.***REMOVED******REMOVED***Returns***REMOVED***-1***REMOVED***if***REMOVED***not
	***REMOVED*******REMOVED***found.
	***REMOVED****/
	BasicSourceMapConsumer.prototype._findSourceIndex***REMOVED***=***REMOVED***function(aSource)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***relativeSource***REMOVED***=***REMOVED***aSource;
	***REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***relativeSource***REMOVED***=***REMOVED***util.relative(this.sourceRoot,***REMOVED***relativeSource);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(this._sources.has(relativeSource))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._sources.indexOf(relativeSource);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***Maybe***REMOVED***aSource***REMOVED***is***REMOVED***an***REMOVED***absolute***REMOVED***URL***REMOVED***as***REMOVED***returned***REMOVED***by***REMOVED***|sources|.***REMOVED******REMOVED***In
	***REMOVED******REMOVED***//***REMOVED***this***REMOVED***case***REMOVED***we***REMOVED***can't***REMOVED***simply***REMOVED***undo***REMOVED***the***REMOVED***transform.
	***REMOVED******REMOVED***var***REMOVED***i;
	***REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._absoluteSources.length;***REMOVED***++i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._absoluteSources[i]***REMOVED***==***REMOVED***aSource)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***-1;
	};

	/**
	***REMOVED*******REMOVED***Create***REMOVED***a***REMOVED***BasicSourceMapConsumer***REMOVED***from***REMOVED***a***REMOVED***SourceMapGenerator.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***SourceMapGenerator***REMOVED***aSourceMap
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***source***REMOVED***map***REMOVED***that***REMOVED***will***REMOVED***be***REMOVED***consumed.
	***REMOVED*******REMOVED***@param***REMOVED***String***REMOVED***aSourceMapURL
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***URL***REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***can***REMOVED***be***REMOVED***found***REMOVED***(optional)
	***REMOVED*******REMOVED***@returns***REMOVED***BasicSourceMapConsumer
	***REMOVED****/
	BasicSourceMapConsumer.fromSourceMap***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_fromSourceMap(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***smc***REMOVED***=***REMOVED***Object.create(BasicSourceMapConsumer.prototype);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***names***REMOVED***=***REMOVED***smc._names***REMOVED***=***REMOVED***ArraySet.fromArray(aSourceMap._names.toArray(),***REMOVED***true);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***smc._sources***REMOVED***=***REMOVED***ArraySet.fromArray(aSourceMap._sources.toArray(),***REMOVED***true);
	***REMOVED******REMOVED******REMOVED******REMOVED***smc.sourceRoot***REMOVED***=***REMOVED***aSourceMap._sourceRoot;
	***REMOVED******REMOVED******REMOVED******REMOVED***smc.sourcesContent***REMOVED***=***REMOVED***aSourceMap._generateSourcesContent(smc._sources.toArray(),
	smc.sourceRoot);
	***REMOVED******REMOVED******REMOVED******REMOVED***smc.file***REMOVED***=***REMOVED***aSourceMap._file;
	***REMOVED******REMOVED******REMOVED******REMOVED***smc._sourceMapURL***REMOVED***=***REMOVED***aSourceMapURL;
	***REMOVED******REMOVED******REMOVED******REMOVED***smc._absoluteSources***REMOVED***=***REMOVED***smc._sources.toArray().map(function***REMOVED***(s)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***util.computeSourceURL(smc.sourceRoot,***REMOVED***s,***REMOVED***aSourceMapURL);
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Because***REMOVED***we***REMOVED***are***REMOVED***modifying***REMOVED***the***REMOVED***entries***REMOVED***(by***REMOVED***converting***REMOVED***string***REMOVED***sources***REMOVED***and
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***names***REMOVED***to***REMOVED***indices***REMOVED***into***REMOVED***the***REMOVED***sources***REMOVED***and***REMOVED***names***REMOVED***ArraySets),***REMOVED***we***REMOVED***have***REMOVED***to***REMOVED***make
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***copy***REMOVED***of***REMOVED***the***REMOVED***entry***REMOVED***or***REMOVED***else***REMOVED***bad***REMOVED***things***REMOVED***happen.***REMOVED***Shared***REMOVED***mutable***REMOVED***state
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***strikes***REMOVED***again!***REMOVED***See***REMOVED***github***REMOVED***issue***REMOVED***#191.

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedMappings***REMOVED***=***REMOVED***aSourceMap._mappings.toArray().slice();
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destGeneratedMappings***REMOVED***=***REMOVED***smc.__generatedMappings***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destOriginalMappings***REMOVED***=***REMOVED***smc.__originalMappings***REMOVED***=***REMOVED***[];

	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***generatedMappings.length;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***srcMapping***REMOVED***=***REMOVED***generatedMappings[i];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***destMapping***REMOVED***=***REMOVED***new***REMOVED***Mapping;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.generatedLine***REMOVED***=***REMOVED***srcMapping.generatedLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.generatedColumn***REMOVED***=***REMOVED***srcMapping.generatedColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(srcMapping.source)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.source***REMOVED***=***REMOVED***sources.indexOf(srcMapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.originalLine***REMOVED***=***REMOVED***srcMapping.originalLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.originalColumn***REMOVED***=***REMOVED***srcMapping.originalColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(srcMapping.name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destMapping.name***REMOVED***=***REMOVED***names.indexOf(srcMapping.name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destOriginalMappings.push(destMapping);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destGeneratedMappings.push(destMapping);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(smc.__originalMappings,***REMOVED***util.compareByOriginalPositions);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***smc;
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
	***REMOVED****/
	BasicSourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

	/**
	***REMOVED*******REMOVED***The***REMOVED***list***REMOVED***of***REMOVED***original***REMOVED***sources.
	***REMOVED****/
	Object.defineProperty(BasicSourceMapConsumer.prototype,***REMOVED***'sources',***REMOVED***{
	***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._absoluteSources.slice();
	***REMOVED******REMOVED***}
	});

	/**
	***REMOVED*******REMOVED***Provide***REMOVED***the***REMOVED***JIT***REMOVED***with***REMOVED***a***REMOVED***nice***REMOVED***shape***REMOVED***/***REMOVED***hidden***REMOVED***class.
	***REMOVED****/
	function***REMOVED***Mapping()***REMOVED***{
	***REMOVED******REMOVED***this.generatedLine***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***this.generatedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***this.originalLine***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***this.originalColumn***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***null;
	}

	/**
	***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
	***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
	***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
	***REMOVED****/
	BasicSourceMapConsumer.prototype._parseMappings***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedLine***REMOVED***=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalLine***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousSource***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***previousName***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***aStr.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cachedSegments***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***temp***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalMappings***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedMappings***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping,***REMOVED***str,***REMOVED***segment,***REMOVED***end,***REMOVED***value;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aStr.charAt(index)***REMOVED***===***REMOVED***';')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aStr.charAt(index)***REMOVED***===***REMOVED***',')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping***REMOVED***=***REMOVED***new***REMOVED***Mapping();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.generatedLine***REMOVED***=***REMOVED***generatedLine;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Because***REMOVED***each***REMOVED***offset***REMOVED***is***REMOVED***encoded***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***previous***REMOVED***one,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***many***REMOVED***segments***REMOVED***often***REMOVED***have***REMOVED***the***REMOVED***same***REMOVED***encoding.***REMOVED***We***REMOVED***can***REMOVED***exploit***REMOVED***this
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fact***REMOVED***by***REMOVED***caching***REMOVED***the***REMOVED***parsed***REMOVED***variable***REMOVED***length***REMOVED***fields***REMOVED***of***REMOVED***each***REMOVED***segment,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***allowing***REMOVED***us***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***second***REMOVED***parse***REMOVED***if***REMOVED***we***REMOVED***encounter***REMOVED***the***REMOVED***same
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***segment***REMOVED***again.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(end***REMOVED***=***REMOVED***index;***REMOVED***end***REMOVED***<***REMOVED***length;***REMOVED***end++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._charIsMappingSeparator(aStr,***REMOVED***end))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***aStr.slice(index,***REMOVED***end);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment***REMOVED***=***REMOVED***cachedSegments[str];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***+=***REMOVED***str.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(index***REMOVED***<***REMOVED***end)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base64VLQ.decode(aStr,***REMOVED***index,***REMOVED***temp);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***temp.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***temp.rest;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***segment.push(value);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***2)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Found***REMOVED***a***REMOVED***source,***REMOVED***but***REMOVED***no***REMOVED***line***REMOVED***and***REMOVED***column');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***===***REMOVED***3)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Found***REMOVED***a***REMOVED***source***REMOVED***and***REMOVED***line,***REMOVED***but***REMOVED***no***REMOVED***column');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cachedSegments[str]***REMOVED***=***REMOVED***segment;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Generated***REMOVED***column.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.generatedColumn***REMOVED***=***REMOVED***previousGeneratedColumn***REMOVED***+***REMOVED***segment[0];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***>***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***source.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.source***REMOVED***=***REMOVED***previousSource***REMOVED***+***REMOVED***segment[1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousSource***REMOVED***+=***REMOVED***segment[1];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***line.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***=***REMOVED***previousOriginalLine***REMOVED***+***REMOVED***segment[2];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalLine***REMOVED***=***REMOVED***mapping.originalLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Lines***REMOVED***are***REMOVED***stored***REMOVED***0-based
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalLine***REMOVED***+=***REMOVED***1;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***column.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn***REMOVED***=***REMOVED***previousOriginalColumn***REMOVED***+***REMOVED***segment[3];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousOriginalColumn***REMOVED***=***REMOVED***mapping.originalColumn;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(segment.length***REMOVED***>***REMOVED***4)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Original***REMOVED***name.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.name***REMOVED***=***REMOVED***previousName***REMOVED***+***REMOVED***segment[4];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***previousName***REMOVED***+=***REMOVED***segment[4];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedMappings.push(mapping);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***mapping.originalLine***REMOVED***===***REMOVED***'number')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalMappings.push(mapping);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(generatedMappings,***REMOVED***util.compareByGeneratedPositionsDeflated);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings***REMOVED***=***REMOVED***generatedMappings;

	***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(originalMappings,***REMOVED***util.compareByOriginalPositions);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings***REMOVED***=***REMOVED***originalMappings;
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Find***REMOVED***the***REMOVED***mapping***REMOVED***that***REMOVED***best***REMOVED***matches***REMOVED***the***REMOVED***hypothetical***REMOVED***"needle"***REMOVED***mapping***REMOVED***that
	***REMOVED*******REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for***REMOVED***in***REMOVED***the***REMOVED***given***REMOVED***"haystack"***REMOVED***of***REMOVED***mappings.
	***REMOVED****/
	BasicSourceMapConsumer.prototype._findMapping***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_findMapping(aNeedle,***REMOVED***aMappings,***REMOVED***aLineName,
	aColumnName,***REMOVED***aComparator,***REMOVED***aBias)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***return***REMOVED***the***REMOVED***position***REMOVED***we***REMOVED***are***REMOVED***searching***REMOVED***for,***REMOVED***we***REMOVED***must***REMOVED***first***REMOVED***find***REMOVED***the
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mapping***REMOVED***for***REMOVED***the***REMOVED***given***REMOVED***position***REMOVED***and***REMOVED***then***REMOVED***return***REMOVED***the***REMOVED***opposite***REMOVED***position***REMOVED***it
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***points***REMOVED***to.***REMOVED***Because***REMOVED***the***REMOVED***mappings***REMOVED***are***REMOVED***sorted,***REMOVED***we***REMOVED***can***REMOVED***use***REMOVED***binary***REMOVED***search***REMOVED***to
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***find***REMOVED***the***REMOVED***best***REMOVED***mapping.

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aNeedle[aLineName]***REMOVED***<=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Line***REMOVED***must***REMOVED***be***REMOVED***greater***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***1,***REMOVED***got***REMOVED***'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***+***REMOVED***aNeedle[aLineName]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aNeedle[aColumnName]***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('Column***REMOVED***must***REMOVED***be***REMOVED***greater***REMOVED***than***REMOVED***or***REMOVED***equal***REMOVED***to***REMOVED***0,***REMOVED***got***REMOVED***'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***+***REMOVED***aNeedle[aColumnName]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***binarySearch.search(aNeedle,***REMOVED***aMappings,***REMOVED***aComparator,***REMOVED***aBias);
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Compute***REMOVED***the***REMOVED***last***REMOVED***column***REMOVED***for***REMOVED***each***REMOVED***generated***REMOVED***mapping.***REMOVED***The***REMOVED***last***REMOVED***column***REMOVED***is
	***REMOVED*******REMOVED***inclusive.
	***REMOVED****/
	BasicSourceMapConsumer.prototype.computeColumnSpans***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_computeColumnSpans()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***this._generatedMappings.length;***REMOVED***++index)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._generatedMappings[index];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Mappings***REMOVED***do***REMOVED***not***REMOVED***contain***REMOVED***a***REMOVED***field***REMOVED***for***REMOVED***the***REMOVED***last***REMOVED***generated***REMOVED***columnt.***REMOVED***We
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***come***REMOVED***up***REMOVED***with***REMOVED***an***REMOVED***optimistic***REMOVED***estimate,***REMOVED***however,***REMOVED***by***REMOVED***assuming***REMOVED***that
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***mappings***REMOVED***are***REMOVED***contiguous***REMOVED***(i.e.***REMOVED***given***REMOVED***two***REMOVED***consecutive***REMOVED***mappings,***REMOVED***the
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***first***REMOVED***mapping***REMOVED***ends***REMOVED***where***REMOVED***the***REMOVED***second***REMOVED***one***REMOVED***starts).
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***+***REMOVED***1***REMOVED***<***REMOVED***this._generatedMappings.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextMapping***REMOVED***=***REMOVED***this._generatedMappings[index***REMOVED***+***REMOVED***1];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.generatedLine***REMOVED***===***REMOVED***nextMapping.generatedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.lastGeneratedColumn***REMOVED***=***REMOVED***nextMapping.generatedColumn***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***last***REMOVED***mapping***REMOVED***for***REMOVED***each***REMOVED***line***REMOVED***spans***REMOVED***the***REMOVED***entire***REMOVED***line.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.lastGeneratedColumn***REMOVED***=***REMOVED***Infinity;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***generated
	***REMOVED*******REMOVED***source's***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object
	***REMOVED*******REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***bias:***REMOVED***Either***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'***REMOVED***or
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'SourceMapConsumer.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Defaults***REMOVED***to***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	***REMOVED****
	***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***original***REMOVED***source***REMOVED***file,***REMOVED***or***REMOVED***null.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***name:***REMOVED***The***REMOVED***original***REMOVED***identifier,***REMOVED***or***REMOVED***null.
	***REMOVED****/
	BasicSourceMapConsumer.prototype.originalPositionFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_originalPositionFor(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needle,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._generatedMappings,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"generatedLine",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"generatedColumn",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByGeneratedPositionsDeflated,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.getArg(aArgs,***REMOVED***'bias',***REMOVED***SourceMapConsumer.GREATEST_LOWER_BOUND)
	***REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._generatedMappings[index];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.generatedLine***REMOVED***===***REMOVED***needle.generatedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***util.getArg(mapping,***REMOVED***'source',***REMOVED***null);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***!==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._sources.at(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(this.sourceRoot,***REMOVED***source,***REMOVED***this._sourceMapURL);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***util.getArg(mapping,***REMOVED***'name',***REMOVED***null);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this._names.at(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'originalLine',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'originalColumn',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Return***REMOVED***true***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***every***REMOVED***source***REMOVED***in***REMOVED***the***REMOVED***source
	***REMOVED*******REMOVED***map,***REMOVED***false***REMOVED***otherwise.
	***REMOVED****/
	BasicSourceMapConsumer.prototype.hasContentsOfAllSources***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***BasicSourceMapConsumer_hasContentsOfAllSources()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.sourcesContent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent.length***REMOVED***>=***REMOVED***this._sources.size()***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.sourcesContent.some(function***REMOVED***(sc)***REMOVED***{***REMOVED***return***REMOVED***sc***REMOVED***==***REMOVED***null;***REMOVED***});
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***content.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***the***REMOVED***url***REMOVED***of***REMOVED***the
	***REMOVED*******REMOVED***original***REMOVED***source***REMOVED***file.***REMOVED***Returns***REMOVED***null***REMOVED***if***REMOVED***no***REMOVED***original***REMOVED***source***REMOVED***content***REMOVED***is
	***REMOVED*******REMOVED***available.
	***REMOVED****/
	BasicSourceMapConsumer.prototype.sourceContentFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_sourceContentFor(aSource,***REMOVED***nullOnMissing)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.sourcesContent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findSourceIndex(aSource);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[index];
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***relativeSource***REMOVED***=***REMOVED***aSource;
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***relativeSource***REMOVED***=***REMOVED***util.relative(this.sourceRoot,***REMOVED***relativeSource);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***url;
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.sourceRoot***REMOVED***!=***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***(url***REMOVED***=***REMOVED***util.urlParse(this.sourceRoot)))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***XXX:***REMOVED***file://***REMOVED***URIs***REMOVED***and***REMOVED***absolute***REMOVED***paths***REMOVED***lead***REMOVED***to***REMOVED***unexpected***REMOVED***behavior***REMOVED***for
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***many***REMOVED***users.***REMOVED***We***REMOVED***can***REMOVED***help***REMOVED***them***REMOVED***out***REMOVED***when***REMOVED***they***REMOVED***expect***REMOVED***file://***REMOVED***URIs***REMOVED***to
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***behave***REMOVED***like***REMOVED***it***REMOVED***would***REMOVED***if***REMOVED***they***REMOVED***were***REMOVED***running***REMOVED***a***REMOVED***local***REMOVED***HTTP***REMOVED***server.***REMOVED***See
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fileUriAbsPath***REMOVED***=***REMOVED***relativeSource.replace(/^file:\/\//,***REMOVED***"");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(url.scheme***REMOVED***==***REMOVED***"file"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***this._sources.has(fileUriAbsPath))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((!url.path***REMOVED***||***REMOVED***url.path***REMOVED***==***REMOVED***"/")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***this._sources.has("/"***REMOVED***+***REMOVED***relativeSource))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.sourcesContent[this._sources.indexOf("/"***REMOVED***+***REMOVED***relativeSource)];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***function***REMOVED***is***REMOVED***used***REMOVED***recursively***REMOVED***from
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***IndexedSourceMapConsumer.prototype.sourceContentFor.***REMOVED***In***REMOVED***that***REMOVED***case,***REMOVED***we
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***want***REMOVED***to***REMOVED***throw***REMOVED***if***REMOVED***we***REMOVED***can't***REMOVED***find***REMOVED***the***REMOVED***source***REMOVED***-***REMOVED***we***REMOVED***just***REMOVED***want***REMOVED***to
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***return***REMOVED***null,***REMOVED***so***REMOVED***we***REMOVED***provide***REMOVED***a***REMOVED***flag***REMOVED***to***REMOVED***exit***REMOVED***gracefully.
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nullOnMissing)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***relativeSource***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***SourceMap.');
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
	***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with
	***REMOVED*******REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***bias:***REMOVED***Either***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'***REMOVED***or
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'SourceMapConsumer.LEAST_UPPER_BOUND'.***REMOVED***Specifies***REMOVED***whether***REMOVED***to***REMOVED***return***REMOVED***the
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***closest***REMOVED***element***REMOVED***that***REMOVED***is***REMOVED***smaller***REMOVED***than***REMOVED***or***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***are
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searching***REMOVED***for,***REMOVED***respectively,***REMOVED***if***REMOVED***the***REMOVED***exact***REMOVED***element***REMOVED***cannot***REMOVED***be***REMOVED***found.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Defaults***REMOVED***to***REMOVED***'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	***REMOVED****
	***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****/
	BasicSourceMapConsumer.prototype.generatedPositionFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceMapConsumer_generatedPositionFor(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***util.getArg(aArgs,***REMOVED***'source');
	***REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._findSourceIndex(source);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***this._findMapping(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needle,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._originalMappings,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalLine",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"originalColumn",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.compareByOriginalPositions,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***util.getArg(aArgs,***REMOVED***'bias',***REMOVED***SourceMapConsumer.GREATEST_LOWER_BOUND)
	***REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***this._originalMappings[index];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.source***REMOVED***===***REMOVED***needle.source)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***util.getArg(mapping,***REMOVED***'generatedLine',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***util.getArg(mapping,***REMOVED***'generatedColumn',***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***util.getArg(mapping,***REMOVED***'lastGeneratedColumn',***REMOVED***null)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastColumn:***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***};

	sourceMapConsumer.BasicSourceMapConsumer***REMOVED***=***REMOVED***BasicSourceMapConsumer;

	/**
	***REMOVED*******REMOVED***An***REMOVED***IndexedSourceMapConsumer***REMOVED***instance***REMOVED***represents***REMOVED***a***REMOVED***parsed***REMOVED***source***REMOVED***map***REMOVED***which
	***REMOVED*******REMOVED***we***REMOVED***can***REMOVED***query***REMOVED***for***REMOVED***information.***REMOVED***It***REMOVED***differs***REMOVED***from***REMOVED***BasicSourceMapConsumer***REMOVED***in
	***REMOVED*******REMOVED***that***REMOVED***it***REMOVED***takes***REMOVED***"indexed"***REMOVED***source***REMOVED***maps***REMOVED***(i.e.***REMOVED***ones***REMOVED***with***REMOVED***a***REMOVED***"sections"***REMOVED***field)***REMOVED***as
	***REMOVED*******REMOVED***input.
	***REMOVED****
	***REMOVED*******REMOVED***The***REMOVED***first***REMOVED***parameter***REMOVED***is***REMOVED***a***REMOVED***raw***REMOVED***source***REMOVED***map***REMOVED***(either***REMOVED***as***REMOVED***a***REMOVED***JSON***REMOVED***string,***REMOVED***or***REMOVED***already
	***REMOVED*******REMOVED***parsed***REMOVED***to***REMOVED***an***REMOVED***object).***REMOVED***According***REMOVED***to***REMOVED***the***REMOVED***spec***REMOVED***for***REMOVED***indexed***REMOVED***source***REMOVED***maps,***REMOVED***they
	***REMOVED*******REMOVED***have***REMOVED***the***REMOVED***following***REMOVED***attributes:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***version:***REMOVED***Which***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec***REMOVED***this***REMOVED***map***REMOVED***is***REMOVED***following.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***file:***REMOVED***Optional.***REMOVED***The***REMOVED***generated***REMOVED***file***REMOVED***this***REMOVED***source***REMOVED***map***REMOVED***is***REMOVED***associated***REMOVED***with.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***sections:***REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***section***REMOVED***definitions.
	***REMOVED****
	***REMOVED*******REMOVED***Each***REMOVED***value***REMOVED***under***REMOVED***the***REMOVED***"sections"***REMOVED***field***REMOVED***has***REMOVED***two***REMOVED***fields:
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***offset:***REMOVED***The***REMOVED***offset***REMOVED***into***REMOVED***the***REMOVED***original***REMOVED***specified***REMOVED***at***REMOVED***which***REMOVED***this***REMOVED***section
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***begins***REMOVED***to***REMOVED***apply,***REMOVED***defined***REMOVED***as***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***a***REMOVED***"line"***REMOVED***and***REMOVED***"column"
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***field.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***map:***REMOVED***A***REMOVED***source***REMOVED***map***REMOVED***definition.***REMOVED***This***REMOVED***source***REMOVED***map***REMOVED***could***REMOVED***also***REMOVED***be***REMOVED***indexed,
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***but***REMOVED***doesn't***REMOVED***have***REMOVED***to***REMOVED***be.
	***REMOVED****
	***REMOVED*******REMOVED***Instead***REMOVED***of***REMOVED***the***REMOVED***"map"***REMOVED***field,***REMOVED***it's***REMOVED***also***REMOVED***possible***REMOVED***to***REMOVED***have***REMOVED***a***REMOVED***"url"***REMOVED***field
	***REMOVED*******REMOVED***specifying***REMOVED***a***REMOVED***URL***REMOVED***to***REMOVED***retrieve***REMOVED***a***REMOVED***source***REMOVED***map***REMOVED***from,***REMOVED***but***REMOVED***that's***REMOVED***currently
	***REMOVED*******REMOVED***unsupported.
	***REMOVED****
	***REMOVED*******REMOVED***Here's***REMOVED***an***REMOVED***example***REMOVED***source***REMOVED***map,***REMOVED***taken***REMOVED***from***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***spec[0],***REMOVED***but
	***REMOVED*******REMOVED***modified***REMOVED***to***REMOVED***omit***REMOVED***a***REMOVED***section***REMOVED***which***REMOVED***uses***REMOVED***the***REMOVED***"url"***REMOVED***field.
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED***{
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"app.js",
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***sections:***REMOVED***[{
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***{line:100,***REMOVED***column:10},
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***{
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version***REMOVED***:***REMOVED***3,
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***"section.js",
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***["foo.js",***REMOVED***"bar.js"],
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***["src",***REMOVED***"maps",***REMOVED***"are",***REMOVED***"fun"],
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***"AAAA,E;;ABCDE;"
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***}],
	***REMOVED*******REMOVED******REMOVED***}
	***REMOVED****
	***REMOVED*******REMOVED***The***REMOVED***second***REMOVED***parameter,***REMOVED***if***REMOVED***given,***REMOVED***is***REMOVED***a***REMOVED***string***REMOVED***whose***REMOVED***value***REMOVED***is***REMOVED***the***REMOVED***URL
	***REMOVED*******REMOVED***at***REMOVED***which***REMOVED***the***REMOVED***source***REMOVED***map***REMOVED***was***REMOVED***found.***REMOVED******REMOVED***This***REMOVED***URL***REMOVED***is***REMOVED***used***REMOVED***to***REMOVED***compute***REMOVED***the
	***REMOVED*******REMOVED***sources***REMOVED***array.
	***REMOVED****
	***REMOVED*******REMOVED***[0]:***REMOVED***https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
	***REMOVED****/
	function***REMOVED***IndexedSourceMapConsumer(aSourceMap,***REMOVED***aSourceMapURL)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***sourceMap***REMOVED***=***REMOVED***aSourceMap;
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***aSourceMap***REMOVED***===***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***util.parseSourceMapInput(aSourceMap);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***var***REMOVED***version***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'version');
	***REMOVED******REMOVED***var***REMOVED***sections***REMOVED***=***REMOVED***util.getArg(sourceMap,***REMOVED***'sections');

	***REMOVED******REMOVED***if***REMOVED***(version***REMOVED***!=***REMOVED***this._version)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unsupported***REMOVED***version:***REMOVED***'***REMOVED***+***REMOVED***version);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***this._sources***REMOVED***=***REMOVED***new***REMOVED***ArraySet();
	***REMOVED******REMOVED***this._names***REMOVED***=***REMOVED***new***REMOVED***ArraySet();

	***REMOVED******REMOVED***var***REMOVED***lastOffset***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***-1,
	***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***0
	***REMOVED******REMOVED***};
	***REMOVED******REMOVED***this._sections***REMOVED***=***REMOVED***sections.map(function***REMOVED***(s)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(s.url)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***url***REMOVED***field***REMOVED***will***REMOVED***require***REMOVED***support***REMOVED***for***REMOVED***asynchronicity.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***See***REMOVED***https://github.com/mozilla/source-map/issues/16
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Support***REMOVED***for***REMOVED***url***REMOVED***field***REMOVED***in***REMOVED***sections***REMOVED***not***REMOVED***implemented.');
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offset***REMOVED***=***REMOVED***util.getArg(s,***REMOVED***'offset');
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offsetLine***REMOVED***=***REMOVED***util.getArg(offset,***REMOVED***'line');
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***offsetColumn***REMOVED***=***REMOVED***util.getArg(offset,***REMOVED***'column');

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(offsetLine***REMOVED***<***REMOVED***lastOffset.line***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(offsetLine***REMOVED***===***REMOVED***lastOffset.line***REMOVED***&&***REMOVED***offsetColumn***REMOVED***<***REMOVED***lastOffset.column))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Section***REMOVED***offsets***REMOVED***must***REMOVED***be***REMOVED***ordered***REMOVED***and***REMOVED***non-overlapping.');
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***lastOffset***REMOVED***=***REMOVED***offset;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedOffset:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***offset***REMOVED***fields***REMOVED***are***REMOVED***0-based,***REMOVED***but***REMOVED***we***REMOVED***use***REMOVED***1-based***REMOVED***indices***REMOVED***when
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***encoding/decoding***REMOVED***from***REMOVED***VLQ.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***offsetLine***REMOVED***+***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***offsetColumn***REMOVED***+***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***consumer:***REMOVED***new***REMOVED***SourceMapConsumer(util.getArg(s,***REMOVED***'map'),***REMOVED***aSourceMapURL)
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***});
	}

	IndexedSourceMapConsumer.prototype***REMOVED***=***REMOVED***Object.create(SourceMapConsumer.prototype);
	IndexedSourceMapConsumer.prototype.constructor***REMOVED***=***REMOVED***SourceMapConsumer;

	/**
	***REMOVED*******REMOVED***The***REMOVED***version***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***mapping***REMOVED***spec***REMOVED***that***REMOVED***we***REMOVED***are***REMOVED***consuming.
	***REMOVED****/
	IndexedSourceMapConsumer.prototype._version***REMOVED***=***REMOVED***3;

	/**
	***REMOVED*******REMOVED***The***REMOVED***list***REMOVED***of***REMOVED***original***REMOVED***sources.
	***REMOVED****/
	Object.defineProperty(IndexedSourceMapConsumer.prototype,***REMOVED***'sources',***REMOVED***{
	***REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***this._sections[i].consumer.sources.length;***REMOVED***j++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sources.push(this._sections[i].consumer.sources[j]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sources;
	***REMOVED******REMOVED***}
	});

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***generated
	***REMOVED*******REMOVED***source's***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object
	***REMOVED*******REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****
	***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***original***REMOVED***source***REMOVED***file,***REMOVED***or***REMOVED***null.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***name:***REMOVED***The***REMOVED***original***REMOVED***identifier,***REMOVED***or***REMOVED***null.
	***REMOVED****/
	IndexedSourceMapConsumer.prototype.originalPositionFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_originalPositionFor(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***needle***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***util.getArg(aArgs,***REMOVED***'line'),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***util.getArg(aArgs,***REMOVED***'column')
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***the***REMOVED***section***REMOVED***containing***REMOVED***the***REMOVED***generated***REMOVED***position***REMOVED***we're***REMOVED***trying***REMOVED***to***REMOVED***map
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***an***REMOVED***original***REMOVED***position.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sectionIndex***REMOVED***=***REMOVED***binarySearch.search(needle,***REMOVED***this._sections,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function(needle,***REMOVED***section)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cmp***REMOVED***=***REMOVED***needle.generatedLine***REMOVED***-***REMOVED***section.generatedOffset.generatedLine;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cmp)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cmp;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(needle.generatedColumn***REMOVED***-
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***section.generatedOffset.generatedColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[sectionIndex];

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!section)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***section.consumer.originalPositionFor({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***needle.generatedLine***REMOVED***-
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***needle.generatedColumn***REMOVED***-
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***needle.generatedLine
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bias:***REMOVED***aArgs.bias
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Return***REMOVED***true***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***every***REMOVED***source***REMOVED***in***REMOVED***the***REMOVED***source
	***REMOVED*******REMOVED***map,***REMOVED***false***REMOVED***otherwise.
	***REMOVED****/
	IndexedSourceMapConsumer.prototype.hasContentsOfAllSources***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_hasContentsOfAllSources()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._sections.every(function***REMOVED***(s)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s.consumer.hasContentsOfAllSources();
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***content.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***the***REMOVED***url***REMOVED***of***REMOVED***the
	***REMOVED*******REMOVED***original***REMOVED***source***REMOVED***file.***REMOVED***Returns***REMOVED***null***REMOVED***if***REMOVED***no***REMOVED***original***REMOVED***source***REMOVED***content***REMOVED***is
	***REMOVED*******REMOVED***available.
	***REMOVED****/
	IndexedSourceMapConsumer.prototype.sourceContentFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_sourceContentFor(aSource,***REMOVED***nullOnMissing)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***section.consumer.sourceContentFor(aSource,***REMOVED***true);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nullOnMissing)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('"'***REMOVED***+***REMOVED***aSource***REMOVED***+***REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***SourceMap.');
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***generated***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***information***REMOVED***for***REMOVED***the***REMOVED***original***REMOVED***source,
	***REMOVED*******REMOVED***line,***REMOVED***and***REMOVED***column***REMOVED***positions***REMOVED***provided.***REMOVED***The***REMOVED***only***REMOVED***argument***REMOVED***is***REMOVED***an***REMOVED***object***REMOVED***with
	***REMOVED*******REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***source:***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***original***REMOVED***source.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***line***REMOVED***number
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***is***REMOVED***1-based.
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***original***REMOVED***source.***REMOVED******REMOVED***The***REMOVED***column
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****
	***REMOVED*******REMOVED***and***REMOVED***an***REMOVED***object***REMOVED***is***REMOVED***returned***REMOVED***with***REMOVED***the***REMOVED***following***REMOVED***properties:
	***REMOVED****
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***line:***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.***REMOVED******REMOVED***The
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***number***REMOVED***is***REMOVED***1-based.***REMOVED***
	***REMOVED*******REMOVED******REMOVED******REMOVED***-***REMOVED***column:***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***in***REMOVED***the***REMOVED***generated***REMOVED***source,***REMOVED***or***REMOVED***null.
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***is***REMOVED***0-based.
	***REMOVED****/
	IndexedSourceMapConsumer.prototype.generatedPositionFor***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_generatedPositionFor(aArgs)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***consider***REMOVED***this***REMOVED***section***REMOVED***if***REMOVED***the***REMOVED***requested***REMOVED***source***REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***list***REMOVED***of
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***sources***REMOVED***of***REMOVED***the***REMOVED***consumer.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(section.consumer._findSourceIndex(util.getArg(aArgs,***REMOVED***'source'))***REMOVED***===***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***generatedPosition***REMOVED***=***REMOVED***section.consumer.generatedPositionFor(aArgs);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(generatedPosition)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ret***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generatedPosition.line***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generatedPosition.column***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***generatedPosition.line
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Parse***REMOVED***the***REMOVED***mappings***REMOVED***in***REMOVED***a***REMOVED***string***REMOVED***in***REMOVED***to***REMOVED***a***REMOVED***data***REMOVED***structure***REMOVED***which***REMOVED***we***REMOVED***can***REMOVED***easily
	***REMOVED*******REMOVED***query***REMOVED***(the***REMOVED***ordered***REMOVED***arrays***REMOVED***in***REMOVED***the***REMOVED***`this.__generatedMappings`***REMOVED***and
	***REMOVED*******REMOVED***`this.__originalMappings`***REMOVED***properties).
	***REMOVED****/
	IndexedSourceMapConsumer.prototype._parseMappings***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***IndexedSourceMapConsumer_parseMappings(aStr,***REMOVED***aSourceRoot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this._sections.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***section***REMOVED***=***REMOVED***this._sections[i];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sectionMappings***REMOVED***=***REMOVED***section.consumer._generatedMappings;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***sectionMappings.length;***REMOVED***j++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***mapping***REMOVED***=***REMOVED***sectionMappings[j];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***section.consumer._sources.at(mapping.source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***util.computeSourceURL(section.consumer.sourceRoot,***REMOVED***source,***REMOVED***this._sourceMapURL);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._sources.add(source);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source***REMOVED***=***REMOVED***this._sources.indexOf(source);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping.name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***section.consumer._names.at(mapping.name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._names.add(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***this._names.indexOf(name);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***mappings***REMOVED***coming***REMOVED***from***REMOVED***the***REMOVED***consumer***REMOVED***for***REMOVED***the***REMOVED***section***REMOVED***have
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***generated***REMOVED***positions***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***section,***REMOVED***so***REMOVED***we
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***need***REMOVED***to***REMOVED***offset***REMOVED***them***REMOVED***to***REMOVED***be***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***concatenated
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***generated***REMOVED***file.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***adjustedMapping***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***mapping.generatedLine***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***-***REMOVED***1),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***mapping.generatedColumn***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(section.generatedOffset.generatedLine***REMOVED***===***REMOVED***mapping.generatedLine
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***section.generatedOffset.generatedColumn***REMOVED***-***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***mapping.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***mapping.originalColumn,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.__generatedMappings.push(adjustedMapping);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***adjustedMapping.originalLine***REMOVED***===***REMOVED***'number')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.__originalMappings.push(adjustedMapping);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(this.__generatedMappings,***REMOVED***util.compareByGeneratedPositionsDeflated);
	***REMOVED******REMOVED******REMOVED******REMOVED***quickSort(this.__originalMappings,***REMOVED***util.compareByOriginalPositions);
	***REMOVED******REMOVED***};

	sourceMapConsumer.IndexedSourceMapConsumer***REMOVED***=***REMOVED***IndexedSourceMapConsumer;
	return***REMOVED***sourceMapConsumer;
}

var***REMOVED***sourceNode***REMOVED***=***REMOVED***{};

/****REMOVED***-*-***REMOVED***Mode:***REMOVED***js;***REMOVED***js-indent-level:***REMOVED***2;***REMOVED***-*-***REMOVED****/

var***REMOVED***hasRequiredSourceNode;

function***REMOVED***requireSourceNode***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSourceNode)***REMOVED***return***REMOVED***sourceNode;
	hasRequiredSourceNode***REMOVED***=***REMOVED***1;
	/*
	***REMOVED*******REMOVED***Copyright***REMOVED***2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
	***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE***REMOVED***or:
	***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
	***REMOVED****/

	var***REMOVED***SourceMapGenerator***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSourceMapGenerator().SourceMapGenerator;
	var***REMOVED***util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil$1();

	//***REMOVED***Matches***REMOVED***a***REMOVED***Windows-style***REMOVED***`\r\n`***REMOVED***newline***REMOVED***or***REMOVED***a***REMOVED***`\n`***REMOVED***newline***REMOVED***used***REMOVED***by***REMOVED***all***REMOVED***other
	//***REMOVED***operating***REMOVED***systems***REMOVED***these***REMOVED***days***REMOVED***(capturing***REMOVED***the***REMOVED***result).
	var***REMOVED***REGEX_NEWLINE***REMOVED***=***REMOVED***/(\r?\n)/;

	//***REMOVED***Newline***REMOVED***character***REMOVED***code***REMOVED***for***REMOVED***charCodeAt()***REMOVED***comparisons
	var***REMOVED***NEWLINE_CODE***REMOVED***=***REMOVED***10;

	//***REMOVED***Private***REMOVED***symbol***REMOVED***for***REMOVED***identifying***REMOVED***`SourceNode`s***REMOVED***when***REMOVED***multiple***REMOVED***versions***REMOVED***of
	//***REMOVED***the***REMOVED***source-map***REMOVED***library***REMOVED***are***REMOVED***loaded.***REMOVED***This***REMOVED***MUST***REMOVED***NOT***REMOVED***CHANGE***REMOVED***across
	//***REMOVED***versions!
	var***REMOVED***isSourceNode***REMOVED***=***REMOVED***"$$$isSourceNode$$$";

	/**
	***REMOVED*******REMOVED***SourceNodes***REMOVED***provide***REMOVED***a***REMOVED***way***REMOVED***to***REMOVED***abstract***REMOVED***over***REMOVED***interpolating/concatenating
	***REMOVED*******REMOVED***snippets***REMOVED***of***REMOVED***generated***REMOVED***JavaScript***REMOVED***source***REMOVED***code***REMOVED***while***REMOVED***maintaining***REMOVED***the***REMOVED***line***REMOVED***and
	***REMOVED*******REMOVED***column***REMOVED***information***REMOVED***associated***REMOVED***with***REMOVED***the***REMOVED***original***REMOVED***source***REMOVED***code.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aLine***REMOVED***The***REMOVED***original***REMOVED***line***REMOVED***number.
	***REMOVED*******REMOVED***@param***REMOVED***aColumn***REMOVED***The***REMOVED***original***REMOVED***column***REMOVED***number.
	***REMOVED*******REMOVED***@param***REMOVED***aSource***REMOVED***The***REMOVED***original***REMOVED***source's***REMOVED***filename.
	***REMOVED*******REMOVED***@param***REMOVED***aChunks***REMOVED***Optional.***REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***strings***REMOVED***which***REMOVED***are***REMOVED***snippets***REMOVED***of
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated***REMOVED***JS,***REMOVED***or***REMOVED***other***REMOVED***SourceNodes.
	***REMOVED*******REMOVED***@param***REMOVED***aName***REMOVED***The***REMOVED***original***REMOVED***identifier.
	***REMOVED****/
	function***REMOVED***SourceNode(aLine,***REMOVED***aColumn,***REMOVED***aSource,***REMOVED***aChunks,***REMOVED***aName)***REMOVED***{
	***REMOVED******REMOVED***this.children***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***this.sourceContents***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED***this.line***REMOVED***=***REMOVED***aLine***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aLine;
	***REMOVED******REMOVED***this.column***REMOVED***=***REMOVED***aColumn***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aColumn;
	***REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***aSource***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aSource;
	***REMOVED******REMOVED***this.name***REMOVED***=***REMOVED***aName***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***aName;
	***REMOVED******REMOVED***this[isSourceNode]***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED***if***REMOVED***(aChunks***REMOVED***!=***REMOVED***null)***REMOVED***this.add(aChunks);
	}

	/**
	***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***SourceNode***REMOVED***from***REMOVED***generated***REMOVED***code***REMOVED***and***REMOVED***a***REMOVED***SourceMapConsumer.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aGeneratedCode***REMOVED***The***REMOVED***generated***REMOVED***code
	***REMOVED*******REMOVED***@param***REMOVED***aSourceMapConsumer***REMOVED***The***REMOVED***SourceMap***REMOVED***for***REMOVED***the***REMOVED***generated***REMOVED***code
	***REMOVED*******REMOVED***@param***REMOVED***aRelativePath***REMOVED***Optional.***REMOVED***The***REMOVED***path***REMOVED***that***REMOVED***relative***REMOVED***sources***REMOVED***in***REMOVED***the
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceMapConsumer***REMOVED***should***REMOVED***be***REMOVED***relative***REMOVED***to.
	***REMOVED****/
	SourceNode.fromStringWithSourceMap***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceNode_fromStringWithSourceMap(aGeneratedCode,***REMOVED***aSourceMapConsumer,***REMOVED***aRelativePath)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***SourceNode***REMOVED***we***REMOVED***want***REMOVED***to***REMOVED***fill***REMOVED***with***REMOVED***the***REMOVED***generated***REMOVED***code
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***the***REMOVED***SourceMap
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***SourceNode();

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***even***REMOVED***indices***REMOVED***of***REMOVED***this***REMOVED***array***REMOVED***are***REMOVED***one***REMOVED***line***REMOVED***of***REMOVED***the***REMOVED***generated***REMOVED***code,
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***while***REMOVED***all***REMOVED***odd***REMOVED***indices***REMOVED***are***REMOVED***the***REMOVED***newlines***REMOVED***between***REMOVED***two***REMOVED***adjacent***REMOVED***lines
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(since***REMOVED***`REGEX_NEWLINE`***REMOVED***captures***REMOVED***its***REMOVED***match).
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Processed***REMOVED***fragments***REMOVED***are***REMOVED***accessed***REMOVED***by***REMOVED***calling***REMOVED***`shiftNextLine`.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***remainingLines***REMOVED***=***REMOVED***aGeneratedCode.split(REGEX_NEWLINE);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***remainingLinesIndex***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***shiftNextLine***REMOVED***=***REMOVED***function()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lineContents***REMOVED***=***REMOVED***getNextLine();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***last***REMOVED***line***REMOVED***of***REMOVED***a***REMOVED***file***REMOVED***might***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***newline.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***newLine***REMOVED***=***REMOVED***getNextLine()***REMOVED***||***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lineContents***REMOVED***+***REMOVED***newLine;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***getNextLine()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***remainingLinesIndex***REMOVED***<***REMOVED***remainingLines.length***REMOVED***?
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex++]***REMOVED***:***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***remember***REMOVED***the***REMOVED***position***REMOVED***of***REMOVED***"remainingLines"
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastGeneratedLine***REMOVED***=***REMOVED***1,***REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***0;

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***generate***REMOVED***SourceNodes***REMOVED***we***REMOVED***need***REMOVED***a***REMOVED***code***REMOVED***range.
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***extract***REMOVED***it***REMOVED***current***REMOVED***and***REMOVED***last***REMOVED***mapping***REMOVED***is***REMOVED***used.
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Here***REMOVED***we***REMOVED***store***REMOVED***the***REMOVED***last***REMOVED***mapping.
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastMapping***REMOVED***=***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.eachMapping(function***REMOVED***(mapping)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastMapping***REMOVED***!==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***add***REMOVED***the***REMOVED***code***REMOVED***from***REMOVED***"lastMapping"***REMOVED***to***REMOVED***"mapping":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***First***REMOVED***check***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***new***REMOVED***line***REMOVED***in***REMOVED***between.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastGeneratedLine***REMOVED***<***REMOVED***mapping.generatedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***first***REMOVED***line***REMOVED***with***REMOVED***"lastMapping"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***shiftNextLine());
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedLine++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***remaining***REMOVED***code***REMOVED***is***REMOVED***added***REMOVED***without***REMOVED***mapping
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***There***REMOVED***is***REMOVED***no***REMOVED***new***REMOVED***line***REMOVED***in***REMOVED***between.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***the***REMOVED***code***REMOVED***between***REMOVED***"lastGeneratedColumn"***REMOVED***and
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"mapping.generatedColumn"***REMOVED***with***REMOVED***"lastMapping"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextLine***REMOVED***=***REMOVED***remainingLines[remainingLinesIndex]***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***nextLine.substr(0,***REMOVED***mapping.generatedColumn***REMOVED***-
	lastGeneratedColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex]***REMOVED***=***REMOVED***nextLine.substr(mapping.generatedColumn***REMOVED***-
	lastGeneratedColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***code);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***No***REMOVED***more***REMOVED***remaining***REMOVED***code,***REMOVED***continue
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastMapping***REMOVED***=***REMOVED***mapping;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***add***REMOVED***the***REMOVED***generated***REMOVED***code***REMOVED***until***REMOVED***the***REMOVED***first***REMOVED***mapping
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***the***REMOVED***SourceNode***REMOVED***without***REMOVED***any***REMOVED***mapping.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Each***REMOVED***line***REMOVED***is***REMOVED***added***REMOVED***as***REMOVED***separate***REMOVED***string.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(lastGeneratedLine***REMOVED***<***REMOVED***mapping.generatedLine)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(shiftNextLine());
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedLine++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastGeneratedColumn***REMOVED***<***REMOVED***mapping.generatedColumn)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextLine***REMOVED***=***REMOVED***remainingLines[remainingLinesIndex]***REMOVED***||***REMOVED***'';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(nextLine.substr(0,***REMOVED***mapping.generatedColumn));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remainingLines[remainingLinesIndex]***REMOVED***=***REMOVED***nextLine.substr(mapping.generatedColumn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastGeneratedColumn***REMOVED***=***REMOVED***mapping.generatedColumn;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastMapping***REMOVED***=***REMOVED***mapping;
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***have***REMOVED***processed***REMOVED***all***REMOVED***mappings.
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(remainingLinesIndex***REMOVED***<***REMOVED***remainingLines.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastMapping)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Associate***REMOVED***the***REMOVED***remaining***REMOVED***code***REMOVED***in***REMOVED***the***REMOVED***current***REMOVED***line***REMOVED***with***REMOVED***"lastMapping"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addMappingWithCode(lastMapping,***REMOVED***shiftNextLine());
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***add***REMOVED***the***REMOVED***remaining***REMOVED***lines***REMOVED***without***REMOVED***any***REMOVED***mapping
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(remainingLines.splice(remainingLinesIndex).join(""));
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Copy***REMOVED***sourcesContent***REMOVED***into***REMOVED***SourceNode
	***REMOVED******REMOVED******REMOVED******REMOVED***aSourceMapConsumer.sources.forEach(function***REMOVED***(sourceFile)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***aSourceMapConsumer.sourceContentFor(sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aRelativePath***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceFile***REMOVED***=***REMOVED***util.join(aRelativePath,***REMOVED***sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.setSourceContent(sourceFile,***REMOVED***content);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;

	***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***addMappingWithCode(mapping,***REMOVED***code)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mapping***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***mapping.source***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(code);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***aRelativePath
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***util.join(aRelativePath,***REMOVED***mapping.source)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***mapping.source;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.add(new***REMOVED***SourceNode(mapping.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.originalColumn,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mapping.name));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***to***REMOVED***this***REMOVED***source***REMOVED***node.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aChunk***REMOVED***A***REMOVED***string***REMOVED***snippet***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***code,***REMOVED***another***REMOVED***instance***REMOVED***of
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceNode,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***where***REMOVED***each***REMOVED***member***REMOVED***is***REMOVED***one***REMOVED***of***REMOVED***those***REMOVED***things.
	***REMOVED****/
	SourceNode.prototype.add***REMOVED***=***REMOVED***function***REMOVED***SourceNode_add(aChunk)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(Array.isArray(aChunk))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***aChunk.forEach(function***REMOVED***(chunk)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.add(chunk);
	***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aChunk[isSourceNode]***REMOVED***||***REMOVED***typeof***REMOVED***aChunk***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aChunk)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.children.push(aChunk);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Expected***REMOVED***a***REMOVED***SourceNode,***REMOVED***string,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***SourceNodes***REMOVED***and***REMOVED***strings.***REMOVED***Got***REMOVED***"***REMOVED***+***REMOVED***aChunk
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***this;
	};

	/**
	***REMOVED*******REMOVED***Add***REMOVED***a***REMOVED***chunk***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***to***REMOVED***the***REMOVED***beginning***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aChunk***REMOVED***A***REMOVED***string***REMOVED***snippet***REMOVED***of***REMOVED***generated***REMOVED***JS***REMOVED***code,***REMOVED***another***REMOVED***instance***REMOVED***of
	***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SourceNode,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***where***REMOVED***each***REMOVED***member***REMOVED***is***REMOVED***one***REMOVED***of***REMOVED***those***REMOVED***things.
	***REMOVED****/
	SourceNode.prototype.prepend***REMOVED***=***REMOVED***function***REMOVED***SourceNode_prepend(aChunk)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(Array.isArray(aChunk))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***aChunk.length-1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prepend(aChunk[i]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(aChunk[isSourceNode]***REMOVED***||***REMOVED***typeof***REMOVED***aChunk***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.children.unshift(aChunk);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Expected***REMOVED***a***REMOVED***SourceNode,***REMOVED***string,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***SourceNodes***REMOVED***and***REMOVED***strings.***REMOVED***Got***REMOVED***"***REMOVED***+***REMOVED***aChunk
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***this;
	};

	/**
	***REMOVED*******REMOVED***Walk***REMOVED***over***REMOVED***the***REMOVED***tree***REMOVED***of***REMOVED***JS***REMOVED***snippets***REMOVED***in***REMOVED***this***REMOVED***node***REMOVED***and***REMOVED***its***REMOVED***children.***REMOVED***The
	***REMOVED*******REMOVED***walking***REMOVED***function***REMOVED***is***REMOVED***called***REMOVED***once***REMOVED***for***REMOVED***each***REMOVED***snippet***REMOVED***of***REMOVED***JS***REMOVED***and***REMOVED***is***REMOVED***passed***REMOVED***that
	***REMOVED*******REMOVED***snippet***REMOVED***and***REMOVED***the***REMOVED***its***REMOVED***original***REMOVED***associated***REMOVED***source's***REMOVED***line/column***REMOVED***location.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aFn***REMOVED***The***REMOVED***traversal***REMOVED***function.
	***REMOVED****/
	SourceNode.prototype.walk***REMOVED***=***REMOVED***function***REMOVED***SourceNode_walk(aFn)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***chunk;
	***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***this.children.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***chunk***REMOVED***=***REMOVED***this.children[i];
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk[isSourceNode])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunk.walk(aFn);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk***REMOVED***!==***REMOVED***'')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aFn(chunk,***REMOVED***{***REMOVED***source:***REMOVED***this.source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***this.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***this.column,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***this.name***REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	};

	/**
	***REMOVED*******REMOVED***Like***REMOVED***`String.prototype.join`***REMOVED***except***REMOVED***for***REMOVED***SourceNodes.***REMOVED***Inserts***REMOVED***`aStr`***REMOVED***between
	***REMOVED*******REMOVED***each***REMOVED***of***REMOVED***`this.children`.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aSep***REMOVED***The***REMOVED***separator.
	***REMOVED****/
	SourceNode.prototype.join***REMOVED***=***REMOVED***function***REMOVED***SourceNode_join(aSep)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***newChildren;
	***REMOVED******REMOVED***var***REMOVED***i;
	***REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***this.children.length;
	***REMOVED******REMOVED***if***REMOVED***(len***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***newChildren***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len-1;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(this.children[i]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(aSep);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***newChildren.push(this.children[i]);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.children***REMOVED***=***REMOVED***newChildren;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***this;
	};

	/**
	***REMOVED*******REMOVED***Call***REMOVED***String.prototype.replace***REMOVED***on***REMOVED***the***REMOVED***very***REMOVED***right-most***REMOVED***source***REMOVED***snippet.***REMOVED***Useful
	***REMOVED*******REMOVED***for***REMOVED***trimming***REMOVED***whitespace***REMOVED***from***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***source***REMOVED***node,***REMOVED***etc.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aPattern***REMOVED***The***REMOVED***pattern***REMOVED***to***REMOVED***replace.
	***REMOVED*******REMOVED***@param***REMOVED***aReplacement***REMOVED***The***REMOVED***thing***REMOVED***to***REMOVED***replace***REMOVED***the***REMOVED***pattern***REMOVED***with.
	***REMOVED****/
	SourceNode.prototype.replaceRight***REMOVED***=***REMOVED***function***REMOVED***SourceNode_replaceRight(aPattern,***REMOVED***aReplacement)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***lastChild***REMOVED***=***REMOVED***this.children[this.children.length***REMOVED***-***REMOVED***1];
	***REMOVED******REMOVED***if***REMOVED***(lastChild[isSourceNode])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***lastChild.replaceRight(aPattern,***REMOVED***aReplacement);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***lastChild***REMOVED***===***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.children[this.children.length***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***lastChild.replace(aPattern,***REMOVED***aReplacement);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.children.push(''.replace(aPattern,***REMOVED***aReplacement));
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***this;
	};

	/**
	***REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***source***REMOVED***content***REMOVED***for***REMOVED***a***REMOVED***source***REMOVED***file.***REMOVED***This***REMOVED***will***REMOVED***be***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***SourceMapGenerator
	***REMOVED*******REMOVED***in***REMOVED***the***REMOVED***sourcesContent***REMOVED***field.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aSourceFile***REMOVED***The***REMOVED***filename***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***file
	***REMOVED*******REMOVED***@param***REMOVED***aSourceContent***REMOVED***The***REMOVED***content***REMOVED***of***REMOVED***the***REMOVED***source***REMOVED***file
	***REMOVED****/
	SourceNode.prototype.setSourceContent***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceNode_setSourceContent(aSourceFile,***REMOVED***aSourceContent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.sourceContents[util.toSetString(aSourceFile)]***REMOVED***=***REMOVED***aSourceContent;
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Walk***REMOVED***over***REMOVED***the***REMOVED***tree***REMOVED***of***REMOVED***SourceNodes.***REMOVED***The***REMOVED***walking***REMOVED***function***REMOVED***is***REMOVED***called***REMOVED***for***REMOVED***each
	***REMOVED*******REMOVED***source***REMOVED***file***REMOVED***content***REMOVED***and***REMOVED***is***REMOVED***passed***REMOVED***the***REMOVED***filename***REMOVED***and***REMOVED***source***REMOVED***content.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***aFn***REMOVED***The***REMOVED***traversal***REMOVED***function.
	***REMOVED****/
	SourceNode.prototype.walkSourceContents***REMOVED***=
	***REMOVED******REMOVED***function***REMOVED***SourceNode_walkSourceContents(aFn)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***this.children.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.children[i][isSourceNode])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.children[i].walkSourceContents(aFn);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sources***REMOVED***=***REMOVED***Object.keys(this.sourceContents);
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***len***REMOVED***=***REMOVED***sources.length;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aFn(util.fromSetString(sources[i]),***REMOVED***this.sourceContents[sources[i]]);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***};

	/**
	***REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***string***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node.***REMOVED***Walks***REMOVED***over***REMOVED***the***REMOVED***tree
	***REMOVED*******REMOVED***and***REMOVED***concatenates***REMOVED***all***REMOVED***the***REMOVED***various***REMOVED***snippets***REMOVED***together***REMOVED***to***REMOVED***one***REMOVED***string.
	***REMOVED****/
	SourceNode.prototype.toString***REMOVED***=***REMOVED***function***REMOVED***SourceNode_toString()***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***this.walk(function***REMOVED***(chunk)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***+=***REMOVED***chunk;
	***REMOVED******REMOVED***});
	***REMOVED******REMOVED***return***REMOVED***str;
	};

	/**
	***REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***string***REMOVED***representation***REMOVED***of***REMOVED***this***REMOVED***source***REMOVED***node***REMOVED***along***REMOVED***with***REMOVED***a***REMOVED***source
	***REMOVED*******REMOVED***map.
	***REMOVED****/
	SourceNode.prototype.toStringWithSourceMap***REMOVED***=***REMOVED***function***REMOVED***SourceNode_toStringWithSourceMap(aArgs)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***generated***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***"",
	***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***0
	***REMOVED******REMOVED***};
	***REMOVED******REMOVED***var***REMOVED***map***REMOVED***=***REMOVED***new***REMOVED***SourceMapGenerator(aArgs);
	***REMOVED******REMOVED***var***REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED***var***REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***var***REMOVED***lastOriginalLine***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***var***REMOVED***lastOriginalColumn***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***var***REMOVED***lastOriginalName***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED***this.walk(function***REMOVED***(chunk,***REMOVED***original)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***generated.code***REMOVED***+=***REMOVED***chunk;
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(original.source***REMOVED***!==***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***original.line***REMOVED***!==***REMOVED***null
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***&&***REMOVED***original.column***REMOVED***!==***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if(lastOriginalSource***REMOVED***!==***REMOVED***original.source
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalLine***REMOVED***!==***REMOVED***original.line
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalColumn***REMOVED***!==***REMOVED***original.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***||***REMOVED***lastOriginalName***REMOVED***!==***REMOVED***original.name)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***original.source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***original.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***original.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***original.name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***original.source;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalLine***REMOVED***=***REMOVED***original.line;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalColumn***REMOVED***=***REMOVED***original.column;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalName***REMOVED***=***REMOVED***original.name;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(sourceMappingActive)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***idx***REMOVED***=***REMOVED***0,***REMOVED***length***REMOVED***=***REMOVED***chunk.length;***REMOVED***idx***REMOVED***<***REMOVED***length;***REMOVED***idx++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(chunk.charCodeAt(idx)***REMOVED***===***REMOVED***NEWLINE_CODE)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.line++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.column***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Mappings***REMOVED***end***REMOVED***at***REMOVED***eol
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***+***REMOVED***1***REMOVED***===***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastOriginalSource***REMOVED***=***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMappingActive***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(sourceMappingActive)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map.addMapping({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***original.source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***original.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***original.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***generated.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***generated.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***original.name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated.column++;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***});
	***REMOVED******REMOVED***this.walkSourceContents(function***REMOVED***(sourceFile,***REMOVED***sourceContent)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***map.setSourceContent(sourceFile,***REMOVED***sourceContent);
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***generated.code,***REMOVED***map:***REMOVED***map***REMOVED***};
	};

	sourceNode.SourceNode***REMOVED***=***REMOVED***SourceNode;
	return***REMOVED***sourceNode;
}

/*
***REMOVED*******REMOVED***Copyright***REMOVED***2009-2011***REMOVED***Mozilla***REMOVED***Foundation***REMOVED***and***REMOVED***contributors
***REMOVED*******REMOVED***Licensed***REMOVED***under***REMOVED***the***REMOVED***New***REMOVED***BSD***REMOVED***license.***REMOVED***See***REMOVED***LICENSE.txt***REMOVED***or:
***REMOVED*******REMOVED***http://opensource.org/licenses/BSD-3-Clause
***REMOVED****/

var***REMOVED***hasRequiredSourceMap;

function***REMOVED***requireSourceMap***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSourceMap)***REMOVED***return***REMOVED***sourceMap;
	hasRequiredSourceMap***REMOVED***=***REMOVED***1;
	sourceMap.SourceMapGenerator***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSourceMapGenerator().SourceMapGenerator;
	sourceMap.SourceMapConsumer***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSourceMapConsumer().SourceMapConsumer;
	sourceMap.SourceNode***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSourceNode().SourceNode;
	return***REMOVED***sourceMap;
}

var***REMOVED***mergeSourceMap;
var***REMOVED***hasRequiredMergeSourceMap;

function***REMOVED***requireMergeSourceMap***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredMergeSourceMap)***REMOVED***return***REMOVED***mergeSourceMap;
	hasRequiredMergeSourceMap***REMOVED***=***REMOVED***1;
	var***REMOVED***sourceMap***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSourceMap();
	var***REMOVED***SourceMapConsumer***REMOVED***=***REMOVED***sourceMap.SourceMapConsumer;
	var***REMOVED***SourceMapGenerator***REMOVED***=***REMOVED***sourceMap.SourceMapGenerator;

	mergeSourceMap***REMOVED***=***REMOVED***merge;

	/**
	***REMOVED*******REMOVED***Merge***REMOVED***old***REMOVED***source***REMOVED***map***REMOVED***and***REMOVED***new***REMOVED***source***REMOVED***map***REMOVED***and***REMOVED***return***REMOVED***merged.
	***REMOVED*******REMOVED***If***REMOVED***old***REMOVED***or***REMOVED***new***REMOVED***source***REMOVED***map***REMOVED***value***REMOVED***is***REMOVED***falsy,***REMOVED***return***REMOVED***another***REMOVED***one***REMOVED***as***REMOVED***it***REMOVED***is.
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{object|string}***REMOVED***[oldMap]***REMOVED***old***REMOVED***source***REMOVED***map***REMOVED***object
	***REMOVED*******REMOVED***@param***REMOVED***{object|string}***REMOVED***[newmap]***REMOVED***new***REMOVED***source***REMOVED***map***REMOVED***object
	***REMOVED*******REMOVED***@return***REMOVED***{object|undefined}***REMOVED***merged***REMOVED***source***REMOVED***map***REMOVED***object,***REMOVED***or***REMOVED***undefined***REMOVED***when***REMOVED***both***REMOVED***old***REMOVED***and***REMOVED***new***REMOVED***source***REMOVED***map***REMOVED***are***REMOVED***undefined
	***REMOVED****/
	function***REMOVED***merge(oldMap,***REMOVED***newMap)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!oldMap)***REMOVED***return***REMOVED***newMap
	***REMOVED******REMOVED***if***REMOVED***(!newMap)***REMOVED***return***REMOVED***oldMap

	***REMOVED******REMOVED***var***REMOVED***oldMapConsumer***REMOVED***=***REMOVED***new***REMOVED***SourceMapConsumer(oldMap);
	***REMOVED******REMOVED***var***REMOVED***newMapConsumer***REMOVED***=***REMOVED***new***REMOVED***SourceMapConsumer(newMap);
	***REMOVED******REMOVED***var***REMOVED***mergedMapGenerator***REMOVED***=***REMOVED***new***REMOVED***SourceMapGenerator();

	***REMOVED******REMOVED***//***REMOVED***iterate***REMOVED***on***REMOVED***new***REMOVED***map***REMOVED***and***REMOVED***overwrite***REMOVED***original***REMOVED***position***REMOVED***of***REMOVED***new***REMOVED***map***REMOVED***with***REMOVED***one***REMOVED***of***REMOVED***old***REMOVED***map
	***REMOVED******REMOVED***newMapConsumer.eachMapping(function(m)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pass***REMOVED***when***REMOVED***`originalLine`***REMOVED***is***REMOVED***null.
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It***REMOVED***occurs***REMOVED***in***REMOVED***case***REMOVED***that***REMOVED***the***REMOVED***node***REMOVED***does***REMOVED***not***REMOVED***have***REMOVED***origin***REMOVED***in***REMOVED***original***REMOVED***code.
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.originalLine***REMOVED***==***REMOVED***null)***REMOVED***return

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***origPosInOldMap***REMOVED***=***REMOVED***oldMapConsumer.originalPositionFor({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.originalLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.originalColumn
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(origPosInOldMap.source***REMOVED***==***REMOVED***null)***REMOVED***return

	***REMOVED******REMOVED******REMOVED******REMOVED***mergedMapGenerator.addMapping({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***origPosInOldMap.line,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***origPosInOldMap.column
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.generatedLine,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.generatedColumn
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***origPosInOldMap.source,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***origPosInOldMap.name
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***var***REMOVED***consumers***REMOVED***=***REMOVED***[oldMapConsumer,***REMOVED***newMapConsumer];
	***REMOVED******REMOVED***consumers.forEach(function(consumer)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***consumer.sources.forEach(function(sourceFile)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergedMapGenerator._sources.add(sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceContent***REMOVED***=***REMOVED***consumer.sourceContentFor(sourceFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceContent***REMOVED***!=***REMOVED***null)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergedMapGenerator.setSourceContent(sourceFile,***REMOVED***sourceContent);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***mergedMapGenerator._sourceRoot***REMOVED***=***REMOVED***oldMap.sourceRoot;
	***REMOVED******REMOVED***mergedMapGenerator._file***REMOVED***=***REMOVED***oldMap.file;

	***REMOVED******REMOVED***return***REMOVED***JSON.parse(mergedMapGenerator.toString())
	}
	return***REMOVED***mergeSourceMap;
}

var***REMOVED***mergeSourceMapExports***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireMergeSourceMap();
var***REMOVED***merge***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(mergeSourceMapExports);

const***REMOVED***scss***REMOVED***=***REMOVED***(source,***REMOVED***map,***REMOVED***options,***REMOVED***load***REMOVED***=***REMOVED***require)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***nodeSass***REMOVED***=***REMOVED***load("sass");
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***compileString,***REMOVED***renderSync***REMOVED***}***REMOVED***=***REMOVED***nodeSass;
***REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***getSource(source,***REMOVED***options.filename,***REMOVED***options.additionalData);
***REMOVED******REMOVED***let***REMOVED***css;
***REMOVED******REMOVED***let***REMOVED***dependencies;
***REMOVED******REMOVED***let***REMOVED***sourceMap;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(compileString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***pathToFileURL,***REMOVED***fileURLToPath***REMOVED***}***REMOVED***=***REMOVED***load("url");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***compileString(data,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***pathToFileURL(options.filename),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMap:***REMOVED***!!map
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css***REMOVED***=***REMOVED***result.css;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies***REMOVED***=***REMOVED***result.loadedUrls.map((url)***REMOVED***=>***REMOVED***fileURLToPath(url));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***map***REMOVED***?***REMOVED***result.sourceMap***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***renderSync({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file:***REMOVED***options.filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***outFile:***REMOVED***options.filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMap:***REMOVED***!!map
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css***REMOVED***=***REMOVED***result.css.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies***REMOVED***=***REMOVED***result.stats.includedFiles;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceMap***REMOVED***=***REMOVED***map***REMOVED***?***REMOVED***JSON.parse(result.map.toString())***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***css,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***merge(map,***REMOVED***sourceMap)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***css,***REMOVED***errors:***REMOVED***[],***REMOVED***dependencies***REMOVED***};
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***"",***REMOVED***errors:***REMOVED***[e],***REMOVED***dependencies:***REMOVED***[]***REMOVED***};
***REMOVED******REMOVED***}
};
const***REMOVED***sass***REMOVED***=***REMOVED***(source,***REMOVED***map,***REMOVED***options,***REMOVED***load)***REMOVED***=>***REMOVED***scss(
***REMOVED******REMOVED***source,
***REMOVED******REMOVED***map,
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED***indentedSyntax:***REMOVED***true
***REMOVED******REMOVED***},
***REMOVED******REMOVED***load
);
const***REMOVED***less***REMOVED***=***REMOVED***(source,***REMOVED***map,***REMOVED***options,***REMOVED***load***REMOVED***=***REMOVED***require)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***nodeLess***REMOVED***=***REMOVED***load("less");
***REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED***let***REMOVED***error***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***nodeLess.render(
***REMOVED******REMOVED******REMOVED******REMOVED***getSource(source,***REMOVED***options.filename,***REMOVED***options.additionalData),
***REMOVED******REMOVED******REMOVED******REMOVED***{***REMOVED***...options,***REMOVED***syncImport:***REMOVED***true***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***(err,***REMOVED***output)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error***REMOVED***=***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***output;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(error)***REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***"",***REMOVED***errors:***REMOVED***[error],***REMOVED***dependencies:***REMOVED***[]***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***result.imports;
***REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***result.css.toString(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***merge(map,***REMOVED***result.map),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***result.css.toString(),
***REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***dependencies
***REMOVED******REMOVED***};
};
const***REMOVED***styl***REMOVED***=***REMOVED***(source,***REMOVED***map,***REMOVED***options,***REMOVED***load***REMOVED***=***REMOVED***require)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***nodeStylus***REMOVED***=***REMOVED***load("stylus");
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ref***REMOVED***=***REMOVED***nodeStylus(source,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***ref.set("sourcemap",***REMOVED***{***REMOVED***inline:***REMOVED***false,***REMOVED***comment:***REMOVED***false***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***ref.render();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***ref.deps();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***result,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***merge(map,***REMOVED***ref.sourcemap),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***result,***REMOVED***errors:***REMOVED***[],***REMOVED***dependencies***REMOVED***};
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***code:***REMOVED***"",***REMOVED***errors:***REMOVED***[e],***REMOVED***dependencies:***REMOVED***[]***REMOVED***};
***REMOVED******REMOVED***}
};
function***REMOVED***getSource(source,***REMOVED***filename,***REMOVED***additionalData)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!additionalData)***REMOVED***return***REMOVED***source;
***REMOVED******REMOVED***if***REMOVED***(shared.isFunction(additionalData))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***additionalData(source,***REMOVED***filename);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***additionalData***REMOVED***+***REMOVED***source;
}
const***REMOVED***processors***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***less,
***REMOVED******REMOVED***sass,
***REMOVED******REMOVED***scss,
***REMOVED******REMOVED***styl,
***REMOVED******REMOVED***stylus:***REMOVED***styl
};

var***REMOVED***build***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***fs***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredFs;

function***REMOVED***requireFs***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredFs)***REMOVED***return***REMOVED***fs;
	hasRequiredFs***REMOVED***=***REMOVED***1;

	Object.defineProperty(fs,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	fs.getFileSystem***REMOVED***=***REMOVED***getFileSystem;
	fs.setFileSystem***REMOVED***=***REMOVED***setFileSystem;
	let***REMOVED***fileSystem***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***readFile:***REMOVED***()***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***Error("readFile***REMOVED***not***REMOVED***implemented");
	***REMOVED******REMOVED***},
	***REMOVED******REMOVED***writeFile:***REMOVED***()***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***Error("writeFile***REMOVED***not***REMOVED***implemented");
	***REMOVED******REMOVED***}
	};

	function***REMOVED***setFileSystem(fs)***REMOVED***{
	***REMOVED******REMOVED***fileSystem.readFile***REMOVED***=***REMOVED***fs.readFile;
	***REMOVED******REMOVED***fileSystem.writeFile***REMOVED***=***REMOVED***fs.writeFile;
	}

	function***REMOVED***getFileSystem()***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***fileSystem;
	}
	return***REMOVED***fs;
}

var***REMOVED***pluginFactory***REMOVED***=***REMOVED***{};

var***REMOVED***unquote***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredUnquote;

function***REMOVED***requireUnquote***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUnquote)***REMOVED***return***REMOVED***unquote;
	hasRequiredUnquote***REMOVED***=***REMOVED***1;

	Object.defineProperty(unquote,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	unquote.default***REMOVED***=***REMOVED***unquote$1;
	//***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/lakenen/node-unquote
	const***REMOVED***reg***REMOVED***=***REMOVED***/['"]/;

	function***REMOVED***unquote$1(str)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!str)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"";
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(reg.test(str.charAt(0)))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.substr(1);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(reg.test(str.charAt(str.length***REMOVED***-***REMOVED***1)))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***str.substr(0,***REMOVED***str.length***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***str;
	}
	return***REMOVED***unquote;
}

var***REMOVED***Parser***REMOVED***=***REMOVED***{};

var***REMOVED***replaceValueSymbols_1;
var***REMOVED***hasRequiredReplaceValueSymbols;

function***REMOVED***requireReplaceValueSymbols***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredReplaceValueSymbols)***REMOVED***return***REMOVED***replaceValueSymbols_1;
	hasRequiredReplaceValueSymbols***REMOVED***=***REMOVED***1;
	const***REMOVED***matchValueName***REMOVED***=***REMOVED***/[$]?[\w-]+/g;

	const***REMOVED***replaceValueSymbols***REMOVED***=***REMOVED***(value,***REMOVED***replacements)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***matches;

	***REMOVED******REMOVED***while***REMOVED***((matches***REMOVED***=***REMOVED***matchValueName.exec(value)))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replacement***REMOVED***=***REMOVED***replacements[matches[0]];

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(replacement)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.slice(0,***REMOVED***matches.index)***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacement***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.slice(matchValueName.lastIndex);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchValueName.lastIndex***REMOVED***-=***REMOVED***matches[0].length***REMOVED***-***REMOVED***replacement.length;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***value;
	};

	replaceValueSymbols_1***REMOVED***=***REMOVED***replaceValueSymbols;
	return***REMOVED***replaceValueSymbols_1;
}

var***REMOVED***replaceSymbols_1;
var***REMOVED***hasRequiredReplaceSymbols;

function***REMOVED***requireReplaceSymbols***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredReplaceSymbols)***REMOVED***return***REMOVED***replaceSymbols_1;
	hasRequiredReplaceSymbols***REMOVED***=***REMOVED***1;
	const***REMOVED***replaceValueSymbols***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireReplaceValueSymbols();

	const***REMOVED***replaceSymbols***REMOVED***=***REMOVED***(css,***REMOVED***replacements)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***css.walk((node)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"decl"***REMOVED***&&***REMOVED***node.value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***replaceValueSymbols(node.value.toString(),***REMOVED***replacements);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.selector***REMOVED***=***REMOVED***replaceValueSymbols(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.selector.toString(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***replacements
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&***REMOVED***node.params)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.params***REMOVED***=***REMOVED***replaceValueSymbols(node.params.toString(),***REMOVED***replacements);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***});
	};

	replaceSymbols_1***REMOVED***=***REMOVED***replaceSymbols;
	return***REMOVED***replaceSymbols_1;
}

var***REMOVED***extractICSS_1;
var***REMOVED***hasRequiredExtractICSS;

function***REMOVED***requireExtractICSS***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredExtractICSS)***REMOVED***return***REMOVED***extractICSS_1;
	hasRequiredExtractICSS***REMOVED***=***REMOVED***1;
	const***REMOVED***importPattern***REMOVED***=***REMOVED***/^:import\(("[^"]*"|'[^']*'|[^"']+)\)$/;
	const***REMOVED***balancedQuotes***REMOVED***=***REMOVED***/^("[^"]*"|'[^']*'|[^"']+)$/;

	const***REMOVED***getDeclsObject***REMOVED***=***REMOVED***(rule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***object***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***before***REMOVED***=***REMOVED***decl.raws.before***REMOVED***?***REMOVED***decl.raws.before.trim()***REMOVED***:***REMOVED***"";

	***REMOVED******REMOVED******REMOVED******REMOVED***object[before***REMOVED***+***REMOVED***decl.prop]***REMOVED***=***REMOVED***decl.value;
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***return***REMOVED***object;
	};
	/**
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css
	***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***removeRules
	***REMOVED*******REMOVED***@param***REMOVED***{'auto'***REMOVED***|***REMOVED***'rule'***REMOVED***|***REMOVED***'at-rule'}***REMOVED***mode
	***REMOVED****/
	const***REMOVED***extractICSS***REMOVED***=***REMOVED***(css,***REMOVED***removeRules***REMOVED***=***REMOVED***true,***REMOVED***mode***REMOVED***=***REMOVED***"auto")***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***icssImports***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED***const***REMOVED***icssExports***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED***function***REMOVED***addImports(node,***REMOVED***path)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unquoted***REMOVED***=***REMOVED***path.replace(/'|"/g,***REMOVED***"");
	***REMOVED******REMOVED******REMOVED******REMOVED***icssImports[unquoted]***REMOVED***=***REMOVED***Object.assign(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***icssImports[unquoted]***REMOVED***||***REMOVED***{},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getDeclsObject(node)
	***REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeRules)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***function***REMOVED***addExports(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(icssExports,***REMOVED***getDeclsObject(node));
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removeRules)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***css.each((node)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"rule"***REMOVED***&&***REMOVED***mode***REMOVED***!==***REMOVED***"at-rule")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.selector.slice(0,***REMOVED***7)***REMOVED***===***REMOVED***":import")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***importPattern.exec(node.selector);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImports(node,***REMOVED***matches[1]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.selector***REMOVED***===***REMOVED***":export")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addExports(node);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&***REMOVED***mode***REMOVED***!==***REMOVED***"rule")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.name***REMOVED***===***REMOVED***"icss-import")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***balancedQuotes.exec(node.params);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImports(node,***REMOVED***matches[1]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.name***REMOVED***===***REMOVED***"icss-export")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addExports(node);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***return***REMOVED***{***REMOVED***icssImports,***REMOVED***icssExports***REMOVED***};
	};

	extractICSS_1***REMOVED***=***REMOVED***extractICSS;
	return***REMOVED***extractICSS_1;
}

var***REMOVED***createICSSRules_1;
var***REMOVED***hasRequiredCreateICSSRules;

function***REMOVED***requireCreateICSSRules***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredCreateICSSRules)***REMOVED***return***REMOVED***createICSSRules_1;
	hasRequiredCreateICSSRules***REMOVED***=***REMOVED***1;
	const***REMOVED***createImports***REMOVED***=***REMOVED***(imports,***REMOVED***postcss,***REMOVED***mode***REMOVED***=***REMOVED***"rule")***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Object.keys(imports).map((path)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aliases***REMOVED***=***REMOVED***imports[path];
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***declarations***REMOVED***=***REMOVED***Object.keys(aliases).map((key)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***aliases[key],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDeclarations***REMOVED***=***REMOVED***declarations.length***REMOVED***>***REMOVED***0;

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rule***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode***REMOVED***===***REMOVED***"rule"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***postcss.rule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import('${path}')`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***hasDeclarations***REMOVED***?***REMOVED***"\n"***REMOVED***:***REMOVED***""***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***postcss.atRule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"icss-import",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***`'${path}'`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***hasDeclarations***REMOVED***?***REMOVED***"\n"***REMOVED***:***REMOVED***""***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDeclarations)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.append(declarations);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rule;
	***REMOVED******REMOVED***});
	};

	const***REMOVED***createExports***REMOVED***=***REMOVED***(exports,***REMOVED***postcss,***REMOVED***mode***REMOVED***=***REMOVED***"rule")***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***declarations***REMOVED***=***REMOVED***Object.keys(exports).map((key)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exports[key],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED***);

	***REMOVED******REMOVED***if***REMOVED***(declarations.length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***const***REMOVED***rule***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***mode***REMOVED***===***REMOVED***"rule"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***postcss.rule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:export`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***postcss.atRule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***"icss-export",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED***rule.append(declarations);

	***REMOVED******REMOVED***return***REMOVED***[rule];
	};

	const***REMOVED***createICSSRules***REMOVED***=***REMOVED***(imports,***REMOVED***exports,***REMOVED***postcss,***REMOVED***mode)***REMOVED***=>***REMOVED***[
	***REMOVED******REMOVED***...createImports(imports,***REMOVED***postcss,***REMOVED***mode),
	***REMOVED******REMOVED***...createExports(exports,***REMOVED***postcss,***REMOVED***mode),
	];

	createICSSRules_1***REMOVED***=***REMOVED***createICSSRules;
	return***REMOVED***createICSSRules_1;
}

var***REMOVED***src$4;
var***REMOVED***hasRequiredSrc$4;

function***REMOVED***requireSrc$4***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSrc$4)***REMOVED***return***REMOVED***src$4;
	hasRequiredSrc$4***REMOVED***=***REMOVED***1;
	const***REMOVED***replaceValueSymbols***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireReplaceValueSymbols();
	const***REMOVED***replaceSymbols***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireReplaceSymbols();
	const***REMOVED***extractICSS***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireExtractICSS();
	const***REMOVED***createICSSRules***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireCreateICSSRules();

	src$4***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***replaceValueSymbols,
	***REMOVED******REMOVED***replaceSymbols,
	***REMOVED******REMOVED***extractICSS,
	***REMOVED******REMOVED***createICSSRules,
	};
	return***REMOVED***src$4;
}

var***REMOVED***hasRequiredParser$1;

function***REMOVED***requireParser$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredParser$1)***REMOVED***return***REMOVED***Parser;
	hasRequiredParser$1***REMOVED***=***REMOVED***1;

	Object.defineProperty(Parser,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	Parser.default***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_icssUtils***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSrc$4();

	//***REMOVED***Initially***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/css-modules/css-modules-loader-core
	const***REMOVED***importRegexp***REMOVED***=***REMOVED***/^:import\((.+)\)$/;

	let***REMOVED***Parser$1***REMOVED***=***REMOVED***class***REMOVED***Parser***REMOVED***{
	***REMOVED******REMOVED***constructor(pathFetcher,***REMOVED***trace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.pathFetcher***REMOVED***=***REMOVED***pathFetcher;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.plugin***REMOVED***=***REMOVED***this.plugin.bind(this);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.exportTokens***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.translations***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.trace***REMOVED***=***REMOVED***trace;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***plugin()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"css-modules-parser",

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***OnceExit(css)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all(parser.fetchAllImports(css));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parser.linkImportedSymbols(css);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser.extractExports(css);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***fetchAllImports(css)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***imports***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***css.each(node***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***==***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector.match(importRegexp))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports.push(this.fetchImport(node,***REMOVED***css.source.input.from,***REMOVED***imports.length));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***imports;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***linkImportedSymbols(css)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_icssUtils.replaceSymbols)(css,***REMOVED***this.translations);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***extractExports(css)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***css.each(node***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***==***REMOVED***"rule"***REMOVED***&&***REMOVED***node.selector***REMOVED***==***REMOVED***":export")***REMOVED***this.handleExport(node);
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***handleExport(exportNode)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***exportNode.each(decl***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***==***REMOVED***"decl")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(this.translations).forEach(translation***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***decl.value.replace(translation,***REMOVED***this.translations[translation]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.exportTokens[decl.prop]***REMOVED***=***REMOVED***decl.value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***exportNode.remove();
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***async***REMOVED***fetchImport(importNode,***REMOVED***relativeTo,***REMOVED***depNr)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***file***REMOVED***=***REMOVED***importNode.selector.match(importRegexp)[1];
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***depTrace***REMOVED***=***REMOVED***this.trace***REMOVED***+***REMOVED***String.fromCharCode(depNr);
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***await***REMOVED***this.pathFetcher(file,***REMOVED***relativeTo,***REMOVED***depTrace);

	***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode.each(decl***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.type***REMOVED***==***REMOVED***"decl")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.translations[decl.prop]***REMOVED***=***REMOVED***exports[decl.value];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importNode.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log(err);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	};

	Parser.default***REMOVED***=***REMOVED***Parser$1;
	return***REMOVED***Parser;
}

var***REMOVED***saveJSON***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredSaveJSON;

function***REMOVED***requireSaveJSON***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSaveJSON)***REMOVED***return***REMOVED***saveJSON;
	hasRequiredSaveJSON***REMOVED***=***REMOVED***1;

	Object.defineProperty(saveJSON,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	saveJSON.default***REMOVED***=***REMOVED***saveJSON$1;

	var***REMOVED***_fs***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireFs();

	function***REMOVED***saveJSON$1(cssFile,***REMOVED***json)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writeFile
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***(0,***REMOVED***_fs.getFileSystem)();
	***REMOVED******REMOVED******REMOVED******REMOVED***writeFile(`${cssFile}.json`,***REMOVED***JSON.stringify(json),***REMOVED***e***REMOVED***=>***REMOVED***e***REMOVED***?***REMOVED***reject(e)***REMOVED***:***REMOVED***resolve(json));
	***REMOVED******REMOVED***});
	}
	return***REMOVED***saveJSON;
}

var***REMOVED***localsConvention***REMOVED***=***REMOVED***{};

/**
***REMOVED*******REMOVED***lodash***REMOVED***(Custom***REMOVED***Build)***REMOVED***<https://lodash.com/>
***REMOVED*******REMOVED***Build:***REMOVED***`lodash***REMOVED***modularize***REMOVED***exports="npm"***REMOVED***-o***REMOVED***./`
***REMOVED*******REMOVED***Copyright***REMOVED***jQuery***REMOVED***Foundation***REMOVED***and***REMOVED***other***REMOVED***contributors***REMOVED***<https://jquery.org/>
***REMOVED*******REMOVED***Released***REMOVED***under***REMOVED***MIT***REMOVED***license***REMOVED***<https://lodash.com/license>
***REMOVED*******REMOVED***Based***REMOVED***on***REMOVED***Underscore.js***REMOVED***1.8.3***REMOVED***<http://underscorejs.org/LICENSE>
***REMOVED*******REMOVED***Copyright***REMOVED***Jeremy***REMOVED***Ashkenas,***REMOVED***DocumentCloud***REMOVED***and***REMOVED***Investigative***REMOVED***Reporters***REMOVED***&***REMOVED***Editors
***REMOVED****/

var***REMOVED***lodash_camelcase;
var***REMOVED***hasRequiredLodash_camelcase;

function***REMOVED***requireLodash_camelcase***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredLodash_camelcase)***REMOVED***return***REMOVED***lodash_camelcase;
	hasRequiredLodash_camelcase***REMOVED***=***REMOVED***1;

	/*****REMOVED***`Object#toString`***REMOVED***result***REMOVED***references.***REMOVED****/
	var***REMOVED***symbolTag***REMOVED***=***REMOVED***'[object***REMOVED***Symbol]';

	/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***words***REMOVED***composed***REMOVED***of***REMOVED***alphanumeric***REMOVED***characters.***REMOVED****/
	var***REMOVED***reAsciiWord***REMOVED***=***REMOVED***/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***Latin***REMOVED***Unicode***REMOVED***letters***REMOVED***(excluding***REMOVED***mathematical***REMOVED***operators).***REMOVED****/
	var***REMOVED***reLatin***REMOVED***=***REMOVED***/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***character***REMOVED***classes.***REMOVED****/
	var***REMOVED***rsAstralRange***REMOVED***=***REMOVED***'\\ud800-\\udfff',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsComboMarksRange***REMOVED***=***REMOVED***'\\u0300-\\u036f\\ufe20-\\ufe23',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsComboSymbolsRange***REMOVED***=***REMOVED***'\\u20d0-\\u20f0',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsDingbatRange***REMOVED***=***REMOVED***'\\u2700-\\u27bf',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsLowerRange***REMOVED***=***REMOVED***'a-z\\xdf-\\xf6\\xf8-\\xff',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsMathOpRange***REMOVED***=***REMOVED***'\\xac\\xb1\\xd7\\xf7',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsNonCharRange***REMOVED***=***REMOVED***'\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsPunctuationRange***REMOVED***=***REMOVED***'\\u2000-\\u206f',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsSpaceRange***REMOVED***=***REMOVED***'***REMOVED***\\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsUpperRange***REMOVED***=***REMOVED***'A-Z\\xc0-\\xd6\\xd8-\\xde',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsVarRange***REMOVED***=***REMOVED***'\\ufe0e\\ufe0f',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsBreakRange***REMOVED***=***REMOVED***rsMathOpRange***REMOVED***+***REMOVED***rsNonCharRange***REMOVED***+***REMOVED***rsPunctuationRange***REMOVED***+***REMOVED***rsSpaceRange;

	/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***capture***REMOVED***groups.***REMOVED****/
	var***REMOVED***rsApos***REMOVED***=***REMOVED***"['\u2019]",
	***REMOVED******REMOVED******REMOVED******REMOVED***rsAstral***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsBreak***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsBreakRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsCombo***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsComboMarksRange***REMOVED***+***REMOVED***rsComboSymbolsRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsDigits***REMOVED***=***REMOVED***'\\d+',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsDingbat***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsDingbatRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsLower***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsLowerRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsMisc***REMOVED***=***REMOVED***'[^'***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***rsBreakRange***REMOVED***+***REMOVED***rsDigits***REMOVED***+***REMOVED***rsDingbatRange***REMOVED***+***REMOVED***rsLowerRange***REMOVED***+***REMOVED***rsUpperRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsFitz***REMOVED***=***REMOVED***'\\ud83c[\\udffb-\\udfff]',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsModifier***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsCombo***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsFitz***REMOVED***+***REMOVED***')',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsNonAstral***REMOVED***=***REMOVED***'[^'***REMOVED***+***REMOVED***rsAstralRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsRegional***REMOVED***=***REMOVED***'(?:\\ud83c[\\udde6-\\uddff]){2}',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsSurrPair***REMOVED***=***REMOVED***'[\\ud800-\\udbff][\\udc00-\\udfff]',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsUpper***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsUpperRange***REMOVED***+***REMOVED***']',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsZWJ***REMOVED***=***REMOVED***'\\u200d';

	/*****REMOVED***Used***REMOVED***to***REMOVED***compose***REMOVED***unicode***REMOVED***regexes.***REMOVED****/
	var***REMOVED***rsLowerMisc***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsLower***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsMisc***REMOVED***+***REMOVED***')',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsUpperMisc***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsUpper***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***rsMisc***REMOVED***+***REMOVED***')',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsOptLowerContr***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsApos***REMOVED***+***REMOVED***'(?:d|ll|m|re|s|t|ve))?',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsOptUpperContr***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsApos***REMOVED***+***REMOVED***'(?:D|LL|M|RE|S|T|VE))?',
	***REMOVED******REMOVED******REMOVED******REMOVED***reOptMod***REMOVED***=***REMOVED***rsModifier***REMOVED***+***REMOVED***'?',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsOptVar***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***rsVarRange***REMOVED***+***REMOVED***']?',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsOptJoin***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***rsZWJ***REMOVED***+***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsNonAstral,***REMOVED***rsRegional,***REMOVED***rsSurrPair].join('|')***REMOVED***+***REMOVED***')'***REMOVED***+***REMOVED***rsOptVar***REMOVED***+***REMOVED***reOptMod***REMOVED***+***REMOVED***')*',
	***REMOVED******REMOVED******REMOVED******REMOVED***rsSeq***REMOVED***=***REMOVED***rsOptVar***REMOVED***+***REMOVED***reOptMod***REMOVED***+***REMOVED***rsOptJoin,
	***REMOVED******REMOVED******REMOVED******REMOVED***rsEmoji***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsDingbat,***REMOVED***rsRegional,***REMOVED***rsSurrPair].join('|')***REMOVED***+***REMOVED***')'***REMOVED***+***REMOVED***rsSeq,
	***REMOVED******REMOVED******REMOVED******REMOVED***rsSymbol***REMOVED***=***REMOVED***'(?:'***REMOVED***+***REMOVED***[rsNonAstral***REMOVED***+***REMOVED***rsCombo***REMOVED***+***REMOVED***'?',***REMOVED***rsCombo,***REMOVED***rsRegional,***REMOVED***rsSurrPair,***REMOVED***rsAstral].join('|')***REMOVED***+***REMOVED***')';

	/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***apostrophes.***REMOVED****/
	var***REMOVED***reApos***REMOVED***=***REMOVED***RegExp(rsApos,***REMOVED***'g');

	/**
	***REMOVED*******REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***[combining***REMOVED***diacritical***REMOVED***marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks)***REMOVED***and
	***REMOVED*******REMOVED***[combining***REMOVED***diacritical***REMOVED***marks***REMOVED***for***REMOVED***symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	***REMOVED****/
	var***REMOVED***reComboMark***REMOVED***=***REMOVED***RegExp(rsCombo,***REMOVED***'g');

	/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***[string***REMOVED***symbols](https://mathiasbynens.be/notes/javascript-unicode).***REMOVED****/
	var***REMOVED***reUnicode***REMOVED***=***REMOVED***RegExp(rsFitz***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***rsFitz***REMOVED***+***REMOVED***')|'***REMOVED***+***REMOVED***rsSymbol***REMOVED***+***REMOVED***rsSeq,***REMOVED***'g');

	/*****REMOVED***Used***REMOVED***to***REMOVED***match***REMOVED***complex***REMOVED***or***REMOVED***compound***REMOVED***words.***REMOVED****/
	var***REMOVED***reUnicodeWord***REMOVED***=***REMOVED***RegExp([
	***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'?'***REMOVED***+***REMOVED***rsLower***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptLowerContr***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***[rsBreak,***REMOVED***rsUpper,***REMOVED***'$'].join('|')***REMOVED***+***REMOVED***')',
	***REMOVED******REMOVED***rsUpperMisc***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptUpperContr***REMOVED***+***REMOVED***'(?='***REMOVED***+***REMOVED***[rsBreak,***REMOVED***rsUpper***REMOVED***+***REMOVED***rsLowerMisc,***REMOVED***'$'].join('|')***REMOVED***+***REMOVED***')',
	***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'?'***REMOVED***+***REMOVED***rsLowerMisc***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptLowerContr,
	***REMOVED******REMOVED***rsUpper***REMOVED***+***REMOVED***'+'***REMOVED***+***REMOVED***rsOptUpperContr,
	***REMOVED******REMOVED***rsDigits,
	***REMOVED******REMOVED***rsEmoji
	].join('|'),***REMOVED***'g');

	/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***strings***REMOVED***with***REMOVED***[zero-width***REMOVED***joiners***REMOVED***or***REMOVED***code***REMOVED***points***REMOVED***from***REMOVED***the***REMOVED***astral***REMOVED***planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).***REMOVED****/
	var***REMOVED***reHasUnicode***REMOVED***=***REMOVED***RegExp('['***REMOVED***+***REMOVED***rsZWJ***REMOVED***+***REMOVED***rsAstralRange***REMOVED******REMOVED***+***REMOVED***rsComboMarksRange***REMOVED***+***REMOVED***rsComboSymbolsRange***REMOVED***+***REMOVED***rsVarRange***REMOVED***+***REMOVED***']');

	/*****REMOVED***Used***REMOVED***to***REMOVED***detect***REMOVED***strings***REMOVED***that***REMOVED***need***REMOVED***a***REMOVED***more***REMOVED***robust***REMOVED***regexp***REMOVED***to***REMOVED***match***REMOVED***words.***REMOVED****/
	var***REMOVED***reHasUnicodeWord***REMOVED***=***REMOVED***/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9***REMOVED***]/;

	/*****REMOVED***Used***REMOVED***to***REMOVED***map***REMOVED***Latin***REMOVED***Unicode***REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters.***REMOVED****/
	var***REMOVED***deburredLetters***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***//***REMOVED***Latin-1***REMOVED***Supplement***REMOVED***block.
	***REMOVED******REMOVED***'\xc0':***REMOVED***'A',***REMOVED******REMOVED***'\xc1':***REMOVED***'A',***REMOVED***'\xc2':***REMOVED***'A',***REMOVED***'\xc3':***REMOVED***'A',***REMOVED***'\xc4':***REMOVED***'A',***REMOVED***'\xc5':***REMOVED***'A',
	***REMOVED******REMOVED***'\xe0':***REMOVED***'a',***REMOVED******REMOVED***'\xe1':***REMOVED***'a',***REMOVED***'\xe2':***REMOVED***'a',***REMOVED***'\xe3':***REMOVED***'a',***REMOVED***'\xe4':***REMOVED***'a',***REMOVED***'\xe5':***REMOVED***'a',
	***REMOVED******REMOVED***'\xc7':***REMOVED***'C',***REMOVED******REMOVED***'\xe7':***REMOVED***'c',
	***REMOVED******REMOVED***'\xd0':***REMOVED***'D',***REMOVED******REMOVED***'\xf0':***REMOVED***'d',
	***REMOVED******REMOVED***'\xc8':***REMOVED***'E',***REMOVED******REMOVED***'\xc9':***REMOVED***'E',***REMOVED***'\xca':***REMOVED***'E',***REMOVED***'\xcb':***REMOVED***'E',
	***REMOVED******REMOVED***'\xe8':***REMOVED***'e',***REMOVED******REMOVED***'\xe9':***REMOVED***'e',***REMOVED***'\xea':***REMOVED***'e',***REMOVED***'\xeb':***REMOVED***'e',
	***REMOVED******REMOVED***'\xcc':***REMOVED***'I',***REMOVED******REMOVED***'\xcd':***REMOVED***'I',***REMOVED***'\xce':***REMOVED***'I',***REMOVED***'\xcf':***REMOVED***'I',
	***REMOVED******REMOVED***'\xec':***REMOVED***'i',***REMOVED******REMOVED***'\xed':***REMOVED***'i',***REMOVED***'\xee':***REMOVED***'i',***REMOVED***'\xef':***REMOVED***'i',
	***REMOVED******REMOVED***'\xd1':***REMOVED***'N',***REMOVED******REMOVED***'\xf1':***REMOVED***'n',
	***REMOVED******REMOVED***'\xd2':***REMOVED***'O',***REMOVED******REMOVED***'\xd3':***REMOVED***'O',***REMOVED***'\xd4':***REMOVED***'O',***REMOVED***'\xd5':***REMOVED***'O',***REMOVED***'\xd6':***REMOVED***'O',***REMOVED***'\xd8':***REMOVED***'O',
	***REMOVED******REMOVED***'\xf2':***REMOVED***'o',***REMOVED******REMOVED***'\xf3':***REMOVED***'o',***REMOVED***'\xf4':***REMOVED***'o',***REMOVED***'\xf5':***REMOVED***'o',***REMOVED***'\xf6':***REMOVED***'o',***REMOVED***'\xf8':***REMOVED***'o',
	***REMOVED******REMOVED***'\xd9':***REMOVED***'U',***REMOVED******REMOVED***'\xda':***REMOVED***'U',***REMOVED***'\xdb':***REMOVED***'U',***REMOVED***'\xdc':***REMOVED***'U',
	***REMOVED******REMOVED***'\xf9':***REMOVED***'u',***REMOVED******REMOVED***'\xfa':***REMOVED***'u',***REMOVED***'\xfb':***REMOVED***'u',***REMOVED***'\xfc':***REMOVED***'u',
	***REMOVED******REMOVED***'\xdd':***REMOVED***'Y',***REMOVED******REMOVED***'\xfd':***REMOVED***'y',***REMOVED***'\xff':***REMOVED***'y',
	***REMOVED******REMOVED***'\xc6':***REMOVED***'Ae',***REMOVED***'\xe6':***REMOVED***'ae',
	***REMOVED******REMOVED***'\xde':***REMOVED***'Th',***REMOVED***'\xfe':***REMOVED***'th',
	***REMOVED******REMOVED***'\xdf':***REMOVED***'ss',
	***REMOVED******REMOVED***//***REMOVED***Latin***REMOVED***Extended-A***REMOVED***block.
	***REMOVED******REMOVED***'\u0100':***REMOVED***'A',***REMOVED******REMOVED***'\u0102':***REMOVED***'A',***REMOVED***'\u0104':***REMOVED***'A',
	***REMOVED******REMOVED***'\u0101':***REMOVED***'a',***REMOVED******REMOVED***'\u0103':***REMOVED***'a',***REMOVED***'\u0105':***REMOVED***'a',
	***REMOVED******REMOVED***'\u0106':***REMOVED***'C',***REMOVED******REMOVED***'\u0108':***REMOVED***'C',***REMOVED***'\u010a':***REMOVED***'C',***REMOVED***'\u010c':***REMOVED***'C',
	***REMOVED******REMOVED***'\u0107':***REMOVED***'c',***REMOVED******REMOVED***'\u0109':***REMOVED***'c',***REMOVED***'\u010b':***REMOVED***'c',***REMOVED***'\u010d':***REMOVED***'c',
	***REMOVED******REMOVED***'\u010e':***REMOVED***'D',***REMOVED******REMOVED***'\u0110':***REMOVED***'D',***REMOVED***'\u010f':***REMOVED***'d',***REMOVED***'\u0111':***REMOVED***'d',
	***REMOVED******REMOVED***'\u0112':***REMOVED***'E',***REMOVED******REMOVED***'\u0114':***REMOVED***'E',***REMOVED***'\u0116':***REMOVED***'E',***REMOVED***'\u0118':***REMOVED***'E',***REMOVED***'\u011a':***REMOVED***'E',
	***REMOVED******REMOVED***'\u0113':***REMOVED***'e',***REMOVED******REMOVED***'\u0115':***REMOVED***'e',***REMOVED***'\u0117':***REMOVED***'e',***REMOVED***'\u0119':***REMOVED***'e',***REMOVED***'\u011b':***REMOVED***'e',
	***REMOVED******REMOVED***'\u011c':***REMOVED***'G',***REMOVED******REMOVED***'\u011e':***REMOVED***'G',***REMOVED***'\u0120':***REMOVED***'G',***REMOVED***'\u0122':***REMOVED***'G',
	***REMOVED******REMOVED***'\u011d':***REMOVED***'g',***REMOVED******REMOVED***'\u011f':***REMOVED***'g',***REMOVED***'\u0121':***REMOVED***'g',***REMOVED***'\u0123':***REMOVED***'g',
	***REMOVED******REMOVED***'\u0124':***REMOVED***'H',***REMOVED******REMOVED***'\u0126':***REMOVED***'H',***REMOVED***'\u0125':***REMOVED***'h',***REMOVED***'\u0127':***REMOVED***'h',
	***REMOVED******REMOVED***'\u0128':***REMOVED***'I',***REMOVED******REMOVED***'\u012a':***REMOVED***'I',***REMOVED***'\u012c':***REMOVED***'I',***REMOVED***'\u012e':***REMOVED***'I',***REMOVED***'\u0130':***REMOVED***'I',
	***REMOVED******REMOVED***'\u0129':***REMOVED***'i',***REMOVED******REMOVED***'\u012b':***REMOVED***'i',***REMOVED***'\u012d':***REMOVED***'i',***REMOVED***'\u012f':***REMOVED***'i',***REMOVED***'\u0131':***REMOVED***'i',
	***REMOVED******REMOVED***'\u0134':***REMOVED***'J',***REMOVED******REMOVED***'\u0135':***REMOVED***'j',
	***REMOVED******REMOVED***'\u0136':***REMOVED***'K',***REMOVED******REMOVED***'\u0137':***REMOVED***'k',***REMOVED***'\u0138':***REMOVED***'k',
	***REMOVED******REMOVED***'\u0139':***REMOVED***'L',***REMOVED******REMOVED***'\u013b':***REMOVED***'L',***REMOVED***'\u013d':***REMOVED***'L',***REMOVED***'\u013f':***REMOVED***'L',***REMOVED***'\u0141':***REMOVED***'L',
	***REMOVED******REMOVED***'\u013a':***REMOVED***'l',***REMOVED******REMOVED***'\u013c':***REMOVED***'l',***REMOVED***'\u013e':***REMOVED***'l',***REMOVED***'\u0140':***REMOVED***'l',***REMOVED***'\u0142':***REMOVED***'l',
	***REMOVED******REMOVED***'\u0143':***REMOVED***'N',***REMOVED******REMOVED***'\u0145':***REMOVED***'N',***REMOVED***'\u0147':***REMOVED***'N',***REMOVED***'\u014a':***REMOVED***'N',
	***REMOVED******REMOVED***'\u0144':***REMOVED***'n',***REMOVED******REMOVED***'\u0146':***REMOVED***'n',***REMOVED***'\u0148':***REMOVED***'n',***REMOVED***'\u014b':***REMOVED***'n',
	***REMOVED******REMOVED***'\u014c':***REMOVED***'O',***REMOVED******REMOVED***'\u014e':***REMOVED***'O',***REMOVED***'\u0150':***REMOVED***'O',
	***REMOVED******REMOVED***'\u014d':***REMOVED***'o',***REMOVED******REMOVED***'\u014f':***REMOVED***'o',***REMOVED***'\u0151':***REMOVED***'o',
	***REMOVED******REMOVED***'\u0154':***REMOVED***'R',***REMOVED******REMOVED***'\u0156':***REMOVED***'R',***REMOVED***'\u0158':***REMOVED***'R',
	***REMOVED******REMOVED***'\u0155':***REMOVED***'r',***REMOVED******REMOVED***'\u0157':***REMOVED***'r',***REMOVED***'\u0159':***REMOVED***'r',
	***REMOVED******REMOVED***'\u015a':***REMOVED***'S',***REMOVED******REMOVED***'\u015c':***REMOVED***'S',***REMOVED***'\u015e':***REMOVED***'S',***REMOVED***'\u0160':***REMOVED***'S',
	***REMOVED******REMOVED***'\u015b':***REMOVED***'s',***REMOVED******REMOVED***'\u015d':***REMOVED***'s',***REMOVED***'\u015f':***REMOVED***'s',***REMOVED***'\u0161':***REMOVED***'s',
	***REMOVED******REMOVED***'\u0162':***REMOVED***'T',***REMOVED******REMOVED***'\u0164':***REMOVED***'T',***REMOVED***'\u0166':***REMOVED***'T',
	***REMOVED******REMOVED***'\u0163':***REMOVED***'t',***REMOVED******REMOVED***'\u0165':***REMOVED***'t',***REMOVED***'\u0167':***REMOVED***'t',
	***REMOVED******REMOVED***'\u0168':***REMOVED***'U',***REMOVED******REMOVED***'\u016a':***REMOVED***'U',***REMOVED***'\u016c':***REMOVED***'U',***REMOVED***'\u016e':***REMOVED***'U',***REMOVED***'\u0170':***REMOVED***'U',***REMOVED***'\u0172':***REMOVED***'U',
	***REMOVED******REMOVED***'\u0169':***REMOVED***'u',***REMOVED******REMOVED***'\u016b':***REMOVED***'u',***REMOVED***'\u016d':***REMOVED***'u',***REMOVED***'\u016f':***REMOVED***'u',***REMOVED***'\u0171':***REMOVED***'u',***REMOVED***'\u0173':***REMOVED***'u',
	***REMOVED******REMOVED***'\u0174':***REMOVED***'W',***REMOVED******REMOVED***'\u0175':***REMOVED***'w',
	***REMOVED******REMOVED***'\u0176':***REMOVED***'Y',***REMOVED******REMOVED***'\u0177':***REMOVED***'y',***REMOVED***'\u0178':***REMOVED***'Y',
	***REMOVED******REMOVED***'\u0179':***REMOVED***'Z',***REMOVED******REMOVED***'\u017b':***REMOVED***'Z',***REMOVED***'\u017d':***REMOVED***'Z',
	***REMOVED******REMOVED***'\u017a':***REMOVED***'z',***REMOVED******REMOVED***'\u017c':***REMOVED***'z',***REMOVED***'\u017e':***REMOVED***'z',
	***REMOVED******REMOVED***'\u0132':***REMOVED***'IJ',***REMOVED***'\u0133':***REMOVED***'ij',
	***REMOVED******REMOVED***'\u0152':***REMOVED***'Oe',***REMOVED***'\u0153':***REMOVED***'oe',
	***REMOVED******REMOVED***'\u0149':***REMOVED***"'n",***REMOVED***'\u017f':***REMOVED***'ss'
	};

	/*****REMOVED***Detect***REMOVED***free***REMOVED***variable***REMOVED***`global`***REMOVED***from***REMOVED***Node.js.***REMOVED****/
	var***REMOVED***freeGlobal***REMOVED***=***REMOVED***typeof***REMOVED***commonjsGlobal***REMOVED***==***REMOVED***'object'***REMOVED***&&***REMOVED***commonjsGlobal***REMOVED***&&***REMOVED***commonjsGlobal.Object***REMOVED***===***REMOVED***Object***REMOVED***&&***REMOVED***commonjsGlobal;

	/*****REMOVED***Detect***REMOVED***free***REMOVED***variable***REMOVED***`self`.***REMOVED****/
	var***REMOVED***freeSelf***REMOVED***=***REMOVED***typeof***REMOVED***self***REMOVED***==***REMOVED***'object'***REMOVED***&&***REMOVED***self***REMOVED***&&***REMOVED***self.Object***REMOVED***===***REMOVED***Object***REMOVED***&&***REMOVED***self;

	/*****REMOVED***Used***REMOVED***as***REMOVED***a***REMOVED***reference***REMOVED***to***REMOVED***the***REMOVED***global***REMOVED***object.***REMOVED****/
	var***REMOVED***root***REMOVED***=***REMOVED***freeGlobal***REMOVED***||***REMOVED***freeSelf***REMOVED***||***REMOVED***Function('return***REMOVED***this')();

	/**
	***REMOVED*******REMOVED***A***REMOVED***specialized***REMOVED***version***REMOVED***of***REMOVED***`_.reduce`***REMOVED***for***REMOVED***arrays***REMOVED***without***REMOVED***support***REMOVED***for
	***REMOVED*******REMOVED***iteratee***REMOVED***shorthands.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***[array]***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***iterate***REMOVED***over.
	***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***iteratee***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
	***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***[accumulator]***REMOVED***The***REMOVED***initial***REMOVED***value.
	***REMOVED*******REMOVED***@param***REMOVED***{boolean}***REMOVED***[initAccum]***REMOVED***Specify***REMOVED***using***REMOVED***the***REMOVED***first***REMOVED***element***REMOVED***of***REMOVED***`array`***REMOVED***as
	***REMOVED*******REMOVED******REMOVED***the***REMOVED***initial***REMOVED***value.
	***REMOVED*******REMOVED***@returns***REMOVED***{*}***REMOVED***Returns***REMOVED***the***REMOVED***accumulated***REMOVED***value.
	***REMOVED****/
	function***REMOVED***arrayReduce(array,***REMOVED***iteratee,***REMOVED***accumulator,***REMOVED***initAccum)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array***REMOVED***?***REMOVED***array.length***REMOVED***:***REMOVED***0;
	***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***accumulator***REMOVED***=***REMOVED***iteratee(accumulator,***REMOVED***array[index],***REMOVED***index,***REMOVED***array);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***accumulator;
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***an***REMOVED***ASCII***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
	***REMOVED****/
	function***REMOVED***asciiToArray(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***string.split('');
	}

	/**
	***REMOVED*******REMOVED***Splits***REMOVED***an***REMOVED***ASCII***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
	***REMOVED****/
	function***REMOVED***asciiWords(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***string.match(reAsciiWord)***REMOVED***||***REMOVED***[];
	}

	/**
	***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.propertyOf`***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***deep***REMOVED***paths.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query.
	***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***accessor***REMOVED***function.
	***REMOVED****/
	function***REMOVED***basePropertyOf(object)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***function(key)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***object***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***undefined***REMOVED***:***REMOVED***object[key];
	***REMOVED******REMOVED***};
	}

	/**
	***REMOVED*******REMOVED***Used***REMOVED***by***REMOVED***`_.deburr`***REMOVED***to***REMOVED***convert***REMOVED***Latin-1***REMOVED***Supplement***REMOVED***and***REMOVED***Latin***REMOVED***Extended-A
	***REMOVED*******REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***letter***REMOVED***The***REMOVED***matched***REMOVED***letter***REMOVED***to***REMOVED***deburr.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***deburred***REMOVED***letter.
	***REMOVED****/
	var***REMOVED***deburrLetter***REMOVED***=***REMOVED***basePropertyOf(deburredLetters);

	/**
	***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`string`***REMOVED***contains***REMOVED***Unicode***REMOVED***symbols.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***a***REMOVED***symbol***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
	***REMOVED****/
	function***REMOVED***hasUnicode(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***reHasUnicode.test(string);
	}

	/**
	***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`string`***REMOVED***contains***REMOVED***a***REMOVED***word***REMOVED***composed***REMOVED***of***REMOVED***Unicode***REMOVED***symbols.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***a***REMOVED***word***REMOVED***is***REMOVED***found,***REMOVED***else***REMOVED***`false`.
	***REMOVED****/
	function***REMOVED***hasUnicodeWord(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***reHasUnicodeWord.test(string);
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
	***REMOVED****/
	function***REMOVED***stringToArray(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***hasUnicode(string)
	***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***unicodeToArray(string)
	***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***asciiToArray(string);
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***a***REMOVED***Unicode***REMOVED***`string`***REMOVED***to***REMOVED***an***REMOVED***array.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***string***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***array.
	***REMOVED****/
	function***REMOVED***unicodeToArray(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***string.match(reUnicode)***REMOVED***||***REMOVED***[];
	}

	/**
	***REMOVED*******REMOVED***Splits***REMOVED***a***REMOVED***Unicode***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
	***REMOVED****/
	function***REMOVED***unicodeWords(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***string.match(reUnicodeWord)***REMOVED***||***REMOVED***[];
	}

	/*****REMOVED***Used***REMOVED***for***REMOVED***built-in***REMOVED***method***REMOVED***references.***REMOVED****/
	var***REMOVED***objectProto***REMOVED***=***REMOVED***Object.prototype;

	/**
	***REMOVED*******REMOVED***Used***REMOVED***to***REMOVED***resolve***REMOVED***the
	***REMOVED*******REMOVED***[`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	***REMOVED*******REMOVED***of***REMOVED***values.
	***REMOVED****/
	var***REMOVED***objectToString***REMOVED***=***REMOVED***objectProto.toString;

	/*****REMOVED***Built-in***REMOVED***value***REMOVED***references.***REMOVED****/
	var***REMOVED***Symbol***REMOVED***=***REMOVED***root.Symbol;

	/*****REMOVED***Used***REMOVED***to***REMOVED***convert***REMOVED***symbols***REMOVED***to***REMOVED***primitives***REMOVED***and***REMOVED***strings.***REMOVED****/
	var***REMOVED***symbolProto***REMOVED***=***REMOVED***Symbol***REMOVED***?***REMOVED***Symbol.prototype***REMOVED***:***REMOVED***undefined,
	***REMOVED******REMOVED******REMOVED******REMOVED***symbolToString***REMOVED***=***REMOVED***symbolProto***REMOVED***?***REMOVED***symbolProto.toString***REMOVED***:***REMOVED***undefined;

	/**
	***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.slice`***REMOVED***without***REMOVED***an***REMOVED***iteratee***REMOVED***call***REMOVED***guard.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***slice.
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[start=0]***REMOVED***The***REMOVED***start***REMOVED***position.
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[end=array.length]***REMOVED***The***REMOVED***end***REMOVED***position.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***slice***REMOVED***of***REMOVED***`array`.
	***REMOVED****/
	function***REMOVED***baseSlice(array,***REMOVED***start,***REMOVED***end)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***-1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array.length;

	***REMOVED******REMOVED***if***REMOVED***(start***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***-start***REMOVED***>***REMOVED***length***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***(length***REMOVED***+***REMOVED***start);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***end***REMOVED***=***REMOVED***end***REMOVED***>***REMOVED***length***REMOVED***?***REMOVED***length***REMOVED***:***REMOVED***end;
	***REMOVED******REMOVED***if***REMOVED***(end***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***+=***REMOVED***length;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***length***REMOVED***=***REMOVED***start***REMOVED***>***REMOVED***end***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***((end***REMOVED***-***REMOVED***start)***REMOVED***>>>***REMOVED***0);
	***REMOVED******REMOVED***start***REMOVED***>>>=***REMOVED***0;

	***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***Array(length);
	***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***result[index]***REMOVED***=***REMOVED***array[index***REMOVED***+***REMOVED***start];
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***result;
	}

	/**
	***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.toString`***REMOVED***which***REMOVED***doesn't***REMOVED***convert***REMOVED***nullish
	***REMOVED*******REMOVED***values***REMOVED***to***REMOVED***empty***REMOVED***strings.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***process.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***string.
	***REMOVED****/
	function***REMOVED***baseToString(value)***REMOVED***{
	***REMOVED******REMOVED***//***REMOVED***Exit***REMOVED***early***REMOVED***for***REMOVED***strings***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***performance***REMOVED***hit***REMOVED***in***REMOVED***some***REMOVED***environments.
	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***==***REMOVED***'string')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***if***REMOVED***(isSymbol(value))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***symbolToString***REMOVED***?***REMOVED***symbolToString.call(value)***REMOVED***:***REMOVED***'';
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***(value***REMOVED***+***REMOVED***'');
	***REMOVED******REMOVED***return***REMOVED***(result***REMOVED***==***REMOVED***'0'***REMOVED***&&***REMOVED***(1***REMOVED***/***REMOVED***value)***REMOVED***==***REMOVED***-Infinity)***REMOVED***?***REMOVED***'-0'***REMOVED***:***REMOVED***result;
	}

	/**
	***REMOVED*******REMOVED***Casts***REMOVED***`array`***REMOVED***to***REMOVED***a***REMOVED***slice***REMOVED***if***REMOVED***it's***REMOVED***needed.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***start***REMOVED***position.
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[end=array.length]***REMOVED***The***REMOVED***end***REMOVED***position.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***slice.
	***REMOVED****/
	function***REMOVED***castSlice(array,***REMOVED***start,***REMOVED***end)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***array.length;
	***REMOVED******REMOVED***end***REMOVED***=***REMOVED***end***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***length***REMOVED***:***REMOVED***end;
	***REMOVED******REMOVED***return***REMOVED***(!start***REMOVED***&&***REMOVED***end***REMOVED***>=***REMOVED***length)***REMOVED***?***REMOVED***array***REMOVED***:***REMOVED***baseSlice(array,***REMOVED***start,***REMOVED***end);
	}

	/**
	***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***like***REMOVED***`_.lowerFirst`.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***methodName***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***`String`***REMOVED***case***REMOVED***method***REMOVED***to***REMOVED***use.
	***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***case***REMOVED***function.
	***REMOVED****/
	function***REMOVED***createCaseFirst(methodName)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***function(string)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***strSymbols***REMOVED***=***REMOVED***hasUnicode(string)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***stringToArray(string)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***undefined;

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***chr***REMOVED***=***REMOVED***strSymbols
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***strSymbols[0]
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***string.charAt(0);

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***trailing***REMOVED***=***REMOVED***strSymbols
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***castSlice(strSymbols,***REMOVED***1).join('')
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***string.slice(1);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***chr[methodName]()***REMOVED***+***REMOVED***trailing;
	***REMOVED******REMOVED***};
	}

	/**
	***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***like***REMOVED***`_.camelCase`.
	***REMOVED****
	***REMOVED*******REMOVED***@private
	***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***callback***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***combine***REMOVED***each***REMOVED***word.
	***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***compounder***REMOVED***function.
	***REMOVED****/
	function***REMOVED***createCompounder(callback)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***function(string)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arrayReduce(words(deburr(string).replace(reApos,***REMOVED***'')),***REMOVED***callback,***REMOVED***'');
	***REMOVED******REMOVED***};
	}

	/**
	***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***object-like.***REMOVED***A***REMOVED***value***REMOVED***is***REMOVED***object-like***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***`null`
	***REMOVED*******REMOVED***and***REMOVED***has***REMOVED***a***REMOVED***`typeof`***REMOVED***result***REMOVED***of***REMOVED***"object".
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***4.0.0
	***REMOVED*******REMOVED***@category***REMOVED***Lang
	***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
	***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***object-like,***REMOVED***else***REMOVED***`false`.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.isObjectLike({});
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
	***REMOVED****
	***REMOVED*******REMOVED***_.isObjectLike([1,***REMOVED***2,***REMOVED***3]);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
	***REMOVED****
	***REMOVED*******REMOVED***_.isObjectLike(_.noop);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
	***REMOVED****
	***REMOVED*******REMOVED***_.isObjectLike(null);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
	***REMOVED****/
	function***REMOVED***isObjectLike(value)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***!!value***REMOVED***&&***REMOVED***typeof***REMOVED***value***REMOVED***==***REMOVED***'object';
	}

	/**
	***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***classified***REMOVED***as***REMOVED***a***REMOVED***`Symbol`***REMOVED***primitive***REMOVED***or***REMOVED***object.
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***4.0.0
	***REMOVED*******REMOVED***@category***REMOVED***Lang
	***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
	***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***symbol,***REMOVED***else***REMOVED***`false`.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.isSymbol(Symbol.iterator);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
	***REMOVED****
	***REMOVED*******REMOVED***_.isSymbol('abc');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
	***REMOVED****/
	function***REMOVED***isSymbol(value)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***==***REMOVED***'symbol'***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***(isObjectLike(value)***REMOVED***&&***REMOVED***objectToString.call(value)***REMOVED***==***REMOVED***symbolTag);
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***`value`***REMOVED***to***REMOVED***a***REMOVED***string.***REMOVED***An***REMOVED***empty***REMOVED***string***REMOVED***is***REMOVED***returned***REMOVED***for***REMOVED***`null`
	***REMOVED*******REMOVED***and***REMOVED***`undefined`***REMOVED***values.***REMOVED***The***REMOVED***sign***REMOVED***of***REMOVED***`-0`***REMOVED***is***REMOVED***preserved.
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***4.0.0
	***REMOVED*******REMOVED***@category***REMOVED***Lang
	***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***process.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***string.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.toString(null);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***''
	***REMOVED****
	***REMOVED*******REMOVED***_.toString(-0);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'-0'
	***REMOVED****
	***REMOVED*******REMOVED***_.toString([1,***REMOVED***2,***REMOVED***3]);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'1,2,3'
	***REMOVED****/
	function***REMOVED***toString(value)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***value***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***baseToString(value);
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***`string`***REMOVED***to***REMOVED***[camel***REMOVED***case](https://en.wikipedia.org/wiki/CamelCase).
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***3.0.0
	***REMOVED*******REMOVED***@category***REMOVED***String
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***camel***REMOVED***cased***REMOVED***string.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.camelCase('Foo***REMOVED***Bar');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
	***REMOVED****
	***REMOVED*******REMOVED***_.camelCase('--foo-bar--');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
	***REMOVED****
	***REMOVED*******REMOVED***_.camelCase('__FOO_BAR__');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fooBar'
	***REMOVED****/
	var***REMOVED***camelCase***REMOVED***=***REMOVED***createCompounder(function(result,***REMOVED***word,***REMOVED***index)***REMOVED***{
	***REMOVED******REMOVED***word***REMOVED***=***REMOVED***word.toLowerCase();
	***REMOVED******REMOVED***return***REMOVED***result***REMOVED***+***REMOVED***(index***REMOVED***?***REMOVED***capitalize(word)***REMOVED***:***REMOVED***word);
	});

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***the***REMOVED***first***REMOVED***character***REMOVED***of***REMOVED***`string`***REMOVED***to***REMOVED***upper***REMOVED***case***REMOVED***and***REMOVED***the***REMOVED***remaining
	***REMOVED*******REMOVED***to***REMOVED***lower***REMOVED***case.
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***3.0.0
	***REMOVED*******REMOVED***@category***REMOVED***String
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***capitalize.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***capitalized***REMOVED***string.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.capitalize('FRED');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'Fred'
	***REMOVED****/
	function***REMOVED***capitalize(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***upperFirst(toString(string).toLowerCase());
	}

	/**
	***REMOVED*******REMOVED***Deburrs***REMOVED***`string`***REMOVED***by***REMOVED***converting
	***REMOVED*******REMOVED***[Latin-1***REMOVED***Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	***REMOVED*******REMOVED***and***REMOVED***[Latin***REMOVED***Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	***REMOVED*******REMOVED***letters***REMOVED***to***REMOVED***basic***REMOVED***Latin***REMOVED***letters***REMOVED***and***REMOVED***removing
	***REMOVED*******REMOVED***[combining***REMOVED***diacritical***REMOVED***marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***3.0.0
	***REMOVED*******REMOVED***@category***REMOVED***String
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***deburr.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***deburred***REMOVED***string.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.deburr('déjà***REMOVED***vu');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'deja***REMOVED***vu'
	***REMOVED****/
	function***REMOVED***deburr(string)***REMOVED***{
	***REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);
	***REMOVED******REMOVED***return***REMOVED***string***REMOVED***&&***REMOVED***string.replace(reLatin,***REMOVED***deburrLetter).replace(reComboMark,***REMOVED***'');
	}

	/**
	***REMOVED*******REMOVED***Converts***REMOVED***the***REMOVED***first***REMOVED***character***REMOVED***of***REMOVED***`string`***REMOVED***to***REMOVED***upper***REMOVED***case.
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***4.0.0
	***REMOVED*******REMOVED***@category***REMOVED***String
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***convert.
	***REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***Returns***REMOVED***the***REMOVED***converted***REMOVED***string.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.upperFirst('fred');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'Fred'
	***REMOVED****
	***REMOVED*******REMOVED***_.upperFirst('FRED');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'FRED'
	***REMOVED****/
	var***REMOVED***upperFirst***REMOVED***=***REMOVED***createCaseFirst('toUpperCase');

	/**
	***REMOVED*******REMOVED***Splits***REMOVED***`string`***REMOVED***into***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***its***REMOVED***words.
	***REMOVED****
	***REMOVED*******REMOVED***@static
	***REMOVED*******REMOVED***@memberOf***REMOVED***_
	***REMOVED*******REMOVED***@since***REMOVED***3.0.0
	***REMOVED*******REMOVED***@category***REMOVED***String
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***[string='']***REMOVED***The***REMOVED***string***REMOVED***to***REMOVED***inspect.
	***REMOVED*******REMOVED***@param***REMOVED***{RegExp|string}***REMOVED***[pattern]***REMOVED***The***REMOVED***pattern***REMOVED***to***REMOVED***match***REMOVED***words.
	***REMOVED*******REMOVED***@param-***REMOVED***{Object}***REMOVED***[guard]***REMOVED***Enables***REMOVED***use***REMOVED***as***REMOVED***an***REMOVED***iteratee***REMOVED***for***REMOVED***methods***REMOVED***like***REMOVED***`_.map`.
	***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***words***REMOVED***of***REMOVED***`string`.
	***REMOVED*******REMOVED***@example
	***REMOVED****
	***REMOVED*******REMOVED***_.words('fred,***REMOVED***barney,***REMOVED***&***REMOVED***pebbles');
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['fred',***REMOVED***'barney',***REMOVED***'pebbles']
	***REMOVED****
	***REMOVED*******REMOVED***_.words('fred,***REMOVED***barney,***REMOVED***&***REMOVED***pebbles',***REMOVED***/[^,***REMOVED***]+/g);
	***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***['fred',***REMOVED***'barney',***REMOVED***'&',***REMOVED***'pebbles']
	***REMOVED****/
	function***REMOVED***words(string,***REMOVED***pattern,***REMOVED***guard)***REMOVED***{
	***REMOVED******REMOVED***string***REMOVED***=***REMOVED***toString(string);
	***REMOVED******REMOVED***pattern***REMOVED***=***REMOVED***pattern;

	***REMOVED******REMOVED***if***REMOVED***(pattern***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasUnicodeWord(string)***REMOVED***?***REMOVED***unicodeWords(string)***REMOVED***:***REMOVED***asciiWords(string);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***string.match(pattern)***REMOVED***||***REMOVED***[];
	}

	lodash_camelcase***REMOVED***=***REMOVED***camelCase;
	return***REMOVED***lodash_camelcase;
}

var***REMOVED***hasRequiredLocalsConvention;

function***REMOVED***requireLocalsConvention***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredLocalsConvention)***REMOVED***return***REMOVED***localsConvention;
	hasRequiredLocalsConvention***REMOVED***=***REMOVED***1;

	Object.defineProperty(localsConvention,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	localsConvention.makeLocalsConventionReducer***REMOVED***=***REMOVED***makeLocalsConventionReducer;

	var***REMOVED***_lodash***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireLodash_camelcase());

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

	function***REMOVED***dashesCamelCase(string)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***string.replace(/-+(\w)/g,***REMOVED***(_,***REMOVED***firstLetter)***REMOVED***=>***REMOVED***firstLetter.toUpperCase());
	}

	function***REMOVED***makeLocalsConventionReducer(localsConvention,***REMOVED***inputFile)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***isFunc***REMOVED***=***REMOVED***typeof***REMOVED***localsConvention***REMOVED***===***REMOVED***"function";
	***REMOVED******REMOVED***return***REMOVED***(tokens,***REMOVED***[className,***REMOVED***value])***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunc)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***convention***REMOVED***=***REMOVED***localsConvention(className,***REMOVED***value,***REMOVED***inputFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[convention]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokens;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(localsConvention)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"camelCase":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[className]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[(0,***REMOVED***_lodash.default)(className)]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"camelCaseOnly":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[(0,***REMOVED***_lodash.default)(className)]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"dashes":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[className]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[dashesCamelCase(className)]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"dashesOnly":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens[dashesCamelCase(className)]***REMOVED***=***REMOVED***value;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***tokens;
	***REMOVED******REMOVED***};
	}
	return***REMOVED***localsConvention;
}

var***REMOVED***FileSystemLoader***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredFileSystemLoader;

function***REMOVED***requireFileSystemLoader***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredFileSystemLoader)***REMOVED***return***REMOVED***FileSystemLoader;
	hasRequiredFileSystemLoader***REMOVED***=***REMOVED***1;

	Object.defineProperty(FileSystemLoader,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	FileSystemLoader.default***REMOVED***=***REMOVED***void***REMOVED***0;

	var***REMOVED***_postcss***REMOVED***=***REMOVED***_interopRequireDefault(require$$0$1);

	var***REMOVED***_path***REMOVED***=***REMOVED***_interopRequireDefault(path$1);

	var***REMOVED***_Parser***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireParser$1());

	var***REMOVED***_fs***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireFs();

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

	//***REMOVED***Initially***REMOVED***copied***REMOVED***from***REMOVED***https://github.com/css-modules/css-modules-loader-core
	class***REMOVED***Core***REMOVED***{
	***REMOVED******REMOVED***constructor(plugins)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.plugins***REMOVED***=***REMOVED***plugins***REMOVED***||***REMOVED***Core.defaultPlugins;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***async***REMOVED***load(sourceString,***REMOVED***sourcePath,***REMOVED***trace,***REMOVED***pathFetcher)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_Parser.default(pathFetcher,***REMOVED***trace);
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***this.plugins.concat([parser.plugin()]);
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***await***REMOVED***(0,***REMOVED***_postcss.default)(plugins).process(sourceString,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***sourcePath
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injectableSource:***REMOVED***result.css,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens:***REMOVED***parser.exportTokens
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED***}

	}***REMOVED***//***REMOVED***Sorts***REMOVED***dependencies***REMOVED***in***REMOVED***the***REMOVED***following***REMOVED***way:
	//***REMOVED***AAA***REMOVED***comes***REMOVED***before***REMOVED***AA***REMOVED***and***REMOVED***A
	//***REMOVED***AB***REMOVED***comes***REMOVED***after***REMOVED***AA***REMOVED***and***REMOVED***before***REMOVED***A
	//***REMOVED***All***REMOVED***Bs***REMOVED***come***REMOVED***after***REMOVED***all***REMOVED***As
	//***REMOVED***This***REMOVED***ensures***REMOVED***that***REMOVED***the***REMOVED***files***REMOVED***are***REMOVED***always***REMOVED***returned***REMOVED***in***REMOVED***the***REMOVED***following***REMOVED***order:
	//***REMOVED***-***REMOVED***In***REMOVED***the***REMOVED***order***REMOVED***they***REMOVED***were***REMOVED***required,***REMOVED***except
	//***REMOVED***-***REMOVED***After***REMOVED***all***REMOVED***their***REMOVED***dependencies


	const***REMOVED***traceKeySorter***REMOVED***=***REMOVED***(a,***REMOVED***b)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***<***REMOVED***b.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***<***REMOVED***b.substring(0,***REMOVED***a.length)***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***>***REMOVED***b.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a.substring(0,***REMOVED***b.length)***REMOVED***<=***REMOVED***b***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***a***REMOVED***<***REMOVED***b***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***1;
	};

	let***REMOVED***FileSystemLoader$1***REMOVED***=***REMOVED***class***REMOVED***FileSystemLoader***REMOVED***{
	***REMOVED******REMOVED***constructor(root,***REMOVED***plugins,***REMOVED***fileResolve)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(root***REMOVED***===***REMOVED***"/"***REMOVED***&&***REMOVED***process.platform***REMOVED***===***REMOVED***"win32")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cwdDrive***REMOVED***=***REMOVED***process.cwd().slice(0,***REMOVED***3);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/^[A-Za-z]:\\$/.test(cwdDrive))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`Failed***REMOVED***to***REMOVED***obtain***REMOVED***root***REMOVED***from***REMOVED***"${process.cwd()}".`);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***=***REMOVED***cwdDrive;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***root;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.fileResolve***REMOVED***=***REMOVED***fileResolve;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.sources***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.traces***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.importNr***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.core***REMOVED***=***REMOVED***new***REMOVED***Core(plugins);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.tokensByFile***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***this.fs***REMOVED***=***REMOVED***(0,***REMOVED***_fs.getFileSystem)();
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***async***REMOVED***fetch(_newPath,***REMOVED***relativeTo,***REMOVED***_trace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newPath***REMOVED***=***REMOVED***_newPath.replace(/^["']|["']$/g,***REMOVED***"");

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***trace***REMOVED***=***REMOVED***_trace***REMOVED***||***REMOVED***String.fromCharCode(this.importNr++);

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***useFileResolve***REMOVED***=***REMOVED***typeof***REMOVED***this.fileResolve***REMOVED***===***REMOVED***"function";
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileResolvedPath***REMOVED***=***REMOVED***useFileResolve***REMOVED***?***REMOVED***await***REMOVED***this.fileResolve(newPath,***REMOVED***relativeTo)***REMOVED***:***REMOVED***await***REMOVED***Promise.resolve();

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fileResolvedPath***REMOVED***&&***REMOVED***!_path.default.isAbsolute(fileResolvedPath))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('The***REMOVED***returned***REMOVED***path***REMOVED***from***REMOVED***the***REMOVED***"fileResolve"***REMOVED***option***REMOVED***must***REMOVED***be***REMOVED***absolute.');
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***relativeDir***REMOVED***=***REMOVED***_path.default.dirname(relativeTo);

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rootRelativePath***REMOVED***=***REMOVED***fileResolvedPath***REMOVED***||***REMOVED***_path.default.resolve(relativeDir,***REMOVED***newPath);

	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fileRelativePath***REMOVED***=***REMOVED***fileResolvedPath***REMOVED***||***REMOVED***_path.default.resolve(_path.default.resolve(this.root,***REMOVED***relativeDir),***REMOVED***newPath);***REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***path***REMOVED***is***REMOVED***not***REMOVED***relative***REMOVED***or***REMOVED***absolute,***REMOVED***try***REMOVED***to***REMOVED***resolve***REMOVED***it***REMOVED***in***REMOVED***node_modules


	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!useFileResolve***REMOVED***&&***REMOVED***newPath[0]***REMOVED***!==***REMOVED***"."***REMOVED***&&***REMOVED***!_path.default.isAbsolute(newPath))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fileRelativePath***REMOVED***=***REMOVED***require.resolve(newPath);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{//***REMOVED***noop
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***this.tokensByFile[fileRelativePath];
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokens)***REMOVED***return***REMOVED***tokens;
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise((resolve,***REMOVED***reject)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.fs.readFile(fileRelativePath,***REMOVED***"utf-8",***REMOVED***async***REMOVED***(err,***REMOVED***source)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err)***REMOVED***reject(err);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injectableSource,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***await***REMOVED***this.core.load(source,***REMOVED***rootRelativePath,***REMOVED***trace,***REMOVED***this.fetch.bind(this));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.sources[fileRelativePath]***REMOVED***=***REMOVED***injectableSource;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.traces[trace]***REMOVED***=***REMOVED***fileRelativePath;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.tokensByFile[fileRelativePath]***REMOVED***=***REMOVED***exportTokens;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolve(exportTokens);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***get***REMOVED***finalSource()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***traces***REMOVED***=***REMOVED***this.traces;
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sources***REMOVED***=***REMOVED***this.sources;
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***written***REMOVED***=***REMOVED***new***REMOVED***Set();
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.keys(traces).sort(traceKeySorter).map(key***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filename***REMOVED***=***REMOVED***traces[key];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(written.has(filename))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***written.add(filename);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***sources[filename];
	***REMOVED******REMOVED******REMOVED******REMOVED***}).join("");
	***REMOVED******REMOVED***}

	};

	FileSystemLoader.default***REMOVED***=***REMOVED***FileSystemLoader$1;
	return***REMOVED***FileSystemLoader;
}

var***REMOVED***scoping***REMOVED***=***REMOVED***{};

var***REMOVED***src$3***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***topologicalSort_1;
var***REMOVED***hasRequiredTopologicalSort;

function***REMOVED***requireTopologicalSort***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTopologicalSort)***REMOVED***return***REMOVED***topologicalSort_1;
	hasRequiredTopologicalSort***REMOVED***=***REMOVED***1;
	const***REMOVED***PERMANENT_MARKER***REMOVED***=***REMOVED***2;
	const***REMOVED***TEMPORARY_MARKER***REMOVED***=***REMOVED***1;

	function***REMOVED***createError(node,***REMOVED***graph)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***er***REMOVED***=***REMOVED***new***REMOVED***Error("Nondeterministic***REMOVED***import's***REMOVED***order");

	***REMOVED******REMOVED***const***REMOVED***related***REMOVED***=***REMOVED***graph[node];
	***REMOVED******REMOVED***const***REMOVED***relatedNode***REMOVED***=***REMOVED***related.find(
	***REMOVED******REMOVED******REMOVED******REMOVED***(relatedNode)***REMOVED***=>***REMOVED***graph[relatedNode].indexOf(node)***REMOVED***>***REMOVED***-1
	***REMOVED******REMOVED***);

	***REMOVED******REMOVED***er.nodes***REMOVED***=***REMOVED***[node,***REMOVED***relatedNode];

	***REMOVED******REMOVED***return***REMOVED***er;
	}

	function***REMOVED***walkGraph(node,***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(state[node]***REMOVED***===***REMOVED***PERMANENT_MARKER)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(state[node]***REMOVED***===***REMOVED***TEMPORARY_MARKER)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(strict)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createError(node,***REMOVED***graph);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***state[node]***REMOVED***=***REMOVED***TEMPORARY_MARKER;

	***REMOVED******REMOVED***const***REMOVED***children***REMOVED***=***REMOVED***graph[node];
	***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***children.length;

	***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***error***REMOVED***=***REMOVED***walkGraph(children[i],***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***error;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***state[node]***REMOVED***=***REMOVED***PERMANENT_MARKER;

	***REMOVED******REMOVED***result.push(node);
	}

	function***REMOVED***topologicalSort(graph,***REMOVED***strict)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***const***REMOVED***state***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***Object.keys(graph);
	***REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***nodes.length;

	***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***++i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***er***REMOVED***=***REMOVED***walkGraph(nodes[i],***REMOVED***graph,***REMOVED***state,***REMOVED***result,***REMOVED***strict);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(er***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***er;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***result;
	}

	topologicalSort_1***REMOVED***=***REMOVED***topologicalSort;
	return***REMOVED***topologicalSort_1;
}

var***REMOVED***hasRequiredSrc$3;

function***REMOVED***requireSrc$3***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSrc$3)***REMOVED***return***REMOVED***src$3.exports;
	hasRequiredSrc$3***REMOVED***=***REMOVED***1;
	const***REMOVED***topologicalSort***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTopologicalSort();

	const***REMOVED***matchImports***REMOVED***=***REMOVED***/^(.+?)\s+from\s+(?:"([^"]+)"|'([^']+)'|(global))$/;
	const***REMOVED***icssImport***REMOVED***=***REMOVED***/^:import\((?:"([^"]+)"|'([^']+)')\)/;

	const***REMOVED***VISITED_MARKER***REMOVED***=***REMOVED***1;

	/**
	***REMOVED*******REMOVED***:import('G')***REMOVED***{}
	***REMOVED****
	***REMOVED*******REMOVED***Rule
	***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
	***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'B'

	***REMOVED*******REMOVED***Rule
	***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
	***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'A'
	***REMOVED*******REMOVED******REMOVED******REMOVED***composes:***REMOVED***...***REMOVED***from***REMOVED***'C'
	***REMOVED****
	***REMOVED*******REMOVED***Results***REMOVED***in:
	***REMOVED****
	***REMOVED*******REMOVED***graph:***REMOVED***{
	***REMOVED*******REMOVED******REMOVED******REMOVED***G:***REMOVED***[],
	***REMOVED*******REMOVED******REMOVED******REMOVED***A:***REMOVED***[],
	***REMOVED*******REMOVED******REMOVED******REMOVED***B:***REMOVED***['A'],
	***REMOVED*******REMOVED******REMOVED******REMOVED***C:***REMOVED***['A'],
	***REMOVED*******REMOVED***}
	***REMOVED****/
	function***REMOVED***addImportToGraph(importId,***REMOVED***parentId,***REMOVED***graph,***REMOVED***visited)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***siblingsId***REMOVED***=***REMOVED***parentId***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***"siblings";
	***REMOVED******REMOVED***const***REMOVED***visitedId***REMOVED***=***REMOVED***parentId***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***importId;

	***REMOVED******REMOVED***if***REMOVED***(visited[visitedId]***REMOVED***!==***REMOVED***VISITED_MARKER)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(visited[siblingsId]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***visited[siblingsId]***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***siblings***REMOVED***=***REMOVED***visited[siblingsId];

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(graph[importId]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***graph[importId]***REMOVED***=***REMOVED***graph[importId].concat(siblings);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***graph[importId]***REMOVED***=***REMOVED***siblings.slice();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***visited[visitedId]***REMOVED***=***REMOVED***VISITED_MARKER;

	***REMOVED******REMOVED******REMOVED******REMOVED***siblings.push(importId);
	***REMOVED******REMOVED***}
	}

	src$3.exports***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***importIndex***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***const***REMOVED***createImportedName***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***options.createImportedName***REMOVED***!==***REMOVED***"function"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(importName***REMOVED***/*,***REMOVED***path*/)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`i__imported_${importName.replace(/\W/g,***REMOVED***"_")}_${importIndex++}`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***options.createImportedName;
	***REMOVED******REMOVED***const***REMOVED***failOnWrongOrder***REMOVED***=***REMOVED***options.failOnWrongOrder;

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-extract-imports",
	***REMOVED******REMOVED******REMOVED******REMOVED***prepare()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***graph***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***visited***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existingImports***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importDecls***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***postcss)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Check***REMOVED***the***REMOVED***existing***REMOVED***imports***REMOVED***order***REMOVED***and***REMOVED***save***REMOVED***refs
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***icssImport.exec(rule.selector);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***/*match*/***REMOVED***doubleQuotePath,***REMOVED***singleQuotePath]***REMOVED***=***REMOVED***matches;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***doubleQuotePath***REMOVED***||***REMOVED***singleQuotePath;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImportToGraph(importPath,***REMOVED***"root",***REMOVED***graph,***REMOVED***visited);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existingImports[importPath]***REMOVED***=***REMOVED***rule;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkDecls(/^composes$/,***REMOVED***(declaration)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***multiple***REMOVED***=***REMOVED***declaration.value.split(",");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***values***REMOVED***=***REMOVED***[];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***multiple.forEach((value)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***value.trim().match(matchImports);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matches)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***values.push(value);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tmpSymbols;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/*match*/***REMOVED***symbols,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doubleQuotePath,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***singleQuotePath,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]***REMOVED***=***REMOVED***matches;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(global)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Composing***REMOVED***globals***REMOVED***simply***REMOVED***means***REMOVED***changing***REMOVED***these***REMOVED***classes***REMOVED***to***REMOVED***wrap***REMOVED***them***REMOVED***in***REMOVED***global(name)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpSymbols***REMOVED***=***REMOVED***symbols.split(/\s+/).map((s)***REMOVED***=>***REMOVED***`global(${s})`);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***doubleQuotePath***REMOVED***||***REMOVED***singleQuotePath;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parent***REMOVED***=***REMOVED***declaration.parent;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parentIndexes***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parent.type***REMOVED***!==***REMOVED***"root")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentIndexes***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.parent.index(parent)***REMOVED***+***REMOVED***"_"***REMOVED***+***REMOVED***parentIndexes;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parent;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***selector***REMOVED***}***REMOVED***=***REMOVED***declaration.parent;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentRule***REMOVED***=***REMOVED***`_${parentIndexes}${selector}`;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addImportToGraph(importPath,***REMOVED***parentRule,***REMOVED***graph,***REMOVED***visited);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importDecls[importPath]***REMOVED***=***REMOVED***declaration;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports[importPath]***REMOVED***=***REMOVED***imports[importPath]***REMOVED***||***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmpSymbols***REMOVED***=***REMOVED***symbols.split(/\s+/).map((s)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!imports[importPath][s])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports[importPath][s]***REMOVED***=***REMOVED***createImportedName(s,***REMOVED***importPath);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***imports[importPath][s];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***values.push(tmpSymbols.join("***REMOVED***"));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***values.join(",***REMOVED***");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importsOrder***REMOVED***=***REMOVED***topologicalSort(graph,***REMOVED***failOnWrongOrder);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importsOrder***REMOVED***instanceof***REMOVED***Error)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importPath***REMOVED***=***REMOVED***importsOrder.nodes.find((importPath)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-prototype-builtins
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importDecls.hasOwnProperty(importPath)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***importDecls[importPath];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***decl.error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Failed***REMOVED***to***REMOVED***resolve***REMOVED***order***REMOVED***of***REMOVED***composed***REMOVED***modules***REMOVED***"***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importsOrder.nodes
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((importPath)***REMOVED***=>***REMOVED***"`"***REMOVED***+***REMOVED***importPath***REMOVED***+***REMOVED***"`")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join(",***REMOVED***")***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***".",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin:***REMOVED***"postcss-modules-extract-imports",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word:***REMOVED***"composes",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastImportRule;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importsOrder.forEach((path)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedSymbols***REMOVED***=***REMOVED***imports[path];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rule***REMOVED***=***REMOVED***existingImports[path];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rule***REMOVED***&&***REMOVED***importedSymbols)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule***REMOVED***=***REMOVED***postcss.rule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import("${path}")`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastImportRule)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.insertAfter(lastImportRule,***REMOVED***rule);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(rule);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastImportRule***REMOVED***=***REMOVED***rule;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!importedSymbols)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(importedSymbols).forEach((importedSymbol)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.append(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***importedSymbol,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***importedSymbols[importedSymbol],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED***};
	};

	src$3.exports.postcss***REMOVED***=***REMOVED***true;
	return***REMOVED***src$3.exports;
}

var***REMOVED***wasmHash***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***hasRequiredWasmHash;

function***REMOVED***requireWasmHash***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredWasmHash)***REMOVED***return***REMOVED***wasmHash.exports;
	hasRequiredWasmHash***REMOVED***=***REMOVED***1;

	//***REMOVED***65536***REMOVED***is***REMOVED***the***REMOVED***size***REMOVED***of***REMOVED***a***REMOVED***wasm***REMOVED***memory***REMOVED***page
	//***REMOVED***64***REMOVED***is***REMOVED***the***REMOVED***maximum***REMOVED***chunk***REMOVED***size***REMOVED***for***REMOVED***every***REMOVED***possible***REMOVED***wasm***REMOVED***hash***REMOVED***implementation
	//***REMOVED***4***REMOVED***is***REMOVED***the***REMOVED***maximum***REMOVED***number***REMOVED***of***REMOVED***bytes***REMOVED***per***REMOVED***char***REMOVED***for***REMOVED***string***REMOVED***encoding***REMOVED***(max***REMOVED***is***REMOVED***utf-8)
	//***REMOVED***~3***REMOVED***makes***REMOVED***sure***REMOVED***that***REMOVED***it's***REMOVED***always***REMOVED***a***REMOVED***block***REMOVED***of***REMOVED***4***REMOVED***chars,***REMOVED***so***REMOVED***avoid***REMOVED***partially***REMOVED***encoded***REMOVED***bytes***REMOVED***for***REMOVED***base64
	const***REMOVED***MAX_SHORT_STRING***REMOVED***=***REMOVED***Math.floor((65536***REMOVED***-***REMOVED***64)***REMOVED***/***REMOVED***4)***REMOVED***&***REMOVED***-4;

	class***REMOVED***WasmHash***REMOVED***{
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{WebAssembly.Instance}***REMOVED***instance***REMOVED***wasm***REMOVED***instance
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{WebAssembly.Instance[]}***REMOVED***instancesPool***REMOVED***pool***REMOVED***of***REMOVED***instances
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***chunkSize***REMOVED***size***REMOVED***of***REMOVED***data***REMOVED***chunks***REMOVED***passed***REMOVED***to***REMOVED***wasm
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***digestSize***REMOVED***size***REMOVED***of***REMOVED***digest***REMOVED***returned***REMOVED***by***REMOVED***wasm
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***constructor(instance,***REMOVED***instancesPool,***REMOVED***chunkSize,***REMOVED***digestSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***/*****REMOVED***@type***REMOVED***{any}***REMOVED****/***REMOVED***(instance.exports);

	***REMOVED******REMOVED******REMOVED******REMOVED***exports.init();

	***REMOVED******REMOVED******REMOVED******REMOVED***this.exports***REMOVED***=***REMOVED***exports;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.mem***REMOVED***=***REMOVED***Buffer.from(exports.memory.buffer,***REMOVED***0,***REMOVED***65536);
	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.instancesPool***REMOVED***=***REMOVED***instancesPool;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.chunkSize***REMOVED***=***REMOVED***chunkSize;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.digestSize***REMOVED***=***REMOVED***digestSize;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***reset()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.exports.init();
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Buffer***REMOVED***|***REMOVED***string}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{BufferEncoding=}***REMOVED***encoding***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***itself
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***data***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(data.length***REMOVED***>***REMOVED***MAX_SHORT_STRING)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithShortString(data.slice(0,***REMOVED***MAX_SHORT_STRING),***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data***REMOVED***=***REMOVED***data.slice(MAX_SHORT_STRING);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithShortString(data,***REMOVED***encoding);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this._updateWithBuffer(data);

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{BufferEncoding=}***REMOVED***encoding***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{void}
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***_updateWithShortString(data,***REMOVED***encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem,***REMOVED***chunkSize***REMOVED***}***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***endPos;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(data.length***REMOVED***<***REMOVED***70)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!encoding***REMOVED***||***REMOVED***encoding***REMOVED***===***REMOVED***"utf-8"***REMOVED***||***REMOVED***encoding***REMOVED***===***REMOVED***"utf8")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***data.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cc***REMOVED***=***REMOVED***data.charCodeAt(i);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cc***REMOVED***<***REMOVED***0x80)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos++]***REMOVED***=***REMOVED***cc;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(cc***REMOVED***<***REMOVED***0x800)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos]***REMOVED***=***REMOVED***(cc***REMOVED***>>***REMOVED***6)***REMOVED***|***REMOVED***0xc0;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos***REMOVED***+***REMOVED***1]***REMOVED***=***REMOVED***(cc***REMOVED***&***REMOVED***0x3f)***REMOVED***|***REMOVED***0x80;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***+=***REMOVED***2;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***bail-out***REMOVED***for***REMOVED***weird***REMOVED***chars
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***+=***REMOVED***mem.write(data.slice(i),***REMOVED***endPos,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(encoding***REMOVED***===***REMOVED***"latin1")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***data.length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cc***REMOVED***=***REMOVED***data.charCodeAt(i);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem[endPos++]***REMOVED***=***REMOVED***cc;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered***REMOVED***+***REMOVED***mem.write(data,***REMOVED***buffered,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***buffered***REMOVED***+***REMOVED***mem.write(data,***REMOVED***buffered,***REMOVED***encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endPos***REMOVED***<***REMOVED***chunkSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***endPos;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***l***REMOVED***=***REMOVED***endPos***REMOVED***&***REMOVED***~(this.chunkSize***REMOVED***-***REMOVED***1);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newBuffered***REMOVED***=***REMOVED***endPos***REMOVED***-***REMOVED***l;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***newBuffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newBuffered***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mem.copyWithin(0,***REMOVED***l,***REMOVED***endPos);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{void}
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***_updateWithBuffer(data)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem***REMOVED***}***REMOVED***=***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***length***REMOVED***=***REMOVED***data.length;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(buffered***REMOVED***+***REMOVED***length***REMOVED***<***REMOVED***this.chunkSize)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***length);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***+=***REMOVED***length;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***l***REMOVED***=***REMOVED***(buffered***REMOVED***+***REMOVED***length)***REMOVED***&***REMOVED***~(this.chunkSize***REMOVED***-***REMOVED***1);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(l***REMOVED***>***REMOVED***65536)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***65536***REMOVED***-***REMOVED***buffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***i);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(65536);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***stop***REMOVED***=***REMOVED***l***REMOVED***-***REMOVED***buffered***REMOVED***-***REMOVED***65536;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***stop)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***i,***REMOVED***i***REMOVED***+***REMOVED***65536);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(65536);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***65536;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***i,***REMOVED***l***REMOVED***-***REMOVED***buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l***REMOVED***-***REMOVED***buffered***REMOVED***-***REMOVED***i);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***buffered,***REMOVED***0,***REMOVED***l***REMOVED***-***REMOVED***buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports.update(l);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newBuffered***REMOVED***=***REMOVED***length***REMOVED***+***REMOVED***buffered***REMOVED***-***REMOVED***l;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffered***REMOVED***=***REMOVED***newBuffered;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newBuffered***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.copy(mem,***REMOVED***0,***REMOVED***length***REMOVED***-***REMOVED***newBuffered,***REMOVED***length);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***digest(type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***exports,***REMOVED***buffered,***REMOVED***mem,***REMOVED***digestSize***REMOVED***}***REMOVED***=***REMOVED***this;

	***REMOVED******REMOVED******REMOVED******REMOVED***exports.final(buffered);

	***REMOVED******REMOVED******REMOVED******REMOVED***this.instancesPool.push(this);

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hex***REMOVED***=***REMOVED***mem.toString("latin1",***REMOVED***0,***REMOVED***digestSize);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"hex")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hex;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"binary"***REMOVED***||***REMOVED***!type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Buffer.from(hex,***REMOVED***"hex");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Buffer.from(hex,***REMOVED***"hex").toString(type);
	***REMOVED******REMOVED***}
	}

	const***REMOVED***create***REMOVED***=***REMOVED***(wasmModule,***REMOVED***instancesPool,***REMOVED***chunkSize,***REMOVED***digestSize)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(instancesPool.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***old***REMOVED***=***REMOVED***instancesPool.pop();

	***REMOVED******REMOVED******REMOVED******REMOVED***old.reset();

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***old;
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***WasmHash(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***new***REMOVED***WebAssembly.Instance(wasmModule),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instancesPool,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***chunkSize,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestSize
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}
	};

	wasmHash.exports***REMOVED***=***REMOVED***create;
	wasmHash.exports.MAX_SHORT_STRING***REMOVED***=***REMOVED***MAX_SHORT_STRING;
	return***REMOVED***wasmHash.exports;
}

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***xxhash64_1;
var***REMOVED***hasRequiredXxhash64;

function***REMOVED***requireXxhash64***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredXxhash64)***REMOVED***return***REMOVED***xxhash64_1;
	hasRequiredXxhash64***REMOVED***=***REMOVED***1;

	const***REMOVED***create***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireWasmHash();

	//#region***REMOVED***wasm***REMOVED***code:***REMOVED***xxhash64***REMOVED***(../../../assembly/hash/xxhash64.asm.ts)***REMOVED***--initialMemory***REMOVED***1
	const***REMOVED***xxhash64***REMOVED***=***REMOVED***new***REMOVED***WebAssembly.Module(
	***REMOVED******REMOVED***Buffer.from(
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***1173***REMOVED***bytes
	***REMOVED******REMOVED******REMOVED******REMOVED***"AGFzbQEAAAABCAJgAX8AYAAAAwQDAQAABQMBAAEGGgV+AUIAC34BQgALfgFCAAt+AUIAC34BQgALByIEBGluaXQAAAZ1cGRhdGUAAQVmaW5hbAACBm1lbW9yeQIACrUIAzAAQtbrgu7q/Yn14AAkAELP1tO+0ser2UIkAUIAJAJC+erQ0OfJoeThACQDQgAkBAvUAQIBfwR+IABFBEAPCyMEIACtfCQEIwAhAiMBIQMjAiEEIwMhBQNAIAIgASkDAELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiECIAMgASkDCELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEDIAQgASkDEELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEEIAUgASkDGELP1tO+0ser2UJ+fEIfiUKHla+vmLbem55/fiEFIAAgAUEgaiIBSw0ACyACJAAgAyQBIAQkAiAFJAMLqwYCAX8EfiMEQgBSBH4jACICQgGJIwEiA0IHiXwjAiIEQgyJfCMDIgVCEol8IAJCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0gA0LP1tO+0ser2UJ+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSAEQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IAVCz9bTvtLHq9lCfkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0FQsXP2bLx5brqJwsjBCAArXx8IQIDQCABQQhqIABNBEAgAiABKQMAQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef36FQhuJQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IQIgAUEIaiEBDAELCyABQQRqIABNBEACfyACIAE1AgBCh5Wvr5i23puef36FQheJQs/W077Sx6vZQn5C+fPd8Zn2masWfCECIAFBBGoLIQELA0AgACABRwRAIAIgATEAAELFz9my8eW66id+hUILiUKHla+vmLbem55/fiECIAFBAWohAQwBCwtBACACIAJCIYiFQs/W077Sx6vZQn4iAiACQh2IhUL5893xmfaZqxZ+IgIgAkIgiIUiAkIgiCIDQv//A4NCIIYgA0KAgPz/D4NCEIiEIgNC/4GAgPAfg0IQhiADQoD+g4CA4D+DQgiIhCIDQo+AvIDwgcAHg0IIhiADQvCBwIeAnoD4AINCBIiEIgNChoyYsODAgYMGfEIEiEKBgoSIkKDAgAGDQid+IANCsODAgYOGjJgwhHw3AwBBCCACQv////8PgyICQv//A4NCIIYgAkKAgPz/D4NCEIiEIgJC/4GAgPAfg0IQhiACQoD+g4CA4D+DQgiIhCICQo+AvIDwgcAHg0IIhiACQvCBwIeAnoD4AINCBIiEIgJChoyYsODAgYMGfEIEiEKBgoSIkKDAgAGDQid+IAJCsODAgYOGjJgwhHw3AwAL",
	***REMOVED******REMOVED******REMOVED******REMOVED***"base64"
	***REMOVED******REMOVED***)
	);
	//#endregion

	xxhash64_1***REMOVED***=***REMOVED***create.bind(null,***REMOVED***xxhash64,***REMOVED***[],***REMOVED***32,***REMOVED***16);
	return***REMOVED***xxhash64_1;
}

var***REMOVED***BatchedHash_1;
var***REMOVED***hasRequiredBatchedHash;

function***REMOVED***requireBatchedHash***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBatchedHash)***REMOVED***return***REMOVED***BatchedHash_1;
	hasRequiredBatchedHash***REMOVED***=***REMOVED***1;
	const***REMOVED***MAX_SHORT_STRING***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireWasmHash().MAX_SHORT_STRING;

	class***REMOVED***BatchedHash***REMOVED***{
	***REMOVED******REMOVED***constructor(hash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.encoding***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***hash;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Update***REMOVED***hash***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string|Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***inputEncoding***REMOVED***data***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***updated***REMOVED***hash
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***inputEncoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.string***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***data***REMOVED***===***REMOVED***"string"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputEncoding***REMOVED***===***REMOVED***this.encoding***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string.length***REMOVED***+***REMOVED***data.length***REMOVED***<***REMOVED***MAX_SHORT_STRING
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***+=***REMOVED***data;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.string,***REMOVED***this.encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***data***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.length***REMOVED***<***REMOVED***MAX_SHORT_STRING***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***base64***REMOVED***encoding***REMOVED***is***REMOVED***not***REMOVED***valid***REMOVED***since***REMOVED***it***REMOVED***may***REMOVED***contain***REMOVED***padding***REMOVED***chars
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!inputEncoding***REMOVED***||***REMOVED***!inputEncoding.startsWith("ba"))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string***REMOVED***=***REMOVED***data;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.encoding***REMOVED***=***REMOVED***inputEncoding;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data,***REMOVED***inputEncoding);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Calculates***REMOVED***the***REMOVED***digest***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***encoding***REMOVED***encoding***REMOVED***of***REMOVED***the***REMOVED***return***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string|Buffer}***REMOVED***digest
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***digest(encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.string***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.string,***REMOVED***this.encoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.hash.digest(encoding);
	***REMOVED******REMOVED***}
	}

	BatchedHash_1***REMOVED***=***REMOVED***BatchedHash;
	return***REMOVED***BatchedHash_1;
}

/*
	MIT***REMOVED***License***REMOVED***http://www.opensource.org/licenses/mit-license.php
	Author***REMOVED***Tobias***REMOVED***Koppers***REMOVED***@sokra
*/

var***REMOVED***md4_1;
var***REMOVED***hasRequiredMd4;

function***REMOVED***requireMd4***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredMd4)***REMOVED***return***REMOVED***md4_1;
	hasRequiredMd4***REMOVED***=***REMOVED***1;

	const***REMOVED***create***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireWasmHash();

	//#region***REMOVED***wasm***REMOVED***code:***REMOVED***md4***REMOVED***(../../../assembly/hash/md4.asm.ts)***REMOVED***--initialMemory***REMOVED***1
	const***REMOVED***md4***REMOVED***=***REMOVED***new***REMOVED***WebAssembly.Module(
	***REMOVED******REMOVED***Buffer.from(
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***2150***REMOVED***bytes
	***REMOVED******REMOVED******REMOVED******REMOVED***"AGFzbQEAAAABCAJgAX8AYAAAAwUEAQAAAAUDAQABBhoFfwFBAAt/AUEAC38BQQALfwFBAAt/AUEACwciBARpbml0AAAGdXBkYXRlAAIFZmluYWwAAwZtZW1vcnkCAAqFEAQmAEGBxpS6BiQBQYnXtv5+JAJB/rnrxXkkA0H2qMmBASQEQQAkAAvMCgEYfyMBIQojAiEGIwMhByMEIQgDQCAAIAVLBEAgBSgCCCINIAcgBiAFKAIEIgsgCCAHIAUoAgAiDCAKIAggBiAHIAhzcXNqakEDdyIDIAYgB3Nxc2pqQQd3IgEgAyAGc3FzampBC3chAiAFKAIUIg8gASACIAUoAhAiCSADIAEgBSgCDCIOIAYgAyACIAEgA3Nxc2pqQRN3IgQgASACc3FzampBA3ciAyACIARzcXNqakEHdyEBIAUoAiAiEiADIAEgBSgCHCIRIAQgAyAFKAIYIhAgAiAEIAEgAyAEc3FzampBC3ciAiABIANzcXNqakETdyIEIAEgAnNxc2pqQQN3IQMgBSgCLCIVIAQgAyAFKAIoIhQgAiAEIAUoAiQiEyABIAIgAyACIARzcXNqakEHdyIBIAMgBHNxc2pqQQt3IgIgASADc3FzampBE3chBCAPIBAgCSAVIBQgEyAFKAI4IhYgAiAEIAUoAjQiFyABIAIgBSgCMCIYIAMgASAEIAEgAnNxc2pqQQN3IgEgAiAEc3FzampBB3ciAiABIARzcXNqakELdyIDIAkgAiAMIAEgBSgCPCIJIAQgASADIAEgAnNxc2pqQRN3IgEgAiADcnEgAiADcXJqakGZ84nUBWpBA3ciAiABIANycSABIANxcmpqQZnzidQFakEFdyIEIAEgAnJxIAEgAnFyaiASakGZ84nUBWpBCXciAyAPIAQgCyACIBggASADIAIgBHJxIAIgBHFyampBmfOJ1AVqQQ13IgEgAyAEcnEgAyAEcXJqakGZ84nUBWpBA3ciAiABIANycSABIANxcmpqQZnzidQFakEFdyIEIAEgAnJxIAEgAnFyampBmfOJ1AVqQQl3IgMgECAEIAIgFyABIAMgAiAEcnEgAiAEcXJqakGZ84nUBWpBDXciASADIARycSADIARxcmogDWpBmfOJ1AVqQQN3IgIgASADcnEgASADcXJqakGZ84nUBWpBBXciBCABIAJycSABIAJxcmpqQZnzidQFakEJdyIDIBEgBCAOIAIgFiABIAMgAiAEcnEgAiAEcXJqakGZ84nUBWpBDXciASADIARycSADIARxcmpqQZnzidQFakEDdyICIAEgA3JxIAEgA3FyampBmfOJ1AVqQQV3IgQgASACcnEgASACcXJqakGZ84nUBWpBCXciAyAMIAIgAyAJIAEgAyACIARycSACIARxcmpqQZnzidQFakENdyIBcyAEc2pqQaHX5/YGakEDdyICIAQgASACcyADc2ogEmpBodfn9gZqQQl3IgRzIAFzampBodfn9gZqQQt3IgMgAiADIBggASADIARzIAJzampBodfn9gZqQQ93IgFzIARzaiANakGh1+f2BmpBA3ciAiAUIAQgASACcyADc2pqQaHX5/YGakEJdyIEcyABc2pqQaHX5/YGakELdyIDIAsgAiADIBYgASADIARzIAJzampBodfn9gZqQQ93IgFzIARzampBodfn9gZqQQN3IgIgEyAEIAEgAnMgA3NqakGh1+f2BmpBCXciBHMgAXNqakGh1+f2BmpBC3chAyAKIA4gAiADIBcgASADIARzIAJzampBodfn9gZqQQ93IgFzIARzampBodfn9gZqQQN3IgJqIQogBiAJIAEgESADIAIgFSAEIAEgAnMgA3NqakGh1+f2BmpBCXciBHMgAXNqakGh1+f2BmpBC3ciAyAEcyACc2pqQaHX5/YGakEPd2ohBiADIAdqIQcgBCAIaiEIIAVBQGshBQwBCwsgCiQBIAYkAiAHJAMgCCQECw0AIAAQASMAIABqJAAL/wQCA38BfiMAIABqrUIDhiEEIABByABqQUBxIgJBCGshAyAAIgFBAWohACABQYABOgAAA0AgACACSUEAIABBB3EbBEAgAEEAOgAAIABBAWohAAwBCwsDQCAAIAJJBEAgAEIANwMAIABBCGohAAwBCwsgAyAENwMAIAIQAUEAIwGtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEIIwKtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEQIwOtIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAEEYIwStIgRC//8DgyAEQoCA/P8Pg0IQhoQiBEL/gYCA8B+DIARCgP6DgIDgP4NCCIaEIgRCj4C8gPCBwAeDQgiGIARC8IHAh4CegPgAg0IEiIQiBEKGjJiw4MCBgwZ8QgSIQoGChIiQoMCAAYNCJ34gBEKw4MCBg4aMmDCEfDcDAAs=",
	***REMOVED******REMOVED******REMOVED******REMOVED***"base64"
	***REMOVED******REMOVED***)
	);
	//#endregion

	md4_1***REMOVED***=***REMOVED***create.bind(null,***REMOVED***md4,***REMOVED***[],***REMOVED***64,***REMOVED***32);
	return***REMOVED***md4_1;
}

var***REMOVED***BulkUpdateDecorator_1;
var***REMOVED***hasRequiredBulkUpdateDecorator;

function***REMOVED***requireBulkUpdateDecorator***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBulkUpdateDecorator)***REMOVED***return***REMOVED***BulkUpdateDecorator_1;
	hasRequiredBulkUpdateDecorator***REMOVED***=***REMOVED***1;
	const***REMOVED***BULK_SIZE***REMOVED***=***REMOVED***2000;

	//***REMOVED***We***REMOVED***are***REMOVED***using***REMOVED***an***REMOVED***object***REMOVED***instead***REMOVED***of***REMOVED***a***REMOVED***Map***REMOVED***as***REMOVED***this***REMOVED***will***REMOVED***stay***REMOVED***static***REMOVED***during***REMOVED***the***REMOVED***runtime
	//***REMOVED***so***REMOVED***access***REMOVED***to***REMOVED***it***REMOVED***can***REMOVED***be***REMOVED***optimized***REMOVED***by***REMOVED***v8
	const***REMOVED***digestCaches***REMOVED***=***REMOVED***{};

	class***REMOVED***BulkUpdateDecorator***REMOVED***{
	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{Hash***REMOVED***|***REMOVED***function():***REMOVED***Hash}***REMOVED***hashOrFactory***REMOVED***function***REMOVED***to***REMOVED***create***REMOVED***a***REMOVED***hash
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***hashKey***REMOVED***key***REMOVED***for***REMOVED***caching
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***constructor(hashOrFactory,***REMOVED***hashKey)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.hashKey***REMOVED***=***REMOVED***hashKey;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***hashOrFactory***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hashFactory***REMOVED***=***REMOVED***hashOrFactory;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hashFactory***REMOVED***=***REMOVED***undefined;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***hashOrFactory;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Update***REMOVED***hash***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string|Buffer}***REMOVED***data***REMOVED***data
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***inputEncoding***REMOVED***data***REMOVED***encoding
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{this}***REMOVED***updated***REMOVED***hash
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***update(data,***REMOVED***inputEncoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inputEncoding***REMOVED***!==***REMOVED***undefined***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***data***REMOVED***!==***REMOVED***"string"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data.length***REMOVED***>***REMOVED***BULK_SIZE
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.buffer.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(data,***REMOVED***inputEncoding);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***+=***REMOVED***data;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.buffer.length***REMOVED***>***REMOVED***BULK_SIZE)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(this.buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.buffer***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***Calculates***REMOVED***the***REMOVED***digest***REMOVED***{@link***REMOVED***https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string=}***REMOVED***encoding***REMOVED***encoding***REMOVED***of***REMOVED***the***REMOVED***return***REMOVED***value
	***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string|Buffer}***REMOVED***digest
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***digest(encoding)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***digestCache;

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***buffer***REMOVED***=***REMOVED***this.buffer;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.hash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***short***REMOVED***data***REMOVED***for***REMOVED***hash,***REMOVED***we***REMOVED***can***REMOVED***use***REMOVED***caching
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheKey***REMOVED***=***REMOVED***`${this.hashKey}-${encoding}`;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache***REMOVED***=***REMOVED***digestCaches[cacheKey];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(digestCache***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache***REMOVED***=***REMOVED***digestCaches[cacheKey]***REMOVED***=***REMOVED***new***REMOVED***Map();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cacheEntry***REMOVED***=***REMOVED***digestCache.get(buffer);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cacheEntry***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cacheEntry;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash***REMOVED***=***REMOVED***this.hashFactory();
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(buffer.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.hash.update(buffer);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***digestResult***REMOVED***=***REMOVED***this.hash.digest(encoding);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(digestCache***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestCache.set(buffer,***REMOVED***digestResult);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***digestResult;
	***REMOVED******REMOVED***}
	}

	BulkUpdateDecorator_1***REMOVED***=***REMOVED***BulkUpdateDecorator;
	return***REMOVED***BulkUpdateDecorator_1;
}

var***REMOVED***getHashDigest_1;
var***REMOVED***hasRequiredGetHashDigest;

function***REMOVED***requireGetHashDigest***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGetHashDigest)***REMOVED***return***REMOVED***getHashDigest_1;
	hasRequiredGetHashDigest***REMOVED***=***REMOVED***1;

	const***REMOVED***baseEncodeTables***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***26:***REMOVED***"abcdefghijklmnopqrstuvwxyz",
	***REMOVED******REMOVED***32:***REMOVED***"123456789abcdefghjkmnpqrstuvwxyz",***REMOVED***//***REMOVED***no***REMOVED***0lio
	***REMOVED******REMOVED***36:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyz",
	***REMOVED******REMOVED***49:***REMOVED***"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",***REMOVED***//***REMOVED***no***REMOVED***lIO
	***REMOVED******REMOVED***52:***REMOVED***"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
	***REMOVED******REMOVED***58:***REMOVED***"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",***REMOVED***//***REMOVED***no***REMOVED***0lIO
	***REMOVED******REMOVED***62:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
	***REMOVED******REMOVED***64:***REMOVED***"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",
	};

	/**
	***REMOVED*******REMOVED***@param***REMOVED***{Uint32Array}***REMOVED***uint32Array***REMOVED***Treated***REMOVED***as***REMOVED***a***REMOVED***long***REMOVED***base-0x100000000***REMOVED***number,***REMOVED***little***REMOVED***endian
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***divisor***REMOVED***The***REMOVED***divisor
	***REMOVED*******REMOVED***@return***REMOVED***{number}***REMOVED***Modulo***REMOVED***(remainder)***REMOVED***of***REMOVED***the***REMOVED***division
	***REMOVED****/
	function***REMOVED***divmod32(uint32Array,***REMOVED***divisor)***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***carry***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***uint32Array.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***carry***REMOVED*******REMOVED***0x100000000***REMOVED***+***REMOVED***uint32Array[i];
	***REMOVED******REMOVED******REMOVED******REMOVED***carry***REMOVED***=***REMOVED***value***REMOVED***%***REMOVED***divisor;
	***REMOVED******REMOVED******REMOVED******REMOVED***uint32Array[i]***REMOVED***=***REMOVED***Math.floor(value***REMOVED***/***REMOVED***divisor);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***carry;
	}

	function***REMOVED***encodeBufferToBase(buffer,***REMOVED***base,***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***encodeTable***REMOVED***=***REMOVED***baseEncodeTables[base];

	***REMOVED******REMOVED***if***REMOVED***(!encodeTable)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Unknown***REMOVED***encoding***REMOVED***base"***REMOVED***+***REMOVED***base);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***//***REMOVED***Input***REMOVED***bits***REMOVED***are***REMOVED***only***REMOVED***enough***REMOVED***to***REMOVED***generate***REMOVED***this***REMOVED***many***REMOVED***characters
	***REMOVED******REMOVED***const***REMOVED***limit***REMOVED***=***REMOVED***Math.ceil((buffer.length***REMOVED*******REMOVED***8)***REMOVED***/***REMOVED***Math.log2(base));
	***REMOVED******REMOVED***length***REMOVED***=***REMOVED***Math.min(length,***REMOVED***limit);

	***REMOVED******REMOVED***//***REMOVED***Most***REMOVED***of***REMOVED***the***REMOVED***crypto***REMOVED***digests***REMOVED***(if***REMOVED***not***REMOVED***all)***REMOVED***has***REMOVED***length***REMOVED***a***REMOVED***multiple***REMOVED***of***REMOVED***4***REMOVED***bytes.
	***REMOVED******REMOVED***//***REMOVED***Fewer***REMOVED***numbers***REMOVED***in***REMOVED***the***REMOVED***array***REMOVED***means***REMOVED***faster***REMOVED***math.
	***REMOVED******REMOVED***const***REMOVED***uint32Array***REMOVED***=***REMOVED***new***REMOVED***Uint32Array(Math.ceil(buffer.length***REMOVED***/***REMOVED***4));

	***REMOVED******REMOVED***//***REMOVED***Make***REMOVED***sure***REMOVED***the***REMOVED***input***REMOVED***buffer***REMOVED***data***REMOVED***is***REMOVED***copied***REMOVED***and***REMOVED***is***REMOVED***not***REMOVED***mutated***REMOVED***by***REMOVED***reference.
	***REMOVED******REMOVED***//***REMOVED***divmod32()***REMOVED***would***REMOVED***corrupt***REMOVED***the***REMOVED***BulkUpdateDecorator***REMOVED***cache***REMOVED***otherwise.
	***REMOVED******REMOVED***buffer.copy(Buffer.from(uint32Array.buffer));

	***REMOVED******REMOVED***let***REMOVED***output***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***length;***REMOVED***i++)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***output***REMOVED***=***REMOVED***encodeTable[divmod32(uint32Array,***REMOVED***base)]***REMOVED***+***REMOVED***output;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***output;
	}

	let***REMOVED***crypto***REMOVED***=***REMOVED***undefined;
	let***REMOVED***createXXHash64***REMOVED***=***REMOVED***undefined;
	let***REMOVED***createMd4***REMOVED***=***REMOVED***undefined;
	let***REMOVED***BatchedHash***REMOVED***=***REMOVED***undefined;
	let***REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***undefined;

	function***REMOVED***getHashDigest(buffer,***REMOVED***algorithm,***REMOVED***digestType,***REMOVED***maxLength)***REMOVED***{
	***REMOVED******REMOVED***algorithm***REMOVED***=***REMOVED***algorithm***REMOVED***||***REMOVED***"xxhash64";
	***REMOVED******REMOVED***maxLength***REMOVED***=***REMOVED***maxLength***REMOVED***||***REMOVED***9999;

	***REMOVED******REMOVED***let***REMOVED***hash;

	***REMOVED******REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"xxhash64")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createXXHash64***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createXXHash64***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireXxhash64();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BatchedHash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BatchedHash***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBatchedHash();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BatchedHash(createXXHash64());
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"md4")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(createMd4***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createMd4***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireMd4();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BatchedHash***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BatchedHash***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBatchedHash();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BatchedHash(createMd4());
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(algorithm***REMOVED***===***REMOVED***"native-md4")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***crypto***REMOVED***===***REMOVED***"undefined")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crypto***REMOVED***=***REMOVED***require("crypto");

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BulkUpdateDecorator***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBulkUpdateDecorator();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BulkUpdateDecorator(()***REMOVED***=>***REMOVED***crypto.createHash("md4"),***REMOVED***"md4");
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***crypto***REMOVED***===***REMOVED***"undefined")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***crypto***REMOVED***=***REMOVED***require("crypto");

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(BulkUpdateDecorator***REMOVED***===***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***BulkUpdateDecorator***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBulkUpdateDecorator();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***new***REMOVED***BulkUpdateDecorator(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***()***REMOVED***=>***REMOVED***crypto.createHash(algorithm),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***algorithm
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***hash.update(buffer);

	***REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base26"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base32"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base36"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base49"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base52"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base58"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base62"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base64safe"
	***REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***encodeBufferToBase(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hash.digest(),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***digestType***REMOVED***===***REMOVED***"base64safe"***REMOVED***?***REMOVED***64***REMOVED***:***REMOVED***digestType.substr(4),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxLength
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***hash.digest(digestType***REMOVED***||***REMOVED***"hex").substr(0,***REMOVED***maxLength);
	}

	getHashDigest_1***REMOVED***=***REMOVED***getHashDigest;
	return***REMOVED***getHashDigest_1;
}

var***REMOVED***interpolateName_1;
var***REMOVED***hasRequiredInterpolateName;

function***REMOVED***requireInterpolateName***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredInterpolateName)***REMOVED***return***REMOVED***interpolateName_1;
	hasRequiredInterpolateName***REMOVED***=***REMOVED***1;

	const***REMOVED***path***REMOVED***=***REMOVED***path$1;
	const***REMOVED***getHashDigest***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireGetHashDigest();

	function***REMOVED***interpolateName(loaderContext,***REMOVED***name,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***filename;

	***REMOVED******REMOVED***const***REMOVED***hasQuery***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***loaderContext.resourceQuery***REMOVED***&&***REMOVED***loaderContext.resourceQuery.length***REMOVED***>***REMOVED***1;

	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***name***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***name(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loaderContext.resourcePath,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasQuery***REMOVED***?***REMOVED***loaderContext.resourceQuery***REMOVED***:***REMOVED***undefined
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***name***REMOVED***||***REMOVED***"[hash].[ext]";
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***options.context;
	***REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***options.content;
	***REMOVED******REMOVED***const***REMOVED***regExp***REMOVED***=***REMOVED***options.regExp;

	***REMOVED******REMOVED***let***REMOVED***ext***REMOVED***=***REMOVED***"bin";
	***REMOVED******REMOVED***let***REMOVED***basename***REMOVED***=***REMOVED***"file";
	***REMOVED******REMOVED***let***REMOVED***directory***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***let***REMOVED***folder***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***let***REMOVED***query***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED***if***REMOVED***(loaderContext.resourcePath)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parsed***REMOVED***=***REMOVED***path.parse(loaderContext.resourcePath);
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resourcePath***REMOVED***=***REMOVED***loaderContext.resourcePath;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsed.ext)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***parsed.ext.substr(1);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsed.dir)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***basename***REMOVED***=***REMOVED***parsed.name;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resourcePath***REMOVED***=***REMOVED***parsed.dir***REMOVED***+***REMOVED***path.sep;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***context***REMOVED***!==***REMOVED***"undefined")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***path
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.relative(context,***REMOVED***resourcePath***REMOVED***+***REMOVED***"_")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\\/g,***REMOVED***"/")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\.\.(\/)?/g,***REMOVED***"_$1");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***directory.substr(0,***REMOVED***directory.length***REMOVED***-***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***resourcePath.replace(/\\/g,***REMOVED***"/").replace(/\.\.(\/)?/g,***REMOVED***"_$1");
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(directory.length***REMOVED***<=***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directory***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***directory.length***REMOVED***>***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***folder***REMOVED***=***REMOVED***path.basename(directory);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(loaderContext.resourceQuery***REMOVED***&&***REMOVED***loaderContext.resourceQuery.length***REMOVED***>***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***query***REMOVED***=***REMOVED***loaderContext.resourceQuery;

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hashIdx***REMOVED***=***REMOVED***query.indexOf("#");

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hashIdx***REMOVED***>=***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***query***REMOVED***=***REMOVED***query.substr(0,***REMOVED***hashIdx);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***let***REMOVED***url***REMOVED***=***REMOVED***filename;

	***REMOVED******REMOVED***if***REMOVED***(content)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Match***REMOVED***hash***REMOVED***template
	***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***url
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***`hash`***REMOVED***and***REMOVED***`contenthash`***REMOVED***are***REMOVED***same***REMOVED***in***REMOVED***`loader-utils`***REMOVED***context
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***let's***REMOVED***keep***REMOVED***`hash`***REMOVED***for***REMOVED***backward***REMOVED***compatibility
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/\[(?:([^[:\]]+):)?(?:hash|contenthash)(?::([a-z]+\d*(?:safe)?))?(?::(\d+))?\]/gi,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(all,***REMOVED***hashType,***REMOVED***digestType,***REMOVED***maxLength)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getHashDigest(content,***REMOVED***hashType,***REMOVED***digestType,***REMOVED***parseInt(maxLength,***REMOVED***10))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***url***REMOVED***=***REMOVED***url
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[ext\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***ext)
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[name\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***basename)
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[path\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***directory)
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[folder\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***folder)
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\[query\]/gi,***REMOVED***()***REMOVED***=>***REMOVED***query);

	***REMOVED******REMOVED***if***REMOVED***(regExp***REMOVED***&&***REMOVED***loaderContext.resourcePath)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***loaderContext.resourcePath.match(new***REMOVED***RegExp(regExp));

	***REMOVED******REMOVED******REMOVED******REMOVED***match***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***match.forEach((matched,***REMOVED***i)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***url.replace(new***REMOVED***RegExp("\\["***REMOVED***+***REMOVED***i***REMOVED***+***REMOVED***"\\]",***REMOVED***"ig"),***REMOVED***matched);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***loaderContext.options***REMOVED***===***REMOVED***"object"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***loaderContext.options.customInterpolateName***REMOVED***===***REMOVED***"function"
	***REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***url***REMOVED***=***REMOVED***loaderContext.options.customInterpolateName.call(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***loaderContext,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***url;
	}

	interpolateName_1***REMOVED***=***REMOVED***interpolateName;
	return***REMOVED***interpolateName_1;
}

var***REMOVED***genericNames;
var***REMOVED***hasRequiredGenericNames;

function***REMOVED***requireGenericNames***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGenericNames)***REMOVED***return***REMOVED***genericNames;
	hasRequiredGenericNames***REMOVED***=***REMOVED***1;

	var***REMOVED***interpolateName***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireInterpolateName();
	var***REMOVED***path***REMOVED***=***REMOVED***path$1;

	/**
	***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***pattern
	***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{object}***REMOVED***options
	***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***options.context
	***REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***options.hashPrefix
	***REMOVED*******REMOVED***@return***REMOVED***{function}
	***REMOVED****/
	genericNames***REMOVED***=***REMOVED***function***REMOVED***createGenerator(pattern,***REMOVED***options)***REMOVED***{
	***REMOVED******REMOVED***options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
	***REMOVED******REMOVED***var***REMOVED***context***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&***REMOVED***typeof***REMOVED***options.context***REMOVED***===***REMOVED***"string"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.context
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***process.cwd();
	***REMOVED******REMOVED***var***REMOVED***hashPrefix***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&***REMOVED***typeof***REMOVED***options.hashPrefix***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***options.hashPrefix***REMOVED***:***REMOVED***"";

	***REMOVED******REMOVED***/**
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***localName***REMOVED***Usually***REMOVED***a***REMOVED***class***REMOVED***name
	***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED******REMOVED***{string}***REMOVED***filepath***REMOVED******REMOVED***Absolute***REMOVED***path
	***REMOVED******REMOVED******REMOVED*******REMOVED***@return***REMOVED***{string}
	***REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED***return***REMOVED***function***REMOVED***generate(localName,***REMOVED***filepath)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***pattern.replace(/\[local\]/gi,***REMOVED***localName);
	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***loaderContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resourcePath:***REMOVED***filepath,
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***loaderOptions***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content:
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hashPrefix***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path.relative(context,***REMOVED***filepath).replace(/\\/g,***REMOVED***"/")***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"\x00"***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***context,
	***REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***genericName***REMOVED***=***REMOVED***interpolateName(loaderContext,***REMOVED***name,***REMOVED***loaderOptions);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***genericName
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(new***REMOVED***RegExp("[^a-zA-Z0-9\\-_\u00A0-\uFFFF]",***REMOVED***"g"),***REMOVED***"-")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^((-?[0-9])|--)/,***REMOVED***"_$1");
	***REMOVED******REMOVED***};
	};
	return***REMOVED***genericNames;
}

var***REMOVED***src$2***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***dist***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***processor***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***parser***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***root***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***container***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***node***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***util***REMOVED***=***REMOVED***{};

var***REMOVED***unesc***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredUnesc;

function***REMOVED***requireUnesc***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUnesc)***REMOVED***return***REMOVED***unesc.exports;
	hasRequiredUnesc***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***unesc;
		//***REMOVED***Many***REMOVED***thanks***REMOVED***for***REMOVED***this***REMOVED***post***REMOVED***which***REMOVED***made***REMOVED***this***REMOVED***migration***REMOVED***much***REMOVED***easier.
		//***REMOVED***https://mathiasbynens.be/notes/css-escapes

		/**
		***REMOVED*******REMOVED***
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***str***REMOVED***
		***REMOVED*******REMOVED***@returns***REMOVED***{[string,***REMOVED***number]|undefined}
		***REMOVED****/
		function***REMOVED***gobbleHex(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***lower***REMOVED***=***REMOVED***str.toLowerCase();
		***REMOVED******REMOVED***var***REMOVED***hex***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED***var***REMOVED***spaceTerminated***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***lower[i]***REMOVED***!==***REMOVED***undefined;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***lower.charCodeAt(i);
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***to***REMOVED***see***REMOVED***if***REMOVED***we***REMOVED***are***REMOVED***dealing***REMOVED***with***REMOVED***a***REMOVED***valid***REMOVED***hex***REMOVED***char***REMOVED***[a-f|0-9]
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valid***REMOVED***=***REMOVED***code***REMOVED***>=***REMOVED***97***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***102***REMOVED***||***REMOVED***code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57;
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#consume-escaped-code-point
		***REMOVED******REMOVED******REMOVED******REMOVED***spaceTerminated***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***32;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!valid)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***hex***REMOVED***+=***REMOVED***lower[i];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(hex.length***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***codePoint***REMOVED***=***REMOVED***parseInt(hex,***REMOVED***16);
		***REMOVED******REMOVED***var***REMOVED***isSurrogate***REMOVED***=***REMOVED***codePoint***REMOVED***>=***REMOVED***0xD800***REMOVED***&&***REMOVED***codePoint***REMOVED***<=***REMOVED***0xDFFF;
		***REMOVED******REMOVED***//***REMOVED***Add***REMOVED***special***REMOVED***case***REMOVED***for
		***REMOVED******REMOVED***//***REMOVED***"If***REMOVED***this***REMOVED***number***REMOVED***is***REMOVED***zero,***REMOVED***or***REMOVED***is***REMOVED***for***REMOVED***a***REMOVED***surrogate,***REMOVED***or***REMOVED***is***REMOVED***greater***REMOVED***than***REMOVED***the***REMOVED***maximum***REMOVED***allowed***REMOVED***code***REMOVED***point"
		***REMOVED******REMOVED***//***REMOVED***https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point
		***REMOVED******REMOVED***if***REMOVED***(isSurrogate***REMOVED***||***REMOVED***codePoint***REMOVED***===***REMOVED***0x0000***REMOVED***||***REMOVED***codePoint***REMOVED***>***REMOVED***0x10FFFF)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["\uFFFD",***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***[String.fromCodePoint(codePoint),***REMOVED***hex.length***REMOVED***+***REMOVED***(spaceTerminated***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***0)];
		}
		var***REMOVED***CONTAINS_ESCAPE***REMOVED***=***REMOVED***/\\/;
		function***REMOVED***unesc(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***needToProcess***REMOVED***=***REMOVED***CONTAINS_ESCAPE.test(str);
		***REMOVED******REMOVED***if***REMOVED***(!needToProcess)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***ret***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***str.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i]***REMOVED***===***REMOVED***"\\")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***gobbled***REMOVED***=***REMOVED***gobbleHex(str.slice(i***REMOVED***+***REMOVED***1,***REMOVED***i***REMOVED***+***REMOVED***7));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(gobbled***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***gobbled[0];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***gobbled[1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Retain***REMOVED***a***REMOVED***pair***REMOVED***of***REMOVED***\\***REMOVED***if***REMOVED***double***REMOVED***escaped***REMOVED***`\\\\`
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str[i***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***"\\")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***"\\";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***\\***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***string***REMOVED***retain***REMOVED***it
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str.length***REMOVED***===***REMOVED***i***REMOVED***+***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***str[i];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***ret;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(unesc,***REMOVED***unesc.exports));
	return***REMOVED***unesc.exports;
}

var***REMOVED***getProp***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredGetProp;

function***REMOVED***requireGetProp***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGetProp)***REMOVED***return***REMOVED***getProp.exports;
	hasRequiredGetProp***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***getProp;
		function***REMOVED***getProp(obj)***REMOVED***{
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***obj;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(getProp,***REMOVED***getProp.exports));
	return***REMOVED***getProp.exports;
}

var***REMOVED***ensureObject***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredEnsureObject;

function***REMOVED***requireEnsureObject***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredEnsureObject)***REMOVED***return***REMOVED***ensureObject.exports;
	hasRequiredEnsureObject***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***ensureObject;
		function***REMOVED***ensureObject(obj)***REMOVED***{
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_len***REMOVED***=***REMOVED***arguments.length,***REMOVED***props***REMOVED***=***REMOVED***new***REMOVED***Array(_len***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***_len***REMOVED***-***REMOVED***1***REMOVED***:***REMOVED***0),***REMOVED***_key***REMOVED***=***REMOVED***1;***REMOVED***_key***REMOVED***<***REMOVED***_len;***REMOVED***_key++)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***props[_key***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***arguments[_key];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(props.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prop***REMOVED***=***REMOVED***props.shift();
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj[prop])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***obj[prop]***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***obj***REMOVED***=***REMOVED***obj[prop];
		***REMOVED******REMOVED***}
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(ensureObject,***REMOVED***ensureObject.exports));
	return***REMOVED***ensureObject.exports;
}

var***REMOVED***stripComments***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredStripComments;

function***REMOVED***requireStripComments***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredStripComments)***REMOVED***return***REMOVED***stripComments.exports;
	hasRequiredStripComments***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***stripComments;
		function***REMOVED***stripComments(str)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***s***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED***var***REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*");
		***REMOVED******REMOVED***var***REMOVED***lastEnd***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***while***REMOVED***(commentStart***REMOVED***>=***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd,***REMOVED***commentStart);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentEnd***REMOVED***=***REMOVED***str.indexOf("*/",***REMOVED***commentStart***REMOVED***+***REMOVED***2);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentEnd***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***lastEnd***REMOVED***=***REMOVED***commentEnd***REMOVED***+***REMOVED***2;
		***REMOVED******REMOVED******REMOVED******REMOVED***commentStart***REMOVED***=***REMOVED***str.indexOf("/*",***REMOVED***lastEnd);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***s***REMOVED***=***REMOVED***s***REMOVED***+***REMOVED***str.slice(lastEnd);
		***REMOVED******REMOVED***return***REMOVED***s;
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(stripComments,***REMOVED***stripComments.exports));
	return***REMOVED***stripComments.exports;
}

var***REMOVED***hasRequiredUtil;

function***REMOVED***requireUtil***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUtil)***REMOVED***return***REMOVED***util;
	hasRequiredUtil***REMOVED***=***REMOVED***1;

	util.__esModule***REMOVED***=***REMOVED***true;
	util.unesc***REMOVED***=***REMOVED***util.stripComments***REMOVED***=***REMOVED***util.getProp***REMOVED***=***REMOVED***util.ensureObject***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUnesc());
	util.unesc***REMOVED***=***REMOVED***_unesc["default"];
	var***REMOVED***_getProp***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireGetProp());
	util.getProp***REMOVED***=***REMOVED***_getProp["default"];
	var***REMOVED***_ensureObject***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireEnsureObject());
	util.ensureObject***REMOVED***=***REMOVED***_ensureObject["default"];
	var***REMOVED***_stripComments***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireStripComments());
	util.stripComments***REMOVED***=***REMOVED***_stripComments["default"];
	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
	return***REMOVED***util;
}

var***REMOVED***hasRequiredNode;

function***REMOVED***requireNode***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNode)***REMOVED***return***REMOVED***node.exports;
	hasRequiredNode***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil();
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		var***REMOVED***cloneNode***REMOVED***=***REMOVED***function***REMOVED***cloneNode(obj,***REMOVED***parent)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***obj***REMOVED***!==***REMOVED***'object'***REMOVED***||***REMOVED***obj***REMOVED***===***REMOVED***null)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***obj;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***new***REMOVED***obj.constructor();
		***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***in***REMOVED***obj)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!obj.hasOwnProperty(i))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***obj[i];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***'parent'***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***'object')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***parent;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***instanceof***REMOVED***Array)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***value.map(function***REMOVED***(j)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloneNode(j,***REMOVED***cloned);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[i]***REMOVED***=***REMOVED***cloneNode(value,***REMOVED***cloned);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***cloned;
		};
		var***REMOVED***Node***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Node(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this,***REMOVED***opts);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.spaces***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.before***REMOVED***=***REMOVED***this.spaces.before***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***this.spaces.after***REMOVED***=***REMOVED***this.spaces.after***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Node.prototype;
		***REMOVED******REMOVED***_proto.remove***REMOVED***=***REMOVED***function***REMOVED***remove()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.removeChild(this);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.replaceWith***REMOVED***=***REMOVED***function***REMOVED***replaceWith()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.parent)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***index***REMOVED***in***REMOVED***arguments)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.insertBefore(this,***REMOVED***arguments[index]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.remove();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.next***REMOVED***=***REMOVED***function***REMOVED***next()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.prev***REMOVED***=***REMOVED***function***REMOVED***prev()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.parent.at(this.parent.index(this)***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.clone***REMOVED***=***REMOVED***function***REMOVED***clone(overrides)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(overrides***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***overrides***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cloned***REMOVED***=***REMOVED***cloneNode(this);
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***name***REMOVED***in***REMOVED***overrides)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned[name]***REMOVED***=***REMOVED***overrides[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***non***REMOVED***standard***REMOVED***syntax***REMOVED***to***REMOVED***be***REMOVED***appended***REMOVED***to***REMOVED***an***REMOVED***existing***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***by***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value.***REMOVED***By***REMOVED***specifying***REMOVED***the***REMOVED***escaped***REMOVED***value,
		***REMOVED******REMOVED******REMOVED*******REMOVED***illegal***REMOVED***characters***REMOVED***are***REMOVED***allowed***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***optional.***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.appendToPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***appendToPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalValue***REMOVED***=***REMOVED***this[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***originalEscaped***REMOVED***=***REMOVED***this.raws[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***originalValue***REMOVED***+***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originalEscaped***REMOVED***||***REMOVED***valueEscaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***(originalEscaped***REMOVED***||***REMOVED***originalValue)***REMOVED***+***REMOVED***valueEscaped;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];***REMOVED***//***REMOVED***delete***REMOVED***any***REMOVED***escaped***REMOVED***value***REMOVED***that***REMOVED***was***REMOVED***created***REMOVED***by***REMOVED***the***REMOVED***setter.
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***non-standard***REMOVED***syntax***REMOVED***doesn't***REMOVED***follow***REMOVED***normal***REMOVED***escaping***REMOVED***rules***REMOVED***for***REMOVED***css.
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***to***REMOVED***be***REMOVED***specified***REMOVED***directly,***REMOVED***allowing***REMOVED***illegal
		***REMOVED******REMOVED******REMOVED*******REMOVED***characters***REMOVED***to***REMOVED***be***REMOVED***directly***REMOVED***inserted***REMOVED***into***REMOVED***css***REMOVED***output.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***valueEscaped***REMOVED***the***REMOVED***escaped***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***property.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setPropertyAndEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyAndEscape(name,***REMOVED***value,***REMOVED***valueEscaped)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***this.raws[name]***REMOVED***=***REMOVED***valueEscaped;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***When***REMOVED***you***REMOVED***want***REMOVED***a***REMOVED***value***REMOVED***to***REMOVED***passed***REMOVED***through***REMOVED***to***REMOVED***CSS***REMOVED***directly.***REMOVED***This***REMOVED***method
		***REMOVED******REMOVED******REMOVED*******REMOVED***deletes***REMOVED***the***REMOVED***corresponding***REMOVED***raw***REMOVED***value***REMOVED***causing***REMOVED***the***REMOVED***stringifier***REMOVED***to***REMOVED***fallback
		***REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***the***REMOVED***unescaped***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***name***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***set.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***that***REMOVED***is***REMOVED***both***REMOVED***escaped***REMOVED***and***REMOVED***unescaped.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setPropertyWithoutEscape***REMOVED***=***REMOVED***function***REMOVED***setPropertyWithoutEscape(name,***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***this[name]***REMOVED***=***REMOVED***value;***REMOVED***//***REMOVED***this***REMOVED***may***REMOVED***trigger***REMOVED***a***REMOVED***setter***REMOVED***that***REMOVED***updates***REMOVED***raws,***REMOVED***so***REMOVED***it***REMOVED***has***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***first.
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[name];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***column***REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***(starting***REMOVED***with***REMOVED***1)
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.isAtPosition***REMOVED***=***REMOVED***function***REMOVED***isAtPosition(line,***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source***REMOVED***&&***REMOVED***this.source.start***REMOVED***&&***REMOVED***this.source.end)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***>***REMOVED***line)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***<***REMOVED***line)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.start.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.start.column***REMOVED***>***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.source.end.line***REMOVED***===***REMOVED***line***REMOVED***&&***REMOVED***this.source.end.column***REMOVED***<***REMOVED***column)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.stringifyProperty***REMOVED***=***REMOVED***function***REMOVED***stringifyProperty(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws[name]***REMOVED***||***REMOVED***this[name];
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(this.stringifyProperty("value"));
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.valueToString(),***REMOVED***this.rawSpaceAfter].join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Node,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceBefore",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.before;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces***REMOVED***&&***REMOVED***this.spaces.before;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.before***REMOVED***=***REMOVED***raw;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"rawSpaceAfter",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***this.raws***REMOVED***&&***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces.after;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***this.spaces.after;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSpace***REMOVED***||***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(raw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws",***REMOVED***"spaces");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.spaces.after***REMOVED***=***REMOVED***raw;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Node;
		}();
		exports["default"]***REMOVED***=***REMOVED***Node;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(node,***REMOVED***node.exports));
	return***REMOVED***node.exports;
}

var***REMOVED***types$1***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredTypes;

function***REMOVED***requireTypes***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTypes)***REMOVED***return***REMOVED***types$1;
	hasRequiredTypes***REMOVED***=***REMOVED***1;

	types$1.__esModule***REMOVED***=***REMOVED***true;
	types$1.UNIVERSAL***REMOVED***=***REMOVED***types$1.TAG***REMOVED***=***REMOVED***types$1.STRING***REMOVED***=***REMOVED***types$1.SELECTOR***REMOVED***=***REMOVED***types$1.ROOT***REMOVED***=***REMOVED***types$1.PSEUDO***REMOVED***=***REMOVED***types$1.NESTING***REMOVED***=***REMOVED***types$1.ID***REMOVED***=***REMOVED***types$1.COMMENT***REMOVED***=***REMOVED***types$1.COMBINATOR***REMOVED***=***REMOVED***types$1.CLASS***REMOVED***=***REMOVED***types$1.ATTRIBUTE***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***TAG***REMOVED***=***REMOVED***'tag';
	types$1.TAG***REMOVED***=***REMOVED***TAG;
	var***REMOVED***STRING***REMOVED***=***REMOVED***'string';
	types$1.STRING***REMOVED***=***REMOVED***STRING;
	var***REMOVED***SELECTOR***REMOVED***=***REMOVED***'selector';
	types$1.SELECTOR***REMOVED***=***REMOVED***SELECTOR;
	var***REMOVED***ROOT***REMOVED***=***REMOVED***'root';
	types$1.ROOT***REMOVED***=***REMOVED***ROOT;
	var***REMOVED***PSEUDO***REMOVED***=***REMOVED***'pseudo';
	types$1.PSEUDO***REMOVED***=***REMOVED***PSEUDO;
	var***REMOVED***NESTING***REMOVED***=***REMOVED***'nesting';
	types$1.NESTING***REMOVED***=***REMOVED***NESTING;
	var***REMOVED***ID***REMOVED***=***REMOVED***'id';
	types$1.ID***REMOVED***=***REMOVED***ID;
	var***REMOVED***COMMENT***REMOVED***=***REMOVED***'comment';
	types$1.COMMENT***REMOVED***=***REMOVED***COMMENT;
	var***REMOVED***COMBINATOR***REMOVED***=***REMOVED***'combinator';
	types$1.COMBINATOR***REMOVED***=***REMOVED***COMBINATOR;
	var***REMOVED***CLASS***REMOVED***=***REMOVED***'class';
	types$1.CLASS***REMOVED***=***REMOVED***CLASS;
	var***REMOVED***ATTRIBUTE***REMOVED***=***REMOVED***'attribute';
	types$1.ATTRIBUTE***REMOVED***=***REMOVED***ATTRIBUTE;
	var***REMOVED***UNIVERSAL***REMOVED***=***REMOVED***'universal';
	types$1.UNIVERSAL***REMOVED***=***REMOVED***UNIVERSAL;
	return***REMOVED***types$1;
}

var***REMOVED***hasRequiredContainer;

function***REMOVED***requireContainer***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredContainer)***REMOVED***return***REMOVED***container.exports;
	hasRequiredContainer***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***types***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTypes());
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_createForOfIteratorHelperLoose(o,***REMOVED***allowArrayLike)***REMOVED***{***REMOVED***var***REMOVED***it***REMOVED***=***REMOVED***typeof***REMOVED***Symbol***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***o[Symbol.iterator]***REMOVED***||***REMOVED***o["@@iterator"];***REMOVED***if***REMOVED***(it)***REMOVED***return***REMOVED***(it***REMOVED***=***REMOVED***it.call(o)).next.bind(it);***REMOVED***if***REMOVED***(Array.isArray(o)***REMOVED***||***REMOVED***(it***REMOVED***=***REMOVED***_unsupportedIterableToArray(o))***REMOVED***||***REMOVED***allowArrayLike)***REMOVED***{***REMOVED***if***REMOVED***(it)***REMOVED***o***REMOVED***=***REMOVED***it;***REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***return***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***if***REMOVED***(i***REMOVED***>=***REMOVED***o.length)***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***true***REMOVED***};***REMOVED***return***REMOVED***{***REMOVED***done:***REMOVED***false,***REMOVED***value:***REMOVED***o[i++]***REMOVED***};***REMOVED***};***REMOVED***}***REMOVED***throw***REMOVED***new***REMOVED***TypeError("Invalid***REMOVED***attempt***REMOVED***to***REMOVED***iterate***REMOVED***non-iterable***REMOVED***instance.\nIn***REMOVED***order***REMOVED***to***REMOVED***be***REMOVED***iterable,***REMOVED***non-array***REMOVED***objects***REMOVED***must***REMOVED***have***REMOVED***a***REMOVED***[Symbol.iterator]()***REMOVED***method.");***REMOVED***}
		function***REMOVED***_unsupportedIterableToArray(o,***REMOVED***minLen)***REMOVED***{***REMOVED***if***REMOVED***(!o)***REMOVED***return;***REMOVED***if***REMOVED***(typeof***REMOVED***o***REMOVED***===***REMOVED***"string")***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***var***REMOVED***n***REMOVED***=***REMOVED***Object.prototype.toString.call(o).slice(8,***REMOVED***-1);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Object"***REMOVED***&&***REMOVED***o.constructor)***REMOVED***n***REMOVED***=***REMOVED***o.constructor.name;***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Map"***REMOVED***||***REMOVED***n***REMOVED***===***REMOVED***"Set")***REMOVED***return***REMOVED***Array.from(o);***REMOVED***if***REMOVED***(n***REMOVED***===***REMOVED***"Arguments"***REMOVED***||***REMOVED***/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))***REMOVED***return***REMOVED***_arrayLikeToArray(o,***REMOVED***minLen);***REMOVED***}
		function***REMOVED***_arrayLikeToArray(arr,***REMOVED***len)***REMOVED***{***REMOVED***if***REMOVED***(len***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***len***REMOVED***>***REMOVED***arr.length)***REMOVED***len***REMOVED***=***REMOVED***arr.length;***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***arr2***REMOVED***=***REMOVED***new***REMOVED***Array(len);***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{***REMOVED***arr2[i]***REMOVED***=***REMOVED***arr[i];***REMOVED***}***REMOVED***return***REMOVED***arr2;***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Container***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Container,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Container(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_this.nodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this.nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Container.prototype;
		***REMOVED******REMOVED***_proto.append***REMOVED***=***REMOVED***function***REMOVED***append(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.push(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.prepend***REMOVED***=***REMOVED***function***REMOVED***prepend(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.unshift(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.at***REMOVED***=***REMOVED***function***REMOVED***at(index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes[index];
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.index***REMOVED***=***REMOVED***function***REMOVED***index(child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***child***REMOVED***===***REMOVED***'number')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***child;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.indexOf(child);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.removeChild***REMOVED***=***REMOVED***function***REMOVED***removeChild(child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***child***REMOVED***=***REMOVED***this.index(child);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.at(child).parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(child,***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***>=***REMOVED***child)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.removeAll***REMOVED***=***REMOVED***function***REMOVED***removeAll()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***_iterator***REMOVED***=***REMOVED***_createForOfIteratorHelperLoose(this.nodes),***REMOVED***_step;***REMOVED***!(_step***REMOVED***=***REMOVED***_iterator()).done;)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***_step.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.parent***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.empty***REMOVED***=***REMOVED***function***REMOVED***empty()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.removeAll();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.insertAfter***REMOVED***=***REMOVED***function***REMOVED***insertAfter(oldNode,***REMOVED***newNode)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(oldIndex***REMOVED***+***REMOVED***1,***REMOVED***0,***REMOVED***newNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldIndex***REMOVED***<=***REMOVED***index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.insertBefore***REMOVED***=***REMOVED***function***REMOVED***insertBefore(oldNode,***REMOVED***newNode)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldIndex***REMOVED***=***REMOVED***this.index(oldNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes.splice(oldIndex,***REMOVED***0,***REMOVED***newNode);
		***REMOVED******REMOVED******REMOVED******REMOVED***newNode.parent***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index;
		***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***id***REMOVED***in***REMOVED***this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(index***REMOVED***<=***REMOVED***oldIndex)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._findChildAtPosition***REMOVED***=***REMOVED***function***REMOVED***_findChildAtPosition(line,***REMOVED***col)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***found***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.each(function***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.atPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***foundChild***REMOVED***=***REMOVED***node.atPosition(line,***REMOVED***col);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(foundChild)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***foundChild;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.isAtPosition(line,***REMOVED***col))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***found***REMOVED***=***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***found;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Return***REMOVED***the***REMOVED***most***REMOVED***specific***REMOVED***node***REMOVED***at***REMOVED***the***REMOVED***line***REMOVED***and***REMOVED***column***REMOVED***number***REMOVED***given.
		***REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***source***REMOVED***location***REMOVED***is***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***original***REMOVED***parsed***REMOVED***location,***REMOVED***locations***REMOVED***aren't
		***REMOVED******REMOVED******REMOVED*******REMOVED***updated***REMOVED***as***REMOVED***selector***REMOVED***nodes***REMOVED***are***REMOVED***mutated.
		***REMOVED******REMOVED******REMOVED*******REMOVED***
		***REMOVED******REMOVED******REMOVED*******REMOVED***Note***REMOVED***that***REMOVED***this***REMOVED***location***REMOVED***is***REMOVED***relative***REMOVED***to***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***first***REMOVED***character
		***REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***selector,***REMOVED***and***REMOVED***not***REMOVED***the***REMOVED***location***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***in***REMOVED***the***REMOVED***overall***REMOVED***document
		***REMOVED******REMOVED******REMOVED*******REMOVED***when***REMOVED***used***REMOVED***in***REMOVED***conjunction***REMOVED***with***REMOVED***postcss.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***not***REMOVED***found,***REMOVED***returns***REMOVED***undefined.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***line***REMOVED***The***REMOVED***line***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***col***REMOVED******REMOVED***The***REMOVED***column***REMOVED***number***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***to***REMOVED***find.***REMOVED***(1-based***REMOVED***index)
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.atPosition***REMOVED***=***REMOVED***function***REMOVED***atPosition(line,***REMOVED***col)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isAtPosition(line,***REMOVED***col))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._findChildAtPosition(line,***REMOVED***col)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._inferEndPosition***REMOVED***=***REMOVED***function***REMOVED***_inferEndPosition()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.last***REMOVED***&&***REMOVED***this.last.source***REMOVED***&&***REMOVED***this.last.source.end)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***this.source***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.source.end***REMOVED***=***REMOVED***this.source.end***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this.source.end,***REMOVED***this.last.source.end);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.each***REMOVED***=***REMOVED***function***REMOVED***each(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.lastEach)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.indexes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.lastEach++;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***id***REMOVED***=***REMOVED***this.lastEach;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index,***REMOVED***result;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.indexes[id]***REMOVED***<***REMOVED***this.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***callback(this.at(index),***REMOVED***index);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.indexes[id]***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.indexes[id];
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walk***REMOVED***=***REMOVED***function***REMOVED***walk(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.each(function***REMOVED***(node,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***callback(node,***REMOVED***i);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***node.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***node.walk(callback);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkAttributes***REMOVED***=***REMOVED***function***REMOVED***walkAttributes(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.ATTRIBUTE)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this2,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkClasses***REMOVED***=***REMOVED***function***REMOVED***walkClasses(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.CLASS)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this3,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkCombinators***REMOVED***=***REMOVED***function***REMOVED***walkCombinators(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.COMBINATOR)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this4,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkComments***REMOVED***=***REMOVED***function***REMOVED***walkComments(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.COMMENT)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this5,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkIds***REMOVED***=***REMOVED***function***REMOVED***walkIds(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this6***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.ID)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this6,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkNesting***REMOVED***=***REMOVED***function***REMOVED***walkNesting(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this7***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.NESTING)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this7,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkPseudos***REMOVED***=***REMOVED***function***REMOVED***walkPseudos(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this8***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.PSEUDO)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this8,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkTags***REMOVED***=***REMOVED***function***REMOVED***walkTags(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this9***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.TAG)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this9,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.walkUniversals***REMOVED***=***REMOVED***function***REMOVED***walkUniversals(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this10***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.walk(function***REMOVED***(selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(selector.type***REMOVED***===***REMOVED***types.UNIVERSAL)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(_this10,***REMOVED***selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.split***REMOVED***=***REMOVED***function***REMOVED***split(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this11***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***node,***REMOVED***index)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***split***REMOVED***=***REMOVED***callback.call(_this11,***REMOVED***node);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current.push(node);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(split)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(index***REMOVED***===***REMOVED***_this11.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(current);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.map***REMOVED***=***REMOVED***function***REMOVED***map(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.map(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.reduce***REMOVED***=***REMOVED***function***REMOVED***reduce(callback,***REMOVED***memo)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.reduce(callback,***REMOVED***memo);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.every***REMOVED***=***REMOVED***function***REMOVED***every(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.every(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.some***REMOVED***=***REMOVED***function***REMOVED***some(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.some(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.filter***REMOVED***=***REMOVED***function***REMOVED***filter(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.filter(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.sort***REMOVED***=***REMOVED***function***REMOVED***sort(callback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.sort(callback);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.map(String).join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Container,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"first",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(0);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"last",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.at(this.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"length",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.nodes.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Container;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Container;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(container,***REMOVED***container.exports));
	return***REMOVED***container.exports;
}

var***REMOVED***hasRequiredRoot;

function***REMOVED***requireRoot***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredRoot)***REMOVED***return***REMOVED***root.exports;
	hasRequiredRoot***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Root***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Root,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Root(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ROOT;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Root.prototype;
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***str***REMOVED***=***REMOVED***this.reduce(function***REMOVED***(memo,***REMOVED***selector)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***memo.push(String(selector));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***memo;
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]).join(',');
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.trailingComma***REMOVED***?***REMOVED***str***REMOVED***+***REMOVED***','***REMOVED***:***REMOVED***str;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._error)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._error(message,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Root,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"errorGenerator",
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(handler)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._error***REMOVED***=***REMOVED***handler;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Root;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Root;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(root,***REMOVED***root.exports));
	return***REMOVED***root.exports;
}

var***REMOVED***selector***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredSelector;

function***REMOVED***requireSelector***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSelector)***REMOVED***return***REMOVED***selector.exports;
	hasRequiredSelector***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Selector***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Selector,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Selector(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.SELECTOR;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Selector;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Selector;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(selector,***REMOVED***selector.exports));
	return***REMOVED***selector.exports;
}

var***REMOVED***className***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredClassName;

function***REMOVED***requireClassName***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredClassName)***REMOVED***return***REMOVED***className.exports;
	hasRequiredClassName***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil();
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***ClassName***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(ClassName,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***ClassName(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.CLASS;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ClassName.prototype;
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'.'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(ClassName,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***ClassName;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***ClassName;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(className,***REMOVED***className.exports));
	return***REMOVED***className.exports;
}

var***REMOVED***comment***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredComment;

function***REMOVED***requireComment***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredComment)***REMOVED***return***REMOVED***comment.exports;
	hasRequiredComment***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Comment***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Comment,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Comment(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMMENT;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Comment;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Comment;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(comment,***REMOVED***comment.exports));
	return***REMOVED***comment.exports;
}

var***REMOVED***id***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredId;

function***REMOVED***requireId***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredId)***REMOVED***return***REMOVED***id.exports;
	hasRequiredId***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***ID***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(ID,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***ID(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ID;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***ID.prototype;
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'#'***REMOVED***+***REMOVED***_Node.prototype.valueToString.call(this);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***ID;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***ID;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(id,***REMOVED***id.exports));
	return***REMOVED***id.exports;
}

var***REMOVED***tag***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***namespace***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredNamespace;

function***REMOVED***requireNamespace***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNamespace)***REMOVED***return***REMOVED***namespace.exports;
	hasRequiredNamespace***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil();
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Namespace***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Namespace,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Namespace()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_Node.apply(this,***REMOVED***arguments)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Namespace.prototype;
		***REMOVED******REMOVED***_proto.qualifiedName***REMOVED***=***REMOVED***function***REMOVED***qualifiedName(value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespaceString***REMOVED***+***REMOVED***"|"***REMOVED***+***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.valueToString***REMOVED***=***REMOVED***function***REMOVED***valueToString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(_Node.prototype.valueToString.call(this));
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Namespace,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespace",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***true***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"&")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(namespace,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(this,***REMOVED***"raws");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.namespace***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"ns",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"namespaceString",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***ns***REMOVED***=***REMOVED***this.stringifyProperty("namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns***REMOVED***===***REMOVED***true)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ns;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Namespace;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Namespace;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(namespace,***REMOVED***namespace.exports));
	return***REMOVED***namespace.exports;
}

var***REMOVED***hasRequiredTag;

function***REMOVED***requireTag***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTag)***REMOVED***return***REMOVED***tag.exports;
	hasRequiredTag***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Tag***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Tag,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Tag(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.TAG;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Tag;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Tag;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(tag,***REMOVED***tag.exports));
	return***REMOVED***tag.exports;
}

var***REMOVED***string***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredString;

function***REMOVED***requireString***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredString)***REMOVED***return***REMOVED***string.exports;
	hasRequiredString***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***String***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(String,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***String(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.STRING;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***String;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***String;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(string,***REMOVED***string.exports));
	return***REMOVED***string.exports;
}

var***REMOVED***pseudo***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredPseudo;

function***REMOVED***requirePseudo***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredPseudo)***REMOVED***return***REMOVED***pseudo.exports;
	hasRequiredPseudo***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_container***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireContainer());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Pseudo***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Container)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Pseudo,***REMOVED***_Container);
		***REMOVED******REMOVED***function***REMOVED***Pseudo(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Container.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.PSEUDO;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Pseudo.prototype;
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***params***REMOVED***=***REMOVED***this.length***REMOVED***?***REMOVED***'('***REMOVED***+***REMOVED***this.map(String).join(',')***REMOVED***+***REMOVED***')'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[this.rawSpaceBefore,***REMOVED***this.stringifyProperty("value"),***REMOVED***params,***REMOVED***this.rawSpaceAfter].join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***Pseudo;
		}(_container["default"]);
		exports["default"]***REMOVED***=***REMOVED***Pseudo;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(pseudo,***REMOVED***pseudo.exports));
	return***REMOVED***pseudo.exports;
}

var***REMOVED***attribute***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredAttribute;

function***REMOVED***requireAttribute***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredAttribute)***REMOVED***return***REMOVED***attribute;
	hasRequiredAttribute***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		exports.unescapeValue***REMOVED***=***REMOVED***unescapeValue;
		var***REMOVED***_cssesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCssesc());
		var***REMOVED***_unesc***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUnesc());
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		var***REMOVED***_CSSESC_QUOTE_OPTIONS;
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***deprecate***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireNode$1();
		var***REMOVED***WRAPPED_IN_QUOTES***REMOVED***=***REMOVED***/^('|")([^]*)\1$/;
		var***REMOVED***warnOfDeprecatedValueAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***an***REMOVED***attribute***REMOVED***a***REMOVED***value***REMOVED***containing***REMOVED***characters***REMOVED***that***REMOVED***might***REMOVED***need***REMOVED***to***REMOVED***be***REMOVED***escaped***REMOVED***is***REMOVED***deprecated.***REMOVED***"***REMOVED***+***REMOVED***"Call***REMOVED***attribute.setValue()***REMOVED***instead.");
		var***REMOVED***warnOfDeprecatedQuotedAssignment***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Assigning***REMOVED***attr.quoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***Assign***REMOVED***to***REMOVED***attr.quoteMark***REMOVED***instead.");
		var***REMOVED***warnOfDeprecatedConstructor***REMOVED***=***REMOVED***deprecate(function***REMOVED***()***REMOVED***{},***REMOVED***"Constructing***REMOVED***an***REMOVED***Attribute***REMOVED***selector***REMOVED***with***REMOVED***a***REMOVED***value***REMOVED***without***REMOVED***specifying***REMOVED***quoteMark***REMOVED***is***REMOVED***deprecated.***REMOVED***Note:***REMOVED***The***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unescaped***REMOVED***now.");
		function***REMOVED***unescapeValue(value)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***deprecatedUsage***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED***var***REMOVED***unescaped***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED***var***REMOVED***m***REMOVED***=***REMOVED***unescaped.match(WRAPPED_IN_QUOTES);
		***REMOVED******REMOVED***if***REMOVED***(m)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***m[1];
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***m[2];
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_unesc["default"])(unescaped);
		***REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage:***REMOVED***deprecatedUsage,
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped:***REMOVED***unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark:***REMOVED***quoteMark
		***REMOVED******REMOVED***};
		}
		function***REMOVED***handleDeprecatedContructorOpts(opts)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(opts.quoteMark***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(opts.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***opts;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***warnOfDeprecatedConstructor();
		***REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***unescapeValue(opts.value),
		***REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark,
		***REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped;
		***REMOVED******REMOVED***if***REMOVED***(!opts.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(opts.raws.value***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***opts.raws.value***REMOVED***=***REMOVED***opts.value;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***opts.value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED***opts.quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED***return***REMOVED***opts;
		}
		var***REMOVED***Attribute***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Attribute,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Attribute(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opts***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***handleDeprecatedContructorOpts(opts))***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.ATTRIBUTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.raws***REMOVED***=***REMOVED***_this.raws***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(_this.raws,***REMOVED***'unquoted',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"attr.raws.unquoted***REMOVED***is***REMOVED***deprecated.***REMOVED***Call***REMOVED***attr.value***REMOVED***instead."),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***deprecate(function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***"Setting***REMOVED***attr.raws.unquoted***REMOVED***is***REMOVED***deprecated***REMOVED***and***REMOVED***has***REMOVED***no***REMOVED***effect.***REMOVED***attr.value***REMOVED***is***REMOVED***unescaped***REMOVED***by***REMOVED***default***REMOVED***now.")
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***_this._constructed***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***the***REMOVED***Attribute's***REMOVED***value***REMOVED***quoted***REMOVED***such***REMOVED***that***REMOVED***it***REMOVED***would***REMOVED***be***REMOVED***legal***REMOVED***to***REMOVED***use
		***REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***the***REMOVED***value***REMOVED***of***REMOVED***a***REMOVED***css***REMOVED***file.***REMOVED***The***REMOVED***original***REMOVED***value's***REMOVED***quotation***REMOVED***setting
		***REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***for***REMOVED***stringification***REMOVED***is***REMOVED***left***REMOVED***unchanged.***REMOVED***See***REMOVED***`setValue(value,***REMOVED***options)`
		***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***control***REMOVED***the***REMOVED***quote***REMOVED***settings***REMOVED***of***REMOVED***a***REMOVED***new***REMOVED***value***REMOVED***for***REMOVED***the***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***You***REMOVED***can***REMOVED***also***REMOVED***change***REMOVED***the***REMOVED***quotation***REMOVED***used***REMOVED***for***REMOVED***the***REMOVED***current***REMOVED***value***REMOVED***by***REMOVED***setting***REMOVED***quoteMark.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***Options:
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***quoteMark***REMOVED***{'"'***REMOVED***|***REMOVED***"'"***REMOVED***|***REMOVED***null}***REMOVED***-***REMOVED***Use***REMOVED***this***REMOVED***value***REMOVED***to***REMOVED***quote***REMOVED***the***REMOVED***value.***REMOVED***If***REMOVED***this
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***set,***REMOVED***the***REMOVED***original***REMOVED***value***REMOVED***for***REMOVED***quoteMark***REMOVED***will***REMOVED***be***REMOVED***used.***REMOVED***If
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***indeterminate,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.***REMOVED***The***REMOVED***legal***REMOVED***values***REMOVED***are:
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`null`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***unquoted***REMOVED***and***REMOVED***characters***REMOVED***will***REMOVED***be***REMOVED***escaped***REMOVED***as***REMOVED***necessary.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`'`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***single***REMOVED***quote***REMOVED***and***REMOVED***single***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`"`***REMOVED***-***REMOVED***the***REMOVED***value***REMOVED***will***REMOVED***be***REMOVED***quoted***REMOVED***with***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***and***REMOVED***double***REMOVED***quotes***REMOVED***are***REMOVED***escaped.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***preferCurrentQuoteMark***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***prefer***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***over***REMOVED***the***REMOVED***quoteMark***REMOVED***option***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED*******REMOVED***smart***REMOVED***{boolean}***REMOVED***-***REMOVED***if***REMOVED***true,***REMOVED***will***REMOVED***select***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***and***REMOVED***the***REMOVED***other***REMOVED***options***REMOVED***specified***REMOVED***here.***REMOVED***See***REMOVED***the***REMOVED***`smartQuoteMark()`
		***REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method.
		***REMOVED******REMOVED******REMOVED*****/
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Attribute.prototype;
		***REMOVED******REMOVED***_proto.getQuotedValue***REMOVED***=***REMOVED***function***REMOVED***getQuotedValue(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cssescopts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quoteMark];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***cssescopts);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escaped;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._determineQuoteMark***REMOVED***=***REMOVED***function***REMOVED***_determineQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***options.smart***REMOVED***?***REMOVED***this.smartQuoteMark(options)***REMOVED***:***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***unescaped***REMOVED***value***REMOVED***with***REMOVED***the***REMOVED***specified***REMOVED***quotation***REMOVED***options.***REMOVED***The***REMOVED***value
		***REMOVED******REMOVED******REMOVED*******REMOVED***provided***REMOVED***must***REMOVED***not***REMOVED***include***REMOVED***any***REMOVED***wrapping***REMOVED***quote***REMOVED***marks***REMOVED***--***REMOVED***those***REMOVED***quotes***REMOVED***will
		***REMOVED******REMOVED******REMOVED*******REMOVED***be***REMOVED***interpreted***REMOVED***as***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***value***REMOVED***and***REMOVED***escaped***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.setValue***REMOVED***=***REMOVED***function***REMOVED***setValue(value,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***this._determineQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Intelligently***REMOVED***select***REMOVED***a***REMOVED***quoteMark***REMOVED***value***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***value's***REMOVED***contents.***REMOVED***If
		***REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***a***REMOVED***legal***REMOVED***CSS***REMOVED***ident,***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***be***REMOVED***quoted.***REMOVED***Otherwise***REMOVED***a***REMOVED***quote
		***REMOVED******REMOVED******REMOVED*******REMOVED***mark***REMOVED***will***REMOVED***be***REMOVED***picked***REMOVED***that***REMOVED***minimizes***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***escapes.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***there's***REMOVED***no***REMOVED***clear***REMOVED***winner,***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***from***REMOVED***these***REMOVED***options***REMOVED***is***REMOVED***used,
		***REMOVED******REMOVED******REMOVED*******REMOVED***then***REMOVED***the***REMOVED***source***REMOVED***quote***REMOVED***mark***REMOVED***(this***REMOVED***is***REMOVED***inverted***REMOVED***if***REMOVED***`preferCurrentQuoteMark`***REMOVED***is
		***REMOVED******REMOVED******REMOVED*******REMOVED***true).***REMOVED***If***REMOVED***the***REMOVED***quoteMark***REMOVED***is***REMOVED***unspecified,***REMOVED***a***REMOVED***double***REMOVED***quote***REMOVED***is***REMOVED***used.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***This***REMOVED***takes***REMOVED***the***REMOVED***quoteMark***REMOVED***and***REMOVED***preferCurrentQuoteMark***REMOVED***options
		***REMOVED******REMOVED******REMOVED*******REMOVED***from***REMOVED***the***REMOVED***quoteValue***REMOVED***method.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.smartQuoteMark***REMOVED***=***REMOVED***function***REMOVED***smartQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***v***REMOVED***=***REMOVED***this.value;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numSingleQuotes***REMOVED***=***REMOVED***v.replace(/[^']/g,***REMOVED***'').length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***numDoubleQuotes***REMOVED***=***REMOVED***v.replace(/[^"]/g,***REMOVED***'').length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(numSingleQuotes***REMOVED***+***REMOVED***numDoubleQuotes***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***===***REMOVED***v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.NO_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pref***REMOVED***=***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pref***REMOVED***===***REMOVED***Attribute.NO_QUOTE)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pick***REMOVED***a***REMOVED***quote***REMOVED***mark***REMOVED***that***REMOVED***isn't***REMOVED***none***REMOVED***and***REMOVED***see***REMOVED***if***REMOVED***it's***REMOVED***smaller
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quote***REMOVED***=***REMOVED***this.quoteMark***REMOVED***||***REMOVED***options.quoteMark***REMOVED***||***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***opts***REMOVED***=***REMOVED***CSSESC_QUOTE_OPTIONS[quote];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(v,***REMOVED***opts);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteValue.length***REMOVED***<***REMOVED***escaped.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quote;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pref;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***===***REMOVED***numSingleQuotes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.preferredQuoteMark(options);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(numDoubleQuotes***REMOVED***<***REMOVED***numSingleQuotes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Attribute.SINGLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Selects***REMOVED***the***REMOVED***preferred***REMOVED***quote***REMOVED***mark***REMOVED***based***REMOVED***on***REMOVED***the***REMOVED***options***REMOVED***and***REMOVED***the***REMOVED***current***REMOVED***quote***REMOVED***mark***REMOVED***value.
		***REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***depend***REMOVED***on***REMOVED***the***REMOVED***attribute***REMOVED***value,***REMOVED***call***REMOVED***`smartQuoteMark(opts)`
		***REMOVED******REMOVED******REMOVED*******REMOVED***instead.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.preferredQuoteMark***REMOVED***=***REMOVED***function***REMOVED***preferredQuoteMark(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***this.quoteMark***REMOVED***:***REMOVED***options.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***options.preferCurrentQuoteMark***REMOVED***?***REMOVED***options.quoteMark***REMOVED***:***REMOVED***this.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(quoteMark***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***Attribute.DOUBLE_QUOTE;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***quoteMark;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._syncRawValue***REMOVED***=***REMOVED***function***REMOVED***_syncRawValue()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(this._value,***REMOVED***CSSESC_QUOTE_OPTIONS[this.quoteMark]);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue***REMOVED***===***REMOVED***this._value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws.value;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.value***REMOVED***=***REMOVED***rawValue;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._handleEscapes***REMOVED***=***REMOVED***function***REMOVED***_handleEscapes(prop,***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escaped***REMOVED***=***REMOVED***(0,***REMOVED***_cssesc["default"])(value,***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isIdentifier:***REMOVED***true
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaped***REMOVED***!==***REMOVED***value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws[prop]***REMOVED***=***REMOVED***escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***this.raws[prop];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._spacesFor***REMOVED***=***REMOVED***function***REMOVED***_spacesFor(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***'',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***this.spaces[name]***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaces***REMOVED***=***REMOVED***this.raws.spaces***REMOVED***&&***REMOVED***this.raws.spaces[name]***REMOVED***||***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(attrSpaces,***REMOVED***spaces,***REMOVED***rawSpaces);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._stringFor***REMOVED***=***REMOVED***function***REMOVED***_stringFor(name,***REMOVED***spaceName,***REMOVED***concat)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceName***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceName***REMOVED***=***REMOVED***name;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(concat***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***concat***REMOVED***=***REMOVED***defaultAttrConcat;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attrSpaces***REMOVED***=***REMOVED***this._spacesFor(spaceName);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***concat(this.stringifyProperty(name),***REMOVED***attrSpaces);
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***offset***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***part***REMOVED***specified***REMOVED***relative***REMOVED***to***REMOVED***the
		***REMOVED******REMOVED******REMOVED*******REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***node***REMOVED***of***REMOVED***the***REMOVED***output***REMOVED***string.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"ns"***REMOVED***-***REMOVED***alias***REMOVED***for***REMOVED***"namespace"
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"namespace"***REMOVED***-***REMOVED***the***REMOVED***namespace***REMOVED***if***REMOVED***it***REMOVED***exists.
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attribute"***REMOVED***-***REMOVED***the***REMOVED***attribute***REMOVED***name
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"attributeNS"***REMOVED***-***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***or***REMOVED***its***REMOVED***namespace
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"operator"***REMOVED***-***REMOVED***the***REMOVED***match***REMOVED***operator***REMOVED***of***REMOVED***the***REMOVED***attribute
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"value"***REMOVED***-***REMOVED***The***REMOVED***value***REMOVED***(string***REMOVED***or***REMOVED***identifier)
		***REMOVED******REMOVED******REMOVED*******REMOVED*******REMOVED***"insensitive"***REMOVED***-***REMOVED***the***REMOVED***case***REMOVED***insensitivity***REMOVED***flag;
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***part***REMOVED***One***REMOVED***of***REMOVED***the***REMOVED***possible***REMOVED***values***REMOVED***inside***REMOVED***an***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***-1***REMOVED***if***REMOVED***the***REMOVED***name***REMOVED***is***REMOVED***invalid***REMOVED***or***REMOVED***the***REMOVED***value***REMOVED***doesn't***REMOVED***exist***REMOVED***in***REMOVED***this***REMOVED***attribute.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.offsetOf***REMOVED***=***REMOVED***function***REMOVED***offsetOf(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***count***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attributeSpaces***REMOVED***=***REMOVED***this._spacesFor("attribute");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"namespace"***REMOVED***||***REMOVED***name***REMOVED***===***REMOVED***"ns")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attributeNS")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.namespaceString.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"attribute")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***count;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***this.stringifyProperty("attribute").length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***attributeSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operatorSpaces***REMOVED***=***REMOVED***this._spacesFor("operator");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***operator***REMOVED***=***REMOVED***this.stringifyProperty("operator");
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"operator")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***operator***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operator.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***operatorSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***valueSpaces***REMOVED***=***REMOVED***this._spacesFor("value");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***this.stringifyProperty("value");
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"value")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***value.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***valueSpaces.after.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitiveSpaces***REMOVED***=***REMOVED***this._spacesFor("insensitive");
		***REMOVED******REMOVED******REMOVED******REMOVED***count***REMOVED***+=***REMOVED***insensitiveSpaces.before.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"insensitive")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***count***REMOVED***:***REMOVED***-1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.toString***REMOVED***=***REMOVED***function***REMOVED***toString()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***[this.rawSpaceBefore,***REMOVED***'['];
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('qualifiedAttribute',***REMOVED***'attribute'));
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.operator***REMOVED***&&***REMOVED***(this.value***REMOVED***||***REMOVED***this.value***REMOVED***===***REMOVED***''))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('operator'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('value'));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this._stringFor('insensitiveFlag',***REMOVED***'insensitive',***REMOVED***function***REMOVED***(attrValue,***REMOVED***attrSpaces)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrValue.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!_this2.quoted***REMOVED***&&***REMOVED***attrSpaces.before.length***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***!(_this2.spaces.value***REMOVED***&&***REMOVED***_this2.spaces.value.after))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrSpaces.before***REMOVED***=***REMOVED***"***REMOVED***";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(']');
		***REMOVED******REMOVED******REMOVED******REMOVED***selector.push(this.rawSpaceAfter);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selector.join('');
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Attribute,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoted",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***qm***REMOVED***=***REMOVED***this.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***qm***REMOVED***===***REMOVED***"'"***REMOVED***||***REMOVED***qm***REMOVED***===***REMOVED***'"';
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedQuotedAssignment();
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***a***REMOVED***single***REMOVED***(`'`)***REMOVED***or***REMOVED***double***REMOVED***(`"`)***REMOVED***quote***REMOVED***character***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***is***REMOVED***not***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***`undefined`***REMOVED***if***REMOVED***the***REMOVED***quotation***REMOVED***state***REMOVED***is***REMOVED***unknown***REMOVED***(this***REMOVED***can***REMOVED***happen***REMOVED***when
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***constructed***REMOVED***without***REMOVED***specifying***REMOVED***a***REMOVED***quote***REMOVED***mark.)
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"quoteMark",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***by***REMOVED***this***REMOVED***attribute's***REMOVED***value.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***quote***REMOVED***mark***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.value`***REMOVED***of***REMOVED***the***REMOVED***attribute
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***value***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{"'"***REMOVED***|***REMOVED***'"'***REMOVED***|***REMOVED***null}***REMOVED***quoteMark***REMOVED***The***REMOVED***quote***REMOVED***mark***REMOVED***or***REMOVED***`null`***REMOVED***if***REMOVED***the***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***unquoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/,
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._quoteMark***REMOVED***!==***REMOVED***quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"qualifiedAttribute",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.qualifiedName(this.raws.attribute***REMOVED***||***REMOVED***this.attribute);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitiveFlag",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.insensitive***REMOVED***?***REMOVED***'i'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:
		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Before***REMOVED***3.0,***REMOVED***the***REMOVED***value***REMOVED***had***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***an***REMOVED***escaped***REMOVED***value***REMOVED***including***REMOVED***any***REMOVED***wrapped
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***quote***REMOVED***marks.***REMOVED***In***REMOVED***3.0,***REMOVED***the***REMOVED***semantics***REMOVED***of***REMOVED***`Attribute.value`***REMOVED***changed***REMOVED***so***REMOVED***that***REMOVED***the***REMOVED***value
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***is***REMOVED***unescaped***REMOVED***during***REMOVED***parsing***REMOVED***and***REMOVED***any***REMOVED***quote***REMOVED***marks***REMOVED***are***REMOVED***removed.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Because***REMOVED***the***REMOVED***ambiguity***REMOVED***of***REMOVED***this***REMOVED***semantic***REMOVED***change,***REMOVED***if***REMOVED***you***REMOVED***set***REMOVED***`attr.value***REMOVED***=***REMOVED***newValue`,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***deprecation***REMOVED***warning***REMOVED***is***REMOVED***raised***REMOVED***when***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***contains***REMOVED***any***REMOVED***characters***REMOVED***that***REMOVED***would
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***require***REMOVED***escaping***REMOVED***(including***REMOVED***if***REMOVED***it***REMOVED***contains***REMOVED***wrapped***REMOVED***quotes).
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Instead,***REMOVED***you***REMOVED***should***REMOVED***call***REMOVED***`attr.setValue(newValue,***REMOVED***opts)`***REMOVED***and***REMOVED***pass***REMOVED***options***REMOVED***that***REMOVED***describe
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***how***REMOVED***the***REMOVED***new***REMOVED***value***REMOVED***is***REMOVED***quoted.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***set(v)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._constructed)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue2***REMOVED***=***REMOVED***unescapeValue(v),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***deprecatedUsage***REMOVED***=***REMOVED***_unescapeValue2.deprecatedUsage,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue2.unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue2.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deprecatedUsage)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOfDeprecatedValueAssignment();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unescaped***REMOVED***===***REMOVED***this._value***REMOVED***&&***REMOVED***quoteMark***REMOVED***===***REMOVED***this._quoteMark)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._syncRawValue();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***v;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"insensitive",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Set***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***case***REMOVED***insensitive***REMOVED***flag***REMOVED***changes,***REMOVED***the***REMOVED***raw***REMOVED***(escaped)***REMOVED***value***REMOVED***at***REMOVED***`attr.raws.insensitiveFlag`
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***of***REMOVED***the***REMOVED***attribute***REMOVED***is***REMOVED***updated***REMOVED***accordingly.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{true***REMOVED***|***REMOVED***false}***REMOVED***insensitive***REMOVED***true***REMOVED***if***REMOVED***the***REMOVED***attribute***REMOVED***should***REMOVED***match***REMOVED***case-insensitively.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/,
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(insensitive)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***false;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"i"***REMOVED***and***REMOVED***"I"***REMOVED***can***REMOVED***be***REMOVED***used***REMOVED***in***REMOVED***"this.raws.insensitiveFlag"***REMOVED***to***REMOVED***store***REMOVED***the***REMOVED***original***REMOVED***notation.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***setting***REMOVED***`attr.insensitive***REMOVED***=***REMOVED***false`***REMOVED***both***REMOVED***should***REMOVED***be***REMOVED***erased***REMOVED***to***REMOVED***ensure***REMOVED***correct***REMOVED***serialization.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.raws***REMOVED***&&***REMOVED***(this.raws.insensitiveFlag***REMOVED***===***REMOVED***'I'***REMOVED***||***REMOVED***this.raws.insensitiveFlag***REMOVED***===***REMOVED***'i'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.raws.insensitiveFlag***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._insensitive***REMOVED***=***REMOVED***insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"attribute",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._attribute;
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***function***REMOVED***set(name)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._handleEscapes("attribute",***REMOVED***name);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._attribute***REMOVED***=***REMOVED***name;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Attribute;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Attribute;
		Attribute.NO_QUOTE***REMOVED***=***REMOVED***null;
		Attribute.SINGLE_QUOTE***REMOVED***=***REMOVED***"'";
		Attribute.DOUBLE_QUOTE***REMOVED***=***REMOVED***'"';
		var***REMOVED***CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***(_CSSESC_QUOTE_OPTIONS***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***"'":***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'single',
		***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
		***REMOVED******REMOVED***},
		***REMOVED******REMOVED***'"':***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***quotes:***REMOVED***'double',
		***REMOVED******REMOVED******REMOVED******REMOVED***wrap:***REMOVED***true
		***REMOVED******REMOVED***}
		},***REMOVED***_CSSESC_QUOTE_OPTIONS[null]***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***isIdentifier:***REMOVED***true
		},***REMOVED***_CSSESC_QUOTE_OPTIONS);
		function***REMOVED***defaultAttrConcat(attrValue,***REMOVED***attrSpaces)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***""***REMOVED***+***REMOVED***attrSpaces.before***REMOVED***+***REMOVED***attrValue***REMOVED***+***REMOVED***attrSpaces.after;
		}***REMOVED***
	}***REMOVED***(attribute));
	return***REMOVED***attribute;
}

var***REMOVED***universal***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredUniversal;

function***REMOVED***requireUniversal***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUniversal)***REMOVED***return***REMOVED***universal.exports;
	hasRequiredUniversal***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_namespace***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNamespace());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Universal***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Namespace)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Universal,***REMOVED***_Namespace);
		***REMOVED******REMOVED***function***REMOVED***Universal(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Namespace.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.UNIVERSAL;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'*';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Universal;
		}(_namespace["default"]);
		exports["default"]***REMOVED***=***REMOVED***Universal;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(universal,***REMOVED***universal.exports));
	return***REMOVED***universal.exports;
}

var***REMOVED***combinator***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredCombinator;

function***REMOVED***requireCombinator***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredCombinator)***REMOVED***return***REMOVED***combinator.exports;
	hasRequiredCombinator***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Combinator***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Combinator,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Combinator(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.COMBINATOR;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Combinator;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Combinator;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(combinator,***REMOVED***combinator.exports));
	return***REMOVED***combinator.exports;
}

var***REMOVED***nesting***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredNesting;

function***REMOVED***requireNesting***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredNesting)***REMOVED***return***REMOVED***nesting.exports;
	hasRequiredNesting***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_node***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNode());
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_inheritsLoose(subClass,***REMOVED***superClass)***REMOVED***{***REMOVED***subClass.prototype***REMOVED***=***REMOVED***Object.create(superClass.prototype);***REMOVED***subClass.prototype.constructor***REMOVED***=***REMOVED***subClass;***REMOVED***_setPrototypeOf(subClass,***REMOVED***superClass);***REMOVED***}
		function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***_setPrototypeOf***REMOVED***=***REMOVED***Object.setPrototypeOf***REMOVED***?***REMOVED***Object.setPrototypeOf.bind()***REMOVED***:***REMOVED***function***REMOVED***_setPrototypeOf(o,***REMOVED***p)***REMOVED***{***REMOVED***o.__proto__***REMOVED***=***REMOVED***p;***REMOVED***return***REMOVED***o;***REMOVED***};***REMOVED***return***REMOVED***_setPrototypeOf(o,***REMOVED***p);***REMOVED***}
		var***REMOVED***Nesting***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***(_Node)***REMOVED***{
		***REMOVED******REMOVED***_inheritsLoose(Nesting,***REMOVED***_Node);
		***REMOVED******REMOVED***function***REMOVED***Nesting(opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this***REMOVED***=***REMOVED***_Node.call(this,***REMOVED***opts)***REMOVED***||***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.type***REMOVED***=***REMOVED***_types.NESTING;
		***REMOVED******REMOVED******REMOVED******REMOVED***_this.value***REMOVED***=***REMOVED***'&';
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***Nesting;
		}(_node["default"]);
		exports["default"]***REMOVED***=***REMOVED***Nesting;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(nesting,***REMOVED***nesting.exports));
	return***REMOVED***nesting.exports;
}

var***REMOVED***sortAscending***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredSortAscending;

function***REMOVED***requireSortAscending***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSortAscending)***REMOVED***return***REMOVED***sortAscending.exports;
	hasRequiredSortAscending***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***sortAscending;
		function***REMOVED***sortAscending(list)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***list.sort(function***REMOVED***(a,***REMOVED***b)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***-***REMOVED***b;
		***REMOVED******REMOVED***});
		}
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(sortAscending,***REMOVED***sortAscending.exports));
	return***REMOVED***sortAscending.exports;
}

var***REMOVED***tokenize***REMOVED***=***REMOVED***{};

var***REMOVED***tokenTypes***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredTokenTypes;

function***REMOVED***requireTokenTypes***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTokenTypes)***REMOVED***return***REMOVED***tokenTypes;
	hasRequiredTokenTypes***REMOVED***=***REMOVED***1;

	tokenTypes.__esModule***REMOVED***=***REMOVED***true;
	tokenTypes.word***REMOVED***=***REMOVED***tokenTypes.tilde***REMOVED***=***REMOVED***tokenTypes.tab***REMOVED***=***REMOVED***tokenTypes.str***REMOVED***=***REMOVED***tokenTypes.space***REMOVED***=***REMOVED***tokenTypes.slash***REMOVED***=***REMOVED***tokenTypes.singleQuote***REMOVED***=***REMOVED***tokenTypes.semicolon***REMOVED***=***REMOVED***tokenTypes.plus***REMOVED***=***REMOVED***tokenTypes.pipe***REMOVED***=***REMOVED***tokenTypes.openSquare***REMOVED***=***REMOVED***tokenTypes.openParenthesis***REMOVED***=***REMOVED***tokenTypes.newline***REMOVED***=***REMOVED***tokenTypes.greaterThan***REMOVED***=***REMOVED***tokenTypes.feed***REMOVED***=***REMOVED***tokenTypes.equals***REMOVED***=***REMOVED***tokenTypes.doubleQuote***REMOVED***=***REMOVED***tokenTypes.dollar***REMOVED***=***REMOVED***tokenTypes.cr***REMOVED***=***REMOVED***tokenTypes.comment***REMOVED***=***REMOVED***tokenTypes.comma***REMOVED***=***REMOVED***tokenTypes.combinator***REMOVED***=***REMOVED***tokenTypes.colon***REMOVED***=***REMOVED***tokenTypes.closeSquare***REMOVED***=***REMOVED***tokenTypes.closeParenthesis***REMOVED***=***REMOVED***tokenTypes.caret***REMOVED***=***REMOVED***tokenTypes.bang***REMOVED***=***REMOVED***tokenTypes.backslash***REMOVED***=***REMOVED***tokenTypes.at***REMOVED***=***REMOVED***tokenTypes.asterisk***REMOVED***=***REMOVED***tokenTypes.ampersand***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***ampersand***REMOVED***=***REMOVED***38;***REMOVED***//***REMOVED***`&`.charCodeAt(0);
	tokenTypes.ampersand***REMOVED***=***REMOVED***ampersand;
	var***REMOVED***asterisk***REMOVED***=***REMOVED***42;***REMOVED***//***REMOVED***`*`.charCodeAt(0);
	tokenTypes.asterisk***REMOVED***=***REMOVED***asterisk;
	var***REMOVED***at***REMOVED***=***REMOVED***64;***REMOVED***//***REMOVED***`@`.charCodeAt(0);
	tokenTypes.at***REMOVED***=***REMOVED***at;
	var***REMOVED***comma***REMOVED***=***REMOVED***44;***REMOVED***//***REMOVED***`,`.charCodeAt(0);
	tokenTypes.comma***REMOVED***=***REMOVED***comma;
	var***REMOVED***colon***REMOVED***=***REMOVED***58;***REMOVED***//***REMOVED***`:`.charCodeAt(0);
	tokenTypes.colon***REMOVED***=***REMOVED***colon;
	var***REMOVED***semicolon***REMOVED***=***REMOVED***59;***REMOVED***//***REMOVED***`;`.charCodeAt(0);
	tokenTypes.semicolon***REMOVED***=***REMOVED***semicolon;
	var***REMOVED***openParenthesis***REMOVED***=***REMOVED***40;***REMOVED***//***REMOVED***`(`.charCodeAt(0);
	tokenTypes.openParenthesis***REMOVED***=***REMOVED***openParenthesis;
	var***REMOVED***closeParenthesis***REMOVED***=***REMOVED***41;***REMOVED***//***REMOVED***`)`.charCodeAt(0);
	tokenTypes.closeParenthesis***REMOVED***=***REMOVED***closeParenthesis;
	var***REMOVED***openSquare***REMOVED***=***REMOVED***91;***REMOVED***//***REMOVED***`[`.charCodeAt(0);
	tokenTypes.openSquare***REMOVED***=***REMOVED***openSquare;
	var***REMOVED***closeSquare***REMOVED***=***REMOVED***93;***REMOVED***//***REMOVED***`]`.charCodeAt(0);
	tokenTypes.closeSquare***REMOVED***=***REMOVED***closeSquare;
	var***REMOVED***dollar***REMOVED***=***REMOVED***36;***REMOVED***//***REMOVED***`$`.charCodeAt(0);
	tokenTypes.dollar***REMOVED***=***REMOVED***dollar;
	var***REMOVED***tilde***REMOVED***=***REMOVED***126;***REMOVED***//***REMOVED***`~`.charCodeAt(0);
	tokenTypes.tilde***REMOVED***=***REMOVED***tilde;
	var***REMOVED***caret***REMOVED***=***REMOVED***94;***REMOVED***//***REMOVED***`^`.charCodeAt(0);
	tokenTypes.caret***REMOVED***=***REMOVED***caret;
	var***REMOVED***plus***REMOVED***=***REMOVED***43;***REMOVED***//***REMOVED***`+`.charCodeAt(0);
	tokenTypes.plus***REMOVED***=***REMOVED***plus;
	var***REMOVED***equals***REMOVED***=***REMOVED***61;***REMOVED***//***REMOVED***`=`.charCodeAt(0);
	tokenTypes.equals***REMOVED***=***REMOVED***equals;
	var***REMOVED***pipe***REMOVED***=***REMOVED***124;***REMOVED***//***REMOVED***`|`.charCodeAt(0);
	tokenTypes.pipe***REMOVED***=***REMOVED***pipe;
	var***REMOVED***greaterThan***REMOVED***=***REMOVED***62;***REMOVED***//***REMOVED***`>`.charCodeAt(0);
	tokenTypes.greaterThan***REMOVED***=***REMOVED***greaterThan;
	var***REMOVED***space***REMOVED***=***REMOVED***32;***REMOVED***//***REMOVED***`***REMOVED***`.charCodeAt(0);
	tokenTypes.space***REMOVED***=***REMOVED***space;
	var***REMOVED***singleQuote***REMOVED***=***REMOVED***39;***REMOVED***//***REMOVED***`'`.charCodeAt(0);
	tokenTypes.singleQuote***REMOVED***=***REMOVED***singleQuote;
	var***REMOVED***doubleQuote***REMOVED***=***REMOVED***34;***REMOVED***//***REMOVED***`"`.charCodeAt(0);
	tokenTypes.doubleQuote***REMOVED***=***REMOVED***doubleQuote;
	var***REMOVED***slash***REMOVED***=***REMOVED***47;***REMOVED***//***REMOVED***`/`.charCodeAt(0);
	tokenTypes.slash***REMOVED***=***REMOVED***slash;
	var***REMOVED***bang***REMOVED***=***REMOVED***33;***REMOVED***//***REMOVED***`!`.charCodeAt(0);
	tokenTypes.bang***REMOVED***=***REMOVED***bang;
	var***REMOVED***backslash***REMOVED***=***REMOVED***92;***REMOVED***//***REMOVED***'\\'.charCodeAt(0);
	tokenTypes.backslash***REMOVED***=***REMOVED***backslash;
	var***REMOVED***cr***REMOVED***=***REMOVED***13;***REMOVED***//***REMOVED***'\r'.charCodeAt(0);
	tokenTypes.cr***REMOVED***=***REMOVED***cr;
	var***REMOVED***feed***REMOVED***=***REMOVED***12;***REMOVED***//***REMOVED***'\f'.charCodeAt(0);
	tokenTypes.feed***REMOVED***=***REMOVED***feed;
	var***REMOVED***newline***REMOVED***=***REMOVED***10;***REMOVED***//***REMOVED***'\n'.charCodeAt(0);
	tokenTypes.newline***REMOVED***=***REMOVED***newline;
	var***REMOVED***tab***REMOVED***=***REMOVED***9;***REMOVED***//***REMOVED***'\t'.charCodeAt(0);

	//***REMOVED***Expose***REMOVED***aliases***REMOVED***primarily***REMOVED***for***REMOVED***readability.
	tokenTypes.tab***REMOVED***=***REMOVED***tab;
	var***REMOVED***str***REMOVED***=***REMOVED***singleQuote;

	//***REMOVED***No***REMOVED***good***REMOVED***single***REMOVED***character***REMOVED***representation!
	tokenTypes.str***REMOVED***=***REMOVED***str;
	var***REMOVED***comment***REMOVED***=***REMOVED***-1;
	tokenTypes.comment***REMOVED***=***REMOVED***comment;
	var***REMOVED***word***REMOVED***=***REMOVED***-2;
	tokenTypes.word***REMOVED***=***REMOVED***word;
	var***REMOVED***combinator***REMOVED***=***REMOVED***-3;
	tokenTypes.combinator***REMOVED***=***REMOVED***combinator;
	return***REMOVED***tokenTypes;
}

var***REMOVED***hasRequiredTokenize;

function***REMOVED***requireTokenize***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredTokenize)***REMOVED***return***REMOVED***tokenize;
	hasRequiredTokenize***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports.FIELDS***REMOVED***=***REMOVED***void***REMOVED***0;
		exports["default"]***REMOVED***=***REMOVED***tokenize;
		var***REMOVED***t***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenTypes());
		var***REMOVED***_unescapable,***REMOVED***_wordDelimiters;
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		var***REMOVED***unescapable***REMOVED***=***REMOVED***(_unescapable***REMOVED***=***REMOVED***{},***REMOVED***_unescapable[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_unescapable);
		var***REMOVED***wordDelimiters***REMOVED***=***REMOVED***(_wordDelimiters***REMOVED***=***REMOVED***{},***REMOVED***_wordDelimiters[t.space]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tab]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.newline]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.cr]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.feed]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.ampersand]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.asterisk]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.bang]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.comma]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.colon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.semicolon]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeParenthesis]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.openSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.closeSquare]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.singleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.doubleQuote]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.plus]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.pipe]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.tilde]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.greaterThan]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.equals]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.dollar]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.caret]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters[t.slash]***REMOVED***=***REMOVED***true,***REMOVED***_wordDelimiters);
		var***REMOVED***hex***REMOVED***=***REMOVED***{};
		var***REMOVED***hexChars***REMOVED***=***REMOVED***"0123456789abcdefABCDEF";
		for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***hexChars.length;***REMOVED***i++)***REMOVED***{
		***REMOVED******REMOVED***hex[hexChars.charCodeAt(i)]***REMOVED***=***REMOVED***true;
		}

		/**
		***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***bar***REMOVED***css***REMOVED***word
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***word***REMOVED***begins
		***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***word's***REMOVED***first***REMOVED***letter***REMOVED***occurs
		***REMOVED****/
		function***REMOVED***consumeWord(css,***REMOVED***start)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED***var***REMOVED***code;
		***REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(wordDelimiters[code])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeEscape(css,***REMOVED***next)***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***All***REMOVED***other***REMOVED***characters***REMOVED***are***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***word
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}***REMOVED***while***REMOVED***(next***REMOVED***<***REMOVED***css.length);
		***REMOVED******REMOVED***return***REMOVED***next***REMOVED***-***REMOVED***1;
		}

		/**
		***REMOVED*******REMOVED******REMOVED***Returns***REMOVED***the***REMOVED***last***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***escape***REMOVED***sequence
		***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***css***REMOVED***The***REMOVED***string***REMOVED***in***REMOVED***which***REMOVED***the***REMOVED***sequence***REMOVED***begins
		***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***start***REMOVED***The***REMOVED***index***REMOVED***into***REMOVED***the***REMOVED***string***REMOVED***where***REMOVED***escape***REMOVED***character***REMOVED***(`\`)***REMOVED***occurs.
		***REMOVED****/
		function***REMOVED***consumeEscape(css,***REMOVED***start)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED***if***REMOVED***(unescapable[code])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(hex[code])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hexDigits***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***consume***REMOVED***up***REMOVED***to***REMOVED***6***REMOVED***hex***REMOVED***chars
		***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hexDigits++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(hex[code]***REMOVED***&&***REMOVED***hexDigits***REMOVED***<***REMOVED***6);
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***fewer***REMOVED***than***REMOVED***6***REMOVED***hex***REMOVED***chars,***REMOVED***a***REMOVED***trailing***REMOVED***space***REMOVED***ends***REMOVED***the***REMOVED***escape
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hexDigits***REMOVED***<***REMOVED***6***REMOVED***&&***REMOVED***code***REMOVED***===***REMOVED***t.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***next***REMOVED***char***REMOVED***is***REMOVED***part***REMOVED***of***REMOVED***the***REMOVED***current***REMOVED***word
		***REMOVED******REMOVED******REMOVED******REMOVED***next++;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***next;
		}
		var***REMOVED***FIELDS***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED***TYPE:***REMOVED***0,
		***REMOVED******REMOVED***START_LINE:***REMOVED***1,
		***REMOVED******REMOVED***START_COL:***REMOVED***2,
		***REMOVED******REMOVED***END_LINE:***REMOVED***3,
		***REMOVED******REMOVED***END_COL:***REMOVED***4,
		***REMOVED******REMOVED***START_POS:***REMOVED***5,
		***REMOVED******REMOVED***END_POS:***REMOVED***6
		};
		exports.FIELDS***REMOVED***=***REMOVED***FIELDS;
		function***REMOVED***tokenize(input)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***tokens***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED***var***REMOVED***css***REMOVED***=***REMOVED***input.css.valueOf();
		***REMOVED******REMOVED***var***REMOVED***_css***REMOVED***=***REMOVED***css,
		***REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***_css.length;
		***REMOVED******REMOVED***var***REMOVED***offset***REMOVED***=***REMOVED***-1;
		***REMOVED******REMOVED***var***REMOVED***line***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED***var***REMOVED***start***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***var***REMOVED***end***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED***var***REMOVED***code,***REMOVED***content,***REMOVED***endColumn,***REMOVED***endLine,***REMOVED***escaped,***REMOVED***escapePos,***REMOVED***last,***REMOVED***lines,***REMOVED***next,***REMOVED***nextLine,***REMOVED***nextOffset,***REMOVED***quote,***REMOVED***tokenType;
		***REMOVED******REMOVED***function***REMOVED***unclosed(what,***REMOVED***fix)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(input.safe)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fyi:***REMOVED***this***REMOVED***is***REMOVED***never***REMOVED***set***REMOVED***to***REMOVED***true.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css***REMOVED***+=***REMOVED***fix;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***input.error('Unclosed***REMOVED***'***REMOVED***+***REMOVED***what,***REMOVED***line,***REMOVED***start***REMOVED***-***REMOVED***offset,***REMOVED***start);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***while***REMOVED***(start***REMOVED***<***REMOVED***length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(start);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(code)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tab:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.newline:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.cr:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.feed:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.newline)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.space***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.newline***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tab***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.cr***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.feed);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.plus:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.greaterThan:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.tilde:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.pipe:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***css.charCodeAt(next);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***===***REMOVED***t.plus***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.greaterThan***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.tilde***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***t.pipe);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.combinator;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Consume***REMOVED***these***REMOVED***characters***REMOVED***as***REMOVED***single***REMOVED***tokens.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.ampersand:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.bang:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.comma:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.colon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.semicolon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.openParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.closeParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.singleQuote:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***t.doubleQuote:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quote***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***t.singleQuote***REMOVED***?***REMOVED***"'"***REMOVED***:***REMOVED***'"';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf(quote,***REMOVED***next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('quote',***REMOVED***quote);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***=***REMOVED***next;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(css.charCodeAt(escapePos***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***t.backslash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***-=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***!escaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(escaped);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.str;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash***REMOVED***&&***REMOVED***css.charCodeAt(start***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***t.asterisk)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***css.indexOf('*/',***REMOVED***start***REMOVED***+***REMOVED***2)***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unclosed('comment',***REMOVED***'*/');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***css.slice(start,***REMOVED***next***REMOVED***+***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lines***REMOVED***=***REMOVED***content.split('\n');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last***REMOVED***=***REMOVED***lines.length***REMOVED***-***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line***REMOVED***+***REMOVED***last;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***lines[last].length;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.comment;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line***REMOVED***=***REMOVED***nextLine;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***nextLine;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***nextOffset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***t.slash)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***start;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***code;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***start***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***consumeWord(css,***REMOVED***start);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokenType***REMOVED***=***REMOVED***t.word;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endLine***REMOVED***=***REMOVED***line;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endColumn***REMOVED***=***REMOVED***next***REMOVED***-***REMOVED***offset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED***}

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***token***REMOVED***structure***REMOVED***remains***REMOVED***consistent
		***REMOVED******REMOVED******REMOVED******REMOVED***tokens.push([tokenType,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[0]***REMOVED***Token***REMOVED***type
		***REMOVED******REMOVED******REMOVED******REMOVED***line,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[1]***REMOVED***Starting***REMOVED***line
		***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***-***REMOVED***offset,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[2]***REMOVED***Starting***REMOVED***column
		***REMOVED******REMOVED******REMOVED******REMOVED***endLine,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[3]***REMOVED***Ending***REMOVED***line
		***REMOVED******REMOVED******REMOVED******REMOVED***endColumn,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[4]***REMOVED***Ending***REMOVED***column
		***REMOVED******REMOVED******REMOVED******REMOVED***start,
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[5]***REMOVED***Start***REMOVED***position***REMOVED***/***REMOVED***Source***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***//***REMOVED***[6]***REMOVED***End***REMOVED***position
		***REMOVED******REMOVED******REMOVED******REMOVED***]);

		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Reset***REMOVED***offset***REMOVED***for***REMOVED***the***REMOVED***next***REMOVED***token
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextOffset)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***offset***REMOVED***=***REMOVED***nextOffset;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextOffset***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***end;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***tokens;
		}***REMOVED***
	}***REMOVED***(tokenize));
	return***REMOVED***tokenize;
}

var***REMOVED***hasRequiredParser;

function***REMOVED***requireParser***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredParser)***REMOVED***return***REMOVED***parser.exports;
	hasRequiredParser***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireRoot());
		var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSelector());
		var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireClassName());
		var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireComment());
		var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireId());
		var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireTag());
		var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireString());
		var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requirePseudo());
		var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireAttribute());
		var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUniversal());
		var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCombinator());
		var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNesting());
		var***REMOVED***_sortAscending***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSortAscending());
		var***REMOVED***_tokenize***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenize());
		var***REMOVED***tokens***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTokenTypes());
		var***REMOVED***types***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireTypes());
		var***REMOVED***_util***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUtil();
		var***REMOVED***_WHITESPACE_TOKENS,***REMOVED***_Object$assign;
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		function***REMOVED***_defineProperties(target,***REMOVED***props)***REMOVED***{***REMOVED***for***REMOVED***(var***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***props.length;***REMOVED***i++)***REMOVED***{***REMOVED***var***REMOVED***descriptor***REMOVED***=***REMOVED***props[i];***REMOVED***descriptor.enumerable***REMOVED***=***REMOVED***descriptor.enumerable***REMOVED***||***REMOVED***false;***REMOVED***descriptor.configurable***REMOVED***=***REMOVED***true;***REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***descriptor)***REMOVED***descriptor.writable***REMOVED***=***REMOVED***true;***REMOVED***Object.defineProperty(target,***REMOVED***descriptor.key,***REMOVED***descriptor);***REMOVED***}***REMOVED***}
		function***REMOVED***_createClass(Constructor,***REMOVED***protoProps,***REMOVED***staticProps)***REMOVED***{***REMOVED***if***REMOVED***(protoProps)***REMOVED***_defineProperties(Constructor.prototype,***REMOVED***protoProps);***REMOVED***Object.defineProperty(Constructor,***REMOVED***"prototype",***REMOVED***{***REMOVED***writable:***REMOVED***false***REMOVED***});***REMOVED***return***REMOVED***Constructor;***REMOVED***}
		var***REMOVED***WHITESPACE_TOKENS***REMOVED***=***REMOVED***(_WHITESPACE_TOKENS***REMOVED***=***REMOVED***{},***REMOVED***_WHITESPACE_TOKENS[tokens.space]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.cr]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.feed]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.newline]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS[tokens.tab]***REMOVED***=***REMOVED***true,***REMOVED***_WHITESPACE_TOKENS);
		var***REMOVED***WHITESPACE_EQUIV_TOKENS***REMOVED***=***REMOVED***Object.assign({},***REMOVED***WHITESPACE_TOKENS,***REMOVED***(_Object$assign***REMOVED***=***REMOVED***{},***REMOVED***_Object$assign[tokens.comment]***REMOVED***=***REMOVED***true,***REMOVED***_Object$assign));
		function***REMOVED***tokenStart(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.START_LINE],
		***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.START_COL]
		***REMOVED******REMOVED***};
		}
		function***REMOVED***tokenEnd(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***token[_tokenize.FIELDS.END_LINE],
		***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***token[_tokenize.FIELDS.END_COL]
		***REMOVED******REMOVED***};
		}
		function***REMOVED***getSource(startLine,***REMOVED***startColumn,***REMOVED***endLine,***REMOVED***endColumn)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***startLine,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***startColumn
		***REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***endLine,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***endColumn
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		}
		function***REMOVED***getTokenSource(token)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***getSource(token[_tokenize.FIELDS.START_LINE],***REMOVED***token[_tokenize.FIELDS.START_COL],***REMOVED***token[_tokenize.FIELDS.END_LINE],***REMOVED***token[_tokenize.FIELDS.END_COL]);
		}
		function***REMOVED***getTokenSourceSpan(startToken,***REMOVED***endToken)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(!startToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***undefined;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***getSource(startToken[_tokenize.FIELDS.START_LINE],***REMOVED***startToken[_tokenize.FIELDS.START_COL],***REMOVED***endToken[_tokenize.FIELDS.END_LINE],***REMOVED***endToken[_tokenize.FIELDS.END_COL]);
		}
		function***REMOVED***unescapeProp(node,***REMOVED***prop)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***node[prop];
		***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"string")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***if***REMOVED***(value.indexOf("\\")***REMOVED***!==***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED***node[prop]***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(value);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws[prop]***REMOVED***===***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[prop]***REMOVED***=***REMOVED***value;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***node;
		}
		function***REMOVED***indexesOf(array,***REMOVED***item)***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***-1;
		***REMOVED******REMOVED***var***REMOVED***indexes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED***while***REMOVED***((i***REMOVED***=***REMOVED***array.indexOf(item,***REMOVED***i***REMOVED***+***REMOVED***1))***REMOVED***!==***REMOVED***-1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***indexes.push(i);
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***return***REMOVED***indexes;
		}
		function***REMOVED***uniqs()***REMOVED***{
		***REMOVED******REMOVED***var***REMOVED***list***REMOVED***=***REMOVED***Array.prototype.concat.apply([],***REMOVED***arguments);
		***REMOVED******REMOVED***return***REMOVED***list.filter(function***REMOVED***(item,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***===***REMOVED***list.indexOf(item);
		***REMOVED******REMOVED***});
		}
		var***REMOVED***Parser***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Parser(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.rule***REMOVED***=***REMOVED***rule;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***Object.assign({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***false,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***false
		***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.css***REMOVED***=***REMOVED***typeof***REMOVED***this.rule***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***this.rule***REMOVED***:***REMOVED***this.rule.selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.tokens***REMOVED***=***REMOVED***(0,***REMOVED***_tokenize["default"])({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***css:***REMOVED***this.css,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***error:***REMOVED***this._errorGenerator(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***safe:***REMOVED***this.options.safe
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rootSource***REMOVED***=***REMOVED***getTokenSourceSpan(this.tokens[0],***REMOVED***this.tokens[this.tokens.length***REMOVED***-***REMOVED***1]);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root***REMOVED***=***REMOVED***new***REMOVED***_root["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***rootSource
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root.errorGenerator***REMOVED***=***REMOVED***this._errorGenerator();
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***1,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***1
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***0
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.root.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.loop();
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Parser.prototype;
		***REMOVED******REMOVED***_proto._errorGenerator***REMOVED***=***REMOVED***function***REMOVED***_errorGenerator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***function***REMOVED***(message,***REMOVED***errorOptions)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***_this.rule***REMOVED***===***REMOVED***'string')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Error(message);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this.rule.error(message,***REMOVED***errorOptions);
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.attribute***REMOVED***=***REMOVED***function***REMOVED***attribute()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***attr***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attr.push(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.closeSquare)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***len***REMOVED***=***REMOVED***attr.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(startingToken[1],***REMOVED***startingToken[2],***REMOVED***this.currToken[3],***REMOVED***this.currToken[4]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(len***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***!~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE]))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***attr[0][_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastAdded***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***len)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***token***REMOVED***=***REMOVED***attr[pos];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***attr[pos***REMOVED***+***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(token[_tokenize.FIELDS.TYPE])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***(
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***len***REMOVED***===***REMOVED***1***REMOVED***||
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[TOKEN.START_POS],***REMOVED***content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***lastAdded);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***prevContent***REMOVED***=***REMOVED***node.spaces[lastAdded].after***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces[lastAdded].after***REMOVED***=***REMOVED***prevContent***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***existingComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existingComment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***existingComment***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***spaceBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((!node.namespace***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"namespace"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***&&***REMOVED***next)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***(node.namespace***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'namespace')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.namespace***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded***REMOVED***===***REMOVED***"value")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***"$";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldRawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***oldRawValue***REMOVED***+***REMOVED***"$";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Falls***REMOVED***through
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***===***REMOVED***'~'***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!==***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.equals)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.namespace***REMOVED***&&***REMOVED***!node.attribute)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***this.content(next)***REMOVED***===***REMOVED***'|'***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***attr[pos***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***!==***REMOVED***tokens.equals***REMOVED***&&
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***look-ahead***REMOVED***probably***REMOVED***fails***REMOVED***with***REMOVED***comment***REMOVED***nodes***REMOVED***involved.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!node.operator***REMOVED***&&***REMOVED***!node.namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'namespace';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"attribute"***REMOVED***&&***REMOVED***!spaceAfterMeaningfulToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.attribute.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'attribute');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.attribute.before***REMOVED***=***REMOVED***commentBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.attribute***REMOVED***=***REMOVED***(node.attribute***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_rawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'attribute')***REMOVED***||***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_rawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.attribute***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'attribute';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!node.value***REMOVED***&&***REMOVED***node.value***REMOVED***!==***REMOVED***""***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***"value"***REMOVED***&&***REMOVED***!(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***node.quoteMark))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescaped***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_oldRawValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'value')***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***oldValue***REMOVED***=***REMOVED***node.value***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***oldValue***REMOVED***+***REMOVED***_unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_unescaped***REMOVED***!==***REMOVED***content***REMOVED***||***REMOVED***_oldRawValue)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***(_oldRawValue***REMOVED***||***REMOVED***oldValue)***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***insensitive***REMOVED***=***REMOVED***content***REMOVED***===***REMOVED***'i'***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***&&***REMOVED***(node.quoteMark***REMOVED***||***REMOVED***spaceAfterMeaningfulToken))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.insensitive***REMOVED***=***REMOVED***insensitive;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!insensitive***REMOVED***||***REMOVED***content***REMOVED***===***REMOVED***"I")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.insensitiveFlag***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'insensitive';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'spaces',***REMOVED***'insensitive');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.insensitive.before***REMOVED***=***REMOVED***spaceBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(commentBefore)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***'insensitive');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces.insensitive.before***REMOVED***=***REMOVED***commentBefore;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.value***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***'')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.raws.value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***+=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute***REMOVED***||***REMOVED***!node.operator)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***an***REMOVED***attribute***REMOVED***followed***REMOVED***by***REMOVED***an***REMOVED***operator***REMOVED***preceding***REMOVED***the***REMOVED***string.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_unescapeValue***REMOVED***=***REMOVED***(0,***REMOVED***_attribute.unescapeValue)(content),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescaped***REMOVED***=***REMOVED***_unescapeValue.unescaped,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark***REMOVED***=***REMOVED***_unescapeValue.quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***unescaped;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.quoteMark***REMOVED***=***REMOVED***quoteMark;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'value';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.value***REMOVED***=***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.attribute)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('attribute',***REMOVED***token[_tokenize.FIELDS.START_POS],***REMOVED***content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Unexpected***REMOVED***"="***REMOVED***found;***REMOVED***an***REMOVED***operator***REMOVED***was***REMOVED***already***REMOVED***defined.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***=***REMOVED***node.operator***REMOVED***?***REMOVED***node.operator***REMOVED***+***REMOVED***content***REMOVED***:***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastAdded***REMOVED***=***REMOVED***'operator';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceAfterMeaningfulToken***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastAdded)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceAfterMeaningfulToken***REMOVED***||***REMOVED***next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space***REMOVED***||***REMOVED***lastAdded***REMOVED***===***REMOVED***'insensitive')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastComment***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded,***REMOVED***'after')***REMOVED***||***REMOVED***lastComment;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws',***REMOVED***'spaces',***REMOVED***lastAdded);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws.spaces[lastAdded].after***REMOVED***=***REMOVED***rawLastComment***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastValue***REMOVED***=***REMOVED***node[lastAdded]***REMOVED***||***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawLastValue***REMOVED***=***REMOVED***(0,***REMOVED***_util.getProp)(node,***REMOVED***'raws',***REMOVED***lastAdded)***REMOVED***||***REMOVED***lastValue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(0,***REMOVED***_util.ensureObject)(node,***REMOVED***'raws');
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws[lastAdded]***REMOVED***=***REMOVED***rawLastValue***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commentBefore***REMOVED***=***REMOVED***commentBefore***REMOVED***+***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***\""***REMOVED***+***REMOVED***content***REMOVED***+***REMOVED***"\"***REMOVED***found.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***token[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"attribute");
		***REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_attribute["default"](node));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***return***REMOVED***a***REMOVED***node***REMOVED***containing***REMOVED***meaningless***REMOVED***garbage***REMOVED***up***REMOVED***to***REMOVED***(but***REMOVED***not***REMOVED***including)***REMOVED***the***REMOVED***specified***REMOVED***token***REMOVED***position.
		***REMOVED******REMOVED******REMOVED*******REMOVED***if***REMOVED***the***REMOVED***token***REMOVED***position***REMOVED***is***REMOVED***negative,***REMOVED***all***REMOVED***remaining***REMOVED***tokens***REMOVED***are***REMOVED***consumed.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***returns***REMOVED***an***REMOVED***array***REMOVED***containing***REMOVED***a***REMOVED***single***REMOVED***string***REMOVED***node***REMOVED***if***REMOVED***all***REMOVED***whitespace,
		***REMOVED******REMOVED******REMOVED*******REMOVED***otherwise***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***comment***REMOVED***nodes***REMOVED***with***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***These***REMOVED***tokens***REMOVED***are***REMOVED***not***REMOVED***added***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***selector,***REMOVED***the***REMOVED***caller***REMOVED***can***REMOVED***add***REMOVED***them***REMOVED***or***REMOVED***use***REMOVED***them***REMOVED***to***REMOVED***amend
		***REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***previous***REMOVED***node's***REMOVED***space***REMOVED***metadata.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***In***REMOVED***lossy***REMOVED***mode,***REMOVED***this***REMOVED***returns***REMOVED***only***REMOVED***comments.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.parseWhitespaceEquivalentTokens***REMOVED***=***REMOVED***function***REMOVED***parseWhitespaceEquivalentTokens(stopPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stopPosition***REMOVED***<***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stopPosition***REMOVED***=***REMOVED***this.tokens.length;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startPosition***REMOVED***=***REMOVED***this.position;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***[];
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastComment***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment***REMOVED***=***REMOVED***new***REMOVED***_comment["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(lastComment);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(++this.position***REMOVED***<***REMOVED***stopPosition);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastComment)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastComment.spaces.after***REMOVED***=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.tokens[startPosition];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***lastToken***REMOVED***=***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(firstToken[_tokenize.FIELDS.START_LINE],***REMOVED***firstToken[_tokenize.FIELDS.START_COL],***REMOVED***lastToken[_tokenize.FIELDS.END_LINE],***REMOVED***lastToken[_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***''
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nodes;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***nodes
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.convertWhitespaceNodesToSpace***REMOVED***=***REMOVED***function***REMOVED***convertWhitespaceNodesToSpace(nodes,***REMOVED***requiredSpace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this2***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(requiredSpace***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***requiredSpace***REMOVED***=***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***space***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpace***REMOVED***=***REMOVED***"";
		***REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.spaces.before,***REMOVED***requiredSpace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***rawSpaceBefore***REMOVED***=***REMOVED***_this2.lossySpace(n.rawSpaceBefore,***REMOVED***requiredSpace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***_this2.lossySpace(n.spaces.after,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***spaceBefore.length***REMOVED***===***REMOVED***0);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***+=***REMOVED***spaceBefore***REMOVED***+***REMOVED***n.value***REMOVED***+***REMOVED***_this2.lossySpace(n.rawSpaceAfter,***REMOVED***requiredSpace***REMOVED***&&***REMOVED***rawSpaceBefore.length***REMOVED***===***REMOVED***0);
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***===***REMOVED***space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space:***REMOVED***space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace:***REMOVED***rawSpace
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.isNamedCombinator***REMOVED***=***REMOVED***function***REMOVED***isNamedCombinator(position)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***position***REMOVED***=***REMOVED***this.position;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***0][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***1][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2]***REMOVED***&&***REMOVED***this.tokens[position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.slash;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.namedCombinator***REMOVED***=***REMOVED***function***REMOVED***namedCombinator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nameRaw***REMOVED***=***REMOVED***this.content(this.tokens[this.position***REMOVED***+***REMOVED***1]);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***(0,***REMOVED***_util.unesc)(nameRaw).toLowerCase();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***nameRaw)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***"/"***REMOVED***+***REMOVED***nameRaw***REMOVED***+***REMOVED***"/";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"/"***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***"/",
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(this.currToken[_tokenize.FIELDS.START_LINE],***REMOVED***this.currToken[_tokenize.FIELDS.START_COL],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_LINE],***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***2][_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***3;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.combinator***REMOVED***=***REMOVED***function***REMOVED***combinator()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this3***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.content()***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***decide***REMOVED***between***REMOVED***a***REMOVED***space***REMOVED***that's***REMOVED***a***REMOVED***descendant***REMOVED***combinator***REMOVED***and***REMOVED***meaningless***REMOVED***whitespace***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***a***REMOVED***selector.
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextSigTokenPos***REMOVED***=***REMOVED***this.locateNextMeaningfulToken(this.position);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nodes.length***REMOVED***>***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(nodes),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***space***REMOVED***=***REMOVED***_this$convertWhitespa.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawSpace***REMOVED***!==***REMOVED***undefined)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.rawSpaceAfter***REMOVED***+=***REMOVED***rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.spaces.after***REMOVED***+=***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.forEach(function***REMOVED***(n)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_this3.newNode(n);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***firstToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextSigTokenPos***REMOVED***>***REMOVED***this.position)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaceOrDescendantSelectorNodes***REMOVED***=***REMOVED***this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isNamedCombinator())***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***this.namedCombinator();
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.combinator)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(this.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]])***REMOVED***;***REMOVED***else***REMOVED***if***REMOVED***(!spaceOrDescendantSelectorNodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spaceOrDescendantSelectorNodes)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa2***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space***REMOVED***=***REMOVED***_this$convertWhitespa2.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace***REMOVED***=***REMOVED***_this$convertWhitespa2.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***_space;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.rawSpaceBefore***REMOVED***=***REMOVED***_rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***descendant***REMOVED***combinator
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this$convertWhitespa3***REMOVED***=***REMOVED***this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes,***REMOVED***true),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_space2***REMOVED***=***REMOVED***_this$convertWhitespa3.space,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_this$convertWhitespa3.rawSpace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!_rawSpace2)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_rawSpace2***REMOVED***=***REMOVED***_space2;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***spaces***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***raws***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***{}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_space2.endsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.endsWith('***REMOVED***'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.before***REMOVED***=***REMOVED***_space2.slice(0,***REMOVED***_space2.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.before***REMOVED***=***REMOVED***_rawSpace2.slice(0,***REMOVED***_rawSpace2.length***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_space2.startsWith('***REMOVED***')***REMOVED***&&***REMOVED***_rawSpace2.startsWith('***REMOVED***'))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces.after***REMOVED***=***REMOVED***_space2.slice(1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.spaces.after***REMOVED***=***REMOVED***_rawSpace2.slice(1);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws.value***REMOVED***=***REMOVED***_rawSpace2;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_combinator["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***'***REMOVED***',
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(firstToken,***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***firstToken[_tokenize.FIELDS.START_POS],
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***spaces,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***raws
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(this.content());
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.newNode(node);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.comma***REMOVED***=***REMOVED***function***REMOVED***comma()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.root.trailingComma***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position***REMOVED***+***REMOVED***1])
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***1][_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.comment***REMOVED***=***REMOVED***function***REMOVED***comment()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_comment["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.error***REMOVED***=***REMOVED***function***REMOVED***error(message,***REMOVED***opts)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***this.root.error(message,***REMOVED***opts);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingBackslash***REMOVED***=***REMOVED***function***REMOVED***missingBackslash()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error('Expected***REMOVED***a***REMOVED***backslash***REMOVED***preceding***REMOVED***the***REMOVED***semicolon.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingParenthesis***REMOVED***=***REMOVED***function***REMOVED***missingParenthesis()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.missingSquareBracket***REMOVED***=***REMOVED***function***REMOVED***missingSquareBracket()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('opening***REMOVED***square***REMOVED***bracket',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.unexpected***REMOVED***=***REMOVED***function***REMOVED***unexpected()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***'"***REMOVED***+***REMOVED***this.content()***REMOVED***+***REMOVED***"'.***REMOVED***Escaping***REMOVED***special***REMOVED***characters***REMOVED***with***REMOVED***\\***REMOVED***may***REMOVED***help.",***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.unexpectedPipe***REMOVED***=***REMOVED***function***REMOVED***unexpectedPipe()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Unexpected***REMOVED***'|'.",***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.namespace***REMOVED***=***REMOVED***function***REMOVED***namespace()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***before***REMOVED***=***REMOVED***this.prevToken***REMOVED***&&***REMOVED***this.content(this.prevToken)***REMOVED***||***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.word(before);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.asterisk)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.universal(before);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.unexpectedPipe();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.nesting***REMOVED***=***REMOVED***function***REMOVED***nesting()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nextToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextContent***REMOVED***=***REMOVED***this.content(this.nextToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextContent***REMOVED***===***REMOVED***"|")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_nesting["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parentheses***REMOVED***=***REMOVED***function***REMOVED***parentheses()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***this.current.last;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***unbalanced***REMOVED***=***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last.type***REMOVED***===***REMOVED***types.PSEUDO)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***selector***REMOVED***=***REMOVED***new***REMOVED***_selector["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***tokenStart(this.tokens[this.position])
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***this.tokens[this.position][_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***this.current;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.append(selector);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***selector;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.parent.source.end***REMOVED***=***REMOVED***tokenEnd(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current***REMOVED***=***REMOVED***cache;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***I***REMOVED***think***REMOVED***this***REMOVED***case***REMOVED***should***REMOVED***be***REMOVED***an***REMOVED***error.***REMOVED***It's***REMOVED***used***REMOVED***to***REMOVED***implement***REMOVED***a***REMOVED***basic***REMOVED***parse***REMOVED***of***REMOVED***media***REMOVED***queries
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***I***REMOVED***don't***REMOVED***think***REMOVED***it's***REMOVED***a***REMOVED***good***REMOVED***idea.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenStart***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenValue***REMOVED***=***REMOVED***"(";
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parenEnd;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length***REMOVED***&&***REMOVED***unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unbalanced--;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenEnd***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenValue***REMOVED***+=***REMOVED***this.parseParenthesisToken(this.currToken);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.appendToPropertyAndEscape("value",***REMOVED***parenValue,***REMOVED***parenValue);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***parenValue,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getSource(parenStart[_tokenize.FIELDS.START_LINE],***REMOVED***parenStart[_tokenize.FIELDS.START_COL],***REMOVED***parenEnd[_tokenize.FIELDS.END_LINE],***REMOVED***parenEnd[_tokenize.FIELDS.END_COL]),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***parenStart[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(unbalanced)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected('closing***REMOVED***parenthesis',***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this4***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pseudoStr***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***startingToken***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.currToken***REMOVED***&&***REMOVED***this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.colon)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.currToken)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.position***REMOVED***-***REMOVED***1);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.word)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.splitWord(false,***REMOVED***function***REMOVED***(first,***REMOVED***length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pseudoStr***REMOVED***+=***REMOVED***first;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.newNode(new***REMOVED***_pseudo["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***pseudoStr,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSourceSpan(startingToken,***REMOVED***_this4.currToken),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***startingToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***_this4.nextToken***REMOVED***&&***REMOVED***_this4.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this4.error('Misplaced***REMOVED***parenthesis.',***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***_this4.nextToken[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.expected(['pseudo-class',***REMOVED***'pseudo-element'],***REMOVED***this.currToken[_tokenize.FIELDS.START_POS]);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.space***REMOVED***=***REMOVED***function***REMOVED***space()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Handle***REMOVED***space***REMOVED***before***REMOVED***and***REMOVED***after***REMOVED***the***REMOVED***selector
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.prevToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.openParenthesis***REMOVED***||***REMOVED***this.current.nodes.every(function***REMOVED***(node)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***'comment';
		***REMOVED******REMOVED******REMOVED******REMOVED***}))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***this.optionalSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.position***REMOVED***===***REMOVED***this.tokens.length***REMOVED***-***REMOVED***1***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.comma***REMOVED***||***REMOVED***this.nextToken[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.closeParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.current.last.spaces.after***REMOVED***=***REMOVED***this.optionalSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.string***REMOVED***=***REMOVED***function***REMOVED***string()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_string["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}));
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.universal***REMOVED***=***REMOVED***function***REMOVED***universal(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.newNode(new***REMOVED***_universal["default"]({
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***this.content(),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***getTokenSource(current),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***current[_tokenize.FIELDS.START_POS]
		***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***namespace);
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.splitWord***REMOVED***=***REMOVED***function***REMOVED***splitWord(namespace,***REMOVED***firstCallback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this5***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***word***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(nextToken***REMOVED***&&***REMOVED***~[tokens.dollar,***REMOVED***tokens.caret,***REMOVED***tokens.equals,***REMOVED***tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE]))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***this.content();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***current;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.lastIndexOf('\\')***REMOVED***===***REMOVED***current.length***REMOVED***-***REMOVED***1)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***next***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***next[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***word***REMOVED***+=***REMOVED***this.requiredSpace(this.content(next));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasClass***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'.').filter(function***REMOVED***(i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***escaped***REMOVED***dot***REMOVED***within***REMOVED***class***REMOVED***name
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***escapedDot***REMOVED***=***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***'\\';
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Allow***REMOVED***decimal***REMOVED***numbers***REMOVED***percent***REMOVED***in***REMOVED***@keyframes
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***isKeyframesPercent***REMOVED***=***REMOVED***/^\d+\.\d+%$/.test(word);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!escapedDot***REMOVED***&&***REMOVED***!isKeyframesPercent;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***hasId***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#').filter(function***REMOVED***(i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***word[i***REMOVED***-***REMOVED***1]***REMOVED***!==***REMOVED***'\\';
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Eliminate***REMOVED***Sass***REMOVED***interpolations***REMOVED***from***REMOVED***the***REMOVED***list***REMOVED***of***REMOVED***id***REMOVED***indexes
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***interpolations***REMOVED***=***REMOVED***indexesOf(word,***REMOVED***'#{');
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(interpolations.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasId***REMOVED***=***REMOVED***hasId.filter(function***REMOVED***(hashIndex)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!~interpolations.indexOf(hashIndex);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***indices***REMOVED***=***REMOVED***(0,***REMOVED***_sortAscending["default"])(uniqs([0].concat(hasClass,***REMOVED***hasId)));
		***REMOVED******REMOVED******REMOVED******REMOVED***indices.forEach(function***REMOVED***(ind,***REMOVED***i)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***indices[i***REMOVED***+***REMOVED***1]***REMOVED***||***REMOVED***word.length;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***word.slice(ind,***REMOVED***index);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***firstCallback)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***firstCallback.call(_this5,***REMOVED***value,***REMOVED***indices.length);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***node;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***_this5.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***sourceIndex***REMOVED***=***REMOVED***current[_tokenize.FIELDS.START_POS]***REMOVED***+***REMOVED***indices[i];
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***source***REMOVED***=***REMOVED***getSource(current[1],***REMOVED***current[2]***REMOVED***+***REMOVED***ind,***REMOVED***current[3],***REMOVED***current[2]***REMOVED***+***REMOVED***(index***REMOVED***-***REMOVED***1));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(~hasClass.indexOf(ind))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***classNameOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_className["default"](unescapeProp(classNameOpts,***REMOVED***"value"));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(~hasId.indexOf(ind))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***idOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(1),
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_id["default"](unescapeProp(idOpts,***REMOVED***"value"));
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***tagOpts***REMOVED***=***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***sourceIndex
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(tagOpts,***REMOVED***"value");
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***new***REMOVED***_tag["default"](tagOpts);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_this5.newNode(node,***REMOVED***namespace);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***that***REMOVED***the***REMOVED***namespace***REMOVED***is***REMOVED***used***REMOVED***only***REMOVED***once
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.word***REMOVED***=***REMOVED***function***REMOVED***word(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextToken***REMOVED***=***REMOVED***this.nextToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextToken***REMOVED***&&***REMOVED***this.content(nextToken)***REMOVED***===***REMOVED***'|')***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.position++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.namespace();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.splitWord(namespace);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.loop***REMOVED***=***REMOVED***function***REMOVED***loop()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(this.position***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parse(true);
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***this.current._inferEndPosition();
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.root;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parse***REMOVED***=***REMOVED***function***REMOVED***parse(throwOnParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(this.currToken[_tokenize.FIELDS.TYPE])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.space:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.space();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comment:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comment();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parentheses();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeParenthesis:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwOnParenthesis)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingParenthesis();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.openSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.attribute();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.dollar:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.caret:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.equals:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.word:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.word();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.colon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pseudo();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.comma:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comma();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.asterisk:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.universal();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.ampersand:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nesting();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.slash:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.combinator:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.combinator();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.str:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.string();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***cases***REMOVED***throw;***REMOVED***no***REMOVED***break***REMOVED***needed.
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.closeSquare:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingSquareBracket();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***tokens.semicolon:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.missingBackslash();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.unexpected();
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Helpers
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.expected***REMOVED***=***REMOVED***function***REMOVED***expected(description,***REMOVED***index,***REMOVED***found)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(description))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***last***REMOVED***=***REMOVED***description.pop();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***description***REMOVED***=***REMOVED***description.join(',***REMOVED***')***REMOVED***+***REMOVED***"***REMOVED***or***REMOVED***"***REMOVED***+***REMOVED***last;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***an***REMOVED***=***REMOVED***/^[aeiou]/.test(description[0])***REMOVED***?***REMOVED***'an'***REMOVED***:***REMOVED***'a';
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!found)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***".",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.error("Expected***REMOVED***"***REMOVED***+***REMOVED***an***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***description***REMOVED***+***REMOVED***",***REMOVED***found***REMOVED***\""***REMOVED***+***REMOVED***found***REMOVED***+***REMOVED***"\"***REMOVED***instead.",***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***index
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.requiredSpace***REMOVED***=***REMOVED***function***REMOVED***requiredSpace(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***space;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.optionalSpace***REMOVED***=***REMOVED***function***REMOVED***optionalSpace(space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.options.lossy***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***space;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.lossySpace***REMOVED***=***REMOVED***function***REMOVED***lossySpace(space,***REMOVED***required)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***required***REMOVED***?***REMOVED***'***REMOVED***'***REMOVED***:***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***space;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.parseParenthesisToken***REMOVED***=***REMOVED***function***REMOVED***parseParenthesisToken(token)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***content***REMOVED***=***REMOVED***this.content(token);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token[_tokenize.FIELDS.TYPE]***REMOVED***===***REMOVED***tokens.space)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.requiredSpace(content);
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***content;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.newNode***REMOVED***=***REMOVED***function***REMOVED***newNode(node,***REMOVED***namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/^***REMOVED***+$/.test(namespace))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.options.lossy)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***(this.spaces***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.namespace***REMOVED***=***REMOVED***namespace;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescapeProp(node,***REMOVED***"namespace");
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.spaces)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.spaces.before***REMOVED***=***REMOVED***this.spaces;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.spaces***REMOVED***=***REMOVED***'';
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.current.append(node);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto.content***REMOVED***=***REMOVED***function***REMOVED***content(token)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***this.currToken;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.css.slice(token[_tokenize.FIELDS.START_POS],***REMOVED***token[_tokenize.FIELDS.END_POS]);
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***the***REMOVED***index***REMOVED***of***REMOVED***the***REMOVED***next***REMOVED***non-whitespace,***REMOVED***non-comment***REMOVED***token.
		***REMOVED******REMOVED******REMOVED*******REMOVED***returns***REMOVED***-1***REMOVED***if***REMOVED***no***REMOVED***meaningful***REMOVED***token***REMOVED***is***REMOVED***found.
		***REMOVED******REMOVED******REMOVED****/
		***REMOVED******REMOVED***_proto.locateNextMeaningfulToken***REMOVED***=***REMOVED***function***REMOVED***locateNextMeaningfulToken(startPosition)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startPosition***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startPosition***REMOVED***=***REMOVED***this.position***REMOVED***+***REMOVED***1;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***searchPosition***REMOVED***=***REMOVED***startPosition;
		***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(searchPosition***REMOVED***<***REMOVED***this.tokens.length)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]])***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***searchPosition++;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchPosition;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***-1;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_createClass(Parser,***REMOVED***[{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"currToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"nextToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***+***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***},***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"prevToken",
		***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***get()***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.tokens[this.position***REMOVED***-***REMOVED***1];
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***}]);
		***REMOVED******REMOVED***return***REMOVED***Parser;
		}();
		exports["default"]***REMOVED***=***REMOVED***Parser;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(parser,***REMOVED***parser.exports));
	return***REMOVED***parser.exports;
}

var***REMOVED***hasRequiredProcessor;

function***REMOVED***requireProcessor***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredProcessor)***REMOVED***return***REMOVED***processor.exports;
	hasRequiredProcessor***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_parser***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireParser());
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		var***REMOVED***Processor***REMOVED***=***REMOVED***/*#__PURE__*/function***REMOVED***()***REMOVED***{
		***REMOVED******REMOVED***function***REMOVED***Processor(func,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***this.func***REMOVED***=***REMOVED***func***REMOVED***||***REMOVED***function***REMOVED***noop()***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***this.funcRes***REMOVED***=***REMOVED***null;
		***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
		***REMOVED******REMOVED***}
		***REMOVED******REMOVED***var***REMOVED***_proto***REMOVED***=***REMOVED***Processor.prototype;
		***REMOVED******REMOVED***_proto._shouldUpdateSelector***REMOVED***=***REMOVED***function***REMOVED***_shouldUpdateSelector(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.updateSelector***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string";
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._isLossy***REMOVED***=***REMOVED***function***REMOVED***_isLossy(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***merged***REMOVED***=***REMOVED***Object.assign({},***REMOVED***this.options,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(merged.lossless***REMOVED***===***REMOVED***false)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
		***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._root***REMOVED***=***REMOVED***function***REMOVED***_root(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_parser["default"](rule,***REMOVED***this._parseOptions(options));
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser.root;
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._parseOptions***REMOVED***=***REMOVED***function***REMOVED***_parseOptions(options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lossy:***REMOVED***this._isLossy(options)
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._run***REMOVED***=***REMOVED***function***REMOVED***_run(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_this***REMOVED***=***REMOVED***this;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Promise(function***REMOVED***(resolve,***REMOVED***reject)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***_this._root(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Promise.resolve(_this.func(root)).then(function***REMOVED***(transform)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_this._shouldUpdateSelector(rule,***REMOVED***options))***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).then(resolve,***REMOVED***reject);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reject(e);
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***_proto._runSync***REMOVED***=***REMOVED***function***REMOVED***_runSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***root***REMOVED***=***REMOVED***this._root(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***transform***REMOVED***=***REMOVED***this.func(root);
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transform***REMOVED***&&***REMOVED***typeof***REMOVED***transform.then***REMOVED***===***REMOVED***"function")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Selector***REMOVED***processor***REMOVED***returned***REMOVED***a***REMOVED***promise***REMOVED***to***REMOVED***a***REMOVED***synchronous***REMOVED***call.");
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***string***REMOVED***=***REMOVED***undefined;
		***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.updateSelector***REMOVED***&&***REMOVED***typeof***REMOVED***rule***REMOVED***!==***REMOVED***"string")***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***=***REMOVED***root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***string;
		***REMOVED******REMOVED******REMOVED******REMOVED***}
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transform:***REMOVED***transform,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***root,
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string:***REMOVED***string
		***REMOVED******REMOVED******REMOVED******REMOVED***};
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<parser.Root>}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.ast***REMOVED***=***REMOVED***function***REMOVED***ast(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.root;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***rule***REMOVED***into***REMOVED***a***REMOVED***selector***REMOVED***AST***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{parser.Root}***REMOVED***The***REMOVED***AST***REMOVED***of***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing***REMOVED***it.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.astSync***REMOVED***=***REMOVED***function***REMOVED***astSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).root;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***asynchronously
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{Promise<any>}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.transform***REMOVED***=***REMOVED***function***REMOVED***transform(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.transform;
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***transformed***REMOVED***value***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{any}***REMOVED***The***REMOVED***value***REMOVED***returned***REMOVED***by***REMOVED***the***REMOVED***processor.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.transformSync***REMOVED***=***REMOVED***function***REMOVED***transformSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._runSync(rule,***REMOVED***options).transform;
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***asynchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.process***REMOVED***=***REMOVED***function***REMOVED***process(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._run(rule,***REMOVED***options).then(function***REMOVED***(result)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
		***REMOVED******REMOVED******REMOVED******REMOVED***});
		***REMOVED******REMOVED***}

		***REMOVED******REMOVED***/**
		***REMOVED******REMOVED******REMOVED*******REMOVED***Process***REMOVED***a***REMOVED***selector***REMOVED***into***REMOVED***a***REMOVED***new***REMOVED***selector***REMOVED***string***REMOVED***synchronously.
		***REMOVED******REMOVED******REMOVED****
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***rule***REMOVED***{postcss.Rule***REMOVED***|***REMOVED***string}***REMOVED***The***REMOVED***css***REMOVED***selector***REMOVED***to***REMOVED***be***REMOVED***processed
		***REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***options***REMOVED***The***REMOVED***options***REMOVED***for***REMOVED***processing
		***REMOVED******REMOVED******REMOVED*******REMOVED***@returns***REMOVED***{string}***REMOVED***the***REMOVED***selector***REMOVED***after***REMOVED***processing.
		***REMOVED******REMOVED******REMOVED****/;
		***REMOVED******REMOVED***_proto.processSync***REMOVED***=***REMOVED***function***REMOVED***processSync(rule,***REMOVED***options)***REMOVED***{
		***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***result***REMOVED***=***REMOVED***this._runSync(rule,***REMOVED***options);
		***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.string***REMOVED***||***REMOVED***result.root.toString();
		***REMOVED******REMOVED***};
		***REMOVED******REMOVED***return***REMOVED***Processor;
		}();
		exports["default"]***REMOVED***=***REMOVED***Processor;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(processor,***REMOVED***processor.exports));
	return***REMOVED***processor.exports;
}

var***REMOVED***selectors***REMOVED***=***REMOVED***{};

var***REMOVED***constructors***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredConstructors;

function***REMOVED***requireConstructors***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredConstructors)***REMOVED***return***REMOVED***constructors;
	hasRequiredConstructors***REMOVED***=***REMOVED***1;

	constructors.__esModule***REMOVED***=***REMOVED***true;
	constructors.universal***REMOVED***=***REMOVED***constructors.tag***REMOVED***=***REMOVED***constructors.string***REMOVED***=***REMOVED***constructors.selector***REMOVED***=***REMOVED***constructors.root***REMOVED***=***REMOVED***constructors.pseudo***REMOVED***=***REMOVED***constructors.nesting***REMOVED***=***REMOVED***constructors.id***REMOVED***=***REMOVED***constructors.comment***REMOVED***=***REMOVED***constructors.combinator***REMOVED***=***REMOVED***constructors.className***REMOVED***=***REMOVED***constructors.attribute***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_attribute***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireAttribute());
	var***REMOVED***_className***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireClassName());
	var***REMOVED***_combinator***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireCombinator());
	var***REMOVED***_comment***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireComment());
	var***REMOVED***_id***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireId());
	var***REMOVED***_nesting***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireNesting());
	var***REMOVED***_pseudo***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requirePseudo());
	var***REMOVED***_root***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireRoot());
	var***REMOVED***_selector***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSelector());
	var***REMOVED***_string***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireString());
	var***REMOVED***_tag***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireTag());
	var***REMOVED***_universal***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUniversal());
	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
	var***REMOVED***attribute***REMOVED***=***REMOVED***function***REMOVED***attribute(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_attribute["default"](opts);
	};
	constructors.attribute***REMOVED***=***REMOVED***attribute;
	var***REMOVED***className***REMOVED***=***REMOVED***function***REMOVED***className(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_className["default"](opts);
	};
	constructors.className***REMOVED***=***REMOVED***className;
	var***REMOVED***combinator***REMOVED***=***REMOVED***function***REMOVED***combinator(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_combinator["default"](opts);
	};
	constructors.combinator***REMOVED***=***REMOVED***combinator;
	var***REMOVED***comment***REMOVED***=***REMOVED***function***REMOVED***comment(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_comment["default"](opts);
	};
	constructors.comment***REMOVED***=***REMOVED***comment;
	var***REMOVED***id***REMOVED***=***REMOVED***function***REMOVED***id(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_id["default"](opts);
	};
	constructors.id***REMOVED***=***REMOVED***id;
	var***REMOVED***nesting***REMOVED***=***REMOVED***function***REMOVED***nesting(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_nesting["default"](opts);
	};
	constructors.nesting***REMOVED***=***REMOVED***nesting;
	var***REMOVED***pseudo***REMOVED***=***REMOVED***function***REMOVED***pseudo(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_pseudo["default"](opts);
	};
	constructors.pseudo***REMOVED***=***REMOVED***pseudo;
	var***REMOVED***root***REMOVED***=***REMOVED***function***REMOVED***root(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_root["default"](opts);
	};
	constructors.root***REMOVED***=***REMOVED***root;
	var***REMOVED***selector***REMOVED***=***REMOVED***function***REMOVED***selector(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_selector["default"](opts);
	};
	constructors.selector***REMOVED***=***REMOVED***selector;
	var***REMOVED***string***REMOVED***=***REMOVED***function***REMOVED***string(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_string["default"](opts);
	};
	constructors.string***REMOVED***=***REMOVED***string;
	var***REMOVED***tag***REMOVED***=***REMOVED***function***REMOVED***tag(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_tag["default"](opts);
	};
	constructors.tag***REMOVED***=***REMOVED***tag;
	var***REMOVED***universal***REMOVED***=***REMOVED***function***REMOVED***universal(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_universal["default"](opts);
	};
	constructors.universal***REMOVED***=***REMOVED***universal;
	return***REMOVED***constructors;
}

var***REMOVED***guards***REMOVED***=***REMOVED***{};

var***REMOVED***hasRequiredGuards;

function***REMOVED***requireGuards***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredGuards)***REMOVED***return***REMOVED***guards;
	hasRequiredGuards***REMOVED***=***REMOVED***1;

	guards.__esModule***REMOVED***=***REMOVED***true;
	guards.isComment***REMOVED***=***REMOVED***guards.isCombinator***REMOVED***=***REMOVED***guards.isClassName***REMOVED***=***REMOVED***guards.isAttribute***REMOVED***=***REMOVED***void***REMOVED***0;
	guards.isContainer***REMOVED***=***REMOVED***isContainer;
	guards.isIdentifier***REMOVED***=***REMOVED***void***REMOVED***0;
	guards.isNamespace***REMOVED***=***REMOVED***isNamespace;
	guards.isNesting***REMOVED***=***REMOVED***void***REMOVED***0;
	guards.isNode***REMOVED***=***REMOVED***isNode;
	guards.isPseudo***REMOVED***=***REMOVED***void***REMOVED***0;
	guards.isPseudoClass***REMOVED***=***REMOVED***isPseudoClass;
	guards.isPseudoElement***REMOVED***=***REMOVED***isPseudoElement;
	guards.isUniversal***REMOVED***=***REMOVED***guards.isTag***REMOVED***=***REMOVED***guards.isString***REMOVED***=***REMOVED***guards.isSelector***REMOVED***=***REMOVED***guards.isRoot***REMOVED***=***REMOVED***void***REMOVED***0;
	var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
	var***REMOVED***_IS_TYPE;
	var***REMOVED***IS_TYPE***REMOVED***=***REMOVED***(_IS_TYPE***REMOVED***=***REMOVED***{},***REMOVED***_IS_TYPE[_types.ATTRIBUTE]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.CLASS]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMBINATOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.COMMENT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ID]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.NESTING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.PSEUDO]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.ROOT]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.SELECTOR]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.STRING]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.TAG]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE[_types.UNIVERSAL]***REMOVED***=***REMOVED***true,***REMOVED***_IS_TYPE);
	function***REMOVED***isNode(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***node***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***IS_TYPE[node.type];
	}
	function***REMOVED***isNodeType(type,***REMOVED***node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isNode(node)***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***type;
	}
	var***REMOVED***isAttribute***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ATTRIBUTE);
	guards.isAttribute***REMOVED***=***REMOVED***isAttribute;
	var***REMOVED***isClassName***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.CLASS);
	guards.isClassName***REMOVED***=***REMOVED***isClassName;
	var***REMOVED***isCombinator***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMBINATOR);
	guards.isCombinator***REMOVED***=***REMOVED***isCombinator;
	var***REMOVED***isComment***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.COMMENT);
	guards.isComment***REMOVED***=***REMOVED***isComment;
	var***REMOVED***isIdentifier***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ID);
	guards.isIdentifier***REMOVED***=***REMOVED***isIdentifier;
	var***REMOVED***isNesting***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.NESTING);
	guards.isNesting***REMOVED***=***REMOVED***isNesting;
	var***REMOVED***isPseudo***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.PSEUDO);
	guards.isPseudo***REMOVED***=***REMOVED***isPseudo;
	var***REMOVED***isRoot***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.ROOT);
	guards.isRoot***REMOVED***=***REMOVED***isRoot;
	var***REMOVED***isSelector***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.SELECTOR);
	guards.isSelector***REMOVED***=***REMOVED***isSelector;
	var***REMOVED***isString***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.STRING);
	guards.isString***REMOVED***=***REMOVED***isString;
	var***REMOVED***isTag***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.TAG);
	guards.isTag***REMOVED***=***REMOVED***isTag;
	var***REMOVED***isUniversal***REMOVED***=***REMOVED***isNodeType.bind(null,***REMOVED***_types.UNIVERSAL);
	guards.isUniversal***REMOVED***=***REMOVED***isUniversal;
	function***REMOVED***isPseudoElement(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***node.value***REMOVED***&&***REMOVED***(node.value.startsWith("::")***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":before"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":after"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-letter"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***":first-line");
	}
	function***REMOVED***isPseudoClass(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isPseudo(node)***REMOVED***&&***REMOVED***!isPseudoElement(node);
	}
	function***REMOVED***isContainer(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***!!(isNode(node)***REMOVED***&&***REMOVED***node.walk);
	}
	function***REMOVED***isNamespace(node)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***isAttribute(node)***REMOVED***||***REMOVED***isTag(node);
	}
	return***REMOVED***guards;
}

var***REMOVED***hasRequiredSelectors;

function***REMOVED***requireSelectors***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSelectors)***REMOVED***return***REMOVED***selectors;
	hasRequiredSelectors***REMOVED***=***REMOVED***1;
	(function***REMOVED***(exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		var***REMOVED***_types***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireTypes();
		Object.keys(_types).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_types[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_types[key];
		});
		var***REMOVED***_constructors***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireConstructors();
		Object.keys(_constructors).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_constructors[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_constructors[key];
		});
		var***REMOVED***_guards***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireGuards();
		Object.keys(_guards).forEach(function***REMOVED***(key)***REMOVED***{
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"default"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"__esModule")***REMOVED***return;
		***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***exports***REMOVED***&&***REMOVED***exports[key]***REMOVED***===***REMOVED***_guards[key])***REMOVED***return;
		***REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***_guards[key];
		});***REMOVED***
	}***REMOVED***(selectors));
	return***REMOVED***selectors;
}

var***REMOVED***hasRequiredDist;

function***REMOVED***requireDist***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredDist)***REMOVED***return***REMOVED***dist.exports;
	hasRequiredDist***REMOVED***=***REMOVED***1;
	(function***REMOVED***(module,***REMOVED***exports)***REMOVED***{

		exports.__esModule***REMOVED***=***REMOVED***true;
		exports["default"]***REMOVED***=***REMOVED***void***REMOVED***0;
		var***REMOVED***_processor***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireProcessor());
		var***REMOVED***selectors***REMOVED***=***REMOVED***_interopRequireWildcard(/*@__PURE__*/***REMOVED***requireSelectors());
		function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(typeof***REMOVED***WeakMap***REMOVED***!==***REMOVED***"function")***REMOVED***return***REMOVED***null;***REMOVED***var***REMOVED***cacheBabelInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***var***REMOVED***cacheNodeInterop***REMOVED***=***REMOVED***new***REMOVED***WeakMap();***REMOVED***return***REMOVED***(_getRequireWildcardCache***REMOVED***=***REMOVED***function***REMOVED***_getRequireWildcardCache(nodeInterop)***REMOVED***{***REMOVED***return***REMOVED***nodeInterop***REMOVED***?***REMOVED***cacheNodeInterop***REMOVED***:***REMOVED***cacheBabelInterop;***REMOVED***})(nodeInterop);***REMOVED***}
		function***REMOVED***_interopRequireWildcard(obj,***REMOVED***nodeInterop)***REMOVED***{***REMOVED***if***REMOVED***(obj***REMOVED***&&***REMOVED***obj.__esModule)***REMOVED***{***REMOVED***return***REMOVED***obj;***REMOVED***}***REMOVED***if***REMOVED***(obj***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"object"***REMOVED***&&***REMOVED***typeof***REMOVED***obj***REMOVED***!==***REMOVED***"function")***REMOVED***{***REMOVED***return***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}***REMOVED***var***REMOVED***cache***REMOVED***=***REMOVED***_getRequireWildcardCache(nodeInterop);***REMOVED***if***REMOVED***(cache***REMOVED***&&***REMOVED***cache.has(obj))***REMOVED***{***REMOVED***return***REMOVED***cache.get(obj);***REMOVED***}***REMOVED***var***REMOVED***newObj***REMOVED***=***REMOVED***{};***REMOVED***var***REMOVED***hasPropertyDescriptor***REMOVED***=***REMOVED***Object.defineProperty***REMOVED***&&***REMOVED***Object.getOwnPropertyDescriptor;***REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***in***REMOVED***obj)***REMOVED***{***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"default"***REMOVED***&&***REMOVED***Object.prototype.hasOwnProperty.call(obj,***REMOVED***key))***REMOVED***{***REMOVED***var***REMOVED***desc***REMOVED***=***REMOVED***hasPropertyDescriptor***REMOVED***?***REMOVED***Object.getOwnPropertyDescriptor(obj,***REMOVED***key)***REMOVED***:***REMOVED***null;***REMOVED***if***REMOVED***(desc***REMOVED***&&***REMOVED***(desc.get***REMOVED***||***REMOVED***desc.set))***REMOVED***{***REMOVED***Object.defineProperty(newObj,***REMOVED***key,***REMOVED***desc);***REMOVED***}***REMOVED***else***REMOVED***{***REMOVED***newObj[key]***REMOVED***=***REMOVED***obj[key];***REMOVED***}***REMOVED***}***REMOVED***}***REMOVED***newObj["default"]***REMOVED***=***REMOVED***obj;***REMOVED***if***REMOVED***(cache)***REMOVED***{***REMOVED***cache.set(obj,***REMOVED***newObj);***REMOVED***}***REMOVED***return***REMOVED***newObj;***REMOVED***}
		function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***"default":***REMOVED***obj***REMOVED***};***REMOVED***}
		var***REMOVED***parser***REMOVED***=***REMOVED***function***REMOVED***parser(processor)***REMOVED***{
		***REMOVED******REMOVED***return***REMOVED***new***REMOVED***_processor["default"](processor);
		};
		Object.assign(parser,***REMOVED***selectors);
		delete***REMOVED***parser.__esModule;
		var***REMOVED***_default***REMOVED***=***REMOVED***parser;
		exports["default"]***REMOVED***=***REMOVED***_default;
		module.exports***REMOVED***=***REMOVED***exports.default;***REMOVED***
	}***REMOVED***(dist,***REMOVED***dist.exports));
	return***REMOVED***dist.exports;
}

var***REMOVED***parse;
var***REMOVED***hasRequiredParse;

function***REMOVED***requireParse***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredParse)***REMOVED***return***REMOVED***parse;
	hasRequiredParse***REMOVED***=***REMOVED***1;
	var***REMOVED***openParentheses***REMOVED***=***REMOVED***"(".charCodeAt(0);
	var***REMOVED***closeParentheses***REMOVED***=***REMOVED***")".charCodeAt(0);
	var***REMOVED***singleQuote***REMOVED***=***REMOVED***"'".charCodeAt(0);
	var***REMOVED***doubleQuote***REMOVED***=***REMOVED***'"'.charCodeAt(0);
	var***REMOVED***backslash***REMOVED***=***REMOVED***"\\".charCodeAt(0);
	var***REMOVED***slash***REMOVED***=***REMOVED***"/".charCodeAt(0);
	var***REMOVED***comma***REMOVED***=***REMOVED***",".charCodeAt(0);
	var***REMOVED***colon***REMOVED***=***REMOVED***":".charCodeAt(0);
	var***REMOVED***star***REMOVED***=***REMOVED***"*".charCodeAt(0);
	var***REMOVED***uLower***REMOVED***=***REMOVED***"u".charCodeAt(0);
	var***REMOVED***uUpper***REMOVED***=***REMOVED***"U".charCodeAt(0);
	var***REMOVED***plus***REMOVED***=***REMOVED***"+".charCodeAt(0);
	var***REMOVED***isUnicodeRange***REMOVED***=***REMOVED***/^[a-f0-9?-]+$/i;

	parse***REMOVED***=***REMOVED***function(input)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***tokens***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***input;

	***REMOVED******REMOVED***var***REMOVED***next,
	***REMOVED******REMOVED******REMOVED******REMOVED***quote,
	***REMOVED******REMOVED******REMOVED******REMOVED***prev,
	***REMOVED******REMOVED******REMOVED******REMOVED***token,
	***REMOVED******REMOVED******REMOVED******REMOVED***escape,
	***REMOVED******REMOVED******REMOVED******REMOVED***escapePos,
	***REMOVED******REMOVED******REMOVED******REMOVED***whitespacePos,
	***REMOVED******REMOVED******REMOVED******REMOVED***parenthesesOpenPos;
	***REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);
	***REMOVED******REMOVED***var***REMOVED***max***REMOVED***=***REMOVED***value.length;
	***REMOVED******REMOVED***var***REMOVED***stack***REMOVED***=***REMOVED***[{***REMOVED***nodes:***REMOVED***tokens***REMOVED***}];
	***REMOVED******REMOVED***var***REMOVED***balanced***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***parent;

	***REMOVED******REMOVED***var***REMOVED***name***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***var***REMOVED***before***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED***var***REMOVED***after***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***max)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Whitespaces
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<=***REMOVED***32)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***<=***REMOVED***32);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***value.slice(pos,***REMOVED***next);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev***REMOVED***=***REMOVED***tokens[tokens.length***REMOVED***-***REMOVED***1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***closeParentheses***REMOVED***&&***REMOVED***balanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after***REMOVED***=***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***prev.type***REMOVED***===***REMOVED***"div")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.after***REMOVED***=***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev.sourceEndIndex***REMOVED***+=***REMOVED***token.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***comma***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***colon***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***slash***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value.charCodeAt(next***REMOVED***+***REMOVED***1)***REMOVED***!==***REMOVED***star***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!parent***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(parent***REMOVED***&&***REMOVED***parent.type***REMOVED***===***REMOVED***"function"***REMOVED***&&***REMOVED***parent.value***REMOVED***!==***REMOVED***"calc")))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before***REMOVED***=***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"space",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***next,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Quotes
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***singleQuote***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***doubleQuote)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quote***REMOVED***=***REMOVED***code***REMOVED***===***REMOVED***singleQuote***REMOVED***?***REMOVED***"'"***REMOVED***:***REMOVED***'"';
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"string",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quote:***REMOVED***quote
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escape***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.indexOf(quote,***REMOVED***next***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(~next)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(value.charCodeAt(escapePos***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***backslash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escape***REMOVED***=***REMOVED***!escape;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***quote;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.length***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.unclosed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(escape);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.value***REMOVED***=***REMOVED***value.slice(pos***REMOVED***+***REMOVED***1,***REMOVED***next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.sourceEndIndex***REMOVED***=***REMOVED***token.unclosed***REMOVED***?***REMOVED***next***REMOVED***:***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Comments
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***slash***REMOVED***&&***REMOVED***value.charCodeAt(pos***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***star)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.indexOf("*/",***REMOVED***pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"comment",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***next***REMOVED***+***REMOVED***2
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.unclosed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.sourceEndIndex***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.value***REMOVED***=***REMOVED***value.slice(pos***REMOVED***+***REMOVED***2,***REMOVED***next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***2;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Operation***REMOVED***within***REMOVED***calc
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***slash***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***star)***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.type***REMOVED***===***REMOVED***"function"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.value***REMOVED***===***REMOVED***"calc"
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***value[pos];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"word",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos***REMOVED***-***REMOVED***before.length,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***pos***REMOVED***+***REMOVED***token.length,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Dividers
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***slash***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***comma***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***colon)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***value[pos];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"div",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos***REMOVED***-***REMOVED***before.length,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***pos***REMOVED***+***REMOVED***token.length,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***before,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after:***REMOVED***""
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Open***REMOVED***parentheses
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(openParentheses***REMOVED***===***REMOVED***code)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Whitespaces***REMOVED***after***REMOVED***open***REMOVED***parentheses
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***<=***REMOVED***32);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parenthesesOpenPos***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"function",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos***REMOVED***-***REMOVED***name.length,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***name,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before:***REMOVED***value.slice(parenthesesOpenPos***REMOVED***+***REMOVED***1,***REMOVED***next)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***===***REMOVED***"url"***REMOVED***&&***REMOVED***code***REMOVED***!==***REMOVED***singleQuote***REMOVED***&&***REMOVED***code***REMOVED***!==***REMOVED***doubleQuote)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escape***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.indexOf(")",***REMOVED***next***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(~next)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(value.charCodeAt(escapePos***REMOVED***-***REMOVED***1)***REMOVED***===***REMOVED***backslash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escapePos***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escape***REMOVED***=***REMOVED***!escape;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+=***REMOVED***")";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***value.length***REMOVED***-***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.unclosed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(escape);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Whitespaces***REMOVED***before***REMOVED***closed
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***whitespacePos***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***whitespacePos***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(whitespacePos);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(code***REMOVED***<=***REMOVED***32);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parenthesesOpenPos***REMOVED***<***REMOVED***whitespacePos)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pos***REMOVED***!==***REMOVED***whitespacePos***REMOVED***+***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.nodes***REMOVED***=***REMOVED***[
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"word",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***whitespacePos***REMOVED***+***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(pos,***REMOVED***whitespacePos***REMOVED***+***REMOVED***1)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(token.unclosed***REMOVED***&&***REMOVED***whitespacePos***REMOVED***+***REMOVED***1***REMOVED***!==***REMOVED***next)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.after***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.nodes.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"space",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***whitespacePos***REMOVED***+***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***next,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***value.slice(whitespacePos***REMOVED***+***REMOVED***1,***REMOVED***next)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.after***REMOVED***=***REMOVED***value.slice(whitespacePos***REMOVED***+***REMOVED***1,***REMOVED***next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.sourceEndIndex***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.after***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.sourceEndIndex***REMOVED***=***REMOVED***token.unclosed***REMOVED***?***REMOVED***next***REMOVED***:***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***balanced***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.after***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token.sourceEndIndex***REMOVED***=***REMOVED***pos***REMOVED***+***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push(token);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.push(token);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens***REMOVED***=***REMOVED***token.nodes***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***"";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Close***REMOVED***parentheses
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(closeParentheses***REMOVED***===***REMOVED***code***REMOVED***&&***REMOVED***balanced)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.after***REMOVED***=***REMOVED***after;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.sourceEndIndex***REMOVED***+=***REMOVED***after.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***after***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***balanced***REMOVED***-=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack[stack.length***REMOVED***-***REMOVED***1].sourceEndIndex***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stack.pop();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***stack[balanced];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens***REMOVED***=***REMOVED***parent.nodes;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Words
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***pos;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***backslash)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(next);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***<***REMOVED***max***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***<=***REMOVED***32***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***singleQuote***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***doubleQuote***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***comma***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***colon***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***slash***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***===***REMOVED***openParentheses***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***star***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.type***REMOVED***===***REMOVED***"function"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.value***REMOVED***===***REMOVED***"calc")***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***slash***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.type***REMOVED***===***REMOVED***"function"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.value***REMOVED***===***REMOVED***"calc")***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***closeParentheses***REMOVED***&&***REMOVED***balanced)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***token***REMOVED***=***REMOVED***value.slice(pos,***REMOVED***next);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(openParentheses***REMOVED***===***REMOVED***code)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(uLower***REMOVED***===***REMOVED***token.charCodeAt(0)***REMOVED***||***REMOVED***uUpper***REMOVED***===***REMOVED***token.charCodeAt(0))***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plus***REMOVED***===***REMOVED***token.charCodeAt(1)***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isUnicodeRange.test(token.slice(2))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"unicode-range",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***next,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"word",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceIndex:***REMOVED***pos,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceEndIndex:***REMOVED***next,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***token
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***=***REMOVED***next;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***for***REMOVED***(pos***REMOVED***=***REMOVED***stack.length***REMOVED***-***REMOVED***1;***REMOVED***pos;***REMOVED***pos***REMOVED***-=***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***stack[pos].unclosed***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***stack[pos].sourceEndIndex***REMOVED***=***REMOVED***value.length;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***stack[0].nodes;
	};
	return***REMOVED***parse;
}

var***REMOVED***walk$1;
var***REMOVED***hasRequiredWalk;

function***REMOVED***requireWalk***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredWalk)***REMOVED***return***REMOVED***walk$1;
	hasRequiredWalk***REMOVED***=***REMOVED***1;
	walk$1***REMOVED***=***REMOVED***function***REMOVED***walk(nodes,***REMOVED***cb,***REMOVED***bubble)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***i,***REMOVED***max,***REMOVED***node,***REMOVED***result;

	***REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***max***REMOVED***=***REMOVED***nodes.length;***REMOVED***i***REMOVED***<***REMOVED***max;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***nodes[i];
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!bubble)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***cb(node,***REMOVED***i,***REMOVED***nodes);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***!==***REMOVED***false***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"function"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Array.isArray(node.nodes)
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walk(node.nodes,***REMOVED***cb,***REMOVED***bubble);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bubble)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(node,***REMOVED***i,***REMOVED***nodes);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}
	};
	return***REMOVED***walk$1;
}

var***REMOVED***stringify_1;
var***REMOVED***hasRequiredStringify;

function***REMOVED***requireStringify***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredStringify)***REMOVED***return***REMOVED***stringify_1;
	hasRequiredStringify***REMOVED***=***REMOVED***1;
	function***REMOVED***stringifyNode(node,***REMOVED***custom)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***type***REMOVED***=***REMOVED***node.type;
	***REMOVED******REMOVED***var***REMOVED***value***REMOVED***=***REMOVED***node.value;
	***REMOVED******REMOVED***var***REMOVED***buf;
	***REMOVED******REMOVED***var***REMOVED***customResult;

	***REMOVED******REMOVED***if***REMOVED***(custom***REMOVED***&&***REMOVED***(customResult***REMOVED***=***REMOVED***custom(node))***REMOVED***!==***REMOVED***undefined)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***customResult;
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"word"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"space")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"string")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***buf***REMOVED***=***REMOVED***node.quote***REMOVED***||***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***buf***REMOVED***+***REMOVED***value***REMOVED***+***REMOVED***(node.unclosed***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***buf);
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"comment")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"/*"***REMOVED***+***REMOVED***value***REMOVED***+***REMOVED***(node.unclosed***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***"*/");
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"div")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(node.before***REMOVED***||***REMOVED***"")***REMOVED***+***REMOVED***value***REMOVED***+***REMOVED***(node.after***REMOVED***||***REMOVED***"");
	***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(Array.isArray(node.nodes))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***buf***REMOVED***=***REMOVED***stringify(node.nodes,***REMOVED***custom);
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***!==***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***buf;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"("***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node.before***REMOVED***||***REMOVED***"")***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buf***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node.after***REMOVED***||***REMOVED***"")***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node.unclosed***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***")")
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***value;
	}

	function***REMOVED***stringify(nodes,***REMOVED***custom)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***result,***REMOVED***i;

	***REMOVED******REMOVED***if***REMOVED***(Array.isArray(nodes))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***"";
	***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***nodes.length***REMOVED***-***REMOVED***1;***REMOVED***~i;***REMOVED***i***REMOVED***-=***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***stringifyNode(nodes[i],***REMOVED***custom)***REMOVED***+***REMOVED***result;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***stringifyNode(nodes,***REMOVED***custom);
	}

	stringify_1***REMOVED***=***REMOVED***stringify;
	return***REMOVED***stringify_1;
}

var***REMOVED***unit;
var***REMOVED***hasRequiredUnit;

function***REMOVED***requireUnit***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredUnit)***REMOVED***return***REMOVED***unit;
	hasRequiredUnit***REMOVED***=***REMOVED***1;
	var***REMOVED***minus***REMOVED***=***REMOVED***"-".charCodeAt(0);
	var***REMOVED***plus***REMOVED***=***REMOVED***"+".charCodeAt(0);
	var***REMOVED***dot***REMOVED***=***REMOVED***".".charCodeAt(0);
	var***REMOVED***exp***REMOVED***=***REMOVED***"e".charCodeAt(0);
	var***REMOVED***EXP***REMOVED***=***REMOVED***"E".charCodeAt(0);

	//***REMOVED***Check***REMOVED***if***REMOVED***three***REMOVED***code***REMOVED***points***REMOVED***would***REMOVED***start***REMOVED***a***REMOVED***number
	//***REMOVED***https://www.w3.org/TR/css-syntax-3/#starts-with-a-number
	function***REMOVED***likeNumber(value)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(0);
	***REMOVED******REMOVED***var***REMOVED***nextCode;

	***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***plus***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***minus)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***nextCode***REMOVED***=***REMOVED***value.charCodeAt(1);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCode***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***nextCode***REMOVED***<=***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nextNextCode***REMOVED***=***REMOVED***value.charCodeAt(2);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCode***REMOVED***===***REMOVED***dot***REMOVED***&&***REMOVED***nextNextCode***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***nextNextCode***REMOVED***<=***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***dot)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***nextCode***REMOVED***=***REMOVED***value.charCodeAt(1);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextCode***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***nextCode***REMOVED***<=***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***code***REMOVED***<=***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***false;
	}

	//***REMOVED***Consume***REMOVED***a***REMOVED***number
	//***REMOVED***https://www.w3.org/TR/css-syntax-3/#consume-number
	unit***REMOVED***=***REMOVED***function(value)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***pos***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***var***REMOVED***length***REMOVED***=***REMOVED***value.length;
	***REMOVED******REMOVED***var***REMOVED***code;
	***REMOVED******REMOVED***var***REMOVED***nextCode;
	***REMOVED******REMOVED***var***REMOVED***nextNextCode;

	***REMOVED******REMOVED***if***REMOVED***(length***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***!likeNumber(value))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***plus***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***minus)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***pos++;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***48***REMOVED***||***REMOVED***code***REMOVED***>***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);
	***REMOVED******REMOVED***nextCode***REMOVED***=***REMOVED***value.charCodeAt(pos***REMOVED***+***REMOVED***1);

	***REMOVED******REMOVED***if***REMOVED***(code***REMOVED***===***REMOVED***dot***REMOVED***&&***REMOVED***nextCode***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***nextCode***REMOVED***<=***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***2;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***48***REMOVED***||***REMOVED***code***REMOVED***>***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);
	***REMOVED******REMOVED***nextCode***REMOVED***=***REMOVED***value.charCodeAt(pos***REMOVED***+***REMOVED***1);
	***REMOVED******REMOVED***nextNextCode***REMOVED***=***REMOVED***value.charCodeAt(pos***REMOVED***+***REMOVED***2);

	***REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED***(code***REMOVED***===***REMOVED***exp***REMOVED***||***REMOVED***code***REMOVED***===***REMOVED***EXP)***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***((nextCode***REMOVED***>=***REMOVED***48***REMOVED***&&***REMOVED***nextCode***REMOVED***<=***REMOVED***57)***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***((nextCode***REMOVED***===***REMOVED***plus***REMOVED***||***REMOVED***nextCode***REMOVED***===***REMOVED***minus)***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNextCode***REMOVED***>=***REMOVED***48***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNextCode***REMOVED***<=***REMOVED***57))
	***REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***nextCode***REMOVED***===***REMOVED***plus***REMOVED***||***REMOVED***nextCode***REMOVED***===***REMOVED***minus***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***2;

	***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pos***REMOVED***<***REMOVED***length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***value.charCodeAt(pos);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(code***REMOVED***<***REMOVED***48***REMOVED***||***REMOVED***code***REMOVED***>***REMOVED***57)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pos***REMOVED***+=***REMOVED***1;
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***number:***REMOVED***value.slice(0,***REMOVED***pos),
	***REMOVED******REMOVED******REMOVED******REMOVED***unit:***REMOVED***value.slice(pos)
	***REMOVED******REMOVED***};
	};
	return***REMOVED***unit;
}

var***REMOVED***lib;
var***REMOVED***hasRequiredLib;

function***REMOVED***requireLib***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredLib)***REMOVED***return***REMOVED***lib;
	hasRequiredLib***REMOVED***=***REMOVED***1;
	var***REMOVED***parse***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireParse();
	var***REMOVED***walk***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireWalk();
	var***REMOVED***stringify***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireStringify();

	function***REMOVED***ValueParser(value)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(this***REMOVED***instanceof***REMOVED***ValueParser)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***this.nodes***REMOVED***=***REMOVED***parse(value);
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ValueParser(value);
	}

	ValueParser.prototype.toString***REMOVED***=***REMOVED***function()***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Array.isArray(this.nodes)***REMOVED***?***REMOVED***stringify(this.nodes)***REMOVED***:***REMOVED***"";
	};

	ValueParser.prototype.walk***REMOVED***=***REMOVED***function(cb,***REMOVED***bubble)***REMOVED***{
	***REMOVED******REMOVED***walk(this.nodes,***REMOVED***cb,***REMOVED***bubble);
	***REMOVED******REMOVED***return***REMOVED***this;
	};

	ValueParser.unit***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireUnit();

	ValueParser.walk***REMOVED***=***REMOVED***walk;

	ValueParser.stringify***REMOVED***=***REMOVED***stringify;

	lib***REMOVED***=***REMOVED***ValueParser;
	return***REMOVED***lib;
}

var***REMOVED***hasRequiredSrc$2;

function***REMOVED***requireSrc$2***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSrc$2)***REMOVED***return***REMOVED***src$2.exports;
	hasRequiredSrc$2***REMOVED***=***REMOVED***1;

	const***REMOVED***selectorParser***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireDist();
	const***REMOVED***valueParser***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireLib();
	const***REMOVED***{***REMOVED***extractICSS***REMOVED***}***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSrc$4();

	const***REMOVED***isSpacing***REMOVED***=***REMOVED***(node)***REMOVED***=>***REMOVED***node.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&***REMOVED***node.value***REMOVED***===***REMOVED***"***REMOVED***";

	function***REMOVED***normalizeNodeArray(nodes)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***array***REMOVED***=***REMOVED***[];

	***REMOVED******REMOVED***nodes.forEach((x)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Array.isArray(x))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeNodeArray(x).forEach((item)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array.push(item);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(x)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***array.push(x);
	***REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***if***REMOVED***(array.length***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***isSpacing(array[array.length***REMOVED***-***REMOVED***1]))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***array.pop();
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***array;
	}

	function***REMOVED***localizeNode(rule,***REMOVED***mode,***REMOVED***localAliasMap)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***transform***REMOVED***=***REMOVED***(node,***REMOVED***context)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.ignoreNextSpacing***REMOVED***&&***REMOVED***!isSpacing(node))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Missing***REMOVED***whitespace***REMOVED***after***REMOVED***"***REMOVED***+***REMOVED***context.ignoreNextSpacing);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.enforceNoSpacing***REMOVED***&&***REMOVED***isSpacing(node))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Missing***REMOVED***whitespace***REMOVED***before***REMOVED***"***REMOVED***+***REMOVED***context.enforceNoSpacing);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newNodes;

	***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"root":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***resultingGlobal;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasPureGlobals***REMOVED***=***REMOVED***false;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.nodes.map((n)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastWasSpacing:***REMOVED***true,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n***REMOVED***=***REMOVED***transform(n,***REMOVED***nContext);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***resultingGlobal***REMOVED***===***REMOVED***"undefined")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resultingGlobal***REMOVED***=***REMOVED***nContext.global;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(resultingGlobal***REMOVED***!==***REMOVED***nContext.global)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Inconsistent***REMOVED***rule***REMOVED***global/local***REMOVED***result***REMOVED***in***REMOVED***rule***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***(multiple***REMOVED***selectors***REMOVED***must***REMOVED***result***REMOVED***in***REMOVED***the***REMOVED***same***REMOVED***mode***REMOVED***for***REMOVED***the***REMOVED***rule)'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nContext.hasLocals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasPureGlobals***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***n;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global***REMOVED***=***REMOVED***resultingGlobal;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.map((childNode)***REMOVED***=>***REMOVED***transform(childNode,***REMOVED***context));

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.clone();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"combinator":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSpacing(node))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.ignoreNextSpacing)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"pseudo":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***childContext;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isNested***REMOVED***=***REMOVED***!!node.length;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isScoped***REMOVED***=***REMOVED***node.value***REMOVED***===***REMOVED***":local"***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***":global";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportExport***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***===***REMOVED***":import"***REMOVED***||***REMOVED***node.value***REMOVED***===***REMOVED***":export";

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isImportExport)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***:local(.foo)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isNested)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isScoped)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.nodes.length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`${node.value}()***REMOVED***can't***REMOVED***be***REMOVED***empty`);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.inside)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***${node.value}***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***inside***REMOVED***of***REMOVED***a***REMOVED***${context.inside}(...)`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***node.value***REMOVED***===***REMOVED***":global",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inside:***REMOVED***node.value,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***true,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((childNode)***REMOVED***=>***REMOVED***transform(childNode,***REMOVED***childContext))
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.reduce((acc,***REMOVED***next)***REMOVED***=>***REMOVED***acc.concat(next.nodes),***REMOVED***[]);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newNodes.length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***before,***REMOVED***after***REMOVED***}***REMOVED***=***REMOVED***node.spaces;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***first***REMOVED***=***REMOVED***newNodes[0];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***newNodes[newNodes.length***REMOVED***-***REMOVED***1];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***first.spaces***REMOVED***=***REMOVED***{***REMOVED***before,***REMOVED***after:***REMOVED***first.spaces.after***REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.spaces***REMOVED***=***REMOVED***{***REMOVED***before:***REMOVED***last.spaces.before,***REMOVED***after***REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***newNodes;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inside:***REMOVED***context.inside,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastWasSpacing:***REMOVED***true,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasLocals:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***explicit:***REMOVED***context.explicit,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newNodes***REMOVED***=***REMOVED***node.map((childNode)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...childContext,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enforceNoSpacing:***REMOVED***false,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***transform(childNode,***REMOVED***newContext);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext.global***REMOVED***=***REMOVED***newContext.global;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childContext.hasLocals***REMOVED***=***REMOVED***newContext.hasLocals;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.clone();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***normalizeNodeArray(newNodes);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(childContext.hasLocals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//:local***REMOVED***.foo***REMOVED***.bar
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isScoped)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.inside)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***${node.value}***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***inside***REMOVED***of***REMOVED***a***REMOVED***${context.inside}(...)`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***addBackSpacing***REMOVED***=***REMOVED***!!node.spaces.before;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***context.lastWasSpacing
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node.value
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***false;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***context.lastWasSpacing
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***false
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***node.value;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global***REMOVED***=***REMOVED***node.value***REMOVED***===***REMOVED***":global";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.explicit***REMOVED***=***REMOVED***true;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***because***REMOVED***this***REMOVED***node***REMOVED***has***REMOVED***spacing***REMOVED***that***REMOVED***is***REMOVED***lost***REMOVED***when***REMOVED***we***REMOVED***remove***REMOVED***it
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***make***REMOVED***up***REMOVED***for***REMOVED***it***REMOVED***by***REMOVED***adding***REMOVED***an***REMOVED***extra***REMOVED***combinator***REMOVED***in***REMOVED***since***REMOVED***adding
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***spacing***REMOVED***on***REMOVED***the***REMOVED***parent***REMOVED***selector***REMOVED***doesn't***REMOVED***work
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***addBackSpacing
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***selectorParser.combinator({***REMOVED***value:***REMOVED***"***REMOVED***"***REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***null;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node.value)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Invalid***REMOVED***class***REMOVED***or***REMOVED***id***REMOVED***selector***REMOVED***syntax");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.global)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportedValue***REMOVED***=***REMOVED***localAliasMap.has(node.value);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isImportedWithExplicitScope***REMOVED***=***REMOVED***isImportedValue***REMOVED***&&***REMOVED***context.explicit;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isImportedValue***REMOVED***||***REMOVED***isImportedWithExplicitScope)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerNode***REMOVED***=***REMOVED***node.clone();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***innerNode.spaces***REMOVED***=***REMOVED***{***REMOVED***before:***REMOVED***"",***REMOVED***after:***REMOVED***""***REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***selectorParser.pseudo({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***":local",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes:***REMOVED***[innerNode],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***spaces:***REMOVED***node.spaces,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"nesting":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value***REMOVED***===***REMOVED***"&")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.hasLocals***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***context.lastWasSpacing***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***context.ignoreNextSpacing***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***context.enforceNoSpacing***REMOVED***=***REMOVED***false;

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***const***REMOVED***rootContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***mode***REMOVED***===***REMOVED***"global",
	***REMOVED******REMOVED******REMOVED******REMOVED***hasPureGlobals:***REMOVED***false,
	***REMOVED******REMOVED***};

	***REMOVED******REMOVED***rootContext.selector***REMOVED***=***REMOVED***selectorParser((root)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***transform(root,***REMOVED***rootContext);
	***REMOVED******REMOVED***}).processSync(rule,***REMOVED***{***REMOVED***updateSelector:***REMOVED***false,***REMOVED***lossless:***REMOVED***true***REMOVED***});

	***REMOVED******REMOVED***return***REMOVED***rootContext;
	}

	function***REMOVED***localizeDeclNode(node,***REMOVED***context)***REMOVED***{
	***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"word":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.localizeNextItem)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.localAliasMap.has(node.value))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***=***REMOVED***":local("***REMOVED***+***REMOVED***node.value***REMOVED***+***REMOVED***")";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.localizeNextItem***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;

	***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"function":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options.rewriteUrl***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***"url"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes.map((nestedNode)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.type***REMOVED***!==***REMOVED***"string"***REMOVED***&&***REMOVED***nestedNode.type***REMOVED***!==***REMOVED***"word")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newUrl***REMOVED***=***REMOVED***context.options.rewriteUrl(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nestedNode.value
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(nestedNode.type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"string":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.quote***REMOVED***===***REMOVED***"'")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/(\\)/g,***REMOVED***"\\$1").replace(/'/g,***REMOVED***"\\'");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nestedNode.quote***REMOVED***===***REMOVED***'"')***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/(\\)/g,***REMOVED***"\\$1").replace(/"/g,***REMOVED***'\\"');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"word":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newUrl***REMOVED***=***REMOVED***newUrl.replace(/("|'|\)|\\)/g,***REMOVED***"\\$1");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nestedNode.value***REMOVED***=***REMOVED***newUrl;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED***}
	***REMOVED******REMOVED***return***REMOVED***node;
	}

	//***REMOVED***`none`***REMOVED***is***REMOVED***special***REMOVED***value,***REMOVED***other***REMOVED***is***REMOVED***global***REMOVED***values
	const***REMOVED***specialKeywords***REMOVED***=***REMOVED***[
	***REMOVED******REMOVED***"none",
	***REMOVED******REMOVED***"inherit",
	***REMOVED******REMOVED***"initial",
	***REMOVED******REMOVED***"revert",
	***REMOVED******REMOVED***"revert-layer",
	***REMOVED******REMOVED***"unset",
	];

	function***REMOVED***localizeDeclarationValues(localize,***REMOVED***declaration,***REMOVED***context)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***valueNodes***REMOVED***=***REMOVED***valueParser(declaration.value);

	***REMOVED******REMOVED***valueNodes.walk((node,***REMOVED***index,***REMOVED***nodes)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"function"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node.value.toLowerCase()***REMOVED***===***REMOVED***"var"***REMOVED***||***REMOVED***node.value.toLowerCase()***REMOVED***===***REMOVED***"env")
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***===***REMOVED***"word"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specialKeywords.includes(node.value.toLowerCase())
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***context.options,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeNextItem:***REMOVED***localize***REMOVED***&&***REMOVED***!context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap:***REMOVED***context.localAliasMap,
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***nodes[index]***REMOVED***=***REMOVED***localizeDeclNode(node,***REMOVED***subContext);
	***REMOVED******REMOVED***});

	***REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***valueNodes.toString();
	}

	function***REMOVED***localizeDeclaration(declaration,***REMOVED***context)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***isAnimation***REMOVED***=***REMOVED***/animation$/i.test(declaration.prop);

	***REMOVED******REMOVED***if***REMOVED***(isAnimation)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***letter
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***An***REMOVED***uppercase***REMOVED***letter***REMOVED***or***REMOVED***a***REMOVED***lowercase***REMOVED***letter.
	***REMOVED******REMOVED******REMOVED******REMOVED***//
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ident-start***REMOVED***code***REMOVED***point
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***letter,***REMOVED***a***REMOVED***non-ASCII***REMOVED***code***REMOVED***point,***REMOVED***or***REMOVED***U+005F***REMOVED***LOW***REMOVED***LINE***REMOVED***(_).
	***REMOVED******REMOVED******REMOVED******REMOVED***//
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ident***REMOVED***code***REMOVED***point
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***An***REMOVED***ident-start***REMOVED***code***REMOVED***point,***REMOVED***a***REMOVED***digit,***REMOVED***or***REMOVED***U+002D***REMOVED***HYPHEN-MINUS***REMOVED***(-).

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***don't***REMOVED***validate***REMOVED***`hex***REMOVED***digits`,***REMOVED***because***REMOVED***we***REMOVED***don't***REMOVED***need***REMOVED***it,***REMOVED***it***REMOVED***is***REMOVED***work***REMOVED***of***REMOVED***linters.
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validIdent***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/^-?([a-z\u0080-\uFFFF_]|(\\[^\r\n\f])|-(?![0-9]))((\\[^\r\n\f])|[a-z\u0080-\uFFFF_0-9-])*$/i;

	***REMOVED******REMOVED******REMOVED******REMOVED***/*
	***REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***spec***REMOVED***defines***REMOVED***some***REMOVED***keywords***REMOVED***that***REMOVED***you***REMOVED***can***REMOVED***use***REMOVED***to***REMOVED***describe***REMOVED***properties***REMOVED***such***REMOVED***as***REMOVED***the***REMOVED***timing
	***REMOVED******REMOVED******REMOVED******REMOVED***function.***REMOVED***These***REMOVED***are***REMOVED***still***REMOVED***valid***REMOVED***animation***REMOVED***names,***REMOVED***so***REMOVED***as***REMOVED***long***REMOVED***as***REMOVED***there***REMOVED***is***REMOVED***a***REMOVED***property***REMOVED***that***REMOVED***accepts
	***REMOVED******REMOVED******REMOVED******REMOVED***a***REMOVED***keyword,***REMOVED***it***REMOVED***is***REMOVED***given***REMOVED***priority.***REMOVED***Only***REMOVED***when***REMOVED***all***REMOVED***the***REMOVED***properties***REMOVED***that***REMOVED***can***REMOVED***take***REMOVED***a***REMOVED***keyword***REMOVED***are
	***REMOVED******REMOVED******REMOVED******REMOVED***exhausted***REMOVED***can***REMOVED***the***REMOVED***animation***REMOVED***name***REMOVED***be***REMOVED***set***REMOVED***to***REMOVED***the***REMOVED***keyword.***REMOVED***I.e.

	***REMOVED******REMOVED******REMOVED******REMOVED***animation:***REMOVED***infinite***REMOVED***infinite;

	***REMOVED******REMOVED******REMOVED******REMOVED***The***REMOVED***animation***REMOVED***will***REMOVED***repeat***REMOVED***an***REMOVED***infinite***REMOVED***number***REMOVED***of***REMOVED***times***REMOVED***from***REMOVED***the***REMOVED***first***REMOVED***argument,***REMOVED***and***REMOVED***will***REMOVED***have***REMOVED***an
	***REMOVED******REMOVED******REMOVED******REMOVED***animation***REMOVED***name***REMOVED***of***REMOVED***infinite***REMOVED***from***REMOVED***the***REMOVED***second.
	***REMOVED******REMOVED******REMOVED******REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***animationKeywords***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***animation-direction
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$normal:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$reverse:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$alternate:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$alternate-reverse":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***animation-fill-mode
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$forwards:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$backwards:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$both:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***animation-iteration-count
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$infinite:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***animation-play-state
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$paused:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$running:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***animation-timing-function
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$ease:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-in":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-out":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$ease-in-out":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$linear:***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$step-end":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$step-start":***REMOVED***1,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Special
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$none:***REMOVED***Infinity,***REMOVED***//***REMOVED***No***REMOVED***matter***REMOVED***how***REMOVED***many***REMOVED***times***REMOVED***you***REMOVED***write***REMOVED***none,***REMOVED***it***REMOVED***will***REMOVED***never***REMOVED***be***REMOVED***an***REMOVED***animation***REMOVED***name
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Global***REMOVED***values
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$initial:***REMOVED***Infinity,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$inherit:***REMOVED***Infinity,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$unset:***REMOVED***Infinity,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$revert:***REMOVED***Infinity,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$revert-layer":***REMOVED***Infinity,
	***REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedAnimationKeywords***REMOVED***=***REMOVED***{};
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valueNodes***REMOVED***=***REMOVED***valueParser(declaration.value).walk((node)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***div-token***REMOVED***appeared***REMOVED***(represents***REMOVED***as***REMOVED***comma***REMOVED***','),***REMOVED***a***REMOVED***possibility***REMOVED***of***REMOVED***an***REMOVED***animation-keywords***REMOVED***should***REMOVED***be***REMOVED***reflesh.
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"div")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Do***REMOVED***not***REMOVED***handle***REMOVED***nested***REMOVED***functions
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ignore***REMOVED***all***REMOVED***except***REMOVED***word
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"word")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***node.type***REMOVED***===***REMOVED***"word"***REMOVED***?***REMOVED***node.value.toLowerCase()***REMOVED***:***REMOVED***null;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shouldParseAnimationName***REMOVED***=***REMOVED***false;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***&&***REMOVED***validIdent.test(value))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("$"***REMOVED***+***REMOVED***value***REMOVED***in***REMOVED***animationKeywords)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"$"***REMOVED***+***REMOVED***value***REMOVED***in***REMOVED***parsedAnimationKeywords
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***+***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***0;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParseAnimationName***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedAnimationKeywords["$"***REMOVED***+***REMOVED***value]***REMOVED***>=
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***animationKeywords["$"***REMOVED***+***REMOVED***value];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldParseAnimationName***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subContext***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***context.options,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeNextItem:***REMOVED***shouldParseAnimationName***REMOVED***&&***REMOVED***!context.global,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap:***REMOVED***context.localAliasMap,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclNode(node,***REMOVED***subContext);
	***REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED***declaration.value***REMOVED***=***REMOVED***valueNodes.toString();

	***REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***const***REMOVED***isAnimationName***REMOVED***=***REMOVED***/animation(-name)?$/i.test(declaration.prop);

	***REMOVED******REMOVED***if***REMOVED***(isAnimationName)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclarationValues(true,***REMOVED***declaration,***REMOVED***context);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***const***REMOVED***hasUrl***REMOVED***=***REMOVED***/url\(/i.test(declaration.value);

	***REMOVED******REMOVED***if***REMOVED***(hasUrl)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***localizeDeclarationValues(false,***REMOVED***declaration,***REMOVED***context);
	***REMOVED******REMOVED***}
	}

	src$2.exports***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"global"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"local"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED***options.mode***REMOVED***!==***REMOVED***"pure"
	***REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'options.mode***REMOVED***must***REMOVED***be***REMOVED***either***REMOVED***"global",***REMOVED***"local"***REMOVED***or***REMOVED***"pure"***REMOVED***(default***REMOVED***"local")'
	***REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***const***REMOVED***pureMode***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.mode***REMOVED***===***REMOVED***"pure";
	***REMOVED******REMOVED***const***REMOVED***globalMode***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.mode***REMOVED***===***REMOVED***"global";

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-local-by-default",
	***REMOVED******REMOVED******REMOVED******REMOVED***prepare()***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localAliasMap***REMOVED***=***REMOVED***new***REMOVED***Map();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***icssImports***REMOVED***}***REMOVED***=***REMOVED***extractICSS(root,***REMOVED***false);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(icssImports).forEach((key)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(icssImports[key]).forEach((prop)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap.set(prop,***REMOVED***icssImports[key][prop]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules((atRule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/keyframes$/i.test(atRule.name))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalMatch***REMOVED***=***REMOVED***/^\s*:global\s*\((.+)\)\s*$/.exec(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/^\s*:local\s*\((.+)\)\s*$/.exec(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***globalKeyframes***REMOVED***=***REMOVED***globalMode;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalMatch)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pureMode)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***atRule.error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"@keyframes***REMOVED***:global(...)***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***pure***REMOVED***mode"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***globalMatch[1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalKeyframes***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(localMatch)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***localMatch[0];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalKeyframes***REMOVED***=***REMOVED***false;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!globalMode***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!localAliasMap.has(atRule.params)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***":local("***REMOVED***+***REMOVED***atRule.params***REMOVED***+***REMOVED***")";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.walkDecls((declaration)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***options,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***globalKeyframes,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(/scope$/i.test(atRule.name))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(atRule.params)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***atRule.params
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.split("to")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((item)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***selector***REMOVED***=***REMOVED***item.trim().slice(1,***REMOVED***-1).trim();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***localizeNode(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.mode,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options***REMOVED***=***REMOVED***options;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.localAliasMap***REMOVED***=***REMOVED***localAliasMap;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pureMode***REMOVED***&&***REMOVED***context.hasPureGlobals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***atRule.error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Selector***REMOVED***in***REMOVED***at-rule"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***pure***REMOVED***'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"(pure***REMOVED***selectors***REMOVED***must***REMOVED***contain***REMOVED***at***REMOVED***least***REMOVED***one***REMOVED***local***REMOVED***class***REMOVED***or***REMOVED***id)"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(${context.selector})`;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join("***REMOVED***to***REMOVED***");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.nodes.forEach((declaration)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.type***REMOVED***===***REMOVED***"decl")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***options,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***globalMode,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(atRule.nodes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.nodes.forEach((declaration)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(declaration.type***REMOVED***===***REMOVED***"decl")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localAliasMap,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***options,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***global:***REMOVED***globalMode,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.parent***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.parent.type***REMOVED***===***REMOVED***"atrule"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/keyframes$/i.test(rule.parent.name)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ignore***REMOVED***keyframe***REMOVED***rules
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***localizeNode(rule,***REMOVED***options.mode,***REMOVED***localAliasMap);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.options***REMOVED***=***REMOVED***options;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.localAliasMap***REMOVED***=***REMOVED***localAliasMap;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pureMode***REMOVED***&&***REMOVED***context.hasPureGlobals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***rule.error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Selector***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***not***REMOVED***pure***REMOVED***'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"(pure***REMOVED***selectors***REMOVED***must***REMOVED***contain***REMOVED***at***REMOVED***least***REMOVED***one***REMOVED***local***REMOVED***class***REMOVED***or***REMOVED***id)"
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***context.selector;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Less-syntax***REMOVED***mixins***REMOVED***parse***REMOVED***as***REMOVED***rules***REMOVED***with***REMOVED***no***REMOVED***nodes
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rule.nodes)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.nodes.forEach((declaration)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localizeDeclaration(declaration,***REMOVED***context)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED***};
	};
	src$2.exports.postcss***REMOVED***=***REMOVED***true;
	return***REMOVED***src$2.exports;
}

var***REMOVED***src$1;
var***REMOVED***hasRequiredSrc$1;

function***REMOVED***requireSrc$1***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSrc$1)***REMOVED***return***REMOVED***src$1;
	hasRequiredSrc$1***REMOVED***=***REMOVED***1;

	const***REMOVED***selectorParser***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireDist();

	const***REMOVED***hasOwnProperty***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;

	function***REMOVED***isNestedRule(rule)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(!rule.parent***REMOVED***||***REMOVED***rule.parent.type***REMOVED***===***REMOVED***"root")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***if***REMOVED***(rule.parent.type***REMOVED***===***REMOVED***"rule")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***isNestedRule(rule.parent);
	}

	function***REMOVED***getSingleLocalNamesForComposes(root,***REMOVED***rule)***REMOVED***{
	***REMOVED******REMOVED***if***REMOVED***(isNestedRule(rule))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`composition***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***nested***REMOVED***rule***REMOVED***\n\n${rule}`);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***root.nodes.map((node)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"selector"***REMOVED***||***REMOVED***node.nodes.length***REMOVED***!==***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"${root}"`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.nodes[0];

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type***REMOVED***!==***REMOVED***"pseudo"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value***REMOVED***!==***REMOVED***":local"***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes.length***REMOVED***!==***REMOVED***1
	***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.first;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"selector"***REMOVED***||***REMOVED***node.length***REMOVED***!==***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***=***REMOVED***node.first;

	***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"class")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'id'***REMOVED***is***REMOVED***not***REMOVED***possible,***REMOVED***because***REMOVED***you***REMOVED***can't***REMOVED***compose***REMOVED***ids
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'composition***REMOVED***is***REMOVED***only***REMOVED***allowed***REMOVED***when***REMOVED***selector***REMOVED***is***REMOVED***single***REMOVED***:local***REMOVED***class***REMOVED***name***REMOVED***not***REMOVED***in***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'",***REMOVED***"'***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node***REMOVED***+
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'"***REMOVED***is***REMOVED***weird'
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.value;
	***REMOVED******REMOVED***});
	}

	const***REMOVED***whitespace***REMOVED***=***REMOVED***"[\\x20\\t\\r\\n\\f]";
	const***REMOVED***unescapeRegExp***REMOVED***=***REMOVED***new***REMOVED***RegExp(
	***REMOVED******REMOVED***"\\\\([\\da-f]{1,6}"***REMOVED***+***REMOVED***whitespace***REMOVED***+***REMOVED***"?|("***REMOVED***+***REMOVED***whitespace***REMOVED***+***REMOVED***")|.)",
	***REMOVED******REMOVED***"ig"
	);

	function***REMOVED***unescape(str)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***str.replace(unescapeRegExp,***REMOVED***(_,***REMOVED***escaped,***REMOVED***escapedWhitespace)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***high***REMOVED***=***REMOVED***"0x"***REMOVED***+***REMOVED***escaped***REMOVED***-***REMOVED***0x10000;

	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***NaN***REMOVED***means***REMOVED***non-codepoint
	***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Workaround***REMOVED***erroneous***REMOVED***numeric***REMOVED***interpretation***REMOVED***of***REMOVED***+"0x"
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***high***REMOVED***!==***REMOVED***high***REMOVED***||***REMOVED***escapedWhitespace
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***escaped
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***high***REMOVED***<***REMOVED***0
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***//***REMOVED***BMP***REMOVED***codepoint
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***String.fromCharCode(high***REMOVED***+***REMOVED***0x10000)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***//***REMOVED***Supplemental***REMOVED***Plane***REMOVED***codepoint***REMOVED***(surrogate***REMOVED***pair)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***String.fromCharCode((high***REMOVED***>>***REMOVED***10)***REMOVED***|***REMOVED***0xd800,***REMOVED***(high***REMOVED***&***REMOVED***0x3ff)***REMOVED***|***REMOVED***0xdc00);
	***REMOVED******REMOVED***});
	}

	const***REMOVED***plugin***REMOVED***=***REMOVED***(options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***generateScopedName***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.generateScopedName)***REMOVED***||***REMOVED***plugin.generateScopedName;
	***REMOVED******REMOVED***const***REMOVED***generateExportEntry***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.generateExportEntry)***REMOVED***||***REMOVED***plugin.generateExportEntry;
	***REMOVED******REMOVED***const***REMOVED***exportGlobals***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***options.exportGlobals;

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-scope",
	***REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***{***REMOVED***rule***REMOVED***})***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exports***REMOVED***=***REMOVED***Object.create(null);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***exportScopedName(name,***REMOVED***rawName,***REMOVED***node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scopedName***REMOVED***=***REMOVED***generateScopedName(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawName***REMOVED***?***REMOVED***rawName***REMOVED***:***REMOVED***name,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.from,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.css,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportEntry***REMOVED***=***REMOVED***generateExportEntry(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawName***REMOVED***?***REMOVED***rawName***REMOVED***:***REMOVED***name,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scopedName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.from,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.source.input.css,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***key,***REMOVED***value***REMOVED***}***REMOVED***=***REMOVED***exportEntry;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[key]***REMOVED***=***REMOVED***exports[key]***REMOVED***||***REMOVED***[];

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exports[key].indexOf(value)***REMOVED***<***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[key].push(value);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scopedName;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***localizeNode(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.nodes***REMOVED***=***REMOVED***node.map((item)***REMOVED***=>***REMOVED***localizeNode(item));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selectorParser.className({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exportScopedName(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws***REMOVED***&&***REMOVED***node.raws.value***REMOVED***?***REMOVED***node.raws.value***REMOVED***:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selectorParser.id({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exportScopedName(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.value,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.raws***REMOVED***&&***REMOVED***node.raws.value***REMOVED***?***REMOVED***node.raws.value***REMOVED***:***REMOVED***null,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"attribute":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.attribute***REMOVED***===***REMOVED***"class"***REMOVED***&&***REMOVED***node.operator***REMOVED***===***REMOVED***"=")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***selectorParser.attribute({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attribute:***REMOVED***node.attribute,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***operator:***REMOVED***node.operator,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quoteMark:***REMOVED***"'",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exportScopedName(node.value,***REMOVED***null,***REMOVED***null),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${node.type}***REMOVED***("${node}")***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***in***REMOVED***a***REMOVED***:local***REMOVED***block`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***traverseNode(node)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"pseudo":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.value***REMOVED***===***REMOVED***":local")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.nodes.length***REMOVED***!==***REMOVED***1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('Unexpected***REMOVED***comma***REMOVED***(",")***REMOVED***in***REMOVED***:local***REMOVED***block');
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***selector***REMOVED***=***REMOVED***localizeNode(node.first);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***move***REMOVED***the***REMOVED***spaces***REMOVED***that***REMOVED***were***REMOVED***around***REMOVED***the***REMOVED***pseudo***REMOVED***selector***REMOVED***to***REMOVED***the***REMOVED***first
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***non-container***REMOVED***node
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.first.spaces***REMOVED***=***REMOVED***node.spaces;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextNode***REMOVED***=***REMOVED***node.next();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode.type***REMOVED***===***REMOVED***"combinator"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextNode.value***REMOVED***===***REMOVED***"***REMOVED***"***REMOVED***&&
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/\\[A-F0-9]{1,6}$/.test(selector.last.value)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector.last.spaces.after***REMOVED***=***REMOVED***"***REMOVED***";
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.replaceWith(selector);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***falls***REMOVED***through***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"root":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"selector":***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.each((item)***REMOVED***=>***REMOVED***traverseNode(item));
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"id":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"class":
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportGlobals)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[node.value]***REMOVED***=***REMOVED***[node.value];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:import***REMOVED***and***REMOVED***remember***REMOVED***imported***REMOVED***names
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedNames***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules(/^:import\(.+\)$/,***REMOVED***(rule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importedNames[decl.prop]***REMOVED***=***REMOVED***true;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***selectors
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkRules((rule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedSelector***REMOVED***=***REMOVED***selectorParser().astSync(rule);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.selector***REMOVED***=***REMOVED***traverseNode(parsedSelector.clone()).toString();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls(/^(composes|compose-with)$/i,***REMOVED***(decl)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localNames***REMOVED***=***REMOVED***getSingleLocalNamesForComposes(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedSelector,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.parent
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***multiple***REMOVED***=***REMOVED***decl.value.split(",");

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***multiple.forEach((value)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***classes***REMOVED***=***REMOVED***value.trim().split(/\s+/);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***classes.forEach((className)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***global***REMOVED***=***REMOVED***/^global\(([^)]+)\)$/.exec(className);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(global)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(global[1]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwnProperty.call(importedNames,***REMOVED***className))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(className);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwnProperty.call(exports,***REMOVED***className))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***localNames.forEach((exportedName)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[className].forEach((item)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exports[exportedName].push(item);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***decl.error(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`referenced***REMOVED***class***REMOVED***name***REMOVED***"${className}"***REMOVED***in***REMOVED***${decl.prop}***REMOVED***not***REMOVED***found`
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***values
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rule.walkDecls((decl)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/:local\s*\((.+?)\)/.test(decl.value))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***tokens***REMOVED***=***REMOVED***decl.value.split(/(,|'[^']*'|"[^"]*")/);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tokens***REMOVED***=***REMOVED***tokens.map((token,***REMOVED***idx)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(idx***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***tokens[idx***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***",")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result***REMOVED***=***REMOVED***token;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/:local\s*\((.+?)\)/.exec(token);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(localMatch)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***input***REMOVED***=***REMOVED***localMatch.input;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchPattern***REMOVED***=***REMOVED***localMatch[0];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matchVal***REMOVED***=***REMOVED***localMatch[1];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newVal***REMOVED***=***REMOVED***exportScopedName(matchVal);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***input.replace(matchPattern,***REMOVED***newVal);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***token;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl.value***REMOVED***=***REMOVED***tokens.join("");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***any***REMOVED***:local***REMOVED***keyframes
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules(/keyframes$/i,***REMOVED***(atRule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/^\s*:local\s*\((.+?)\)\s*$/.exec(atRule.params);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!localMatch)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***exportScopedName(localMatch[1]);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules(/scope$/i,***REMOVED***(atRule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(atRule.params)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.params***REMOVED***=***REMOVED***atRule.params
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.split("to")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((item)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***selector***REMOVED***=***REMOVED***item.trim().slice(1,***REMOVED***-1).trim();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***localMatch***REMOVED***=***REMOVED***/^\s*:local\s*\((.+?)\)\s*$/.exec(selector);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!localMatch)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(${selector})`;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***parsedSelector***REMOVED***=***REMOVED***selectorParser().astSync(selector);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`(${traverseNode(parsedSelector).toString()})`;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join("***REMOVED***to***REMOVED***");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***we***REMOVED***found***REMOVED***any***REMOVED***:locals,***REMOVED***insert***REMOVED***an***REMOVED***:export***REMOVED***rule
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportedNames***REMOVED***=***REMOVED***Object.keys(exports);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportedNames.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportRule***REMOVED***=***REMOVED***rule({***REMOVED***selector:***REMOVED***":export"***REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedNames.forEach((exportedName)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportRule.append({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***exportedName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***exports[exportedName].join("***REMOVED***"),
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.append(exportRule);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED***};
	};

	plugin.postcss***REMOVED***=***REMOVED***true;

	plugin.generateScopedName***REMOVED***=***REMOVED***function***REMOVED***(name,***REMOVED***path)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***sanitisedPath***REMOVED***=***REMOVED***path
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/\.[^./\\]+$/,***REMOVED***"")
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/[\W_]+/g,***REMOVED***"_")
	***REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^_|_$/g,***REMOVED***"");

	***REMOVED******REMOVED***return***REMOVED***`_${sanitisedPath}__${name}`.trim();
	};

	plugin.generateExportEntry***REMOVED***=***REMOVED***function***REMOVED***(name,***REMOVED***scopedName)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***unescape(name),
	***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***unescape(scopedName),
	***REMOVED******REMOVED***};
	};

	src$1***REMOVED***=***REMOVED***plugin;
	return***REMOVED***src$1;
}

var***REMOVED***stringHash;
var***REMOVED***hasRequiredStringHash;

function***REMOVED***requireStringHash***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredStringHash)***REMOVED***return***REMOVED***stringHash;
	hasRequiredStringHash***REMOVED***=***REMOVED***1;

	function***REMOVED***hash(str)***REMOVED***{
	***REMOVED******REMOVED***var***REMOVED***hash***REMOVED***=***REMOVED***5381,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED******REMOVED******REMOVED******REMOVED***=***REMOVED***str.length;

	***REMOVED******REMOVED***while(i)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***hash***REMOVED***=***REMOVED***(hash***REMOVED*******REMOVED***33)***REMOVED***^***REMOVED***str.charCodeAt(--i);
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***/****REMOVED***JavaScript***REMOVED***does***REMOVED***bitwise***REMOVED***operations***REMOVED***(like***REMOVED***XOR,***REMOVED***above)***REMOVED***on***REMOVED***32-bit***REMOVED***signed
	***REMOVED******REMOVED******REMOVED*******REMOVED***integers.***REMOVED***Since***REMOVED***we***REMOVED***want***REMOVED***the***REMOVED***results***REMOVED***to***REMOVED***be***REMOVED***always***REMOVED***positive,***REMOVED***convert***REMOVED***the
	***REMOVED******REMOVED******REMOVED*******REMOVED***signed***REMOVED***int***REMOVED***to***REMOVED***an***REMOVED***unsigned***REMOVED***by***REMOVED***doing***REMOVED***an***REMOVED***unsigned***REMOVED***bitshift.***REMOVED****/
	***REMOVED******REMOVED***return***REMOVED***hash***REMOVED***>>>***REMOVED***0;
	}

	stringHash***REMOVED***=***REMOVED***hash;
	return***REMOVED***stringHash;
}

var***REMOVED***src***REMOVED***=***REMOVED***{exports:***REMOVED***{}};

var***REMOVED***hasRequiredSrc;

function***REMOVED***requireSrc***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredSrc)***REMOVED***return***REMOVED***src.exports;
	hasRequiredSrc***REMOVED***=***REMOVED***1;

	const***REMOVED***ICSSUtils***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireSrc$4();

	const***REMOVED***matchImports***REMOVED***=***REMOVED***/^(.+?|\([\s\S]+?\))\s+from\s+("[^"]*"|'[^']*'|[\w-]+)$/;
	const***REMOVED***matchValueDefinition***REMOVED***=***REMOVED***/(?:\s+|^)([\w-]+):?(.*?)$/;
	const***REMOVED***matchImport***REMOVED***=***REMOVED***/^([\w-]+)(?:\s+as\s+([\w-]+))?/;

	src.exports***REMOVED***=***REMOVED***(options)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED***let***REMOVED***importIndex***REMOVED***=***REMOVED***0;
	***REMOVED******REMOVED***const***REMOVED***createImportedName***REMOVED***=
	***REMOVED******REMOVED******REMOVED******REMOVED***(options***REMOVED***&&***REMOVED***options.createImportedName)***REMOVED***||
	***REMOVED******REMOVED******REMOVED******REMOVED***((importName***REMOVED***/*,***REMOVED***path*/)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`i__const_${importName.replace(/\W/g,***REMOVED***"_")}_${importIndex++}`);

	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***"postcss-modules-values",
	***REMOVED******REMOVED******REMOVED******REMOVED***prepare(result)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importAliases***REMOVED***=***REMOVED***[];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***definitions***REMOVED***=***REMOVED***{};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Once(root,***REMOVED***postcss)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.walkAtRules(/value/i,***REMOVED***(atRule)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matches***REMOVED***=***REMOVED***atRule.params.match(matchImports);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matches)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[,***REMOVED***/*match*/***REMOVED***aliases,***REMOVED***path]***REMOVED***=***REMOVED***matches;

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***can***REMOVED***use***REMOVED***constants***REMOVED***for***REMOVED***path***REMOVED***names
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(definitions[path])***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***path***REMOVED***=***REMOVED***definitions[path];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***aliases
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(/^\(\s*([\s\S]+)\s*\)$/,***REMOVED***"$1")
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.split(/\s*,\s*/)
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map((alias)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tokens***REMOVED***=***REMOVED***matchImport.exec(alias);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tokens)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[,***REMOVED***/*match*/***REMOVED***theirName,***REMOVED***myName***REMOVED***=***REMOVED***theirName]***REMOVED***=***REMOVED***tokens;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importedName***REMOVED***=***REMOVED***createImportedName(myName);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions[myName]***REMOVED***=***REMOVED***importedName;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***theirName,***REMOVED***importedName***REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`@import***REMOVED***statement***REMOVED***"${alias}"***REMOVED***is***REMOVED***invalid!`);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importAliases.push({***REMOVED***path,***REMOVED***imports***REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(atRule.params.indexOf("@value")***REMOVED***!==***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.warn("Invalid***REMOVED***value***REMOVED***definition:***REMOVED***"***REMOVED***+***REMOVED***atRule.params);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***[,***REMOVED***key,***REMOVED***value]***REMOVED***=***REMOVED***`${atRule.params}${atRule.raws.between}`.match(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchValueDefinition
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedValue***REMOVED***=***REMOVED***value.replace(/\/\*((?!\*\/).*?)\*\//g,***REMOVED***"");

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalizedValue.length***REMOVED***===***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.warn("Invalid***REMOVED***value***REMOVED***definition:***REMOVED***"***REMOVED***+***REMOVED***atRule.params);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isOnlySpace***REMOVED***=***REMOVED***/^\s+$/.test(normalizedValue);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isOnlySpace)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value.trim();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Add***REMOVED***to***REMOVED***the***REMOVED***definitions,***REMOVED***knowing***REMOVED***that***REMOVED***values***REMOVED***can***REMOVED***refer***REMOVED***to***REMOVED***each***REMOVED***other
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions[key]***REMOVED***=***REMOVED***ICSSUtils.replaceValueSymbols(
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***definitions
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***atRule.remove();
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***If***REMOVED***we***REMOVED***have***REMOVED***no***REMOVED***definitions,***REMOVED***don't***REMOVED***continue***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Object.keys(definitions).length)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Perform***REMOVED***replacements***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ICSSUtils.replaceSymbols(root,***REMOVED***definitions);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***We***REMOVED***want***REMOVED***to***REMOVED***export***REMOVED***anything***REMOVED***defined***REMOVED***by***REMOVED***now,***REMOVED***but***REMOVED***don't***REMOVED***add***REMOVED***it***REMOVED***to***REMOVED***the***REMOVED***CSS***REMOVED***yet***REMOVED***or***REMOVED***it***REMOVED***well***REMOVED***get***REMOVED***picked***REMOVED***up***REMOVED***by***REMOVED***the***REMOVED***replacement***REMOVED***stuff***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportDeclarations***REMOVED***=***REMOVED***Object.keys(definitions).map((key)***REMOVED***=>
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcss.decl({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***definitions[key],
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***key,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Add***REMOVED***export***REMOVED***rules***REMOVED***if***REMOVED***any***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exportDeclarations.length***REMOVED***>***REMOVED***0)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exportRule***REMOVED***=***REMOVED***postcss.rule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***":export",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportRule.append(exportDeclarations);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(exportRule);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***Add***REMOVED***import***REMOVED***rules***REMOVED****/
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importAliases.reverse().forEach(({***REMOVED***path,***REMOVED***imports***REMOVED***})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importRule***REMOVED***=***REMOVED***postcss.rule({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***selector:***REMOVED***`:import(${path})`,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***after:***REMOVED***"\n"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports.forEach(({***REMOVED***theirName,***REMOVED***importedName***REMOVED***})***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***importRule.append({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***theirName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop:***REMOVED***importedName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raws:***REMOVED***{***REMOVED***before:***REMOVED***"\n***REMOVED******REMOVED***"***REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.prepend(importRule);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
	***REMOVED******REMOVED******REMOVED******REMOVED***},
	***REMOVED******REMOVED***};
	};

	src.exports.postcss***REMOVED***=***REMOVED***true;
	return***REMOVED***src.exports;
}

var***REMOVED***hasRequiredScoping;

function***REMOVED***requireScoping***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredScoping)***REMOVED***return***REMOVED***scoping;
	hasRequiredScoping***REMOVED***=***REMOVED***1;

	Object.defineProperty(scoping,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	scoping.behaviours***REMOVED***=***REMOVED***void***REMOVED***0;
	scoping.getDefaultPlugins***REMOVED***=***REMOVED***getDefaultPlugins;
	scoping.getDefaultScopeBehaviour***REMOVED***=***REMOVED***getDefaultScopeBehaviour;
	scoping.getScopedNameGenerator***REMOVED***=***REMOVED***getScopedNameGenerator;

	var***REMOVED***_postcssModulesExtractImports***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSrc$3());

	var***REMOVED***_genericNames***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireGenericNames());

	var***REMOVED***_postcssModulesLocalByDefault***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSrc$2());

	var***REMOVED***_postcssModulesScope***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSrc$1());

	var***REMOVED***_stringHash***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireStringHash());

	var***REMOVED***_postcssModulesValues***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSrc());

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

	const***REMOVED***behaviours***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED***LOCAL:***REMOVED***"local",
	***REMOVED******REMOVED***GLOBAL:***REMOVED***"global"
	};
	scoping.behaviours***REMOVED***=***REMOVED***behaviours;

	function***REMOVED***getDefaultPlugins({
	***REMOVED******REMOVED***behaviour,
	***REMOVED******REMOVED***generateScopedName,
	***REMOVED******REMOVED***exportGlobals
	})***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***(0,***REMOVED***_postcssModulesScope.default)({
	***REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
	***REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
	***REMOVED******REMOVED***});
	***REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***[behaviours.LOCAL]:***REMOVED***[_postcssModulesValues.default,***REMOVED***(0,***REMOVED***_postcssModulesLocalByDefault.default)({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***"local"
	***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***_postcssModulesExtractImports.default,***REMOVED***scope],
	***REMOVED******REMOVED******REMOVED******REMOVED***[behaviours.GLOBAL]:***REMOVED***[_postcssModulesValues.default,***REMOVED***(0,***REMOVED***_postcssModulesLocalByDefault.default)({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mode:***REMOVED***"global"
	***REMOVED******REMOVED******REMOVED******REMOVED***}),***REMOVED***_postcssModulesExtractImports.default,***REMOVED***scope]
	***REMOVED******REMOVED***};
	***REMOVED******REMOVED***return***REMOVED***plugins[behaviour];
	}

	function***REMOVED***isValidBehaviour(behaviour)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***Object.keys(behaviours).map(key***REMOVED***=>***REMOVED***behaviours[key]).indexOf(behaviour)***REMOVED***>***REMOVED***-1;
	}

	function***REMOVED***getDefaultScopeBehaviour(scopeBehaviour)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***scopeBehaviour***REMOVED***&&***REMOVED***isValidBehaviour(scopeBehaviour)***REMOVED***?***REMOVED***scopeBehaviour***REMOVED***:***REMOVED***behaviours.LOCAL;
	}

	function***REMOVED***generateScopedNameDefault(name,***REMOVED***filename,***REMOVED***css)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***css.indexOf(`.${name}`);
	***REMOVED******REMOVED***const***REMOVED***lineNumber***REMOVED***=***REMOVED***css.substr(0,***REMOVED***i).split(/[\r\n]/).length;
	***REMOVED******REMOVED***const***REMOVED***hash***REMOVED***=***REMOVED***(0,***REMOVED***_stringHash.default)(css).toString(36).substr(0,***REMOVED***5);
	***REMOVED******REMOVED***return***REMOVED***`_${name}_${hash}_${lineNumber}`;
	}

	function***REMOVED***getScopedNameGenerator(generateScopedName,***REMOVED***hashPrefix)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***scopedNameGenerator***REMOVED***=***REMOVED***generateScopedName***REMOVED***||***REMOVED***generateScopedNameDefault;

	***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***scopedNameGenerator***REMOVED***===***REMOVED***"function")***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scopedNameGenerator;
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_genericNames.default)(scopedNameGenerator,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***context:***REMOVED***process.cwd(),
	***REMOVED******REMOVED******REMOVED******REMOVED***hashPrefix:***REMOVED***hashPrefix
	***REMOVED******REMOVED***});
	}
	return***REMOVED***scoping;
}

var***REMOVED***hasRequiredPluginFactory;

function***REMOVED***requirePluginFactory***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredPluginFactory)***REMOVED***return***REMOVED***pluginFactory;
	hasRequiredPluginFactory***REMOVED***=***REMOVED***1;

	Object.defineProperty(pluginFactory,***REMOVED***"__esModule",***REMOVED***{
	***REMOVED******REMOVED***value:***REMOVED***true
	});
	pluginFactory.makePlugin***REMOVED***=***REMOVED***makePlugin;

	var***REMOVED***_postcss***REMOVED***=***REMOVED***_interopRequireDefault(require$$0$1);

	var***REMOVED***_unquote***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireUnquote());

	var***REMOVED***_Parser***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireParser$1());

	var***REMOVED***_saveJSON***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireSaveJSON());

	var***REMOVED***_localsConvention***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireLocalsConvention();

	var***REMOVED***_FileSystemLoader***REMOVED***=***REMOVED***_interopRequireDefault(/*@__PURE__*/***REMOVED***requireFileSystemLoader());

	var***REMOVED***_scoping***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireScoping();

	function***REMOVED***_interopRequireDefault(obj)***REMOVED***{***REMOVED***return***REMOVED***obj***REMOVED***&&***REMOVED***obj.__esModule***REMOVED***?***REMOVED***obj***REMOVED***:***REMOVED***{***REMOVED***default:***REMOVED***obj***REMOVED***};***REMOVED***}

	const***REMOVED***PLUGIN_NAME***REMOVED***=***REMOVED***"postcss-modules";

	function***REMOVED***isGlobalModule(globalModules,***REMOVED***inputFile)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***globalModules.some(regex***REMOVED***=>***REMOVED***inputFile.match(regex));
	}

	function***REMOVED***getDefaultPluginsList(opts,***REMOVED***inputFile)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***globalModulesList***REMOVED***=***REMOVED***opts.globalModulePaths***REMOVED***||***REMOVED***null;
	***REMOVED******REMOVED***const***REMOVED***exportGlobals***REMOVED***=***REMOVED***opts.exportGlobals***REMOVED***||***REMOVED***false;
	***REMOVED******REMOVED***const***REMOVED***defaultBehaviour***REMOVED***=***REMOVED***(0,***REMOVED***_scoping.getDefaultScopeBehaviour)(opts.scopeBehaviour);
	***REMOVED******REMOVED***const***REMOVED***generateScopedName***REMOVED***=***REMOVED***(0,***REMOVED***_scoping.getScopedNameGenerator)(opts.generateScopedName,***REMOVED***opts.hashPrefix);

	***REMOVED******REMOVED***if***REMOVED***(globalModulesList***REMOVED***&&***REMOVED***isGlobalModule(globalModulesList,***REMOVED***inputFile))***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_scoping.getDefaultPlugins)({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***behaviour:***REMOVED***_scoping.behaviours.GLOBAL,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
	***REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED***}

	***REMOVED******REMOVED***return***REMOVED***(0,***REMOVED***_scoping.getDefaultPlugins)({
	***REMOVED******REMOVED******REMOVED******REMOVED***behaviour:***REMOVED***defaultBehaviour,
	***REMOVED******REMOVED******REMOVED******REMOVED***generateScopedName,
	***REMOVED******REMOVED******REMOVED******REMOVED***exportGlobals
	***REMOVED******REMOVED***});
	}

	function***REMOVED***getLoader(opts,***REMOVED***plugins)***REMOVED***{
	***REMOVED******REMOVED***const***REMOVED***root***REMOVED***=***REMOVED***typeof***REMOVED***opts.root***REMOVED***===***REMOVED***"undefined"***REMOVED***?***REMOVED***"/"***REMOVED***:***REMOVED***opts.root;
	***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***opts.Loader***REMOVED***===***REMOVED***"function"***REMOVED***?***REMOVED***new***REMOVED***opts.Loader(root,***REMOVED***plugins,***REMOVED***opts.resolve)***REMOVED***:***REMOVED***new***REMOVED***_FileSystemLoader.default(root,***REMOVED***plugins,***REMOVED***opts.resolve);
	}

	function***REMOVED***isOurPlugin(plugin)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***plugin.postcssPlugin***REMOVED***===***REMOVED***PLUGIN_NAME;
	}

	function***REMOVED***makePlugin(opts)***REMOVED***{
	***REMOVED******REMOVED***return***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugin:***REMOVED***PLUGIN_NAME,

	***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***OnceExit(css,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result
	***REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getJSON***REMOVED***=***REMOVED***opts.getJSON***REMOVED***||***REMOVED***_saveJSON.default;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inputFile***REMOVED***=***REMOVED***css.source.input.file;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pluginList***REMOVED***=***REMOVED***getDefaultPluginsList(opts,***REMOVED***inputFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resultPluginIndex***REMOVED***=***REMOVED***result.processor.plugins.findIndex(plugin***REMOVED***=>***REMOVED***isOurPlugin(plugin));

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resultPluginIndex***REMOVED***===***REMOVED***-1)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("Plugin***REMOVED***missing***REMOVED***from***REMOVED***options.");
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***earlierPlugins***REMOVED***=***REMOVED***result.processor.plugins.slice(0,***REMOVED***resultPluginIndex);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loaderPlugins***REMOVED***=***REMOVED***[...earlierPlugins,***REMOVED***...pluginList];
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***loader***REMOVED***=***REMOVED***getLoader(opts,***REMOVED***loaderPlugins);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fetcher***REMOVED***=***REMOVED***async***REMOVED***(file,***REMOVED***relativeTo,***REMOVED***depTrace)***REMOVED***=>***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unquoteFile***REMOVED***=***REMOVED***(0,***REMOVED***_unquote.default)(file);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***loader.fetch.call(loader,***REMOVED***unquoteFile,***REMOVED***relativeTo,***REMOVED***depTrace);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parser***REMOVED***=***REMOVED***new***REMOVED***_Parser.default(fetcher);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***(0,***REMOVED***_postcss.default)([...pluginList,***REMOVED***parser.plugin()]).process(css,***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***inputFile
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***out***REMOVED***=***REMOVED***loader.finalSource;
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(out)***REMOVED***css.prepend(out);

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opts.localsConvention)***REMOVED***{
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reducer***REMOVED***=***REMOVED***(0,***REMOVED***_localsConvention.makeLocalsConventionReducer)(opts.localsConvention,***REMOVED***inputFile);
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parser.exportTokens***REMOVED***=***REMOVED***Object.entries(parser.exportTokens).reduce(reducer,***REMOVED***{});
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.messages.push({
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"export",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin:***REMOVED***"postcss-modules",
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportTokens:***REMOVED***parser.exportTokens
	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});***REMOVED***//***REMOVED***getJSON***REMOVED***may***REMOVED***return***REMOVED***a***REMOVED***promise

	***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getJSON(css.source.input.file,***REMOVED***parser.exportTokens,***REMOVED***result.opts.to);
	***REMOVED******REMOVED******REMOVED******REMOVED***}

	***REMOVED******REMOVED***};
	}
	return***REMOVED***pluginFactory;
}

var***REMOVED***hasRequiredBuild;

function***REMOVED***requireBuild***REMOVED***()***REMOVED***{
	if***REMOVED***(hasRequiredBuild)***REMOVED***return***REMOVED***build.exports;
	hasRequiredBuild***REMOVED***=***REMOVED***1;

	var***REMOVED***_fs***REMOVED***=***REMOVED***require$$0;

	var***REMOVED***_fs2***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireFs();

	var***REMOVED***_pluginFactory***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requirePluginFactory();

	(0,***REMOVED***_fs2.setFileSystem)({
	***REMOVED******REMOVED***readFile:***REMOVED***_fs.readFile,
	***REMOVED******REMOVED***writeFile:***REMOVED***_fs.writeFile
	});

	build.exports***REMOVED***=***REMOVED***(opts***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***(0,***REMOVED***_pluginFactory.makePlugin)(opts);

	build.exports.postcss***REMOVED***=***REMOVED***true;
	return***REMOVED***build.exports;
}

var***REMOVED***buildExports***REMOVED***=***REMOVED***/*@__PURE__*/***REMOVED***requireBuild();
var***REMOVED***postcssModules***REMOVED***=***REMOVED***/*@__PURE__*/getDefaultExportFromCjs(buildExports);

function***REMOVED***compileStyle(options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***doCompileStyle({
***REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***false
***REMOVED******REMOVED***});
}
function***REMOVED***compileStyleAsync(options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***doCompileStyle({
***REMOVED******REMOVED******REMOVED******REMOVED***...options,
***REMOVED******REMOVED******REMOVED******REMOVED***isAsync:***REMOVED***true
***REMOVED******REMOVED***});
}
function***REMOVED***doCompileStyle(options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED***id,
***REMOVED******REMOVED******REMOVED******REMOVED***scoped***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***trim***REMOVED***=***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***isProd***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***modules***REMOVED***=***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***modulesOptions***REMOVED***=***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***preprocessLang,
***REMOVED******REMOVED******REMOVED******REMOVED***postcssOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***postcssPlugins
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***preprocessor***REMOVED***=***REMOVED***preprocessLang***REMOVED***&&***REMOVED***processors[preprocessLang];
***REMOVED******REMOVED***const***REMOVED***preProcessedSource***REMOVED***=***REMOVED***preprocessor***REMOVED***&&***REMOVED***preprocess(options,***REMOVED***preprocessor);
***REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***preProcessedSource***REMOVED***?***REMOVED***preProcessedSource.map***REMOVED***:***REMOVED***options.inMap***REMOVED***||***REMOVED***options.map;
***REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***preProcessedSource***REMOVED***?***REMOVED***preProcessedSource.code***REMOVED***:***REMOVED***options.source;
***REMOVED******REMOVED***const***REMOVED***shortId***REMOVED***=***REMOVED***id.replace(/^data-v-/,***REMOVED***"");
***REMOVED******REMOVED***const***REMOVED***longId***REMOVED***=***REMOVED***`data-v-${shortId}`;
***REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***(postcssPlugins***REMOVED***||***REMOVED***[]).slice();
***REMOVED******REMOVED***plugins.unshift(cssVarsPlugin({***REMOVED***id:***REMOVED***shortId,***REMOVED***isProd***REMOVED***}));
***REMOVED******REMOVED***if***REMOVED***(trim)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push(trimPlugin());
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(scoped)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push(scopedPlugin(longId));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***cssModules;
***REMOVED******REMOVED***if***REMOVED***(modules)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"[@vue/compiler-sfc]***REMOVED***`modules`***REMOVED***option***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***compileStyleAsync()."
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***postcssModules({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...modulesOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getJSON:***REMOVED***(_cssFileName,***REMOVED***json)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cssModules***REMOVED***=***REMOVED***json;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***postCSSOptions***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...postcssOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***to:***REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED***from:***REMOVED***filename
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***postCSSOptions.map***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inline:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotation:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prev:***REMOVED***map
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED***let***REMOVED***code;
***REMOVED******REMOVED***let***REMOVED***outMap;
***REMOVED******REMOVED***const***REMOVED***dependencies***REMOVED***=***REMOVED***new***REMOVED***Set(
***REMOVED******REMOVED******REMOVED******REMOVED***preProcessedSource***REMOVED***?***REMOVED***preProcessedSource.dependencies***REMOVED***:***REMOVED***[]
***REMOVED******REMOVED***);
***REMOVED******REMOVED***dependencies.delete(filename);
***REMOVED******REMOVED***const***REMOVED***errors***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(preProcessedSource***REMOVED***&&***REMOVED***preProcessedSource.errors.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***errors.push(...preProcessedSource.errors);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***recordPlainCssDependencies***REMOVED***=***REMOVED***(messages)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***messages.forEach((msg)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(msg.type***REMOVED***===***REMOVED***"dependency")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies.add(msg.file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dependencies;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***require$$0$1(plugins).process(source,***REMOVED***postCSSOptions);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.isAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.then((result2)***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***result2.css***REMOVED***||***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***result2.map***REMOVED***&&***REMOVED***result2.map.toJSON(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modules:***REMOVED***cssModules,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawResult:***REMOVED***result2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies:***REMOVED***recordPlainCssDependencies(result2.messages)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})).catch((error)***REMOVED***=>***REMOVED***({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errors:***REMOVED***[...errors,***REMOVED***error],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawResult:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dependencies
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***recordPlainCssDependencies(result.messages);
***REMOVED******REMOVED******REMOVED******REMOVED***code***REMOVED***=***REMOVED***result.css;
***REMOVED******REMOVED******REMOVED******REMOVED***outMap***REMOVED***=***REMOVED***result.map;
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***errors.push(e);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***code***REMOVED***||***REMOVED***``,
***REMOVED******REMOVED******REMOVED******REMOVED***map:***REMOVED***outMap***REMOVED***&&***REMOVED***outMap.toJSON(),
***REMOVED******REMOVED******REMOVED******REMOVED***errors,
***REMOVED******REMOVED******REMOVED******REMOVED***rawResult:***REMOVED***result,
***REMOVED******REMOVED******REMOVED******REMOVED***dependencies
***REMOVED******REMOVED***};
}
function***REMOVED***preprocess(options,***REMOVED***preprocessor)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***preprocessor(
***REMOVED******REMOVED******REMOVED******REMOVED***options.source,
***REMOVED******REMOVED******REMOVED******REMOVED***options.inMap***REMOVED***||***REMOVED***options.map,
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename:***REMOVED***options.filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options.preprocessOptions
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***options.preprocessCustomRequire
***REMOVED******REMOVED***);
}

const***REMOVED***UNKNOWN_TYPE***REMOVED***=***REMOVED***"Unknown";
function***REMOVED***resolveObjectKey(node,***REMOVED***computed)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NumericLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(node.value);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Identifier":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!computed)***REMOVED***return***REMOVED***node.name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***void***REMOVED***0;
}
function***REMOVED***concatStrings(strs)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***strs.filter((s)***REMOVED***=>***REMOVED***!!s).join(",***REMOVED***");
}
function***REMOVED***isLiteralNode(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.type.endsWith("Literal");
}
function***REMOVED***isCallOf(node,***REMOVED***test)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(node***REMOVED***&&***REMOVED***test***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***"CallExpression"***REMOVED***&&***REMOVED***node.callee.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***(typeof***REMOVED***test***REMOVED***===***REMOVED***"string"***REMOVED***?***REMOVED***node.callee.name***REMOVED***===***REMOVED***test***REMOVED***:***REMOVED***test(node.callee.name)));
}
function***REMOVED***toRuntimeTypeString(types)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***types.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***`[${types.join(",***REMOVED***")}]`***REMOVED***:***REMOVED***types[0];
}
function***REMOVED***getImportedName(specifier)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(specifier.type***REMOVED***===***REMOVED***"ImportSpecifier")
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***specifier.imported.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***specifier.imported.name***REMOVED***:***REMOVED***specifier.imported.value;
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(specifier.type***REMOVED***===***REMOVED***"ImportNamespaceSpecifier")***REMOVED***return***REMOVED***"*";
***REMOVED******REMOVED***return***REMOVED***"default";
}
function***REMOVED***getId(node)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***node.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***node.name***REMOVED***:***REMOVED***node.type***REMOVED***===***REMOVED***"StringLiteral"***REMOVED***?***REMOVED***node.value***REMOVED***:***REMOVED***null;
}
const***REMOVED***identity***REMOVED***=***REMOVED***(str)***REMOVED***=>***REMOVED***str;
const***REMOVED***fileNameLowerCaseRegExp***REMOVED***=***REMOVED***/[^\u0130\u0131\u00DFa-z0-9\\/:\-_\.***REMOVED***]+/g;
const***REMOVED***toLowerCase***REMOVED***=***REMOVED***(str)***REMOVED***=>***REMOVED***str.toLowerCase();
function***REMOVED***toFileNameLowerCase(x)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***fileNameLowerCaseRegExp.test(x)***REMOVED***?***REMOVED***x.replace(fileNameLowerCaseRegExp,***REMOVED***toLowerCase)***REMOVED***:***REMOVED***x;
}
function***REMOVED***createGetCanonicalFileName(useCaseSensitiveFileNames)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***useCaseSensitiveFileNames***REMOVED***?***REMOVED***identity***REMOVED***:***REMOVED***toFileNameLowerCase;
}
const***REMOVED***normalize***REMOVED***=***REMOVED***(path$1.posix***REMOVED***||***REMOVED***path$1).normalize;
const***REMOVED***windowsSlashRE***REMOVED***=***REMOVED***/\\/g;
function***REMOVED***normalizePath(p)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***normalize(p.replace(windowsSlashRE,***REMOVED***"/"));
}
const***REMOVED***joinPaths***REMOVED***=***REMOVED***(path$1.posix***REMOVED***||***REMOVED***path$1).join;
const***REMOVED***propNameEscapeSymbolsRE***REMOVED***=***REMOVED***/[***REMOVED***!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~\-]/;
function***REMOVED***getEscapedPropName(key)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***propNameEscapeSymbolsRE.test(key)***REMOVED***?***REMOVED***JSON.stringify(key)***REMOVED***:***REMOVED***key;
}
const***REMOVED***isJS***REMOVED***=***REMOVED***(...langs)***REMOVED***=>***REMOVED***langs.some((lang)***REMOVED***=>***REMOVED***lang***REMOVED***===***REMOVED***"js"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"jsx");
const***REMOVED***isTS***REMOVED***=***REMOVED***(...langs)***REMOVED***=>***REMOVED***langs.some((lang)***REMOVED***=>***REMOVED***lang***REMOVED***===***REMOVED***"ts"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"tsx");

function***REMOVED***analyzeScriptBindings(ast)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***ast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration"***REMOVED***&&***REMOVED***node.declaration.type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***analyzeBindingsFromOptions(node.declaration);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{};
}
function***REMOVED***analyzeBindingsFromOptions(node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***bindings***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***Object.defineProperty(bindings,***REMOVED***"__isScriptSetup",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***false
***REMOVED******REMOVED***});
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***property***REMOVED***of***REMOVED***node.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.type***REMOVED***===***REMOVED***"ObjectProperty"***REMOVED***&&***REMOVED***!property.computed***REMOVED***&&***REMOVED***property.key.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(property.key.name***REMOVED***===***REMOVED***"props")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***getObjectOrArrayExpressionKeys(property.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings[key]***REMOVED***=***REMOVED***"props";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(property.key.name***REMOVED***===***REMOVED***"inject")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***getObjectOrArrayExpressionKeys(property.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings[key]***REMOVED***=***REMOVED***"options";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(property.value.type***REMOVED***===***REMOVED***"ObjectExpression"***REMOVED***&&***REMOVED***(property.key.name***REMOVED***===***REMOVED***"computed"***REMOVED***||***REMOVED***property.key.name***REMOVED***===***REMOVED***"methods"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***getObjectExpressionKeys(property.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings[key]***REMOVED***=***REMOVED***"options";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(property.type***REMOVED***===***REMOVED***"ObjectMethod"***REMOVED***&&***REMOVED***property.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***(property.key.name***REMOVED***===***REMOVED***"setup"***REMOVED***||***REMOVED***property.key.name***REMOVED***===***REMOVED***"data"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***bodyItem***REMOVED***of***REMOVED***property.body.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bodyItem.type***REMOVED***===***REMOVED***"ReturnStatement"***REMOVED***&&***REMOVED***bodyItem.argument***REMOVED***&&***REMOVED***bodyItem.argument.type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***getObjectExpressionKeys(bodyItem.argument))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings[key]***REMOVED***=***REMOVED***property.key.name***REMOVED***===***REMOVED***"setup"***REMOVED***?***REMOVED***"setup-maybe-ref"***REMOVED***:***REMOVED***"data";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***bindings;
}
function***REMOVED***getObjectExpressionKeys(node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***node.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"SpreadElement")***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***resolveObjectKey(prop.key,***REMOVED***prop.computed);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key)***REMOVED***keys.push(String(key));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***keys;
}
function***REMOVED***getArrayExpressionKeys(node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***element***REMOVED***of***REMOVED***node.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(element***REMOVED***&&***REMOVED***element.type***REMOVED***===***REMOVED***"StringLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keys.push(element.value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***keys;
}
function***REMOVED***getObjectOrArrayExpressionKeys(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value.type***REMOVED***===***REMOVED***"ArrayExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getArrayExpressionKeys(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(value.type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getObjectExpressionKeys(value);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[];
}

var***REMOVED***_a,***REMOVED***_b;
class***REMOVED***ScriptCompileContext***REMOVED***{
***REMOVED******REMOVED***constructor(descriptor,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.descriptor***REMOVED***=***REMOVED***descriptor;
***REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isCE***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***this.descriptor.source;
***REMOVED******REMOVED******REMOVED******REMOVED***this.filename***REMOVED***=***REMOVED***this.descriptor.filename;
***REMOVED******REMOVED******REMOVED******REMOVED***this.s***REMOVED***=***REMOVED***new***REMOVED***MagicString(this.source);
***REMOVED******REMOVED******REMOVED******REMOVED***this.startOffset***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***this.descriptor.scriptSetup)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.loc.start.offset;
***REMOVED******REMOVED******REMOVED******REMOVED***this.endOffset***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***this.descriptor.scriptSetup)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.loc.end.offset;
***REMOVED******REMOVED******REMOVED******REMOVED***this.userImports***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***macros***REMOVED***presence***REMOVED***check
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefinePropsCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefineEmitCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefineExposeCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefaultExportName***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefaultExportRender***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefineOptionsCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefineSlotsCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.hasDefineModelCall***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.propsDestructuredBindings***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***defineModel
***REMOVED******REMOVED******REMOVED******REMOVED***this.modelDecls***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***codegen
***REMOVED******REMOVED******REMOVED******REMOVED***this.bindingMetadata***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***this.helperImports***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***script,***REMOVED***scriptSetup***REMOVED***}***REMOVED***=***REMOVED***descriptor;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptLang***REMOVED***=***REMOVED***script***REMOVED***&&***REMOVED***script.lang;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptSetupLang***REMOVED***=***REMOVED***scriptSetup***REMOVED***&&***REMOVED***scriptSetup.lang;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isJS***REMOVED***=***REMOVED***isJS(scriptLang,***REMOVED***scriptSetupLang);
***REMOVED******REMOVED******REMOVED******REMOVED***this.isTS***REMOVED***=***REMOVED***isTS(scriptLang,***REMOVED***scriptSetupLang);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***customElement***REMOVED***=***REMOVED***options.customElement;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filename***REMOVED***=***REMOVED***this.descriptor.filename;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(customElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isCE***REMOVED***=***REMOVED***typeof***REMOVED***customElement***REMOVED***===***REMOVED***"boolean"***REMOVED***?***REMOVED***customElement***REMOVED***:***REMOVED***customElement(filename);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***resolveParserPlugins(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptLang***REMOVED***||***REMOVED***scriptSetupLang,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.babelParserPlugins
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***parse(input,***REMOVED***offset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser$2.parse(input,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"module"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).program;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.message***REMOVED***=***REMOVED***`[vue/compiler-sfc]***REMOVED***${e.message}

${descriptor.filename}
${shared.generateCodeFrame(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.pos***REMOVED***+***REMOVED***offset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.pos***REMOVED***+***REMOVED***offset***REMOVED***+***REMOVED***1
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***e;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.scriptAst***REMOVED***=***REMOVED***descriptor.script***REMOVED***&&***REMOVED***parse(descriptor.script.content,***REMOVED***descriptor.script.loc.start.offset);
***REMOVED******REMOVED******REMOVED******REMOVED***this.scriptSetupAst***REMOVED***=***REMOVED***descriptor.scriptSetup***REMOVED***&&***REMOVED***parse(descriptor.scriptSetup.content,***REMOVED***this.startOffset);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***helper(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.helperImports.add(key);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`_${key}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***getString(node,***REMOVED***scriptSetup***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***block***REMOVED***=***REMOVED***scriptSetup***REMOVED***?***REMOVED***this.descriptor.scriptSetup***REMOVED***:***REMOVED***this.descriptor.script;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***block.content.slice(node.start,***REMOVED***node.end);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***warn(msg,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(generateError(msg,***REMOVED***node,***REMOVED***this,***REMOVED***scope));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***error(msg,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`[@vue/compiler-sfc]***REMOVED***${generateError(msg,***REMOVED***node,***REMOVED***this,***REMOVED***scope)}`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***generateError(msg,***REMOVED***node,***REMOVED***ctx,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***offset***REMOVED***=***REMOVED***scope***REMOVED***?***REMOVED***scope.offset***REMOVED***:***REMOVED***ctx.startOffset;
***REMOVED******REMOVED***return***REMOVED***`${msg}

${(scope***REMOVED***||***REMOVED***ctx.descriptor).filename}
${shared.generateCodeFrame(
***REMOVED******REMOVED******REMOVED******REMOVED***(scope***REMOVED***||***REMOVED***ctx.descriptor).source,
***REMOVED******REMOVED******REMOVED******REMOVED***node.start***REMOVED***+***REMOVED***offset,
***REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***+***REMOVED***offset
***REMOVED******REMOVED***)}`;
}
function***REMOVED***resolveParserPlugins(lang,***REMOVED***userPlugins,***REMOVED***dts***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***plugins***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(!userPlugins***REMOVED***||***REMOVED***!userPlugins.some(
***REMOVED******REMOVED******REMOVED******REMOVED***(p)***REMOVED***=>***REMOVED***p***REMOVED***===***REMOVED***"importAssertions"***REMOVED***||***REMOVED***p***REMOVED***===***REMOVED***"importAttributes"***REMOVED***||***REMOVED***shared.isArray(p)***REMOVED***&&***REMOVED***p[0]***REMOVED***===***REMOVED***"importAttributes"
***REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push("importAttributes");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(lang***REMOVED***===***REMOVED***"jsx"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"tsx"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"mtsx")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push("jsx");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(userPlugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***userPlugins***REMOVED***=***REMOVED***userPlugins.filter((p)***REMOVED***=>***REMOVED***p***REMOVED***!==***REMOVED***"jsx");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(lang***REMOVED***===***REMOVED***"ts"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"mts"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"tsx"***REMOVED***||***REMOVED***lang***REMOVED***===***REMOVED***"mtsx")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push(["typescript",***REMOVED***{***REMOVED***dts***REMOVED***}],***REMOVED***"explicitResourceManagement");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!userPlugins***REMOVED***||***REMOVED***!userPlugins.includes("decorators"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins.push("decorators-legacy");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(userPlugins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***plugins.push(...userPlugins);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***plugins;
}

function***REMOVED***rewriteDefault(input,***REMOVED***as,***REMOVED***parserPlugins)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***parser$2.parse(input,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"module",
***REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***resolveParserPlugins("js",***REMOVED***parserPlugins)
***REMOVED******REMOVED***}).program.body;
***REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***new***REMOVED***MagicString(input);
***REMOVED******REMOVED***rewriteDefaultAST(ast,***REMOVED***s,***REMOVED***as);
***REMOVED******REMOVED***return***REMOVED***s.toString();
}
function***REMOVED***rewriteDefaultAST(ast,***REMOVED***s,***REMOVED***as)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!hasDefaultExport(ast))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***s.append(`
const***REMOVED***${as}***REMOVED***=***REMOVED***{}`);
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ast.forEach((node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declaration.type***REMOVED***===***REMOVED***"ClassDeclaration"***REMOVED***&&***REMOVED***node.declaration.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***node.declaration.decorators***REMOVED***&&***REMOVED***node.declaration.decorators.length***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***node.declaration.decorators[node.declaration.decorators.length***REMOVED***-***REMOVED***1].end***REMOVED***:***REMOVED***node.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.overwrite(start,***REMOVED***node.declaration.id.start,***REMOVED***`***REMOVED***class***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.append(`
const***REMOVED***${as}***REMOVED***=***REMOVED***${node.declaration.id.name}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.overwrite(node.start,***REMOVED***node.declaration.start,***REMOVED***`const***REMOVED***${as}***REMOVED***=***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.type***REMOVED***===***REMOVED***"ExportSpecifier"***REMOVED***&&***REMOVED***specifier.exported.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***specifier.exported.name***REMOVED***===***REMOVED***"default")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(specifier.local.name***REMOVED***===***REMOVED***"default")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.prepend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`import***REMOVED***{***REMOVED***default***REMOVED***as***REMOVED***__VUE_DEFAULT__***REMOVED***}***REMOVED***from***REMOVED***'${node.source.value}'
`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end2***REMOVED***=***REMOVED***specifierEnd(s,***REMOVED***specifier.local.end,***REMOVED***node.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.remove(specifier.start,***REMOVED***end2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.append(`
const***REMOVED***${as}***REMOVED***=***REMOVED***__VUE_DEFAULT__`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.prepend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`import***REMOVED***{***REMOVED***${s.slice(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***as***REMOVED***__VUE_DEFAULT__***REMOVED***}***REMOVED***from***REMOVED***'${node.source.value}'
`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end2***REMOVED***=***REMOVED***specifierEnd(s,***REMOVED***specifier.exported.end,***REMOVED***node.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.remove(specifier.start,***REMOVED***end2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.append(`
const***REMOVED***${as}***REMOVED***=***REMOVED***__VUE_DEFAULT__`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***specifierEnd(s,***REMOVED***specifier.end,***REMOVED***node.end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.remove(specifier.start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s.append(`
const***REMOVED***${as}***REMOVED***=***REMOVED***${specifier.local.name}`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
function***REMOVED***hasDefaultExport(ast)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***stmt***REMOVED***of***REMOVED***ast)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***stmt.specifiers.some(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(spec)***REMOVED***=>***REMOVED***spec.exported.name***REMOVED***===***REMOVED***"default"
***REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***specifierEnd(s,***REMOVED***end,***REMOVED***nodeEnd)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***hasCommas***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***oldEnd***REMOVED***=***REMOVED***end;
***REMOVED******REMOVED***while***REMOVED***(end***REMOVED***<***REMOVED***nodeEnd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/\s/.test(s.slice(end,***REMOVED***end***REMOVED***+***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end++;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(s.slice(end,***REMOVED***end***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***",")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasCommas***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(s.slice(end,***REMOVED***end***REMOVED***+***REMOVED***1)***REMOVED***===***REMOVED***"}")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***hasCommas***REMOVED***?***REMOVED***end***REMOVED***:***REMOVED***oldEnd;
}

const***REMOVED***normalScriptDefaultVar***REMOVED***=***REMOVED***`__default__`;
function***REMOVED***processNormalScript(ctx,***REMOVED***scopeId)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***const***REMOVED***script***REMOVED***=***REMOVED***ctx.descriptor.script;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***content***REMOVED***=***REMOVED***script.content;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***map***REMOVED***=***REMOVED***script.map;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptAst***REMOVED***=***REMOVED***ctx.scriptAst;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bindings***REMOVED***=***REMOVED***analyzeScriptBindings(scriptAst.body);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***cssVars***REMOVED***}***REMOVED***=***REMOVED***ctx.descriptor;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***genDefaultAs,***REMOVED***isProd***REMOVED***}***REMOVED***=***REMOVED***ctx.options;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cssVars.length***REMOVED***||***REMOVED***genDefaultAs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultVar***REMOVED***=***REMOVED***genDefaultAs***REMOVED***||***REMOVED***normalScriptDefaultVar;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***new***REMOVED***MagicString(content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rewriteDefaultAST(scriptAst.body,***REMOVED***s,***REMOVED***defaultVar);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***=***REMOVED***s.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cssVars.length***REMOVED***&&***REMOVED***!((_a***REMOVED***=***REMOVED***ctx.options.templateOptions)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.ssr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***+=***REMOVED***genNormalScriptCssVarsCode(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cssVars,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scopeId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!!isProd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultVar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!genDefaultAs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content***REMOVED***+=***REMOVED***`
export***REMOVED***default***REMOVED***${defaultVar}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...script,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***content,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***map,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptAst:***REMOVED***scriptAst.body
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***script;
***REMOVED******REMOVED***}
}

const***REMOVED***balanced***REMOVED***=***REMOVED***(a,***REMOVED***b,***REMOVED***str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ma***REMOVED***=***REMOVED***a***REMOVED***instanceof***REMOVED***RegExp***REMOVED***?***REMOVED***maybeMatch(a,***REMOVED***str)***REMOVED***:***REMOVED***a;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mb***REMOVED***=***REMOVED***b***REMOVED***instanceof***REMOVED***RegExp***REMOVED***?***REMOVED***maybeMatch(b,***REMOVED***str)***REMOVED***:***REMOVED***b;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***r***REMOVED***=***REMOVED***ma***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***mb***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***range(ma,***REMOVED***mb,***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(r***REMOVED***&&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***r[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***r[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pre:***REMOVED***str.slice(0,***REMOVED***r[0]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***str.slice(r[0]***REMOVED***+***REMOVED***ma.length,***REMOVED***r[1]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***post:***REMOVED***str.slice(r[1]***REMOVED***+***REMOVED***mb.length),
***REMOVED******REMOVED******REMOVED******REMOVED***});
};
const***REMOVED***maybeMatch***REMOVED***=***REMOVED***(reg,***REMOVED***str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***str.match(reg);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***m***REMOVED***?***REMOVED***m[0]***REMOVED***:***REMOVED***null;
};
const***REMOVED***range***REMOVED***=***REMOVED***(a,***REMOVED***b,***REMOVED***str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***begs,***REMOVED***beg,***REMOVED***left,***REMOVED***right***REMOVED***=***REMOVED***undefined,***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ai***REMOVED***=***REMOVED***str.indexOf(a);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bi***REMOVED***=***REMOVED***str.indexOf(b,***REMOVED***ai***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***ai;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ai***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***bi***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(a***REMOVED***===***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[ai,***REMOVED***bi];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***begs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***str.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***>=***REMOVED***0***REMOVED***&&***REMOVED***!result)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***ai)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***begs.push(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ai***REMOVED***=***REMOVED***str.indexOf(a,***REMOVED***i***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(begs.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***r***REMOVED***=***REMOVED***begs.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(r***REMOVED***!==***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***[r,***REMOVED***bi];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***beg***REMOVED***=***REMOVED***begs.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(beg***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***beg***REMOVED***<***REMOVED***left)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left***REMOVED***=***REMOVED***beg;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***right***REMOVED***=***REMOVED***bi;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bi***REMOVED***=***REMOVED***str.indexOf(b,***REMOVED***i***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***ai***REMOVED***<***REMOVED***bi***REMOVED***&&***REMOVED***ai***REMOVED***>=***REMOVED***0***REMOVED***?***REMOVED***ai***REMOVED***:***REMOVED***bi;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(begs.length***REMOVED***&&***REMOVED***right***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***[left,***REMOVED***right];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
};

const***REMOVED***escSlash***REMOVED***=***REMOVED***'\0SLASH'***REMOVED***+***REMOVED***Math.random()***REMOVED***+***REMOVED***'\0';
const***REMOVED***escOpen***REMOVED***=***REMOVED***'\0OPEN'***REMOVED***+***REMOVED***Math.random()***REMOVED***+***REMOVED***'\0';
const***REMOVED***escClose***REMOVED***=***REMOVED***'\0CLOSE'***REMOVED***+***REMOVED***Math.random()***REMOVED***+***REMOVED***'\0';
const***REMOVED***escComma***REMOVED***=***REMOVED***'\0COMMA'***REMOVED***+***REMOVED***Math.random()***REMOVED***+***REMOVED***'\0';
const***REMOVED***escPeriod***REMOVED***=***REMOVED***'\0PERIOD'***REMOVED***+***REMOVED***Math.random()***REMOVED***+***REMOVED***'\0';
const***REMOVED***escSlashPattern***REMOVED***=***REMOVED***new***REMOVED***RegExp(escSlash,***REMOVED***'g');
const***REMOVED***escOpenPattern***REMOVED***=***REMOVED***new***REMOVED***RegExp(escOpen,***REMOVED***'g');
const***REMOVED***escClosePattern***REMOVED***=***REMOVED***new***REMOVED***RegExp(escClose,***REMOVED***'g');
const***REMOVED***escCommaPattern***REMOVED***=***REMOVED***new***REMOVED***RegExp(escComma,***REMOVED***'g');
const***REMOVED***escPeriodPattern***REMOVED***=***REMOVED***new***REMOVED***RegExp(escPeriod,***REMOVED***'g');
const***REMOVED***slashPattern***REMOVED***=***REMOVED***/\\\\/g;
const***REMOVED***openPattern***REMOVED***=***REMOVED***/\\{/g;
const***REMOVED***closePattern***REMOVED***=***REMOVED***/\\}/g;
const***REMOVED***commaPattern***REMOVED***=***REMOVED***/\\,/g;
const***REMOVED***periodPattern***REMOVED***=***REMOVED***/\\./g;
function***REMOVED***numeric(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isNaN(str)***REMOVED***?***REMOVED***parseInt(str,***REMOVED***10)***REMOVED***:***REMOVED***str.charCodeAt(0);
}
function***REMOVED***escapeBraces(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(slashPattern,***REMOVED***escSlash)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(openPattern,***REMOVED***escOpen)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(closePattern,***REMOVED***escClose)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(commaPattern,***REMOVED***escComma)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(periodPattern,***REMOVED***escPeriod);
}
function***REMOVED***unescapeBraces(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(escSlashPattern,***REMOVED***'\\')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(escOpenPattern,***REMOVED***'{')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(escClosePattern,***REMOVED***'}')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(escCommaPattern,***REMOVED***',')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.replace(escPeriodPattern,***REMOVED***'.');
}
/**
***REMOVED*******REMOVED***Basically***REMOVED***just***REMOVED***str.split(","),***REMOVED***but***REMOVED***handling***REMOVED***cases
***REMOVED*******REMOVED***where***REMOVED***we***REMOVED***have***REMOVED***nested***REMOVED***braced***REMOVED***sections,***REMOVED***which***REMOVED***should***REMOVED***be
***REMOVED*******REMOVED***treated***REMOVED***as***REMOVED***individual***REMOVED***members,***REMOVED***like***REMOVED***{a,{b,c},d}
***REMOVED****/
function***REMOVED***parseCommaParts(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[''];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***balanced('{',***REMOVED***'}',***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!m)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str.split(',');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***pre,***REMOVED***body,***REMOVED***post***REMOVED***}***REMOVED***=***REMOVED***m;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***pre.split(',');
***REMOVED******REMOVED******REMOVED******REMOVED***p[p.length***REMOVED***-***REMOVED***1]***REMOVED***+=***REMOVED***'{'***REMOVED***+***REMOVED***body***REMOVED***+***REMOVED***'}';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***postParts***REMOVED***=***REMOVED***parseCommaParts(post);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(post.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p[p.length***REMOVED***-***REMOVED***1]***REMOVED***+=***REMOVED***postParts.shift();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p.push.apply(p,***REMOVED***postParts);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parts.push.apply(parts,***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parts;
}
function***REMOVED***expand(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***I***REMOVED***don't***REMOVED***know***REMOVED***why***REMOVED***Bash***REMOVED***4.3***REMOVED***does***REMOVED***this,***REMOVED***but***REMOVED***it***REMOVED***does.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Anything***REMOVED***starting***REMOVED***with***REMOVED***{}***REMOVED***will***REMOVED***have***REMOVED***the***REMOVED***first***REMOVED***two***REMOVED***bytes***REMOVED***preserved
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED****only****REMOVED***at***REMOVED***the***REMOVED***top***REMOVED***level,***REMOVED***so***REMOVED***{},a}b***REMOVED***will***REMOVED***not***REMOVED***expand***REMOVED***to***REMOVED***anything,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***a{},b}c***REMOVED***will***REMOVED***be***REMOVED***expanded***REMOVED***to***REMOVED***[a}c,abc].
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***One***REMOVED***could***REMOVED***argue***REMOVED***that***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***bug***REMOVED***in***REMOVED***Bash,***REMOVED***but***REMOVED***since***REMOVED***the***REMOVED***goal***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***module***REMOVED***is***REMOVED***to***REMOVED***match***REMOVED***Bash's***REMOVED***rules,***REMOVED***we***REMOVED***escape***REMOVED***a***REMOVED***leading***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(str.slice(0,***REMOVED***2)***REMOVED***===***REMOVED***'{}')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***'\\{\\}'***REMOVED***+***REMOVED***str.slice(2);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expand_(escapeBraces(str),***REMOVED***true).map(unescapeBraces);
}
function***REMOVED***embrace(str)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'{'***REMOVED***+***REMOVED***str***REMOVED***+***REMOVED***'}';
}
function***REMOVED***isPadded(el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***/^-?0\d/.test(el);
}
function***REMOVED***lte(i,***REMOVED***y)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***<=***REMOVED***y;
}
function***REMOVED***gte(i,***REMOVED***y)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i***REMOVED***>=***REMOVED***y;
}
function***REMOVED***expand_(str,***REMOVED***isTop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/*****REMOVED***@type***REMOVED***{string[]}***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expansions***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***balanced('{',***REMOVED***'}',***REMOVED***str);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!m)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[str];
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***no***REMOVED***need***REMOVED***to***REMOVED***expand***REMOVED***pre,***REMOVED***since***REMOVED***it***REMOVED***is***REMOVED***guaranteed***REMOVED***to***REMOVED***be***REMOVED***free***REMOVED***of***REMOVED***brace-sets
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pre***REMOVED***=***REMOVED***m.pre;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***post***REMOVED***=***REMOVED***m.post.length***REMOVED***?***REMOVED***expand_(m.post,***REMOVED***false)***REMOVED***:***REMOVED***[''];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(/\$$/.test(m.pre))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***k***REMOVED***=***REMOVED***0;***REMOVED***k***REMOVED***<***REMOVED***post.length;***REMOVED***k++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expansion***REMOVED***=***REMOVED***pre***REMOVED***+***REMOVED***'{'***REMOVED***+***REMOVED***m.body***REMOVED***+***REMOVED***'}'***REMOVED***+***REMOVED***post[k];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expansions.push(expansion);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isNumericSequence***REMOVED***=***REMOVED***/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAlphaSequence***REMOVED***=***REMOVED***/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isSequence***REMOVED***=***REMOVED***isNumericSequence***REMOVED***||***REMOVED***isAlphaSequence;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isOptions***REMOVED***=***REMOVED***m.body.indexOf(',')***REMOVED***>=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isSequence***REMOVED***&&***REMOVED***!isOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{a},b}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.post.match(/,(?!,).*\}/))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***str***REMOVED***=***REMOVED***m.pre***REMOVED***+***REMOVED***'{'***REMOVED***+***REMOVED***m.body***REMOVED***+***REMOVED***escClose***REMOVED***+***REMOVED***m.post;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expand_(str);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[str];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSequence)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n***REMOVED***=***REMOVED***m.body.split(/\.\./);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n***REMOVED***=***REMOVED***parseCommaParts(m.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***n[0]***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***x{{a,b}}y***REMOVED***==>***REMOVED***x{a}y***REMOVED***x{b}y
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n***REMOVED***=***REMOVED***expand_(n[0],***REMOVED***false).map(embrace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//XXX***REMOVED***is***REMOVED***this***REMOVED***necessary?***REMOVED***Can't***REMOVED***seem***REMOVED***to***REMOVED***hit***REMOVED***it***REMOVED***in***REMOVED***tests.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***post.map(p***REMOVED***=>***REMOVED***m.pre***REMOVED***+***REMOVED***n[0]***REMOVED***+***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***at***REMOVED***this***REMOVED***point,***REMOVED***n***REMOVED***is***REMOVED***the***REMOVED***parts,***REMOVED***and***REMOVED***we***REMOVED***know***REMOVED***it's***REMOVED***not***REMOVED***a***REMOVED***comma***REMOVED***set
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***with***REMOVED***a***REMOVED***single***REMOVED***entry.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***N;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSequence***REMOVED***&&***REMOVED***n[0]***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***n[1]***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***x***REMOVED***=***REMOVED***numeric(n[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***y***REMOVED***=***REMOVED***numeric(n[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***width***REMOVED***=***REMOVED***Math.max(n[0].length,***REMOVED***n[1].length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***incr***REMOVED***=***REMOVED***n.length***REMOVED***===***REMOVED***3***REMOVED***&&***REMOVED***n[2]***REMOVED***!==***REMOVED***undefined***REMOVED***?***REMOVED***Math.abs(numeric(n[2]))***REMOVED***:***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***test***REMOVED***=***REMOVED***lte;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reverse***REMOVED***=***REMOVED***y***REMOVED***<***REMOVED***x;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(reverse)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***incr***REMOVED****=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***test***REMOVED***=***REMOVED***gte;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pad***REMOVED***=***REMOVED***n.some(isPadded);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***N***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***x;***REMOVED***test(i,***REMOVED***y);***REMOVED***i***REMOVED***+=***REMOVED***incr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAlphaSequence)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***String.fromCharCode(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***String(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pad)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***need***REMOVED***=***REMOVED***width***REMOVED***-***REMOVED***c.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(need***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***z***REMOVED***=***REMOVED***new***REMOVED***Array(need***REMOVED***+***REMOVED***1).join('0');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***'-'***REMOVED***+***REMOVED***z***REMOVED***+***REMOVED***c.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***z***REMOVED***+***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***N.push(c);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***N***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***n.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***N.push.apply(N,***REMOVED***expand_(n[j],***REMOVED***false));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***N.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***k***REMOVED***=***REMOVED***0;***REMOVED***k***REMOVED***<***REMOVED***post.length;***REMOVED***k++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expansion***REMOVED***=***REMOVED***pre***REMOVED***+***REMOVED***N[j]***REMOVED***+***REMOVED***post[k];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isTop***REMOVED***||***REMOVED***isSequence***REMOVED***||***REMOVED***expansion)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expansions.push(expansion);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expansions;
}

const***REMOVED***MAX_PATTERN_LENGTH***REMOVED***=***REMOVED***1024***REMOVED*******REMOVED***64;
const***REMOVED***assertValidPattern***REMOVED***=***REMOVED***(pattern)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***pattern***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('invalid***REMOVED***pattern');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pattern.length***REMOVED***>***REMOVED***MAX_PATTERN_LENGTH)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError('pattern***REMOVED***is***REMOVED***too***REMOVED***long');
***REMOVED******REMOVED******REMOVED******REMOVED***}
};

//***REMOVED***translate***REMOVED***the***REMOVED***various***REMOVED***posix***REMOVED***character***REMOVED***classes***REMOVED***into***REMOVED***unicode***REMOVED***properties
//***REMOVED***this***REMOVED***works***REMOVED***across***REMOVED***all***REMOVED***unicode***REMOVED***locales
//***REMOVED***{***REMOVED***<posix***REMOVED***class>:***REMOVED***[<translation>,***REMOVED***/u***REMOVED***flag***REMOVED***required,***REMOVED***negated]
const***REMOVED***posixClasses***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***'[:alnum:]':***REMOVED***['\\p{L}\\p{Nl}\\p{Nd}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:alpha:]':***REMOVED***['\\p{L}\\p{Nl}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:ascii:]':***REMOVED***['\\x'***REMOVED***+***REMOVED***'00-\\x'***REMOVED***+***REMOVED***'7f',***REMOVED***false],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:blank:]':***REMOVED***['\\p{Zs}\\t',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:cntrl:]':***REMOVED***['\\p{Cc}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:digit:]':***REMOVED***['\\p{Nd}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:graph:]':***REMOVED***['\\p{Z}\\p{C}',***REMOVED***true,***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:lower:]':***REMOVED***['\\p{Ll}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:print:]':***REMOVED***['\\p{C}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:punct:]':***REMOVED***['\\p{P}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:space:]':***REMOVED***['\\p{Z}\\t\\r\\n\\v\\f',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:upper:]':***REMOVED***['\\p{Lu}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:word:]':***REMOVED***['\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}',***REMOVED***true],
***REMOVED******REMOVED******REMOVED******REMOVED***'[:xdigit:]':***REMOVED***['A-Fa-f0-9',***REMOVED***false],
};
//***REMOVED***only***REMOVED***need***REMOVED***to***REMOVED***escape***REMOVED***a***REMOVED***few***REMOVED***things***REMOVED***inside***REMOVED***of***REMOVED***brace***REMOVED***expressions
//***REMOVED***escapes:***REMOVED***[***REMOVED***\***REMOVED***]***REMOVED***-
const***REMOVED***braceEscape***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***s.replace(/[[\]\\-]/g,***REMOVED***'\\$&');
//***REMOVED***escape***REMOVED***all***REMOVED***regexp***REMOVED***magic***REMOVED***characters
const***REMOVED***regexpEscape***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,***REMOVED***'\\$&');
//***REMOVED***everything***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***escaped,***REMOVED***we***REMOVED***just***REMOVED***have***REMOVED***to***REMOVED***join
const***REMOVED***rangesToString***REMOVED***=***REMOVED***(ranges)***REMOVED***=>***REMOVED***ranges.join('');
//***REMOVED***takes***REMOVED***a***REMOVED***glob***REMOVED***string***REMOVED***at***REMOVED***a***REMOVED***posix***REMOVED***brace***REMOVED***expression,***REMOVED***and***REMOVED***returns
//***REMOVED***an***REMOVED***equivalent***REMOVED***regular***REMOVED***expression***REMOVED***source,***REMOVED***and***REMOVED***boolean***REMOVED***indicating
//***REMOVED***whether***REMOVED***the***REMOVED***/u***REMOVED***flag***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***applied,***REMOVED***and***REMOVED***the***REMOVED***number***REMOVED***of***REMOVED***chars
//***REMOVED***consumed***REMOVED***to***REMOVED***parse***REMOVED***the***REMOVED***character***REMOVED***class.
//***REMOVED***This***REMOVED***also***REMOVED***removes***REMOVED***out***REMOVED***of***REMOVED***order***REMOVED***ranges,***REMOVED***and***REMOVED***returns***REMOVED***($.)***REMOVED***if***REMOVED***the
//***REMOVED***entire***REMOVED***class***REMOVED***just***REMOVED***no***REMOVED***good.
const***REMOVED***parseClass***REMOVED***=***REMOVED***(glob,***REMOVED***position)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pos***REMOVED***=***REMOVED***position;
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(glob.charAt(pos)***REMOVED***!==***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('not***REMOVED***in***REMOVED***a***REMOVED***brace***REMOVED***expression');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ranges***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***negs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***pos***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***sawStart***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***uflag***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***escaping***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***negate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***endPos***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rangeStart***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED***WHILE:***REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***glob.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***glob.charAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((c***REMOVED***===***REMOVED***'!'***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***'^')***REMOVED***&&***REMOVED***i***REMOVED***===***REMOVED***pos***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negate***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***']'***REMOVED***&&***REMOVED***sawStart***REMOVED***&&***REMOVED***!escaping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endPos***REMOVED***=***REMOVED***i***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sawStart***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!escaping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***escaped***REMOVED***\***REMOVED***char,***REMOVED***fall***REMOVED***through***REMOVED***and***REMOVED***treat***REMOVED***like***REMOVED***normal***REMOVED***char
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'['***REMOVED***&&***REMOVED***!escaping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***either***REMOVED***a***REMOVED***posix***REMOVED***class,***REMOVED***a***REMOVED***collation***REMOVED***equivalent,***REMOVED***or***REMOVED***just***REMOVED***a***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[cls,***REMOVED***[unip,***REMOVED***u,***REMOVED***neg]]***REMOVED***of***REMOVED***Object.entries(posixClasses))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(glob.startsWith(cls,***REMOVED***i))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***invalid,***REMOVED***[a-[]***REMOVED***is***REMOVED***fine,***REMOVED***but***REMOVED***not***REMOVED***[a-[:alpha]]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rangeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***['$.',***REMOVED***false,***REMOVED***glob.length***REMOVED***-***REMOVED***pos,***REMOVED***true];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***cls.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(neg)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negs.push(unip);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(unip);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***uflag***REMOVED***=***REMOVED***uflag***REMOVED***||***REMOVED***u;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue***REMOVED***WHILE;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***now***REMOVED***it's***REMOVED***just***REMOVED***a***REMOVED***normal***REMOVED***character,***REMOVED***effectively
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rangeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***throw***REMOVED***this***REMOVED***range***REMOVED***away***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***valid,***REMOVED***but***REMOVED***others
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***still***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***>***REMOVED***rangeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(braceEscape(rangeStart)***REMOVED***+***REMOVED***'-'***REMOVED***+***REMOVED***braceEscape(c));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***rangeStart)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(braceEscape(c));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rangeStart***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***now***REMOVED***might***REMOVED***be***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***a***REMOVED***range.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***be***REMOVED***either***REMOVED***c-d***REMOVED***or***REMOVED***c-]***REMOVED***or***REMOVED***c<more...>]***REMOVED***or***REMOVED***c]***REMOVED***at***REMOVED***this***REMOVED***point
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(glob.startsWith('-]',***REMOVED***i***REMOVED***+***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(braceEscape(c***REMOVED***+***REMOVED***'-'));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(glob.startsWith('-',***REMOVED***i***REMOVED***+***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rangeStart***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***a***REMOVED***range,***REMOVED***just***REMOVED***a***REMOVED***single***REMOVED***character
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.push(braceEscape(c));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(endPos***REMOVED***<***REMOVED***i)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***didn't***REMOVED***see***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***class,***REMOVED***not***REMOVED***a***REMOVED***valid***REMOVED***class,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***might***REMOVED***still***REMOVED***be***REMOVED***valid***REMOVED***as***REMOVED***a***REMOVED***literal***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***['',***REMOVED***false,***REMOVED***0,***REMOVED***false];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***got***REMOVED***no***REMOVED***ranges***REMOVED***and***REMOVED***no***REMOVED***negates,***REMOVED***then***REMOVED***we***REMOVED***have***REMOVED***a***REMOVED***range***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***cannot***REMOVED***possibly***REMOVED***match***REMOVED***anything,***REMOVED***and***REMOVED***that***REMOVED***poisons***REMOVED***the***REMOVED***whole***REMOVED***glob
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ranges.length***REMOVED***&&***REMOVED***!negs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***['$.',***REMOVED***false,***REMOVED***glob.length***REMOVED***-***REMOVED***pos,***REMOVED***true];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***got***REMOVED***one***REMOVED***positive***REMOVED***range,***REMOVED***and***REMOVED***it's***REMOVED***a***REMOVED***single***REMOVED***character,***REMOVED***then***REMOVED***that's
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***actually***REMOVED***a***REMOVED***magic***REMOVED***pattern,***REMOVED***it's***REMOVED***just***REMOVED***that***REMOVED***one***REMOVED***literal***REMOVED***character.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***should***REMOVED***not***REMOVED***treat***REMOVED***that***REMOVED***as***REMOVED***"magic",***REMOVED***we***REMOVED***should***REMOVED***just***REMOVED***return***REMOVED***the***REMOVED***literal
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***character.***REMOVED***[_]***REMOVED***is***REMOVED***a***REMOVED***perfectly***REMOVED***valid***REMOVED***way***REMOVED***to***REMOVED***escape***REMOVED***glob***REMOVED***magic***REMOVED***chars.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(negs.length***REMOVED***===***REMOVED***0***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ranges.length***REMOVED***===***REMOVED***1***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/^\\?.$/.test(ranges[0])***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!negate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***r***REMOVED***=***REMOVED***ranges[0].length***REMOVED***===***REMOVED***2***REMOVED***?***REMOVED***ranges[0].slice(-1)***REMOVED***:***REMOVED***ranges[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[regexpEscape(r),***REMOVED***false,***REMOVED***endPos***REMOVED***-***REMOVED***pos,***REMOVED***false];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sranges***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***(negate***REMOVED***?***REMOVED***'^'***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***rangesToString(ranges)***REMOVED***+***REMOVED***']';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***snegs***REMOVED***=***REMOVED***'['***REMOVED***+***REMOVED***(negate***REMOVED***?***REMOVED***''***REMOVED***:***REMOVED***'^')***REMOVED***+***REMOVED***rangesToString(negs)***REMOVED***+***REMOVED***']';
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***comb***REMOVED***=***REMOVED***ranges.length***REMOVED***&&***REMOVED***negs.length
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***'('***REMOVED***+***REMOVED***sranges***REMOVED***+***REMOVED***'|'***REMOVED***+***REMOVED***snegs***REMOVED***+***REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***ranges.length
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***sranges
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***snegs;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[comb,***REMOVED***uflag,***REMOVED***endPos***REMOVED***-***REMOVED***pos,***REMOVED***true];
};

/**
***REMOVED*******REMOVED***Un-escape***REMOVED***a***REMOVED***string***REMOVED***that***REMOVED***has***REMOVED***been***REMOVED***escaped***REMOVED***with***REMOVED***{@link***REMOVED***escape}.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***the***REMOVED***{@link***REMOVED***windowsPathsNoEscape}***REMOVED***option***REMOVED***is***REMOVED***used,***REMOVED***then***REMOVED***square-brace
***REMOVED*******REMOVED***escapes***REMOVED***are***REMOVED***removed,***REMOVED***but***REMOVED***not***REMOVED***backslash***REMOVED***escapes.***REMOVED******REMOVED***For***REMOVED***example,***REMOVED***it***REMOVED***will***REMOVED***turn
***REMOVED*******REMOVED***the***REMOVED***string***REMOVED***`'[*]'`***REMOVED***into***REMOVED***`*`,***REMOVED***but***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***turn***REMOVED***`'\\*'`***REMOVED***into***REMOVED***`'*'`,
***REMOVED*******REMOVED***becuase***REMOVED***`\`***REMOVED***is***REMOVED***a***REMOVED***path***REMOVED***separator***REMOVED***in***REMOVED***`windowsPathsNoEscape`***REMOVED***mode.
***REMOVED****
***REMOVED*******REMOVED***When***REMOVED***`windowsPathsNoEscape`***REMOVED***is***REMOVED***not***REMOVED***set,***REMOVED***then***REMOVED***both***REMOVED***brace***REMOVED***escapes***REMOVED***and
***REMOVED*******REMOVED***backslash***REMOVED***escapes***REMOVED***are***REMOVED***removed.
***REMOVED****
***REMOVED*******REMOVED***Slashes***REMOVED***(and***REMOVED***backslashes***REMOVED***in***REMOVED***`windowsPathsNoEscape`***REMOVED***mode)***REMOVED***cannot***REMOVED***be***REMOVED***escaped
***REMOVED*******REMOVED***or***REMOVED***unescaped.
***REMOVED****/
const***REMOVED***unescape***REMOVED***=***REMOVED***(s,***REMOVED***{***REMOVED***windowsPathsNoEscape***REMOVED***=***REMOVED***false,***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***windowsPathsNoEscape
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***s.replace(/\[([^\/\\])\]/g,***REMOVED***'$1')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***s.replace(/((?!\\).|^)\[([^\/\\])\]/g,***REMOVED***'$1$2').replace(/\\([^\/])/g,***REMOVED***'$1');
};

//***REMOVED***parse***REMOVED***a***REMOVED***single***REMOVED***path***REMOVED***portion
const***REMOVED***types***REMOVED***=***REMOVED***new***REMOVED***Set(['!',***REMOVED***'?',***REMOVED***'+',***REMOVED***'*',***REMOVED***'@']);
const***REMOVED***isExtglobType***REMOVED***=***REMOVED***(c)***REMOVED***=>***REMOVED***types.has(c);
//***REMOVED***Patterns***REMOVED***that***REMOVED***get***REMOVED***prepended***REMOVED***to***REMOVED***bind***REMOVED***to***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***either***REMOVED***the
//***REMOVED***entire***REMOVED***string,***REMOVED***or***REMOVED***just***REMOVED***a***REMOVED***single***REMOVED***path***REMOVED***portion,***REMOVED***to***REMOVED***prevent***REMOVED***dots
//***REMOVED***and/or***REMOVED***traversal***REMOVED***patterns,***REMOVED***when***REMOVED***needed.
//***REMOVED***Exts***REMOVED***don't***REMOVED***need***REMOVED***the***REMOVED***^***REMOVED***or***REMOVED***/***REMOVED***bit,***REMOVED***because***REMOVED***the***REMOVED***root***REMOVED***binds***REMOVED***that***REMOVED***already.
const***REMOVED***startNoTraversal***REMOVED***=***REMOVED***'(?!(?:^|/)\\.\\.?(?:$|/))';
const***REMOVED***startNoDot***REMOVED***=***REMOVED***'(?!\\.)';
//***REMOVED***characters***REMOVED***that***REMOVED***indicate***REMOVED***a***REMOVED***start***REMOVED***of***REMOVED***pattern***REMOVED***needs***REMOVED***the***REMOVED***"no***REMOVED***dots"***REMOVED***bit,
//***REMOVED***because***REMOVED***a***REMOVED***dot***REMOVED****might****REMOVED***be***REMOVED***matched.***REMOVED***(***REMOVED***is***REMOVED***not***REMOVED***in***REMOVED***the***REMOVED***list,***REMOVED***because***REMOVED***in
//***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***child***REMOVED***extglob,***REMOVED***it***REMOVED***will***REMOVED***handle***REMOVED***the***REMOVED***prevention***REMOVED***itself.
const***REMOVED***addPatternStart***REMOVED***=***REMOVED***new***REMOVED***Set(['[',***REMOVED***'.']);
//***REMOVED***cases***REMOVED***where***REMOVED***traversal***REMOVED***is***REMOVED***A-OK,***REMOVED***no***REMOVED***dot***REMOVED***prevention***REMOVED***needed
const***REMOVED***justDots***REMOVED***=***REMOVED***new***REMOVED***Set(['..',***REMOVED***'.']);
const***REMOVED***reSpecials***REMOVED***=***REMOVED***new***REMOVED***Set('().*{}+?[]^$\\!');
const***REMOVED***regExpEscape$1***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,***REMOVED***'\\$&');
//***REMOVED***any***REMOVED***single***REMOVED***thing***REMOVED***other***REMOVED***than***REMOVED***/
const***REMOVED***qmark$1***REMOVED***=***REMOVED***'[^/]';
//***REMOVED*******REMOVED***=>***REMOVED***any***REMOVED***number***REMOVED***of***REMOVED***characters
const***REMOVED***star$1***REMOVED***=***REMOVED***qmark$1***REMOVED***+***REMOVED***'*?';
//***REMOVED***use***REMOVED***+***REMOVED***when***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***ensure***REMOVED***that***REMOVED****something****REMOVED***matches,***REMOVED***because***REMOVED***the***REMOVED*******REMOVED***is
//***REMOVED***the***REMOVED***only***REMOVED***thing***REMOVED***in***REMOVED***the***REMOVED***path***REMOVED***portion.
const***REMOVED***starNoEmpty***REMOVED***=***REMOVED***qmark$1***REMOVED***+***REMOVED***'+?';
//***REMOVED***remove***REMOVED***the***REMOVED***\***REMOVED***chars***REMOVED***that***REMOVED***we***REMOVED***added***REMOVED***if***REMOVED***we***REMOVED***end***REMOVED***up***REMOVED***doing***REMOVED***a***REMOVED***nonmagic***REMOVED***compare
//***REMOVED***const***REMOVED***deslash***REMOVED***=***REMOVED***(s:***REMOVED***string)***REMOVED***=>***REMOVED***s.replace(/\\(.)/g,***REMOVED***'$1')
class***REMOVED***AST***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***#root;
***REMOVED******REMOVED******REMOVED******REMOVED***#hasMagic;
***REMOVED******REMOVED******REMOVED******REMOVED***#uflag***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***#parts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***#parent;
***REMOVED******REMOVED******REMOVED******REMOVED***#parentIndex;
***REMOVED******REMOVED******REMOVED******REMOVED***#negs;
***REMOVED******REMOVED******REMOVED******REMOVED***#filledNegs***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***#options;
***REMOVED******REMOVED******REMOVED******REMOVED***#toString;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***to***REMOVED***true***REMOVED***if***REMOVED***it's***REMOVED***an***REMOVED***extglob***REMOVED***with***REMOVED***no***REMOVED***children
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(which***REMOVED***really***REMOVED***means***REMOVED***one***REMOVED***child***REMOVED***of***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED***#emptyExt***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(type,***REMOVED***parent,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***extglobs***REMOVED***are***REMOVED***inherently***REMOVED***magical
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasMagic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#parent***REMOVED***=***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#root***REMOVED***=***REMOVED***this.#parent***REMOVED***?***REMOVED***this.#parent.#root***REMOVED***:***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#options***REMOVED***=***REMOVED***this.#root***REMOVED***===***REMOVED***this***REMOVED***?***REMOVED***options***REMOVED***:***REMOVED***this.#root.#options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#negs***REMOVED***=***REMOVED***this.#root***REMOVED***===***REMOVED***this***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***this.#root.#negs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***'!'***REMOVED***&&***REMOVED***!this.#root.#filledNegs)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#negs.push(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#parentIndex***REMOVED***=***REMOVED***this.#parent***REMOVED***?***REMOVED***this.#parent.#parts.length***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***hasMagic()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#hasMagic***REMOVED***!==***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#hasMagic;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***p***REMOVED***of***REMOVED***this.#parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***p***REMOVED***===***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.type***REMOVED***||***REMOVED***p.hasMagic)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.#hasMagic***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***note:***REMOVED***will***REMOVED***be***REMOVED***undefined***REMOVED***until***REMOVED***we***REMOVED***generate***REMOVED***the***REMOVED***regexp***REMOVED***src***REMOVED***and***REMOVED***find***REMOVED***out
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#hasMagic;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***reconstructs***REMOVED***the***REMOVED***pattern
***REMOVED******REMOVED******REMOVED******REMOVED***toString()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#toString***REMOVED***!==***REMOVED***undefined)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#toString;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.#toString***REMOVED***=***REMOVED***this.#parts.map(p***REMOVED***=>***REMOVED***String(p)).join(''));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(this.#toString***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***+***REMOVED***'('***REMOVED***+***REMOVED***this.#parts.map(p***REMOVED***=>***REMOVED***String(p)).join('|')***REMOVED***+***REMOVED***')');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#fillNegs()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this***REMOVED***!==***REMOVED***this.#root)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('should***REMOVED***only***REMOVED***call***REMOVED***on***REMOVED***root');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#filledNegs)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***call***REMOVED***toString()***REMOVED***once***REMOVED***to***REMOVED***fill***REMOVED***this***REMOVED***out
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#filledNegs***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***((n***REMOVED***=***REMOVED***this.#negs.pop()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n.type***REMOVED***!==***REMOVED***'!')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***walk***REMOVED***up***REMOVED***the***REMOVED***tree,***REMOVED***appending***REMOVED***everthing***REMOVED***that***REMOVED***comes***REMOVED***AFTER***REMOVED***parentIndex
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***p***REMOVED***=***REMOVED***n;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***pp***REMOVED***=***REMOVED***p.#parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(pp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***p.#parentIndex***REMOVED***+***REMOVED***1;***REMOVED***!pp.type***REMOVED***&&***REMOVED***i***REMOVED***<***REMOVED***pp.#parts.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***part***REMOVED***of***REMOVED***n.#parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***part***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('string***REMOVED***part***REMOVED***in***REMOVED***extglob***REMOVED***AST??');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part.copyIn(pp.#parts[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p***REMOVED***=***REMOVED***pp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp***REMOVED***=***REMOVED***p.#parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***push(...parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***p***REMOVED***of***REMOVED***parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***===***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***p***REMOVED***!==***REMOVED***'string'***REMOVED***&&***REMOVED***!(p***REMOVED***instanceof***REMOVED***AST***REMOVED***&&***REMOVED***p.#parent***REMOVED***===***REMOVED***this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('invalid***REMOVED***part:***REMOVED***'***REMOVED***+***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#parts.push(p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***toJSON()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***this.#parts.slice().map(p***REMOVED***=>***REMOVED***(typeof***REMOVED***p***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***p***REMOVED***:***REMOVED***p.toJSON()))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[this.type,***REMOVED***...this.#parts.map(p***REMOVED***=>***REMOVED***p.toJSON())];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isStart()***REMOVED***&&***REMOVED***!this.type)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.unshift([]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isEnd()***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this***REMOVED***===***REMOVED***this.#root***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.#root.#filledNegs***REMOVED***&&***REMOVED***this.#parent?.type***REMOVED***===***REMOVED***'!')))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.push({});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ret;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isStart()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#root***REMOVED***===***REMOVED***this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***(this.type)***REMOVED***return***REMOVED***!!this.#parent?.isStart()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#parent?.isStart())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#parentIndex***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***everything***REMOVED***AHEAD***REMOVED***of***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***negation,***REMOVED***then***REMOVED***it's***REMOVED***still***REMOVED***the***REMOVED***"start"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***this.#parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this.#parentIndex;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pp***REMOVED***=***REMOVED***p.#parts[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(pp***REMOVED***instanceof***REMOVED***AST***REMOVED***&&***REMOVED***pp.type***REMOVED***===***REMOVED***'!'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isEnd()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#root***REMOVED***===***REMOVED***this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#parent?.type***REMOVED***===***REMOVED***'!')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.#parent?.isEnd())
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.type)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#parent?.isEnd();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***not***REMOVED***root,***REMOVED***it'll***REMOVED***always***REMOVED***have***REMOVED***a***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pl***REMOVED***=***REMOVED***this.#parent***REMOVED***?***REMOVED***this.#parent.#parts.length***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#parentIndex***REMOVED***===***REMOVED***pl***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***copyIn(part)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***part***REMOVED***===***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.push(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.push(part.clone(this));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***clone(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***new***REMOVED***AST(this.type,***REMOVED***parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***p***REMOVED***of***REMOVED***this.#parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c.copyIn(p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***#parseAST(str,***REMOVED***ast,***REMOVED***pos,***REMOVED***opt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***escaping***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***inBrace***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***braceStart***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***braceNeg***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ast.type***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***outside***REMOVED***of***REMOVED***a***REMOVED***extglob,***REMOVED***append***REMOVED***until***REMOVED***we***REMOVED***find***REMOVED***a***REMOVED***start
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***pos;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***str.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***str.charAt(i++);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***still***REMOVED***accumulate***REMOVED***escapes***REMOVED***at***REMOVED***this***REMOVED***point,***REMOVED***but***REMOVED***we***REMOVED***do***REMOVED***ignore
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***starts***REMOVED***that***REMOVED***are***REMOVED***escaped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaping***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***!escaping;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inBrace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***braceStart***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'^'***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***'!')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceNeg***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***']'***REMOVED***&&***REMOVED***!(i***REMOVED***===***REMOVED***braceStart***REMOVED***+***REMOVED***2***REMOVED***&&***REMOVED***braceNeg))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inBrace***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inBrace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceStart***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceNeg***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!opt.noext***REMOVED***&&***REMOVED***isExtglobType(c)***REMOVED***&&***REMOVED***str.charAt(i)***REMOVED***===***REMOVED***'(')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.push(acc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ext***REMOVED***=***REMOVED***new***REMOVED***AST(c,***REMOVED***ast);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***AST.#parseAST(str,***REMOVED***ext,***REMOVED***i,***REMOVED***opt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.push(ext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.push(acc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***some***REMOVED***kind***REMOVED***of***REMOVED***extglob,***REMOVED***pos***REMOVED***is***REMOVED***at***REMOVED***the***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***find***REMOVED***the***REMOVED***next***REMOVED***|***REMOVED***or***REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***pos***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***part***REMOVED***=***REMOVED***new***REMOVED***AST(null,***REMOVED***ast);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<***REMOVED***str.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***str.charAt(i++);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***still***REMOVED***accumulate***REMOVED***escapes***REMOVED***at***REMOVED***this***REMOVED***point,***REMOVED***but***REMOVED***we***REMOVED***do***REMOVED***ignore
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***starts***REMOVED***that***REMOVED***are***REMOVED***escaped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaping***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***!escaping;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inBrace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***braceStart***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'^'***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***'!')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceNeg***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***']'***REMOVED***&&***REMOVED***!(i***REMOVED***===***REMOVED***braceStart***REMOVED***+***REMOVED***2***REMOVED***&&***REMOVED***braceNeg))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inBrace***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inBrace***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceStart***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceNeg***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isExtglobType(c)***REMOVED***&&***REMOVED***str.charAt(i)***REMOVED***===***REMOVED***'(')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part.push(acc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ext***REMOVED***=***REMOVED***new***REMOVED***AST(c,***REMOVED***part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part.push(ext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***=***REMOVED***AST.#parseAST(str,***REMOVED***ext,***REMOVED***i,***REMOVED***opt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'|')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part.push(acc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.push(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part***REMOVED***=***REMOVED***new***REMOVED***AST(null,***REMOVED***ast);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***')')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(acc***REMOVED***===***REMOVED***''***REMOVED***&&***REMOVED***ast.#parts.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.#emptyExt***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***part.push(acc);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.push(...parts,***REMOVED***part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***acc***REMOVED***+=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***unfinished***REMOVED***extglob
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***got***REMOVED***here,***REMOVED***it***REMOVED***was***REMOVED***a***REMOVED***malformed***REMOVED***extglob!***REMOVED***not***REMOVED***an***REMOVED***extglob,***REMOVED***but
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***maybe***REMOVED***something***REMOVED***else***REMOVED***in***REMOVED***there.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.type***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.#hasMagic***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast.#parts***REMOVED***=***REMOVED***[str.substring(pos***REMOVED***-***REMOVED***1)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***fromGlob(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***new***REMOVED***AST(null,***REMOVED***undefined,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***AST.#parseAST(pattern,***REMOVED***ast,***REMOVED***0,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ast;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***returns***REMOVED***the***REMOVED***regular***REMOVED***expression***REMOVED***if***REMOVED***there's***REMOVED***magic,***REMOVED***or***REMOVED***the***REMOVED***unescaped
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***string***REMOVED***if***REMOVED***not.
***REMOVED******REMOVED******REMOVED******REMOVED***toMMPattern()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***called***REMOVED***on***REMOVED***root
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this***REMOVED***!==***REMOVED***this.#root)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#root.toMMPattern();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***glob***REMOVED***=***REMOVED***this.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[re,***REMOVED***body,***REMOVED***hasMagic,***REMOVED***uflag]***REMOVED***=***REMOVED***this.toRegExpSource();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we're***REMOVED***in***REMOVED***nocase***REMOVED***mode,***REMOVED***and***REMOVED***not***REMOVED***nocaseMagicOnly,***REMOVED***then***REMOVED***we***REMOVED***do
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***still***REMOVED***need***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***to***REMOVED***case-insensitively
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***match***REMOVED***capital/lowercase***REMOVED***characters.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***anyMagic***REMOVED***=***REMOVED***hasMagic***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasMagic***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.#options.nocase***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!this.#options.nocaseMagicOnly***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***glob.toUpperCase()***REMOVED***!==***REMOVED***glob.toLowerCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!anyMagic)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***body;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***(this.#options.nocase***REMOVED***?***REMOVED***'i'***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***(uflag***REMOVED***?***REMOVED***'u'***REMOVED***:***REMOVED***'');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(new***REMOVED***RegExp(`^${re}$`,***REMOVED***flags),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_src:***REMOVED***re,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_glob:***REMOVED***glob,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***options()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#options;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***returns***REMOVED***the***REMOVED***string***REMOVED***match,***REMOVED***the***REMOVED***regexp***REMOVED***source,***REMOVED***whether***REMOVED***there's***REMOVED***magic
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***the***REMOVED***regexp***REMOVED***(so***REMOVED***a***REMOVED***regular***REMOVED***expression***REMOVED***is***REMOVED***required)***REMOVED***and***REMOVED***whether***REMOVED***or
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***the***REMOVED***uflag***REMOVED***is***REMOVED***needed***REMOVED***for***REMOVED***the***REMOVED***regular***REMOVED***expression***REMOVED***(for***REMOVED***posix***REMOVED***classes)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO:***REMOVED***instead***REMOVED***of***REMOVED***injecting***REMOVED***the***REMOVED***start/end***REMOVED***at***REMOVED***this***REMOVED***point,***REMOVED***just***REMOVED***return
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***BODY***REMOVED***of***REMOVED***the***REMOVED***regexp,***REMOVED***along***REMOVED***with***REMOVED***the***REMOVED***start/end***REMOVED***portions***REMOVED***suitable
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***binding***REMOVED***the***REMOVED***start/end***REMOVED***in***REMOVED***either***REMOVED***a***REMOVED***joined***REMOVED***full-path***REMOVED***makeRe***REMOVED***context
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(where***REMOVED***we***REMOVED***bind***REMOVED***to***REMOVED***(^|/),***REMOVED***or***REMOVED***a***REMOVED***standalone***REMOVED***matchPart***REMOVED***context***REMOVED***(where
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***we***REMOVED***bind***REMOVED***to***REMOVED***^,***REMOVED***and***REMOVED***not***REMOVED***/).***REMOVED******REMOVED***Otherwise***REMOVED***slashes***REMOVED***get***REMOVED***duped!
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***part-matching***REMOVED***mode,***REMOVED***the***REMOVED***start***REMOVED***is:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***not***REMOVED***isStart:***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***traversal***REMOVED***possible,***REMOVED***but***REMOVED***not***REMOVED***allowed:***REMOVED***^(?!\.\.?$)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***allowed***REMOVED***or***REMOVED***not***REMOVED***possible:***REMOVED***^
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***possible***REMOVED***and***REMOVED***not***REMOVED***allowed:***REMOVED***^(?!\.)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***end***REMOVED***is:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***not***REMOVED***isEnd():***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***else:***REMOVED***$
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***full-path***REMOVED***matching***REMOVED***mode,***REMOVED***we***REMOVED***put***REMOVED***the***REMOVED***slash***REMOVED***at***REMOVED***the***REMOVED***START***REMOVED***of***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pattern,***REMOVED***so***REMOVED***start***REMOVED***is:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***first***REMOVED***pattern:***REMOVED***same***REMOVED***as***REMOVED***part-matching***REMOVED***mode
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***not***REMOVED***isStart():***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***traversal***REMOVED***possible,***REMOVED***but***REMOVED***not***REMOVED***allowed:***REMOVED***/(?!\.\.?(?:$|/))
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***allowed***REMOVED***or***REMOVED***not***REMOVED***possible:***REMOVED***/
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***possible***REMOVED***and***REMOVED***not***REMOVED***allowed:***REMOVED***/(?!\.)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***end***REMOVED***is:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***last***REMOVED***pattern,***REMOVED***same***REMOVED***as***REMOVED***part-matching***REMOVED***mode
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***else***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Always***REMOVED***put***REMOVED***the***REMOVED***(?:$|/)***REMOVED***on***REMOVED***negated***REMOVED***tails,***REMOVED***though,***REMOVED***because***REMOVED***that***REMOVED***has***REMOVED***to***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***there***REMOVED***to***REMOVED***bind***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***negated***REMOVED***pattern***REMOVED***portion,***REMOVED***and***REMOVED***it's***REMOVED***easier***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***stick***REMOVED***it***REMOVED***in***REMOVED***now***REMOVED***rather***REMOVED***than***REMOVED***try***REMOVED***to***REMOVED***inject***REMOVED***it***REMOVED***later***REMOVED***in***REMOVED***the***REMOVED***middle***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***pattern.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***can***REMOVED***just***REMOVED***always***REMOVED***return***REMOVED***the***REMOVED***same***REMOVED***end,***REMOVED***and***REMOVED***leave***REMOVED***it***REMOVED***up***REMOVED***to***REMOVED***the***REMOVED***caller
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***know***REMOVED***whether***REMOVED***it's***REMOVED***going***REMOVED***to***REMOVED***be***REMOVED***used***REMOVED***joined***REMOVED***or***REMOVED***in***REMOVED***parts.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***And,***REMOVED***if***REMOVED***the***REMOVED***start***REMOVED***is***REMOVED***adjusted***REMOVED***slightly,***REMOVED***can***REMOVED***do***REMOVED***the***REMOVED***same***REMOVED***there:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***not***REMOVED***isStart:***REMOVED***nothing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***traversal***REMOVED***possible,***REMOVED***but***REMOVED***not***REMOVED***allowed:***REMOVED***(?:/|^)(?!\.\.?$)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***allowed***REMOVED***or***REMOVED***not***REMOVED***possible:***REMOVED***(?:/|^)
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***if***REMOVED***dots***REMOVED***possible***REMOVED***and***REMOVED***not***REMOVED***allowed:***REMOVED***(?:/|^)(?!\.)
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***But***REMOVED***it's***REMOVED***better***REMOVED***to***REMOVED***have***REMOVED***a***REMOVED***simpler***REMOVED***binding***REMOVED***without***REMOVED***a***REMOVED***conditional,***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***performance,***REMOVED***so***REMOVED***probably***REMOVED***better***REMOVED***to***REMOVED***return***REMOVED***both***REMOVED***start***REMOVED***options.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Then***REMOVED***the***REMOVED***caller***REMOVED***just***REMOVED***ignores***REMOVED***the***REMOVED***end***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***the***REMOVED***first***REMOVED***pattern,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***the***REMOVED***start***REMOVED***always***REMOVED***gets***REMOVED***applied.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***But***REMOVED***that's***REMOVED***always***REMOVED***going***REMOVED***to***REMOVED***be***REMOVED***$***REMOVED***if***REMOVED***it's***REMOVED***the***REMOVED***ending***REMOVED***pattern,***REMOVED***or***REMOVED***nothing,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***the***REMOVED***caller***REMOVED***can***REMOVED***just***REMOVED***attach***REMOVED***$***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***pattern***REMOVED***when***REMOVED***building.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***So***REMOVED***the***REMOVED***todo***REMOVED***is:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***better***REMOVED***detect***REMOVED***what***REMOVED***kind***REMOVED***of***REMOVED***start***REMOVED***is***REMOVED***needed
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***return***REMOVED***both***REMOVED***flavors***REMOVED***of***REMOVED***starting***REMOVED***pattern
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***attach***REMOVED***$***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***pattern***REMOVED***when***REMOVED***creating***REMOVED***the***REMOVED***actual***REMOVED***RegExp
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ah,***REMOVED***but***REMOVED***wait,***REMOVED***no,***REMOVED***that***REMOVED***all***REMOVED***only***REMOVED***applies***REMOVED***to***REMOVED***the***REMOVED***root***REMOVED***when***REMOVED***the***REMOVED***first***REMOVED***pattern
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***is***REMOVED***not***REMOVED***an***REMOVED***extglob.***REMOVED***If***REMOVED***the***REMOVED***first***REMOVED***pattern***REMOVED***IS***REMOVED***an***REMOVED***extglob,***REMOVED***then***REMOVED***we***REMOVED***need***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***that***REMOVED***dot***REMOVED***prevention***REMOVED***biz***REMOVED***to***REMOVED***live***REMOVED***in***REMOVED***the***REMOVED***extglob***REMOVED***portions,***REMOVED***because***REMOVED***eg
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***+(*|.x*)***REMOVED***can***REMOVED***match***REMOVED***.xy***REMOVED***but***REMOVED***not***REMOVED***.yx.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***So,***REMOVED***return***REMOVED***the***REMOVED***two***REMOVED***flavors***REMOVED***if***REMOVED***it's***REMOVED***#root***REMOVED***and***REMOVED***the***REMOVED***first***REMOVED***child***REMOVED***is***REMOVED***not***REMOVED***an
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***AST,***REMOVED***otherwise***REMOVED***leave***REMOVED***it***REMOVED***to***REMOVED***the***REMOVED***child***REMOVED***AST***REMOVED***to***REMOVED***handle***REMOVED***it,***REMOVED***and***REMOVED***there,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***use***REMOVED***the***REMOVED***(?:^|/)***REMOVED***style***REMOVED***of***REMOVED***start***REMOVED***binding.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Even***REMOVED***simplified***REMOVED***further:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***Since***REMOVED***the***REMOVED***start***REMOVED***for***REMOVED***a***REMOVED***join***REMOVED***is***REMOVED***eg***REMOVED***/(?!\.)***REMOVED***and***REMOVED***the***REMOVED***start***REMOVED***for***REMOVED***a***REMOVED***part
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***is***REMOVED***^(?!\.),***REMOVED***we***REMOVED***can***REMOVED***just***REMOVED***prepend***REMOVED***(?!\.)***REMOVED***to***REMOVED***the***REMOVED***pattern***REMOVED***(either***REMOVED***root
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***or***REMOVED***start***REMOVED***or***REMOVED***whatever)***REMOVED***and***REMOVED***prepend***REMOVED***^***REMOVED***or***REMOVED***/***REMOVED***at***REMOVED***the***REMOVED***Regexp***REMOVED***construction.
***REMOVED******REMOVED******REMOVED******REMOVED***toRegExpSource(allowDot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dot***REMOVED***=***REMOVED***allowDot***REMOVED***??***REMOVED***!!this.#options.dot;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.#root***REMOVED***===***REMOVED***this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#fillNegs();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noEmpty***REMOVED***=***REMOVED***this.isStart()***REMOVED***&&***REMOVED***this.isEnd();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***src***REMOVED***=***REMOVED***this.#parts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(p***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[re,***REMOVED***_,***REMOVED***hasMagic,***REMOVED***uflag]***REMOVED***=***REMOVED***typeof***REMOVED***p***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***AST.#parseGlob(p,***REMOVED***this.#hasMagic,***REMOVED***noEmpty)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***p.toRegExpSource(allowDot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasMagic***REMOVED***=***REMOVED***this.#hasMagic***REMOVED***||***REMOVED***hasMagic;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#uflag***REMOVED***=***REMOVED***this.#uflag***REMOVED***||***REMOVED***uflag;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***re;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join('');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isStart())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***this.#parts[0]***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***is***REMOVED***the***REMOVED***string***REMOVED***that***REMOVED***will***REMOVED***match***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***the***REMOVED***pattern,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***protect***REMOVED***against***REMOVED***dots***REMOVED***and***REMOVED***such.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***'.'***REMOVED***and***REMOVED***'..'***REMOVED***cannot***REMOVED***match***REMOVED***unless***REMOVED***the***REMOVED***pattern***REMOVED***is***REMOVED***that***REMOVED***exactly,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***even***REMOVED***if***REMOVED***it***REMOVED***starts***REMOVED***with***REMOVED***.***REMOVED***or***REMOVED***dot:true***REMOVED***is***REMOVED***set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dotTravAllowed***REMOVED***=***REMOVED***this.#parts.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***justDots.has(this.#parts[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dotTravAllowed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aps***REMOVED***=***REMOVED***addPatternStart;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***if***REMOVED***we***REMOVED***have***REMOVED***a***REMOVED***possibility***REMOVED***of***REMOVED***matching***REMOVED***.***REMOVED***or***REMOVED***..,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***prevent***REMOVED***that.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needNoTrav***REMOVED***=***REMOVED***
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***dots***REMOVED***are***REMOVED***allowed,***REMOVED***and***REMOVED***the***REMOVED***pattern***REMOVED***starts***REMOVED***with***REMOVED***[***REMOVED***or***REMOVED***.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(dot***REMOVED***&&***REMOVED***aps.has(src.charAt(0)))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***pattern***REMOVED***starts***REMOVED***with***REMOVED***\.,***REMOVED***and***REMOVED***then***REMOVED***[***REMOVED***or***REMOVED***.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(src.startsWith('\\.')***REMOVED***&&***REMOVED***aps.has(src.charAt(2)))***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***pattern***REMOVED***starts***REMOVED***with***REMOVED***\.\.,***REMOVED***and***REMOVED***then***REMOVED***[***REMOVED***or***REMOVED***.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(src.startsWith('\\.\\.')***REMOVED***&&***REMOVED***aps.has(src.charAt(4)));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***no***REMOVED***need***REMOVED***to***REMOVED***prevent***REMOVED***dots***REMOVED***if***REMOVED***it***REMOVED***can't***REMOVED***match***REMOVED***a***REMOVED***dot,***REMOVED***or***REMOVED***if***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***sub-pattern***REMOVED***will***REMOVED***be***REMOVED***preventing***REMOVED***it***REMOVED***anyway.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needNoDot***REMOVED***=***REMOVED***!dot***REMOVED***&&***REMOVED***!allowDot***REMOVED***&&***REMOVED***aps.has(src.charAt(0));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***needNoTrav***REMOVED***?***REMOVED***startNoTraversal***REMOVED***:***REMOVED***needNoDot***REMOVED***?***REMOVED***startNoDot***REMOVED***:***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***append***REMOVED***the***REMOVED***"end***REMOVED***of***REMOVED***path***REMOVED***portion"***REMOVED***pattern***REMOVED***to***REMOVED***negation***REMOVED***tails
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***end***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isEnd()***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#root.#filledNegs***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#parent?.type***REMOVED***===***REMOVED***'!')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***'(?:$|\\/)';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***final***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***src***REMOVED***+***REMOVED***end;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***final,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescape(src),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.#hasMagic***REMOVED***=***REMOVED***!!this.#hasMagic),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#uflag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***need***REMOVED***to***REMOVED***calculate***REMOVED***the***REMOVED***body***REMOVED****twice****REMOVED***if***REMOVED***it's***REMOVED***a***REMOVED***repeat***REMOVED***pattern
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***at***REMOVED***the***REMOVED***start,***REMOVED***once***REMOVED***in***REMOVED***nodot***REMOVED***mode,***REMOVED***then***REMOVED***again***REMOVED***in***REMOVED***dot***REMOVED***mode,***REMOVED***so***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pattern***REMOVED***like***REMOVED****(?)***REMOVED***can***REMOVED***match***REMOVED***'x.y'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***repeated***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***'*'***REMOVED***||***REMOVED***this.type***REMOVED***===***REMOVED***'+';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***some***REMOVED***kind***REMOVED***of***REMOVED***extglob
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***'!'***REMOVED***?***REMOVED***'(?:(?!(?:'***REMOVED***:***REMOVED***'(?:';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***body***REMOVED***=***REMOVED***this.#partsToRegExp(dot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isStart()***REMOVED***&&***REMOVED***this.isEnd()***REMOVED***&&***REMOVED***!body***REMOVED***&&***REMOVED***this.type***REMOVED***!==***REMOVED***'!')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***invalid***REMOVED***extglob,***REMOVED***has***REMOVED***to***REMOVED***at***REMOVED***least***REMOVED***be***REMOVED****something****REMOVED***present,***REMOVED***if***REMOVED***it's
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***entire***REMOVED***path***REMOVED***portion.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***this.toString();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#parts***REMOVED***=***REMOVED***[s];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.type***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#hasMagic***REMOVED***=***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[s,***REMOVED***unescape(this.toString()),***REMOVED***false,***REMOVED***false];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***XXX***REMOVED***abstract***REMOVED***out***REMOVED***this***REMOVED***map***REMOVED***method
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bodyDotAllowed***REMOVED***=***REMOVED***!repeated***REMOVED***||***REMOVED***allowDot***REMOVED***||***REMOVED***dot***REMOVED***||***REMOVED***!startNoDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.#partsToRegExp(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bodyDotAllowed***REMOVED***===***REMOVED***body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bodyDotAllowed***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bodyDotAllowed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***body***REMOVED***=***REMOVED***`(?:${body})(?:${bodyDotAllowed})*?`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***an***REMOVED***empty***REMOVED***!()***REMOVED***is***REMOVED***exactly***REMOVED***equivalent***REMOVED***to***REMOVED***a***REMOVED***starNoEmpty
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***final***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.type***REMOVED***===***REMOVED***'!'***REMOVED***&&***REMOVED***this.#emptyExt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***final***REMOVED***=***REMOVED***(this.isStart()***REMOVED***&&***REMOVED***!dot***REMOVED***?***REMOVED***startNoDot***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***starNoEmpty;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***close***REMOVED***=***REMOVED***this.type***REMOVED***===***REMOVED***'!'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***//***REMOVED***!()***REMOVED***must***REMOVED***match***REMOVED***something,but***REMOVED***!(x)***REMOVED***can***REMOVED***match***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'))'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.isStart()***REMOVED***&&***REMOVED***!dot***REMOVED***&&***REMOVED***!allowDot***REMOVED***?***REMOVED***startNoDot***REMOVED***:***REMOVED***'')***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***star$1***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***'@'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***'?'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***')?'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***'+'***REMOVED***&&***REMOVED***bodyDotAllowed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***')'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***this.type***REMOVED***===***REMOVED***'*'***REMOVED***&&***REMOVED***bodyDotAllowed
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***`)?`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`)${this.type}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***final***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***body***REMOVED***+***REMOVED***close;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***final,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescape(body),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.#hasMagic***REMOVED***=***REMOVED***!!this.#hasMagic),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#uflag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***#partsToRegExp(dot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.#parts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(p***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***extglob***REMOVED***ASTs***REMOVED***should***REMOVED***only***REMOVED***contain***REMOVED***parent***REMOVED***ASTs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***p***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('string***REMOVED***type***REMOVED***in***REMOVED***extglob***REMOVED***ast??');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***ignore***REMOVED***hasMagic,***REMOVED***because***REMOVED***extglobs***REMOVED***are***REMOVED***already***REMOVED***always***REMOVED***magic
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[re,***REMOVED***_,***REMOVED***_hasMagic,***REMOVED***uflag]***REMOVED***=***REMOVED***p.toRegExpSource(dot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.#uflag***REMOVED***=***REMOVED***this.#uflag***REMOVED***||***REMOVED***uflag;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***re;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.filter(p***REMOVED***=>***REMOVED***!(this.isStart()***REMOVED***&&***REMOVED***this.isEnd())***REMOVED***||***REMOVED***!!p)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join('|');
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***#parseGlob(glob,***REMOVED***hasMagic,***REMOVED***noEmpty***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***escaping***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***re***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***uflag***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***glob.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***glob.charAt(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(escaping)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***(reSpecials.has(c)***REMOVED***?***REMOVED***'\\'***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'\\')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***glob.length***REMOVED***-***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***'\\\\';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaping***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'[')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[src,***REMOVED***needUflag,***REMOVED***consumed,***REMOVED***magic]***REMOVED***=***REMOVED***parseClass(glob,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(consumed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***src;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***uflag***REMOVED***=***REMOVED***uflag***REMOVED***||***REMOVED***needUflag;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i***REMOVED***+=***REMOVED***consumed***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasMagic***REMOVED***=***REMOVED***hasMagic***REMOVED***||***REMOVED***magic;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(noEmpty***REMOVED***&&***REMOVED***glob***REMOVED***===***REMOVED***'*')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***starNoEmpty;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***star$1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasMagic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c***REMOVED***===***REMOVED***'?')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***qmark$1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasMagic***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***+=***REMOVED***regExpEscape$1(c);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[re,***REMOVED***unescape(glob),***REMOVED***!!hasMagic,***REMOVED***uflag];
***REMOVED******REMOVED******REMOVED******REMOVED***}
}

/**
***REMOVED*******REMOVED***Escape***REMOVED***all***REMOVED***magic***REMOVED***characters***REMOVED***in***REMOVED***a***REMOVED***glob***REMOVED***pattern.
***REMOVED****
***REMOVED*******REMOVED***If***REMOVED***the***REMOVED***{@link***REMOVED***windowsPathsNoEscape***REMOVED***|***REMOVED***GlobOptions.windowsPathsNoEscape}
***REMOVED*******REMOVED***option***REMOVED***is***REMOVED***used,***REMOVED***then***REMOVED***characters***REMOVED***are***REMOVED***escaped***REMOVED***by***REMOVED***wrapping***REMOVED***in***REMOVED***`[]`,***REMOVED***because
***REMOVED*******REMOVED***a***REMOVED***magic***REMOVED***character***REMOVED***wrapped***REMOVED***in***REMOVED***a***REMOVED***character***REMOVED***class***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***satisfied***REMOVED***by
***REMOVED*******REMOVED***that***REMOVED***exact***REMOVED***character.***REMOVED******REMOVED***In***REMOVED***this***REMOVED***mode,***REMOVED***`\`***REMOVED***is***REMOVED***_not_***REMOVED***escaped,***REMOVED***because***REMOVED***it***REMOVED***is
***REMOVED*******REMOVED***not***REMOVED***interpreted***REMOVED***as***REMOVED***a***REMOVED***magic***REMOVED***character,***REMOVED***but***REMOVED***instead***REMOVED***as***REMOVED***a***REMOVED***path***REMOVED***separator.
***REMOVED****/
const***REMOVED***escape***REMOVED***=***REMOVED***(s,***REMOVED***{***REMOVED***windowsPathsNoEscape***REMOVED***=***REMOVED***false,***REMOVED***}***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***need***REMOVED***to***REMOVED***escape***REMOVED***+@!***REMOVED***because***REMOVED***we***REMOVED***escape***REMOVED***the***REMOVED***parens
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***that***REMOVED***make***REMOVED***those***REMOVED***magic,***REMOVED***and***REMOVED***escaping***REMOVED***!***REMOVED***as***REMOVED***[!]***REMOVED***isn't***REMOVED***valid,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***because***REMOVED***[!]]***REMOVED***is***REMOVED***a***REMOVED***valid***REMOVED***glob***REMOVED***class***REMOVED***meaning***REMOVED***not***REMOVED***']'.
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***windowsPathsNoEscape
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***s.replace(/[?*()[\]]/g,***REMOVED***'[$&]')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***s.replace(/[?*()[\]\\]/g,***REMOVED***'\\$&');
};

const***REMOVED***minimatch***REMOVED***=***REMOVED***(p,***REMOVED***pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***assertValidPattern(pattern);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***shortcut:***REMOVED***comments***REMOVED***match***REMOVED***nothing.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.nocomment***REMOVED***&&***REMOVED***pattern.charAt(0)***REMOVED***===***REMOVED***'#')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***Minimatch(pattern,***REMOVED***options).match(p);
};
//***REMOVED***Optimized***REMOVED***checking***REMOVED***for***REMOVED***the***REMOVED***most***REMOVED***common***REMOVED***glob***REMOVED***patterns.
const***REMOVED***starDotExtRE***REMOVED***=***REMOVED***/^\*+([^+@!?\*\[\(]*)$/;
const***REMOVED***starDotExtTest***REMOVED***=***REMOVED***(ext)***REMOVED***=>***REMOVED***(f)***REMOVED***=>***REMOVED***!f.startsWith('.')***REMOVED***&&***REMOVED***f.endsWith(ext);
const***REMOVED***starDotExtTestDot***REMOVED***=***REMOVED***(ext)***REMOVED***=>***REMOVED***(f)***REMOVED***=>***REMOVED***f.endsWith(ext);
const***REMOVED***starDotExtTestNocase***REMOVED***=***REMOVED***(ext)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***ext.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***!f.startsWith('.')***REMOVED***&&***REMOVED***f.toLowerCase().endsWith(ext);
};
const***REMOVED***starDotExtTestNocaseDot***REMOVED***=***REMOVED***(ext)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***ext.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***f.toLowerCase().endsWith(ext);
};
const***REMOVED***starDotStarRE***REMOVED***=***REMOVED***/^\*+\.\*+$/;
const***REMOVED***starDotStarTest***REMOVED***=***REMOVED***(f)***REMOVED***=>***REMOVED***!f.startsWith('.')***REMOVED***&&***REMOVED***f.includes('.');
const***REMOVED***starDotStarTestDot***REMOVED***=***REMOVED***(f)***REMOVED***=>***REMOVED***f***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'..'***REMOVED***&&***REMOVED***f.includes('.');
const***REMOVED***dotStarRE***REMOVED***=***REMOVED***/^\.\*+$/;
const***REMOVED***dotStarTest***REMOVED***=***REMOVED***(f)***REMOVED***=>***REMOVED***f***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'..'***REMOVED***&&***REMOVED***f.startsWith('.');
const***REMOVED***starRE***REMOVED***=***REMOVED***/^\*+$/;
const***REMOVED***starTest***REMOVED***=***REMOVED***(f)***REMOVED***=>***REMOVED***f.length***REMOVED***!==***REMOVED***0***REMOVED***&&***REMOVED***!f.startsWith('.');
const***REMOVED***starTestDot***REMOVED***=***REMOVED***(f)***REMOVED***=>***REMOVED***f.length***REMOVED***!==***REMOVED***0***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'..';
const***REMOVED***qmarksRE***REMOVED***=***REMOVED***/^\?+([^+@!?\*\[\(]*)?$/;
const***REMOVED***qmarksTestNocase***REMOVED***=***REMOVED***([$0,***REMOVED***ext***REMOVED***=***REMOVED***''])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noext***REMOVED***=***REMOVED***qmarksTestNoExt([$0]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ext)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noext;
***REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***ext.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***noext(f)***REMOVED***&&***REMOVED***f.toLowerCase().endsWith(ext);
};
const***REMOVED***qmarksTestNocaseDot***REMOVED***=***REMOVED***([$0,***REMOVED***ext***REMOVED***=***REMOVED***''])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noext***REMOVED***=***REMOVED***qmarksTestNoExtDot([$0]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ext)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noext;
***REMOVED******REMOVED******REMOVED******REMOVED***ext***REMOVED***=***REMOVED***ext.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***noext(f)***REMOVED***&&***REMOVED***f.toLowerCase().endsWith(ext);
};
const***REMOVED***qmarksTestDot***REMOVED***=***REMOVED***([$0,***REMOVED***ext***REMOVED***=***REMOVED***''])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noext***REMOVED***=***REMOVED***qmarksTestNoExtDot([$0]);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!ext***REMOVED***?***REMOVED***noext***REMOVED***:***REMOVED***(f)***REMOVED***=>***REMOVED***noext(f)***REMOVED***&&***REMOVED***f.endsWith(ext);
};
const***REMOVED***qmarksTest***REMOVED***=***REMOVED***([$0,***REMOVED***ext***REMOVED***=***REMOVED***''])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***noext***REMOVED***=***REMOVED***qmarksTestNoExt([$0]);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!ext***REMOVED***?***REMOVED***noext***REMOVED***:***REMOVED***(f)***REMOVED***=>***REMOVED***noext(f)***REMOVED***&&***REMOVED***f.endsWith(ext);
};
const***REMOVED***qmarksTestNoExt***REMOVED***=***REMOVED***([$0])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***$0.length;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***f.length***REMOVED***===***REMOVED***len***REMOVED***&&***REMOVED***!f.startsWith('.');
};
const***REMOVED***qmarksTestNoExtDot***REMOVED***=***REMOVED***([$0])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***$0.length;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(f)***REMOVED***=>***REMOVED***f.length***REMOVED***===***REMOVED***len***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***f***REMOVED***!==***REMOVED***'..';
};
/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
const***REMOVED***defaultPlatform***REMOVED***=***REMOVED***(typeof***REMOVED***process***REMOVED***===***REMOVED***'object'***REMOVED***&&***REMOVED***process
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***(typeof***REMOVED***process.env***REMOVED***===***REMOVED***'object'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.env.__MINIMATCH_TESTING_PLATFORM__)***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process.platform
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***'posix');
const***REMOVED***path***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***win32:***REMOVED***{***REMOVED***sep:***REMOVED***'\\'***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***posix:***REMOVED***{***REMOVED***sep:***REMOVED***'/'***REMOVED***},
};
/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
const***REMOVED***sep***REMOVED***=***REMOVED***defaultPlatform***REMOVED***===***REMOVED***'win32'***REMOVED***?***REMOVED***path.win32.sep***REMOVED***:***REMOVED***path.posix.sep;
minimatch.sep***REMOVED***=***REMOVED***sep;
const***REMOVED***GLOBSTAR***REMOVED***=***REMOVED***Symbol('globstar***REMOVED*****');
minimatch.GLOBSTAR***REMOVED***=***REMOVED***GLOBSTAR;
//***REMOVED***any***REMOVED***single***REMOVED***thing***REMOVED***other***REMOVED***than***REMOVED***/
//***REMOVED***don't***REMOVED***need***REMOVED***to***REMOVED***escape***REMOVED***/***REMOVED***when***REMOVED***using***REMOVED***new***REMOVED***RegExp()
const***REMOVED***qmark***REMOVED***=***REMOVED***'[^/]';
//***REMOVED*******REMOVED***=>***REMOVED***any***REMOVED***number***REMOVED***of***REMOVED***characters
const***REMOVED***star***REMOVED***=***REMOVED***qmark***REMOVED***+***REMOVED***'*?';
//***REMOVED********REMOVED***when***REMOVED***dots***REMOVED***are***REMOVED***allowed.***REMOVED******REMOVED***Anything***REMOVED***goes,***REMOVED***except***REMOVED***..***REMOVED***and***REMOVED***.
//***REMOVED***not***REMOVED***(^***REMOVED***or***REMOVED***/***REMOVED***followed***REMOVED***by***REMOVED***one***REMOVED***or***REMOVED***two***REMOVED***dots***REMOVED***followed***REMOVED***by***REMOVED***$***REMOVED***or***REMOVED***/),
//***REMOVED***followed***REMOVED***by***REMOVED***anything,***REMOVED***any***REMOVED***number***REMOVED***of***REMOVED***times.
const***REMOVED***twoStarDot***REMOVED***=***REMOVED***'(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?';
//***REMOVED***not***REMOVED***a***REMOVED***^***REMOVED***or***REMOVED***/***REMOVED***followed***REMOVED***by***REMOVED***a***REMOVED***dot,
//***REMOVED***followed***REMOVED***by***REMOVED***anything,***REMOVED***any***REMOVED***number***REMOVED***of***REMOVED***times.
const***REMOVED***twoStarNoDot***REMOVED***=***REMOVED***'(?:(?!(?:\\/|^)\\.).)*?';
const***REMOVED***filter***REMOVED***=***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***(p)***REMOVED***=>***REMOVED***minimatch(p,***REMOVED***pattern,***REMOVED***options);
minimatch.filter***REMOVED***=***REMOVED***filter;
const***REMOVED***ext***REMOVED***=***REMOVED***(a,***REMOVED***b***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***Object.assign({},***REMOVED***a,***REMOVED***b);
const***REMOVED***defaults***REMOVED***=***REMOVED***(def)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!def***REMOVED***||***REMOVED***typeof***REMOVED***def***REMOVED***!==***REMOVED***'object'***REMOVED***||***REMOVED***!Object.keys(def).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***minimatch;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***orig***REMOVED***=***REMOVED***minimatch;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***m***REMOVED***=***REMOVED***(p,***REMOVED***pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig(p,***REMOVED***pattern,***REMOVED***ext(def,***REMOVED***options));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.assign(m,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Minimatch:***REMOVED***class***REMOVED***Minimatch***REMOVED***extends***REMOVED***orig.Minimatch***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constructor(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(pattern,***REMOVED***ext(def,***REMOVED***options));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***defaults(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***orig.defaults(ext(def,***REMOVED***options)).Minimatch;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***AST:***REMOVED***class***REMOVED***AST***REMOVED***extends***REMOVED***orig.AST***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***constructor(type,***REMOVED***parent,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***super(type,***REMOVED***parent,***REMOVED***ext(def,***REMOVED***options));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***fromGlob(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***orig.AST.fromGlob(pattern,***REMOVED***ext(def,***REMOVED***options));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unescape:***REMOVED***(s,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.unescape(s,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escape:***REMOVED***(s,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.escape(s,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filter:***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.filter(pattern,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaults:***REMOVED***(options)***REMOVED***=>***REMOVED***orig.defaults(ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***makeRe:***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.makeRe(pattern,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***braceExpand:***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.braceExpand(pattern,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***match:***REMOVED***(list,***REMOVED***pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***orig.match(list,***REMOVED***pattern,***REMOVED***ext(def,***REMOVED***options)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sep:***REMOVED***orig.sep,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***GLOBSTAR:***REMOVED***GLOBSTAR,
***REMOVED******REMOVED******REMOVED******REMOVED***});
};
minimatch.defaults***REMOVED***=***REMOVED***defaults;
//***REMOVED***Brace***REMOVED***expansion:
//***REMOVED***a{b,c}d***REMOVED***->***REMOVED***abd***REMOVED***acd
//***REMOVED***a{b,}c***REMOVED***->***REMOVED***abc***REMOVED***ac
//***REMOVED***a{0..3}d***REMOVED***->***REMOVED***a0d***REMOVED***a1d***REMOVED***a2d***REMOVED***a3d
//***REMOVED***a{b,c{d,e}f}g***REMOVED***->***REMOVED***abg***REMOVED***acdfg***REMOVED***acefg
//***REMOVED***a{b,c}d{e,f}g***REMOVED***->***REMOVED***abdeg***REMOVED***acdeg***REMOVED***abdeg***REMOVED***abdfg
//
//***REMOVED***Invalid***REMOVED***sets***REMOVED***are***REMOVED***not***REMOVED***expanded.
//***REMOVED***a{2..}b***REMOVED***->***REMOVED***a{2..}b
//***REMOVED***a{b}c***REMOVED***->***REMOVED***a{b}c
const***REMOVED***braceExpand***REMOVED***=***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***assertValidPattern(pattern);
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Thanks***REMOVED***to***REMOVED***Yeting***REMOVED***Li***REMOVED***<https://github.com/yetingli>***REMOVED***for
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***improving***REMOVED***this***REMOVED***regexp***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***ReDOS***REMOVED***vulnerability.
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.nobrace***REMOVED***||***REMOVED***!/\{(?:(?!\{).)*\}/.test(pattern))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***shortcut.***REMOVED***no***REMOVED***need***REMOVED***to***REMOVED***expand.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[pattern];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***expand(pattern);
};
minimatch.braceExpand***REMOVED***=***REMOVED***braceExpand;
//***REMOVED***parse***REMOVED***a***REMOVED***component***REMOVED***of***REMOVED***the***REMOVED***expanded***REMOVED***set.
//***REMOVED***At***REMOVED***this***REMOVED***point,***REMOVED***no***REMOVED***pattern***REMOVED***may***REMOVED***contain***REMOVED***"/"***REMOVED***in***REMOVED***it
//***REMOVED***so***REMOVED***we're***REMOVED***going***REMOVED***to***REMOVED***return***REMOVED***a***REMOVED***2d***REMOVED***array,***REMOVED***where***REMOVED***each***REMOVED***entry***REMOVED***is***REMOVED***the***REMOVED***full
//***REMOVED***pattern,***REMOVED***split***REMOVED***on***REMOVED***'/',***REMOVED***and***REMOVED***then***REMOVED***turned***REMOVED***into***REMOVED***a***REMOVED***regular***REMOVED***expression.
//***REMOVED***A***REMOVED***regexp***REMOVED***is***REMOVED***made***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***which***REMOVED***joins***REMOVED***each***REMOVED***array***REMOVED***with***REMOVED***an
//***REMOVED***escaped***REMOVED***/,***REMOVED***and***REMOVED***another***REMOVED***full***REMOVED***one***REMOVED***which***REMOVED***joins***REMOVED***each***REMOVED***regexp***REMOVED***with***REMOVED***|.
//
//***REMOVED***Following***REMOVED***the***REMOVED***lead***REMOVED***of***REMOVED***Bash***REMOVED***4.1,***REMOVED***note***REMOVED***that***REMOVED***"**"***REMOVED***only***REMOVED***has***REMOVED***special***REMOVED***meaning
//***REMOVED***when***REMOVED***it***REMOVED***is***REMOVED***the***REMOVED****only****REMOVED***thing***REMOVED***in***REMOVED***a***REMOVED***path***REMOVED***portion.***REMOVED******REMOVED***Otherwise,***REMOVED***any***REMOVED***series
//***REMOVED***of***REMOVED*******REMOVED***is***REMOVED***equivalent***REMOVED***to***REMOVED***a***REMOVED***single***REMOVED****.***REMOVED******REMOVED***Globstar***REMOVED***behavior***REMOVED***is***REMOVED***enabled***REMOVED***by
//***REMOVED***default,***REMOVED***and***REMOVED***can***REMOVED***be***REMOVED***disabled***REMOVED***by***REMOVED***setting***REMOVED***options.noglobstar.
const***REMOVED***makeRe***REMOVED***=***REMOVED***(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***new***REMOVED***Minimatch(pattern,***REMOVED***options).makeRe();
minimatch.makeRe***REMOVED***=***REMOVED***makeRe;
const***REMOVED***match***REMOVED***=***REMOVED***(list,***REMOVED***pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***mm***REMOVED***=***REMOVED***new***REMOVED***Minimatch(pattern,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***list***REMOVED***=***REMOVED***list.filter(f***REMOVED***=>***REMOVED***mm.match(f));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(mm.options.nonull***REMOVED***&&***REMOVED***!list.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***list.push(pattern);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***list;
};
minimatch.match***REMOVED***=***REMOVED***match;
//***REMOVED***replace***REMOVED***stuff***REMOVED***like***REMOVED***\****REMOVED***with***REMOVED****
const***REMOVED***globMagic***REMOVED***=***REMOVED***/[?*]|[+@!]\(.*?\)|\[|\]/;
const***REMOVED***regExpEscape***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,***REMOVED***'\\$&');
class***REMOVED***Minimatch***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED***set;
***REMOVED******REMOVED******REMOVED******REMOVED***pattern;
***REMOVED******REMOVED******REMOVED******REMOVED***windowsPathsNoEscape;
***REMOVED******REMOVED******REMOVED******REMOVED***nonegate;
***REMOVED******REMOVED******REMOVED******REMOVED***negate;
***REMOVED******REMOVED******REMOVED******REMOVED***comment;
***REMOVED******REMOVED******REMOVED******REMOVED***empty;
***REMOVED******REMOVED******REMOVED******REMOVED***preserveMultipleSlashes;
***REMOVED******REMOVED******REMOVED******REMOVED***partial;
***REMOVED******REMOVED******REMOVED******REMOVED***globSet;
***REMOVED******REMOVED******REMOVED******REMOVED***globParts;
***REMOVED******REMOVED******REMOVED******REMOVED***nocase;
***REMOVED******REMOVED******REMOVED******REMOVED***isWindows;
***REMOVED******REMOVED******REMOVED******REMOVED***platform;
***REMOVED******REMOVED******REMOVED******REMOVED***windowsNoMagicRoot;
***REMOVED******REMOVED******REMOVED******REMOVED***regexp;
***REMOVED******REMOVED******REMOVED******REMOVED***constructor(pattern,***REMOVED***options***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValidPattern(pattern);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***options***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pattern***REMOVED***=***REMOVED***pattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.platform***REMOVED***=***REMOVED***options.platform***REMOVED***||***REMOVED***defaultPlatform;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.isWindows***REMOVED***=***REMOVED***this.platform***REMOVED***===***REMOVED***'win32';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.windowsPathsNoEscape***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!!options.windowsPathsNoEscape***REMOVED***||***REMOVED***options.allowWindowsEscape***REMOVED***===***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.windowsPathsNoEscape)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pattern***REMOVED***=***REMOVED***this.pattern.replace(/\\/g,***REMOVED***'/');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.preserveMultipleSlashes***REMOVED***=***REMOVED***!!options.preserveMultipleSlashes;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.negate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nonegate***REMOVED***=***REMOVED***!!options.nonegate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comment***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.empty***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.partial***REMOVED***=***REMOVED***!!options.partial;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.nocase***REMOVED***=***REMOVED***!!this.options.nocase;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.windowsNoMagicRoot***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.windowsNoMagicRoot***REMOVED***!==***REMOVED***undefined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.windowsNoMagicRoot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***!!(this.isWindows***REMOVED***&&***REMOVED***this.nocase);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globSet***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globParts***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***make***REMOVED***the***REMOVED***set***REMOVED***of***REMOVED***regexps***REMOVED***etc.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.make();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hasMagic()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.magicalBraces***REMOVED***&&***REMOVED***this.set.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***pattern***REMOVED***of***REMOVED***this.set)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***part***REMOVED***of***REMOVED***pattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***part***REMOVED***!==***REMOVED***'string')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***debug(..._)***REMOVED***{***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***make()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***this.pattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***empty***REMOVED***patterns***REMOVED***and***REMOVED***comments***REMOVED***match***REMOVED***nothing.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.nocomment***REMOVED***&&***REMOVED***pattern.charAt(0)***REMOVED***===***REMOVED***'#')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.comment***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!pattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.empty***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***step***REMOVED***1:***REMOVED***figure***REMOVED***out***REMOVED***negation,***REMOVED***etc.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parseNegate();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***step***REMOVED***2:***REMOVED***expand***REMOVED***braces
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globSet***REMOVED***=***REMOVED***[...new***REMOVED***Set(this.braceExpand())];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.debug)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***console.error(...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***this.globSet);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***step***REMOVED***3:***REMOVED***now***REMOVED***we***REMOVED***have***REMOVED***a***REMOVED***set,***REMOVED***so***REMOVED***turn***REMOVED***each***REMOVED***one***REMOVED***into***REMOVED***a***REMOVED***series***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***path-portion***REMOVED***matching***REMOVED***patterns.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***will***REMOVED***be***REMOVED***regexps,***REMOVED***except***REMOVED***in***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***"**",***REMOVED***which***REMOVED***is
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***to***REMOVED***the***REMOVED***GLOBSTAR***REMOVED***object***REMOVED***for***REMOVED***globstar***REMOVED***behavior,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***will***REMOVED***not***REMOVED***contain***REMOVED***any***REMOVED***/***REMOVED***characters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***First,***REMOVED***we***REMOVED***preprocess***REMOVED***to***REMOVED***make***REMOVED***the***REMOVED***glob***REMOVED***pattern***REMOVED***sets***REMOVED***a***REMOVED***bit***REMOVED***simpler
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***deduped.***REMOVED******REMOVED***There***REMOVED***are***REMOVED***some***REMOVED***perf-killing***REMOVED***patterns***REMOVED***that***REMOVED***can***REMOVED***cause
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***problems***REMOVED***with***REMOVED***a***REMOVED***glob***REMOVED***walk,***REMOVED***but***REMOVED***we***REMOVED***can***REMOVED***simplify***REMOVED***them***REMOVED***down***REMOVED***a***REMOVED***bit.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawGlobParts***REMOVED***=***REMOVED***this.globSet.map(s***REMOVED***=>***REMOVED***this.slashSplit(s));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globParts***REMOVED***=***REMOVED***this.preprocess(rawGlobParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***this.globParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***glob***REMOVED***-->***REMOVED***regexps
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***set***REMOVED***=***REMOVED***this.globParts.map((s,***REMOVED***_,***REMOVED***__)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isWindows***REMOVED***&&***REMOVED***this.windowsNoMagicRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***check***REMOVED***if***REMOVED***it's***REMOVED***a***REMOVED***drive***REMOVED***or***REMOVED***unc***REMOVED***path.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isUNC***REMOVED***=***REMOVED***s[0]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s[1]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(s[2]***REMOVED***===***REMOVED***'?'***REMOVED***||***REMOVED***!globMagic.test(s[2]))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!globMagic.test(s[3]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDrive***REMOVED***=***REMOVED***/^[a-z]:/i.test(s[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isUNC)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...s.slice(0,***REMOVED***4),***REMOVED***...s.slice(4).map(ss***REMOVED***=>***REMOVED***this.parse(ss))];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(isDrive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[s[0],***REMOVED***...s.slice(1).map(ss***REMOVED***=>***REMOVED***this.parse(ss))];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s.map(ss***REMOVED***=>***REMOVED***this.parse(ss));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***set);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***filter***REMOVED***out***REMOVED***everything***REMOVED***that***REMOVED***didn't***REMOVED***compile***REMOVED***properly.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set***REMOVED***=***REMOVED***set.filter(s***REMOVED***=>***REMOVED***s.indexOf(false)***REMOVED***===***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***do***REMOVED***not***REMOVED***treat***REMOVED***the***REMOVED***?***REMOVED***in***REMOVED***UNC***REMOVED***paths***REMOVED***as***REMOVED***magic
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isWindows)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***this.set.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***this.set[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p[0]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p[1]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.globParts[i][2]***REMOVED***===***REMOVED***'?'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***p[3]***REMOVED***===***REMOVED***'string'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/^[a-z]:$/i.test(p[3]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p[2]***REMOVED***=***REMOVED***'?';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***this.set);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***various***REMOVED***transforms***REMOVED***to***REMOVED***equivalent***REMOVED***pattern***REMOVED***sets***REMOVED***that***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***faster***REMOVED***to***REMOVED***process***REMOVED***in***REMOVED***a***REMOVED***filesystem***REMOVED***walk.***REMOVED******REMOVED***The***REMOVED***goal***REMOVED***is***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eliminate***REMOVED***what***REMOVED***we***REMOVED***can,***REMOVED***and***REMOVED***push***REMOVED***all***REMOVED********REMOVED***patterns***REMOVED***as***REMOVED***far
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***the***REMOVED***right***REMOVED***as***REMOVED***possible,***REMOVED***even***REMOVED***if***REMOVED***it***REMOVED***increases***REMOVED***the***REMOVED***number
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***patterns***REMOVED***that***REMOVED***we***REMOVED***have***REMOVED***to***REMOVED***process.
***REMOVED******REMOVED******REMOVED******REMOVED***preprocess(globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we're***REMOVED***not***REMOVED***in***REMOVED***globstar***REMOVED***mode,***REMOVED***then***REMOVED***turn***REMOVED***all***REMOVED********REMOVED***into***REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.options.noglobstar)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***globParts.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***0;***REMOVED***j***REMOVED***<***REMOVED***globParts[i].length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globParts[i][j]***REMOVED***===***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts[i][j]***REMOVED***=***REMOVED***'*';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***optimizationLevel***REMOVED***=***REMOVED***1***REMOVED***}***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optimizationLevel***REMOVED***>=***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***aggressive***REMOVED***optimization***REMOVED***for***REMOVED***the***REMOVED***purpose***REMOVED***of***REMOVED***fs***REMOVED***walking
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts***REMOVED***=***REMOVED***this.firstPhasePreProcess(globParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts***REMOVED***=***REMOVED***this.secondPhasePreProcess(globParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(optimizationLevel***REMOVED***>=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***basic***REMOVED***optimizations***REMOVED***to***REMOVED***remove***REMOVED***some***REMOVED***..***REMOVED***parts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts***REMOVED***=***REMOVED***this.levelOneOptimize(globParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***collapse***REMOVED***multiple***REMOVED********REMOVED***portions***REMOVED***into***REMOVED***one
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts***REMOVED***=***REMOVED***this.adjascentGlobstarOptimize(globParts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globParts;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***get***REMOVED***rid***REMOVED***of***REMOVED***adjascent***REMOVED********REMOVED***portions
***REMOVED******REMOVED******REMOVED******REMOVED***adjascentGlobstarOptimize(globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globParts.map(parts***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***gs***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(-1***REMOVED***!==***REMOVED***(gs***REMOVED***=***REMOVED***parts.indexOf('**',***REMOVED***gs***REMOVED***+***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***gs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parts[i***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***!==***REMOVED***gs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(gs,***REMOVED***i***REMOVED***-***REMOVED***gs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***get***REMOVED***rid***REMOVED***of***REMOVED***adjascent***REMOVED********REMOVED***and***REMOVED***resolve***REMOVED***..***REMOVED***portions
***REMOVED******REMOVED******REMOVED******REMOVED***levelOneOptimize(globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globParts.map(parts***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts***REMOVED***=***REMOVED***parts.reduce((set,***REMOVED***part)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***set[set.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(part***REMOVED***===***REMOVED***'**'***REMOVED***&&***REMOVED***prev***REMOVED***===***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***set;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(part***REMOVED***===***REMOVED***'..')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***&&***REMOVED***prev***REMOVED***!==***REMOVED***'..'***REMOVED***&&***REMOVED***prev***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***prev***REMOVED***!==***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***set;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set.push(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***set;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parts.length***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***['']***REMOVED***:***REMOVED***parts;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***levelTwoFileOptimize(parts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Array.isArray(parts))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts***REMOVED***=***REMOVED***this.slashSplit(parts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***didSomething***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<e>/<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.preserveMultipleSlashes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***parts.length***REMOVED***-***REMOVED***1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***parts[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***squeeze***REMOVED***out***REMOVED***UNC***REMOVED***patterns
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***p***REMOVED***===***REMOVED***''***REMOVED***&&***REMOVED***parts[0]***REMOVED***===***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***p***REMOVED***===***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts[0]***REMOVED***===***REMOVED***'.'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.length***REMOVED***===***REMOVED***2***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(parts[1]***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***parts[1]***REMOVED***===***REMOVED***''))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<p>/../<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dd***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(-1***REMOVED***!==***REMOVED***(dd***REMOVED***=***REMOVED***parts.indexOf('..',***REMOVED***dd***REMOVED***+***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***parts[dd***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'..'***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(dd***REMOVED***-***REMOVED***1,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dd***REMOVED***-=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(didSomething);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parts.length***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***['']***REMOVED***:***REMOVED***parts;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***First***REMOVED***phase:***REMOVED***single-pattern***REMOVED***processing
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>***REMOVED***is***REMOVED***1***REMOVED***or***REMOVED***more***REMOVED***portions
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<rest>***REMOVED***is***REMOVED***1***REMOVED***or***REMOVED***more***REMOVED***portions
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<p>***REMOVED***is***REMOVED***any***REMOVED***portion***REMOVED***other***REMOVED***than***REMOVED***.,***REMOVED***..,***REMOVED***'',***REMOVED***or***REMOVED*****
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<e>***REMOVED***is***REMOVED***.***REMOVED***or***REMOVED***''
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED*****/..***REMOVED***is***REMOVED****brutal****REMOVED***for***REMOVED***filesystem***REMOVED***walking***REMOVED***performance,***REMOVED***because
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***it***REMOVED***effectively***REMOVED***resets***REMOVED***the***REMOVED***recursive***REMOVED***walk***REMOVED***each***REMOVED***time***REMOVED***it***REMOVED***occurs,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED********REMOVED***cannot***REMOVED***be***REMOVED***reduced***REMOVED***out***REMOVED***by***REMOVED***a***REMOVED***..***REMOVED***pattern***REMOVED***part***REMOVED***like***REMOVED***a***REMOVED***regexp
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***or***REMOVED***most***REMOVED***strings***REMOVED***(other***REMOVED***than***REMOVED***..,***REMOVED***.,***REMOVED***and***REMOVED***'')***REMOVED***can***REMOVED***be.
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/**/../<p>/<p>/<rest>***REMOVED***->***REMOVED***{<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<e>/<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<p>/../<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED*****/**/<rest>***REMOVED***->***REMOVED*****/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED*****/*/<rest>***REMOVED***->***REMOVED****/**/<rest>***REMOVED***<==***REMOVED***not***REMOVED***valid***REMOVED***because***REMOVED********REMOVED***doesn't***REMOVED***follow
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***WOULD***REMOVED***be***REMOVED***allowed***REMOVED***if***REMOVED********REMOVED***did***REMOVED***follow***REMOVED***symlinks,***REMOVED***or***REMOVED*******REMOVED***didn't
***REMOVED******REMOVED******REMOVED******REMOVED***firstPhasePreProcess(globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***didSomething***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***do***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/**/../<p>/<p>/<rest>***REMOVED***->***REMOVED***{<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***parts***REMOVED***of***REMOVED***globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***gs***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(-1***REMOVED***!==***REMOVED***(gs***REMOVED***=***REMOVED***parts.indexOf('**',***REMOVED***gs***REMOVED***+***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***gss***REMOVED***=***REMOVED***gs;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(parts[gss***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/**/**/<rest>***REMOVED***->***REMOVED***<pre>/**/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***gss++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eg,***REMOVED***if***REMOVED***gs***REMOVED***is***REMOVED***2***REMOVED***and***REMOVED***gss***REMOVED***is***REMOVED***4,***REMOVED***that***REMOVED***means***REMOVED***we***REMOVED***have***REMOVED***3***REMOVED*****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***parts,***REMOVED***and***REMOVED***can***REMOVED***remove***REMOVED***2***REMOVED***of***REMOVED***them.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(gss***REMOVED***>***REMOVED***gs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(gs***REMOVED***+***REMOVED***1,***REMOVED***gss***REMOVED***-***REMOVED***gs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next***REMOVED***=***REMOVED***parts[gs***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***parts[gs***REMOVED***+***REMOVED***2];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p2***REMOVED***=***REMOVED***parts[gs***REMOVED***+***REMOVED***3];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***!==***REMOVED***'..')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!p***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p***REMOVED***===***REMOVED***'.'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p***REMOVED***===***REMOVED***'..'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!p2***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p2***REMOVED***===***REMOVED***'.'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p2***REMOVED***===***REMOVED***'..')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***edit***REMOVED***parts***REMOVED***in***REMOVED***place,***REMOVED***and***REMOVED***push***REMOVED***the***REMOVED***new***REMOVED***one
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(gs,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***other***REMOVED***=***REMOVED***parts.slice(0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***other[gs]***REMOVED***=***REMOVED***'**';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts.push(other);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***gs--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<e>/<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.preserveMultipleSlashes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***1;***REMOVED***i***REMOVED***<***REMOVED***parts.length***REMOVED***-***REMOVED***1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***parts[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***don't***REMOVED***squeeze***REMOVED***out***REMOVED***UNC***REMOVED***patterns
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***p***REMOVED***===***REMOVED***''***REMOVED***&&***REMOVED***parts[0]***REMOVED***===***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***p***REMOVED***===***REMOVED***'')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts[0]***REMOVED***===***REMOVED***'.'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.length***REMOVED***===***REMOVED***2***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(parts[1]***REMOVED***===***REMOVED***'.'***REMOVED***||***REMOVED***parts[1]***REMOVED***===***REMOVED***''))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***<pre>/<p>/../<rest>***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dd***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(-1***REMOVED***!==***REMOVED***(dd***REMOVED***=***REMOVED***parts.indexOf('..',***REMOVED***dd***REMOVED***+***REMOVED***1)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***parts[dd***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'.'***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'..'***REMOVED***&&***REMOVED***p***REMOVED***!==***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***didSomething***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needDot***REMOVED***=***REMOVED***dd***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***parts[dd***REMOVED***+***REMOVED***1]***REMOVED***===***REMOVED***'**';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***splin***REMOVED***=***REMOVED***needDot***REMOVED***?***REMOVED***['.']***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.splice(dd***REMOVED***-***REMOVED***1,***REMOVED***2,***REMOVED***...splin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parts.push('');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dd***REMOVED***-=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***while***REMOVED***(didSomething);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globParts;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***second***REMOVED***phase:***REMOVED***multi-pattern***REMOVED***dedupes
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{<pre>/*/<rest>,<pre>/<p>/<rest>}***REMOVED***->***REMOVED***<pre>/*/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{<pre>/<rest>,<pre>/<rest>}***REMOVED***->***REMOVED***<pre>/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{<pre>/**/<rest>,<pre>/<rest>}***REMOVED***->***REMOVED***<pre>/**/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***{<pre>/**/<rest>,<pre>/**/<p>/<rest>}***REMOVED***->***REMOVED***<pre>/**/<rest>
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***^--***REMOVED***not***REMOVED***valid***REMOVED***because***REMOVED********REMOVED***doens't***REMOVED***follow***REMOVED***symlinks
***REMOVED******REMOVED******REMOVED******REMOVED***secondPhasePreProcess(globParts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***globParts.length***REMOVED***-***REMOVED***1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***j***REMOVED***=***REMOVED***i***REMOVED***+***REMOVED***1;***REMOVED***j***REMOVED***<***REMOVED***globParts.length;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matched***REMOVED***=***REMOVED***this.partsMatch(globParts[i],***REMOVED***globParts[j],***REMOVED***!this.preserveMultipleSlashes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matched)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts[i]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globParts[j]***REMOVED***=***REMOVED***matched;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globParts.filter(gs***REMOVED***=>***REMOVED***gs.length);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***partsMatch(a,***REMOVED***b,***REMOVED***emptyGSMatch***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ai***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bi***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***result***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***which***REMOVED***=***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(ai***REMOVED***<***REMOVED***a.length***REMOVED***&&***REMOVED***bi***REMOVED***<***REMOVED***b.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(a[ai]***REMOVED***===***REMOVED***b[bi])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(which***REMOVED***===***REMOVED***'b'***REMOVED***?***REMOVED***b[bi]***REMOVED***:***REMOVED***a[ai]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ai++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bi++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(emptyGSMatch***REMOVED***&&***REMOVED***a[ai]***REMOVED***===***REMOVED***'**'***REMOVED***&&***REMOVED***b[bi]***REMOVED***===***REMOVED***a[ai***REMOVED***+***REMOVED***1])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(a[ai]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ai++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(emptyGSMatch***REMOVED***&&***REMOVED***b[bi]***REMOVED***===***REMOVED***'**'***REMOVED***&&***REMOVED***a[ai]***REMOVED***===***REMOVED***b[bi***REMOVED***+***REMOVED***1])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(b[bi]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bi++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(a[ai]***REMOVED***===***REMOVED***'*'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***b[bi]***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.options.dot***REMOVED***||***REMOVED***!b[bi].startsWith('.'))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***b[bi]***REMOVED***!==***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(which***REMOVED***===***REMOVED***'b')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***which***REMOVED***=***REMOVED***'a';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(a[ai]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ai++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bi++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(b[bi]***REMOVED***===***REMOVED***'*'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***a[ai]***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(this.options.dot***REMOVED***||***REMOVED***!a[ai].startsWith('.'))***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***a[ai]***REMOVED***!==***REMOVED***'**')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(which***REMOVED***===***REMOVED***'a')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***which***REMOVED***=***REMOVED***'b';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(b[bi]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ai++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bi++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***we***REMOVED***fall***REMOVED***out***REMOVED***of***REMOVED***the***REMOVED***loop,***REMOVED***it***REMOVED***means***REMOVED***they***REMOVED***two***REMOVED***are***REMOVED***identical
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***long***REMOVED***as***REMOVED***their***REMOVED***lengths***REMOVED***match
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a.length***REMOVED***===***REMOVED***b.length***REMOVED***&&***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parseNegate()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.nonegate)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***this.pattern;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***negate***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***negateOffset***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***pattern.length***REMOVED***&&***REMOVED***pattern.charAt(i)***REMOVED***===***REMOVED***'!';***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negate***REMOVED***=***REMOVED***!negate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***negateOffset++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(negateOffset)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.pattern***REMOVED***=***REMOVED***pattern.slice(negateOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.negate***REMOVED***=***REMOVED***negate;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***set***REMOVED***partial***REMOVED***to***REMOVED***true***REMOVED***to***REMOVED***test***REMOVED***if,***REMOVED***for***REMOVED***example,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"/a/b"***REMOVED***matches***REMOVED***the***REMOVED***start***REMOVED***of***REMOVED***"/*/b/*/d"
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Partial***REMOVED***means,***REMOVED***if***REMOVED***you***REMOVED***run***REMOVED***out***REMOVED***of***REMOVED***file***REMOVED***before***REMOVED***you***REMOVED***run
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***out***REMOVED***of***REMOVED***pattern,***REMOVED***then***REMOVED***that's***REMOVED***fine,***REMOVED***as***REMOVED***long***REMOVED***as***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***parts***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED***matchOne(file,***REMOVED***pattern,***REMOVED***partial***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***UNC***REMOVED***paths***REMOVED***like***REMOVED***//?/X:/...***REMOVED***can***REMOVED***match***REMOVED***X:/...***REMOVED***and***REMOVED***vice***REMOVED***versa
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Drive***REMOVED***letters***REMOVED***in***REMOVED***absolute***REMOVED***drive***REMOVED***or***REMOVED***unc***REMOVED***paths***REMOVED***are***REMOVED***always***REMOVED***compared
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***case-insensitively.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isWindows)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileDrive***REMOVED***=***REMOVED***typeof***REMOVED***file[0]***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***/^[a-z]:$/i.test(file[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fileUNC***REMOVED***=***REMOVED***!fileDrive***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file[0]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file[1]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file[2]***REMOVED***===***REMOVED***'?'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/^[a-z]:$/i.test(file[3]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***patternDrive***REMOVED***=***REMOVED***typeof***REMOVED***pattern[0]***REMOVED***===***REMOVED***'string'***REMOVED***&&***REMOVED***/^[a-z]:$/i.test(pattern[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***patternUNC***REMOVED***=***REMOVED***!patternDrive***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern[0]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern[1]***REMOVED***===***REMOVED***''***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern[2]***REMOVED***===***REMOVED***'?'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***pattern[3]***REMOVED***===***REMOVED***'string'***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/^[a-z]:$/i.test(pattern[3]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fdi***REMOVED***=***REMOVED***fileUNC***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***fileDrive***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pdi***REMOVED***=***REMOVED***patternUNC***REMOVED***?***REMOVED***3***REMOVED***:***REMOVED***patternDrive***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***fdi***REMOVED***===***REMOVED***'number'***REMOVED***&&***REMOVED***typeof***REMOVED***pdi***REMOVED***===***REMOVED***'number')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[fd,***REMOVED***pd]***REMOVED***=***REMOVED***[file[fdi],***REMOVED***pattern[pdi]];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fd.toLowerCase()***REMOVED***===***REMOVED***pd.toLowerCase())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern[pdi]***REMOVED***=***REMOVED***fd;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pdi***REMOVED***>***REMOVED***fdi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pattern***REMOVED***=***REMOVED***pattern.slice(pdi);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(fdi***REMOVED***>***REMOVED***pdi)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***file.slice(fdi);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***resolve***REMOVED***and***REMOVED***reduce***REMOVED***.***REMOVED***and***REMOVED***..***REMOVED***portions***REMOVED***in***REMOVED***the***REMOVED***file***REMOVED***as***REMOVED***well.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***dont'***REMOVED***need***REMOVED***to***REMOVED***do***REMOVED***the***REMOVED***second***REMOVED***phase,***REMOVED***because***REMOVED***it's***REMOVED***only***REMOVED***one***REMOVED***string[]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***optimizationLevel***REMOVED***=***REMOVED***1***REMOVED***}***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optimizationLevel***REMOVED***>=***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***this.levelTwoFileOptimize(file);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('matchOne',***REMOVED***this,***REMOVED***{***REMOVED***file,***REMOVED***pattern***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('matchOne',***REMOVED***file.length,***REMOVED***pattern.length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(var***REMOVED***fi***REMOVED***=***REMOVED***0,***REMOVED***pi***REMOVED***=***REMOVED***0,***REMOVED***fl***REMOVED***=***REMOVED***file.length,***REMOVED***pl***REMOVED***=***REMOVED***pattern.length;***REMOVED***fi***REMOVED***<***REMOVED***fl***REMOVED***&&***REMOVED***pi***REMOVED***<***REMOVED***pl;***REMOVED***fi++,***REMOVED***pi++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('matchOne***REMOVED***loop');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***p***REMOVED***=***REMOVED***pattern[pi];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***f***REMOVED***=***REMOVED***file[fi];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(pattern,***REMOVED***p,***REMOVED***f);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***should***REMOVED***be***REMOVED***impossible.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***some***REMOVED***invalid***REMOVED***regexp***REMOVED***stuff***REMOVED***in***REMOVED***the***REMOVED***set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***===***REMOVED***GLOBSTAR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('GLOBSTAR',***REMOVED***[pattern,***REMOVED***p,***REMOVED***f]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***"**"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/**/b/**/c***REMOVED***would***REMOVED***match***REMOVED***the***REMOVED***following:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/b/x/y/z/c
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/x/y/z/b/c
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/b/x/b/x/c
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/b/c
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***To***REMOVED***do***REMOVED***this,***REMOVED***take***REMOVED***the***REMOVED***rest***REMOVED***of***REMOVED***the***REMOVED***pattern***REMOVED***after
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED*****,***REMOVED***and***REMOVED***see***REMOVED***if***REMOVED***it***REMOVED***would***REMOVED***match***REMOVED***the***REMOVED***file***REMOVED***remainder.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***so,***REMOVED***return***REMOVED***success.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***not,***REMOVED***the***REMOVED********REMOVED***"swallows"***REMOVED***a***REMOVED***segment,***REMOVED***and***REMOVED***try***REMOVED***again.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***recursively***REMOVED***awful.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/**/b/**/c***REMOVED***matching***REMOVED***a/b/x/y/z/c
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***a***REMOVED***matches***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***doublestar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED***-***REMOVED***matchOne(b/x/y/z/c,***REMOVED***b/**/c)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***b***REMOVED***matches***REMOVED***b
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***doublestar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***matchOne(x/y/z/c,***REMOVED***c)***REMOVED***->***REMOVED***no
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***matchOne(y/z/c,***REMOVED***c)***REMOVED***->***REMOVED***no
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***matchOne(z/c,***REMOVED***c)***REMOVED***->***REMOVED***no
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***-***REMOVED***matchOne(c,***REMOVED***c)***REMOVED***yes,***REMOVED***hit
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***fr***REMOVED***=***REMOVED***fi;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***pr***REMOVED***=***REMOVED***pi***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pr***REMOVED***===***REMOVED***pl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('*****REMOVED***at***REMOVED***the***REMOVED***end');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED********REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***will***REMOVED***just***REMOVED***swallow***REMOVED***the***REMOVED***rest.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***We***REMOVED***have***REMOVED***found***REMOVED***a***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***however,***REMOVED***it***REMOVED***will***REMOVED***not***REMOVED***swallow***REMOVED***/.x,***REMOVED***unless
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***options.dot***REMOVED***is***REMOVED***set.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***.***REMOVED***and***REMOVED***..***REMOVED***are***REMOVED****never****REMOVED***matched***REMOVED***by***REMOVED*****,***REMOVED***for***REMOVED***explosively
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***exponential***REMOVED***reasons.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***fi***REMOVED***<***REMOVED***fl;***REMOVED***fi++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file[fi]***REMOVED***===***REMOVED***'.'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file[fi]***REMOVED***===***REMOVED***'..'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!options.dot***REMOVED***&&***REMOVED***file[fi].charAt(0)***REMOVED***===***REMOVED***'.'))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ok,***REMOVED***let's***REMOVED***see***REMOVED***if***REMOVED***we***REMOVED***can***REMOVED***swallow***REMOVED***whatever***REMOVED***we***REMOVED***can.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(fr***REMOVED***<***REMOVED***fl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***swallowee***REMOVED***=***REMOVED***file[fr];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('\nglobstar***REMOVED***while',***REMOVED***file,***REMOVED***fr,***REMOVED***pattern,***REMOVED***pr,***REMOVED***swallowee);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***XXX***REMOVED***remove***REMOVED***this***REMOVED***slice.***REMOVED******REMOVED***Just***REMOVED***pass***REMOVED***the***REMOVED***start***REMOVED***index.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.matchOne(file.slice(fr),***REMOVED***pattern.slice(pr),***REMOVED***partial))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('globstar***REMOVED***found***REMOVED***match!',***REMOVED***fr,***REMOVED***fl,***REMOVED***swallowee);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***found***REMOVED***a***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can't***REMOVED***swallow***REMOVED***"."***REMOVED***or***REMOVED***".."***REMOVED***ever.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***only***REMOVED***swallow***REMOVED***".foo"***REMOVED***when***REMOVED***explicitly***REMOVED***asked.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(swallowee***REMOVED***===***REMOVED***'.'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***swallowee***REMOVED***===***REMOVED***'..'***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(!options.dot***REMOVED***&&***REMOVED***swallowee.charAt(0)***REMOVED***===***REMOVED***'.'))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('dot***REMOVED***detected!',***REMOVED***file,***REMOVED***fr,***REMOVED***pattern,***REMOVED***pr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED********REMOVED***swallows***REMOVED***a***REMOVED***segment,***REMOVED***and***REMOVED***continue.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('globstar***REMOVED***swallow***REMOVED***a***REMOVED***segment,***REMOVED***and***REMOVED***continue');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fr++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***no***REMOVED***match***REMOVED***was***REMOVED***found.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***However,***REMOVED***in***REMOVED***partial***REMOVED***mode,***REMOVED***we***REMOVED***can't***REMOVED***say***REMOVED***this***REMOVED***is***REMOVED***necessarily***REMOVED***over.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(partial)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ran***REMOVED***out***REMOVED***of***REMOVED***file
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('\n>>>***REMOVED***no***REMOVED***match,***REMOVED***partial?',***REMOVED***file,***REMOVED***fr,***REMOVED***pattern,***REMOVED***pr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fr***REMOVED***===***REMOVED***fl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***something***REMOVED***other***REMOVED***than***REMOVED*****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***non-magic***REMOVED***patterns***REMOVED***just***REMOVED***have***REMOVED***to***REMOVED***match***REMOVED***exactly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***patterns***REMOVED***with***REMOVED***magic***REMOVED***have***REMOVED***been***REMOVED***turned***REMOVED***into***REMOVED***regexps.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hit;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***p***REMOVED***===***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hit***REMOVED***=***REMOVED***f***REMOVED***===***REMOVED***p;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('string***REMOVED***match',***REMOVED***p,***REMOVED***f,***REMOVED***hit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hit***REMOVED***=***REMOVED***p.test(f);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('pattern***REMOVED***match',***REMOVED***p,***REMOVED***f,***REMOVED***hit);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hit)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Note:***REMOVED***ending***REMOVED***in***REMOVED***/***REMOVED***means***REMOVED***that***REMOVED***we'll***REMOVED***get***REMOVED***a***REMOVED***final***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***pattern.***REMOVED******REMOVED***This***REMOVED***can***REMOVED***only***REMOVED***match***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***corresponding***REMOVED***""***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***file.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***file***REMOVED***ends***REMOVED***in***REMOVED***/,***REMOVED***then***REMOVED***it***REMOVED***can***REMOVED***only***REMOVED***match***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***pattern***REMOVED***that***REMOVED***ends***REMOVED***in***REMOVED***/,***REMOVED***unless***REMOVED***the***REMOVED***pattern***REMOVED***just
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***doesn't***REMOVED***have***REMOVED***any***REMOVED***more***REMOVED***for***REMOVED***it.***REMOVED***But,***REMOVED***a/b/***REMOVED***should***REMOVED****not*
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***match***REMOVED***"a/b/*",***REMOVED***even***REMOVED***though***REMOVED***""***REMOVED***matches***REMOVED***against***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***[^/]*?***REMOVED***pattern,***REMOVED***except***REMOVED***in***REMOVED***partial***REMOVED***mode,***REMOVED***where***REMOVED***it***REMOVED***might
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***simply***REMOVED***not***REMOVED***be***REMOVED***reached***REMOVED***yet.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***However,***REMOVED***a/b/***REMOVED***should***REMOVED***still***REMOVED***satisfy***REMOVED***a/*
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***now***REMOVED***either***REMOVED***we***REMOVED***fell***REMOVED***off***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***the***REMOVED***pattern,***REMOVED***or***REMOVED***we're***REMOVED***done.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fi***REMOVED***===***REMOVED***fl***REMOVED***&&***REMOVED***pi***REMOVED***===***REMOVED***pl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ran***REMOVED***out***REMOVED***of***REMOVED***pattern***REMOVED***and***REMOVED***filename***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***time.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***an***REMOVED***exact***REMOVED***hit!
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(fi***REMOVED***===***REMOVED***fl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ran***REMOVED***out***REMOVED***of***REMOVED***file,***REMOVED***but***REMOVED***still***REMOVED***had***REMOVED***pattern***REMOVED***left.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***is***REMOVED***ok***REMOVED***if***REMOVED***we're***REMOVED***doing***REMOVED***the***REMOVED***match***REMOVED***as***REMOVED***part***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***glob***REMOVED***fs***REMOVED***traversal.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***partial;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(pi***REMOVED***===***REMOVED***pl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ran***REMOVED***out***REMOVED***of***REMOVED***pattern,***REMOVED***still***REMOVED***have***REMOVED***file***REMOVED***left.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***acceptable***REMOVED***if***REMOVED***we're***REMOVED***on***REMOVED***the***REMOVED***very***REMOVED***last
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***empty***REMOVED***segment***REMOVED***of***REMOVED***a***REMOVED***file***REMOVED***with***REMOVED***a***REMOVED***trailing***REMOVED***slash.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a/****REMOVED***should***REMOVED***match***REMOVED***a/b/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fi***REMOVED***===***REMOVED***fl***REMOVED***-***REMOVED***1***REMOVED***&&***REMOVED***file[fi]***REMOVED***===***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***should***REMOVED***be***REMOVED***unreachable.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error('wtf?');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***braceExpand()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***braceExpand(this.pattern,***REMOVED***this.options);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parse(pattern)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assertValidPattern(pattern);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***shortcuts
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pattern***REMOVED***===***REMOVED***'**')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***GLOBSTAR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pattern***REMOVED***===***REMOVED***'')
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***far***REMOVED***and***REMOVED***away,***REMOVED***the***REMOVED***most***REMOVED***common***REMOVED***glob***REMOVED***pattern***REMOVED***parts***REMOVED***are
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED****,***REMOVED****.*,***REMOVED***and***REMOVED****.<ext>***REMOVED******REMOVED***Add***REMOVED***a***REMOVED***fast***REMOVED***check***REMOVED***method***REMOVED***for***REMOVED***those.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***m;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fastTest***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((m***REMOVED***=***REMOVED***pattern.match(starRE)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fastTest***REMOVED***=***REMOVED***options.dot***REMOVED***?***REMOVED***starTestDot***REMOVED***:***REMOVED***starTest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***((m***REMOVED***=***REMOVED***pattern.match(starDotExtRE)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fastTest***REMOVED***=***REMOVED***(options.nocase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.dot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***starDotExtTestNocaseDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***starDotExtTestNocase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***options.dot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***starDotExtTestDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***starDotExtTest)(m[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***((m***REMOVED***=***REMOVED***pattern.match(qmarksRE)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fastTest***REMOVED***=***REMOVED***(options.nocase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***options.dot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***qmarksTestNocaseDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***qmarksTestNocase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***options.dot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***qmarksTestDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***qmarksTest)(m);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***((m***REMOVED***=***REMOVED***pattern.match(starDotStarRE)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fastTest***REMOVED***=***REMOVED***options.dot***REMOVED***?***REMOVED***starDotStarTestDot***REMOVED***:***REMOVED***starDotStarTest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***((m***REMOVED***=***REMOVED***pattern.match(dotStarRE)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fastTest***REMOVED***=***REMOVED***dotStarTest;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***re***REMOVED***=***REMOVED***AST.fromGlob(pattern,***REMOVED***this.options).toMMPattern();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fastTest***REMOVED***&&***REMOVED***typeof***REMOVED***re***REMOVED***===***REMOVED***'object')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Avoids***REMOVED***overriding***REMOVED***in***REMOVED***frozen***REMOVED***environments
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Reflect.defineProperty(re,***REMOVED***'test',***REMOVED***{***REMOVED***value:***REMOVED***fastTest***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***re;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***makeRe()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.regexp***REMOVED***||***REMOVED***this.regexp***REMOVED***===***REMOVED***false)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.regexp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***at***REMOVED***this***REMOVED***point,***REMOVED***this.set***REMOVED***is***REMOVED***a***REMOVED***2d***REMOVED***array***REMOVED***of***REMOVED***partial
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pattern***REMOVED***strings,***REMOVED***or***REMOVED***"**".
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***It's***REMOVED***better***REMOVED***to***REMOVED***use***REMOVED***.match().***REMOVED******REMOVED***This***REMOVED***function***REMOVED***shouldn't
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***be***REMOVED***used,***REMOVED***really,***REMOVED***but***REMOVED***it's***REMOVED***pretty***REMOVED***convenient***REMOVED***sometimes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***you***REMOVED***just***REMOVED***want***REMOVED***to***REMOVED***work***REMOVED***with***REMOVED***a***REMOVED***regex.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***set***REMOVED***=***REMOVED***this.set;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!set.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.regexp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***twoStar***REMOVED***=***REMOVED***options.noglobstar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***star
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***options.dot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***twoStarDot
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***twoStarNoDot;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***flags***REMOVED***=***REMOVED***new***REMOVED***Set(options.nocase***REMOVED***?***REMOVED***['i']***REMOVED***:***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***regexpify***REMOVED***non-globstar***REMOVED***patterns
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED********REMOVED***is***REMOVED***only***REMOVED***item,***REMOVED***then***REMOVED***we***REMOVED***just***REMOVED***do***REMOVED***one***REMOVED***twoStar
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED********REMOVED***is***REMOVED***first,***REMOVED***and***REMOVED***there***REMOVED***are***REMOVED***more,***REMOVED***prepend***REMOVED***(\/|twoStar\/)?***REMOVED***to***REMOVED***next
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED********REMOVED***is***REMOVED***last,***REMOVED***append***REMOVED***(\/twoStar|)***REMOVED***to***REMOVED***previous
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED********REMOVED***is***REMOVED***in***REMOVED***the***REMOVED***middle,***REMOVED***append***REMOVED***(\/|\/twoStar\/)***REMOVED***to***REMOVED***previous
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***then***REMOVED***filter***REMOVED***out***REMOVED***GLOBSTAR***REMOVED***symbols
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***re***REMOVED***=***REMOVED***set
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.map(pattern***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pp***REMOVED***=***REMOVED***pattern.map(p***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***instanceof***REMOVED***RegExp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***f***REMOVED***of***REMOVED***p.flags.split(''))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flags.add(f);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***p***REMOVED***===***REMOVED***'string'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***regExpEscape(p)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***p***REMOVED***===***REMOVED***GLOBSTAR
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***GLOBSTAR
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***p._src;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp.forEach((p,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***pp[i***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***pp[i***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p***REMOVED***!==***REMOVED***GLOBSTAR***REMOVED***||***REMOVED***prev***REMOVED***===***REMOVED***GLOBSTAR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***!==***REMOVED***undefined***REMOVED***&&***REMOVED***next***REMOVED***!==***REMOVED***GLOBSTAR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp[i***REMOVED***+***REMOVED***1]***REMOVED***=***REMOVED***'(?:\\/|'***REMOVED***+***REMOVED***twoStar***REMOVED***+***REMOVED***'\\/)?'***REMOVED***+***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp[i]***REMOVED***=***REMOVED***twoStar;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***===***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp[i***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***prev***REMOVED***+***REMOVED***'(?:\\/|'***REMOVED***+***REMOVED***twoStar***REMOVED***+***REMOVED***')?';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(next***REMOVED***!==***REMOVED***GLOBSTAR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp[i***REMOVED***-***REMOVED***1]***REMOVED***=***REMOVED***prev***REMOVED***+***REMOVED***'(?:\\/|\\/'***REMOVED***+***REMOVED***twoStar***REMOVED***+***REMOVED***'\\/)'***REMOVED***+***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pp[i***REMOVED***+***REMOVED***1]***REMOVED***=***REMOVED***GLOBSTAR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***pp.filter(p***REMOVED***=>***REMOVED***p***REMOVED***!==***REMOVED***GLOBSTAR).join('/');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***.join('|');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***need***REMOVED***to***REMOVED***wrap***REMOVED***in***REMOVED***parens***REMOVED***if***REMOVED***we***REMOVED***had***REMOVED***more***REMOVED***than***REMOVED***one***REMOVED***thing***REMOVED***with***REMOVED***|,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***otherwise***REMOVED***only***REMOVED***the***REMOVED***first***REMOVED***will***REMOVED***be***REMOVED***anchored***REMOVED***to***REMOVED***^***REMOVED***and***REMOVED***the***REMOVED***last***REMOVED***to***REMOVED***$
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[open,***REMOVED***close]***REMOVED***=***REMOVED***set.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***['(?:',***REMOVED***')']***REMOVED***:***REMOVED***['',***REMOVED***''];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***must***REMOVED***match***REMOVED***entire***REMOVED***pattern
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***ending***REMOVED***in***REMOVED***a***REMOVED*******REMOVED***or***REMOVED********REMOVED***will***REMOVED***make***REMOVED***it***REMOVED***less***REMOVED***strict.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***=***REMOVED***'^'***REMOVED***+***REMOVED***open***REMOVED***+***REMOVED***re***REMOVED***+***REMOVED***close***REMOVED***+***REMOVED***'$';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***can***REMOVED***match***REMOVED***anything,***REMOVED***as***REMOVED***long***REMOVED***as***REMOVED***it's***REMOVED***not***REMOVED***this.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.negate)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***re***REMOVED***=***REMOVED***'^(?!'***REMOVED***+***REMOVED***re***REMOVED***+***REMOVED***').+$';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp***REMOVED***=***REMOVED***new***REMOVED***RegExp(re,***REMOVED***[...flags].join(''));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***start***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(ex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***should***REMOVED***be***REMOVED***impossible
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.regexp***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.regexp;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***slashSplit(p)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***p***REMOVED***starts***REMOVED***with***REMOVED***//***REMOVED***on***REMOVED***windows,***REMOVED***we***REMOVED***preserve***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***that***REMOVED***UNC***REMOVED***paths***REMOVED***aren't***REMOVED***broken.***REMOVED******REMOVED***Otherwise,***REMOVED***any***REMOVED***number***REMOVED***of
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***/***REMOVED***characters***REMOVED***are***REMOVED***coalesced***REMOVED***into***REMOVED***one,***REMOVED***unless
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***preserveMultipleSlashes***REMOVED***is***REMOVED***set***REMOVED***to***REMOVED***true.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.preserveMultipleSlashes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p.split('/');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(this.isWindows***REMOVED***&&***REMOVED***/^\/\/[^\/]+/.test(p))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***add***REMOVED***an***REMOVED***extra***REMOVED***''***REMOVED***for***REMOVED***the***REMOVED***one***REMOVED***we***REMOVED***lose
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***['',***REMOVED***...p.split(/\/+/)];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p.split(/\/+/);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***match(f,***REMOVED***partial***REMOVED***=***REMOVED***this.partial)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug('match',***REMOVED***f,***REMOVED***this.pattern);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***short-circuit***REMOVED***in***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***busted***REMOVED***things.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***comments,***REMOVED***etc.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.comment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.empty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***f***REMOVED***===***REMOVED***'';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(f***REMOVED***===***REMOVED***'/'***REMOVED***&&***REMOVED***partial)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***this.options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***windows:***REMOVED***need***REMOVED***to***REMOVED***use***REMOVED***/,***REMOVED***not***REMOVED***\
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.isWindows)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***f***REMOVED***=***REMOVED***f.split('\\').join('/');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***treat***REMOVED***the***REMOVED***test***REMOVED***path***REMOVED***as***REMOVED***a***REMOVED***set***REMOVED***of***REMOVED***pathparts.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ff***REMOVED***=***REMOVED***this.slashSplit(f);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***'split',***REMOVED***ff);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***ONE***REMOVED***of***REMOVED***the***REMOVED***pattern***REMOVED***sets***REMOVED***in***REMOVED***this.set***REMOVED***needs***REMOVED***to***REMOVED***match
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***in***REMOVED***order***REMOVED***for***REMOVED***it***REMOVED***to***REMOVED***be***REMOVED***valid.***REMOVED******REMOVED***If***REMOVED***negating,***REMOVED***then***REMOVED***just***REMOVED***one
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***match***REMOVED***means***REMOVED***that***REMOVED***we***REMOVED***have***REMOVED***failed.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Either***REMOVED***way,***REMOVED***return***REMOVED***on***REMOVED***the***REMOVED***first***REMOVED***hit.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***set***REMOVED***=***REMOVED***this.set;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.debug(this.pattern,***REMOVED***'set',***REMOVED***set);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Find***REMOVED***the***REMOVED***basename***REMOVED***of***REMOVED***the***REMOVED***path***REMOVED***by***REMOVED***looking***REMOVED***for***REMOVED***the***REMOVED***last***REMOVED***non-empty***REMOVED***segment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***filename***REMOVED***=***REMOVED***ff[ff.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!filename)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***ff.length***REMOVED***-***REMOVED***2;***REMOVED***!filename***REMOVED***&&***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***ff[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***set.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pattern***REMOVED***=***REMOVED***set[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***file***REMOVED***=***REMOVED***ff;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.matchBase***REMOVED***&&***REMOVED***pattern.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***[filename];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hit***REMOVED***=***REMOVED***this.matchOne(file,***REMOVED***pattern,***REMOVED***partial);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hit)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.flipNegate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!this.negate;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***didn't***REMOVED***get***REMOVED***any***REMOVED***hits.***REMOVED******REMOVED***this***REMOVED***is***REMOVED***success***REMOVED***if***REMOVED***it's***REMOVED***a***REMOVED***negative
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pattern,***REMOVED***failure***REMOVED***otherwise.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.flipNegate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.negate;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***static***REMOVED***defaults(def)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***minimatch.defaults(def).Minimatch;
***REMOVED******REMOVED******REMOVED******REMOVED***}
}
/****REMOVED***c8***REMOVED***ignore***REMOVED***stop***REMOVED****/
minimatch.AST***REMOVED***=***REMOVED***AST;
minimatch.Minimatch***REMOVED***=***REMOVED***Minimatch;
minimatch.escape***REMOVED***=***REMOVED***escape;
minimatch.unescape***REMOVED***=***REMOVED***unescape;

class***REMOVED***TypeScope***REMOVED***{
***REMOVED******REMOVED***constructor(filename,***REMOVED***source,***REMOVED***offset***REMOVED***=***REMOVED***0,***REMOVED***imports***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),***REMOVED***types***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),***REMOVED***declares***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.filename***REMOVED***=***REMOVED***filename;
***REMOVED******REMOVED******REMOVED******REMOVED***this.source***REMOVED***=***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED***this.offset***REMOVED***=***REMOVED***offset;
***REMOVED******REMOVED******REMOVED******REMOVED***this.imports***REMOVED***=***REMOVED***imports;
***REMOVED******REMOVED******REMOVED******REMOVED***this.types***REMOVED***=***REMOVED***types;
***REMOVED******REMOVED******REMOVED******REMOVED***this.declares***REMOVED***=***REMOVED***declares;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isGenericScope***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.resolvedImportSources***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***this.exportedTypes***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED***this.exportedDeclares***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***}
}
function***REMOVED***resolveTypeElements(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***canCache***REMOVED***=***REMOVED***!typeParameters;
***REMOVED******REMOVED***if***REMOVED***(canCache***REMOVED***&&***REMOVED***node._resolvedElements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node._resolvedElements;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***innerResolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED***node._ownerScope***REMOVED***||***REMOVED***scope***REMOVED***||***REMOVED***ctxToScope(ctx),
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***canCache***REMOVED***?***REMOVED***node._resolvedElements***REMOVED***=***REMOVED***resolved***REMOVED***:***REMOVED***resolved;
}
function***REMOVED***innerResolveTypeElements(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED***if***REMOVED***(node.leadingComments***REMOVED***&&***REMOVED***node.leadingComments.some((c)***REMOVED***=>***REMOVED***c.value.includes("@vue-ignore")))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***props:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***typeElementsToMap(ctx,***REMOVED***node.members,***REMOVED***scope,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSInterfaceDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveInterfaceMembers(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAliasDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAnnotation":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSParenthesizedType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSFunctionType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***props:***REMOVED***{},***REMOVED***calls:***REMOVED***[node]***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSUnionType":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSIntersectionType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mergeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.types.map((t)***REMOVED***=>***REMOVED***resolveTypeElements(ctx,***REMOVED***t,***REMOVED***scope,***REMOVED***typeParameters)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSMappedType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveMappedType(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSIndexedAccessType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***resolveIndexType(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***mergeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.map((t)***REMOVED***=>***REMOVED***resolveTypeElements(ctx,***REMOVED***t,***REMOVED***t._ownerScope)),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"TSUnionType"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSExpressionWithTypeArguments":
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***referenced***REMOVED***by***REMOVED***interface***REMOVED***extends
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeReference":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeName***REMOVED***=***REMOVED***getReferenceName(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((typeName***REMOVED***===***REMOVED***"ExtractPropTypes"***REMOVED***||***REMOVED***typeName***REMOVED***===***REMOVED***"ExtractPublicPropTypes")***REMOVED***&&***REMOVED***node.typeParameters***REMOVED***&&***REMOVED***((_a***REMOVED***=***REMOVED***scope.imports[typeName])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.source)***REMOVED***===***REMOVED***"vue")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveExtractPropTypes(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***typeParams;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((resolved.type***REMOVED***===***REMOVED***"TSTypeAliasDeclaration"***REMOVED***||***REMOVED***resolved.type***REMOVED***===***REMOVED***"TSInterfaceDeclaration")***REMOVED***&&***REMOVED***resolved.typeParameters***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParams***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved.typeParameters.params.forEach((p,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***param***REMOVED***=***REMOVED***typeParameters***REMOVED***&&***REMOVED***typeParameters[p.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!param)***REMOVED***param***REMOVED***=***REMOVED***node.typeParameters.params[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParams[p.name]***REMOVED***=***REMOVED***param;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved._ownerScope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParams
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***typeName***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters***REMOVED***&&***REMOVED***typeParameters[typeName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters[typeName],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***SupportedBuiltinsSet.has(typeName)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveBuiltin(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeName***REMOVED***===***REMOVED***"ReturnType"***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***resolveReturnType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ret)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(ctx,***REMOVED***ret,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Unresolvable***REMOVED***type***REMOVED***reference***REMOVED***or***REMOVED***unsupported***REMOVED***built-in***REMOVED***utility***REMOVED***type`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSImportType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getId(node.argument)***REMOVED***===***REMOVED***"vue"***REMOVED***&&***REMOVED***((_b***REMOVED***=***REMOVED***node.qualifier)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.type)***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***node.qualifier.name***REMOVED***===***REMOVED***"ExtractPropTypes"***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveExtractPropTypes(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolveTypeElements(ctx,***REMOVED***node.typeParameters.params[0],***REMOVED***scope),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceScope***REMOVED***=***REMOVED***importSourceToScope(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***sourceScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(ctx,***REMOVED***resolved,***REMOVED***resolved._ownerScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeQuery":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeElements(ctx,***REMOVED***resolved,***REMOVED***resolved._ownerScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ctx.error(`Unresolvable***REMOVED***type:***REMOVED***${node.type}`,***REMOVED***node,***REMOVED***scope);
}
function***REMOVED***typeElementsToMap(ctx,***REMOVED***elements,***REMOVED***scope***REMOVED***=***REMOVED***ctxToScope(ctx),***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***e***REMOVED***of***REMOVED***elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(e.type***REMOVED***===***REMOVED***"TSPropertySignature"***REMOVED***||***REMOVED***e.type***REMOVED***===***REMOVED***"TSMethodSignature")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***createChildScope(scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.isGenericScope***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(scope.types,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e._ownerScope***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***getId(e.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name***REMOVED***&&***REMOVED***!e.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.props[name]***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(e.key.type***REMOVED***===***REMOVED***"TemplateLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***resolveTemplateKeys(ctx,***REMOVED***e.key,***REMOVED***scope))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.props[key]***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Unsupported***REMOVED***computed***REMOVED***key***REMOVED***in***REMOVED***type***REMOVED***referenced***REMOVED***by***REMOVED***a***REMOVED***macro`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(e.type***REMOVED***===***REMOVED***"TSCallSignatureDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(res.calls***REMOVED***||***REMOVED***(res.calls***REMOVED***=***REMOVED***[])).push(e);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***mergeElements(maps,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(maps.length***REMOVED***===***REMOVED***1)***REMOVED***return***REMOVED***maps[0];
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props:***REMOVED***baseProps***REMOVED***}***REMOVED***=***REMOVED***res;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***props,***REMOVED***calls***REMOVED***}***REMOVED***of***REMOVED***maps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shared.hasOwn(baseProps,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseProps[key]***REMOVED***=***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseProps[key]***REMOVED***=***REMOVED***createProperty(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseProps[key].key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types:***REMOVED***[baseProps[key],***REMOVED***props[key]]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseProps[key]._ownerScope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***baseProps[key].optional***REMOVED***||***REMOVED***props[key].optional
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(calls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(res.calls***REMOVED***||***REMOVED***(res.calls***REMOVED***=***REMOVED***[])).push(...calls);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***createProperty(key,***REMOVED***typeAnnotation,***REMOVED***scope,***REMOVED***optional)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"TSPropertySignature",
***REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED***kind:***REMOVED***"get",
***REMOVED******REMOVED******REMOVED******REMOVED***optional,
***REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"TSTypeAnnotation",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeAnnotation
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***_ownerScope:***REMOVED***scope
***REMOVED******REMOVED***};
}
function***REMOVED***resolveInterfaceMembers(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***typeElementsToMap(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***node.body.body,
***REMOVED******REMOVED******REMOVED******REMOVED***node._ownerScope,
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(node.extends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***ext***REMOVED***of***REMOVED***node.extends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***props,***REMOVED***calls***REMOVED***}***REMOVED***=***REMOVED***resolveTypeElements(ctx,***REMOVED***ext,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shared.hasOwn(base.props,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***base.props[key]***REMOVED***=***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(calls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(base.calls***REMOVED***||***REMOVED***(base.calls***REMOVED***=***REMOVED***[])).push(...calls);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Failed***REMOVED***to***REMOVED***resolve***REMOVED***extends***REMOVED***base***REMOVED***type.
If***REMOVED***this***REMOVED***previously***REMOVED***worked***REMOVED***in***REMOVED***3.2,***REMOVED***you***REMOVED***can***REMOVED***instruct***REMOVED***the***REMOVED***compiler***REMOVED***to***REMOVED***ignore***REMOVED***this***REMOVED***extend***REMOVED***by***REMOVED***adding***REMOVED***/****REMOVED***@vue-ignore***REMOVED****/***REMOVED***before***REMOVED***it,***REMOVED***for***REMOVED***example:

interface***REMOVED***Props***REMOVED***extends***REMOVED***/****REMOVED***@vue-ignore***REMOVED****/***REMOVED***Base***REMOVED***{}

Note:***REMOVED***both***REMOVED***in***REMOVED***3.2***REMOVED***or***REMOVED***with***REMOVED***the***REMOVED***ignore,***REMOVED***the***REMOVED***properties***REMOVED***in***REMOVED***the***REMOVED***base***REMOVED***type***REMOVED***are***REMOVED***treated***REMOVED***as***REMOVED***fallthrough***REMOVED***attrs***REMOVED***at***REMOVED***runtime.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ext,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***base;
}
function***REMOVED***resolveMappedType(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED***let***REMOVED***keys;
***REMOVED******REMOVED***if***REMOVED***(node.nameType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***name,***REMOVED***constraint***REMOVED***}***REMOVED***=***REMOVED***node.typeParameter;
***REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***=***REMOVED***createChildScope(scope);
***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(scope.types,***REMOVED***{***REMOVED***...typeParameters,***REMOVED***[name]:***REMOVED***constraint***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***resolveStringType(ctx,***REMOVED***node.nameType,***REMOVED***scope);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***resolveStringType(ctx,***REMOVED***node.typeParameter.constraint,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res.props[key]***REMOVED***=***REMOVED***createProperty(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"Identifier",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!!node.optional
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***resolveIndexType(ctx,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED***if***REMOVED***(node.indexType.type***REMOVED***===***REMOVED***"TSNumberKeyword")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveArrayElementType(ctx,***REMOVED***node.objectType,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***indexType,***REMOVED***objectType***REMOVED***}***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***keys;
***REMOVED******REMOVED***let***REMOVED***resolved;
***REMOVED******REMOVED***if***REMOVED***(indexType.type***REMOVED***===***REMOVED***"TSStringKeyword")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeElements(ctx,***REMOVED***objectType,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***Object.keys(resolved.props);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***keys***REMOVED***=***REMOVED***resolveStringType(ctx,***REMOVED***indexType,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeElements(ctx,***REMOVED***objectType,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***keys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetType***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***resolved.props[key])***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.typeAnnotation)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targetType._ownerScope***REMOVED***=***REMOVED***resolved.props[key]._ownerScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.push(targetType);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***types;
}
function***REMOVED***resolveArrayElementType(ctx,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSArrayType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node.elementType];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSTupleType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.elementTypes.map(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(t)***REMOVED***=>***REMOVED***t.type***REMOVED***===***REMOVED***"TSNamedTupleMember"***REMOVED***?***REMOVED***t.elementType***REMOVED***:***REMOVED***t
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSTypeReference")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getReferenceName(node)***REMOVED***===***REMOVED***"Array"***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.typeParameters.params;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveArrayElementType(ctx,***REMOVED***resolved,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED***"Failed***REMOVED***to***REMOVED***resolve***REMOVED***element***REMOVED***type***REMOVED***from***REMOVED***target***REMOVED***type",
***REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED***);
}
function***REMOVED***resolveStringType(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node.value];
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSLiteralType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveStringType(ctx,***REMOVED***node.literal,***REMOVED***scope,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSUnionType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.types.map((t)***REMOVED***=>***REMOVED***resolveStringType(ctx,***REMOVED***t,***REMOVED***scope,***REMOVED***typeParameters)).flat();
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TemplateLiteral":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTemplateKeys(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeReference":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveStringType(ctx,***REMOVED***resolved,***REMOVED***scope,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeName.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***node.typeName.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters***REMOVED***&&***REMOVED***typeParameters[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveStringType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters[name],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getParam***REMOVED***=***REMOVED***(index***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***resolveStringType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[index],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Extract":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Exclude":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***excluded***REMOVED***=***REMOVED***getParam(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam().filter((s)***REMOVED***=>***REMOVED***!excluded.includes(s));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uppercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam().map((s)***REMOVED***=>***REMOVED***s.toUpperCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Lowercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam().map((s)***REMOVED***=>***REMOVED***s.toLowerCase());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Capitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam().map(shared.capitalize);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uncapitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getParam().map((s)***REMOVED***=>***REMOVED***s[0].toLowerCase()***REMOVED***+***REMOVED***s.slice(1));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Unsupported***REMOVED***type***REMOVED***when***REMOVED***resolving***REMOVED***index***REMOVED***type",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeName,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ctx.error("Failed***REMOVED***to***REMOVED***resolve***REMOVED***index***REMOVED***type***REMOVED***into***REMOVED***finite***REMOVED***keys",***REMOVED***node,***REMOVED***scope);
}
function***REMOVED***resolveTemplateKeys(ctx,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!node.expressions.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node.quasis[0].value.raw];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***e***REMOVED***=***REMOVED***node.expressions[0];
***REMOVED******REMOVED***const***REMOVED***q***REMOVED***=***REMOVED***node.quasis[0];
***REMOVED******REMOVED***const***REMOVED***leading***REMOVED***=***REMOVED***q***REMOVED***?***REMOVED***q.value.raw***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveStringType(ctx,***REMOVED***e,***REMOVED***scope);
***REMOVED******REMOVED***const***REMOVED***restResolved***REMOVED***=***REMOVED***resolveTemplateKeys(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***node.expressions.slice(1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***quasis:***REMOVED***q***REMOVED***?***REMOVED***node.quasis.slice(1)***REMOVED***:***REMOVED***node.quasis
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED***);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***r***REMOVED***of***REMOVED***resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***rr***REMOVED***of***REMOVED***restResolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.push(leading***REMOVED***+***REMOVED***r***REMOVED***+***REMOVED***rr);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
const***REMOVED***SupportedBuiltinsSet***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set([
***REMOVED******REMOVED***"Partial",
***REMOVED******REMOVED***"Required",
***REMOVED******REMOVED***"Readonly",
***REMOVED******REMOVED***"Pick",
***REMOVED******REMOVED***"Omit"
]);
function***REMOVED***resolveBuiltin(ctx,***REMOVED***node,***REMOVED***name,***REMOVED***scope,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***resolveTypeElements(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED***);
***REMOVED******REMOVED***switch***REMOVED***(name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Partial":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res2***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{},***REMOVED***calls:***REMOVED***t.calls***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(t.props).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res2.props[key]***REMOVED***=***REMOVED***{***REMOVED***...t.props[key],***REMOVED***optional:***REMOVED***true***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Required":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res2***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{},***REMOVED***calls:***REMOVED***t.calls***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(t.props).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res2.props[key]***REMOVED***=***REMOVED***{***REMOVED***...t.props[key],***REMOVED***optional:***REMOVED***false***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Readonly":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***t;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Pick":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***picked***REMOVED***=***REMOVED***resolveStringType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res2***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{},***REMOVED***calls:***REMOVED***t.calls***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***picked)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res2.props[key]***REMOVED***=***REMOVED***t.props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Omit":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***omitted***REMOVED***=***REMOVED***resolveStringType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{},***REMOVED***calls:***REMOVED***t.calls***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***t.props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!omitted.includes(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.props[key]***REMOVED***=***REMOVED***t.props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
}
function***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***name,***REMOVED***onlyExported***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***canCache***REMOVED***=***REMOVED***!(scope***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scope.isGenericScope);
***REMOVED******REMOVED***if***REMOVED***(canCache***REMOVED***&&***REMOVED***node._resolvedReference)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node._resolvedReference;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***innerResolveTypeReference(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***scope***REMOVED***||***REMOVED***ctxToScope(ctx),
***REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***||***REMOVED***getReferenceName(node),
***REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED***onlyExported
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***canCache***REMOVED***?***REMOVED***node._resolvedReference***REMOVED***=***REMOVED***resolved***REMOVED***:***REMOVED***resolved;
}
function***REMOVED***innerResolveTypeReference(ctx,***REMOVED***scope,***REMOVED***name,***REMOVED***node,***REMOVED***onlyExported)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***name***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope.imports[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveTypeFromImport(ctx,***REMOVED***node,***REMOVED***name,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lookupSource***REMOVED***=***REMOVED***node.type***REMOVED***===***REMOVED***"TSTypeQuery"***REMOVED***?***REMOVED***onlyExported***REMOVED***?***REMOVED***scope.exportedDeclares***REMOVED***:***REMOVED***scope.declares***REMOVED***:***REMOVED***onlyExported***REMOVED***?***REMOVED***scope.exportedTypes***REMOVED***:***REMOVED***scope.types;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lookupSource[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***lookupSource[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***globalScopes***REMOVED***=***REMOVED***resolveGlobalScope(ctx);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalScopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***s***REMOVED***of***REMOVED***globalScopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***src***REMOVED***=***REMOVED***node.type***REMOVED***===***REMOVED***"TSTypeQuery"***REMOVED***?***REMOVED***s.declares***REMOVED***:***REMOVED***s.types;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(src[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(ctx.deps***REMOVED***||***REMOVED***(ctx.deps***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set())).add(s.filename);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***src[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***ns***REMOVED***=***REMOVED***innerResolveTypeReference(ctx,***REMOVED***scope,***REMOVED***name[0],***REMOVED***node,***REMOVED***onlyExported);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns.type***REMOVED***!==***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ns***REMOVED***=***REMOVED***ns._ns;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***childScope***REMOVED***=***REMOVED***moduleDeclToScope(ctx,***REMOVED***ns,***REMOVED***ns._ownerScope***REMOVED***||***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***innerResolveTypeReference(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***childScope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name.length***REMOVED***>***REMOVED***2***REMOVED***?***REMOVED***name.slice(1)***REMOVED***:***REMOVED***name[name.length***REMOVED***-***REMOVED***1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!ns.declare
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***getReferenceName(node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ref***REMOVED***=***REMOVED***node.type***REMOVED***===***REMOVED***"TSTypeReference"***REMOVED***?***REMOVED***node.typeName***REMOVED***:***REMOVED***node.type***REMOVED***===***REMOVED***"TSExpressionWithTypeArguments"***REMOVED***?***REMOVED***node.expression***REMOVED***:***REMOVED***node.type***REMOVED***===***REMOVED***"TSImportType"***REMOVED***?***REMOVED***node.qualifier***REMOVED***:***REMOVED***node.exprName;
***REMOVED******REMOVED***if***REMOVED***((ref***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***ref.type)***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ref.name;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((ref***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***ref.type)***REMOVED***===***REMOVED***"TSQualifiedName")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***qualifiedNameToPath(ref);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"default";
***REMOVED******REMOVED***}
}
function***REMOVED***qualifiedNameToPath(node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node.name];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[...qualifiedNameToPath(node.left),***REMOVED***node.right.name];
***REMOVED******REMOVED***}
}
function***REMOVED***resolveGlobalScope(ctx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctx.options.globalTypeFiles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fs***REMOVED***=***REMOVED***resolveFS(ctx);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!fs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error("[vue/compiler-sfc]***REMOVED***globalTypeFiles***REMOVED***requires***REMOVED***fs***REMOVED***access.");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.options.globalTypeFiles.map(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(file)***REMOVED***=>***REMOVED***fileToScope(ctx,***REMOVED***normalizePath(file),***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
let***REMOVED***ts;
let***REMOVED***loadTS;
function***REMOVED***registerTS(_loadTS)***REMOVED***{
***REMOVED******REMOVED***loadTS***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***_loadTS();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***err.message***REMOVED***===***REMOVED***"string"***REMOVED***&&***REMOVED***err.message.includes("Cannot***REMOVED***find***REMOVED***module"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***'Failed***REMOVED***to***REMOVED***load***REMOVED***TypeScript,***REMOVED***which***REMOVED***is***REMOVED***required***REMOVED***for***REMOVED***resolving***REMOVED***imported***REMOVED***types.***REMOVED***Please***REMOVED***make***REMOVED***sure***REMOVED***"typescript"***REMOVED***is***REMOVED***installed***REMOVED***as***REMOVED***a***REMOVED***project***REMOVED***dependency.'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Failed***REMOVED***to***REMOVED***load***REMOVED***TypeScript***REMOVED***for***REMOVED***resolving***REMOVED***imported***REMOVED***types."
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}
function***REMOVED***resolveFS(ctx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctx.fs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.fs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!ts***REMOVED***&&***REMOVED***loadTS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ts***REMOVED***=***REMOVED***loadTS();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***fs***REMOVED***=***REMOVED***ctx.options.fs***REMOVED***||***REMOVED***(ts***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***ts.sys);
***REMOVED******REMOVED***if***REMOVED***(!fs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ctx.fs***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fileExists(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file.endsWith(".vue.ts")***REMOVED***&&***REMOVED***!file.endsWith(".d.vue.ts"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***file.replace(/\.ts$/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fs.fileExists(file);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***readFile(file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(file.endsWith(".vue.ts")***REMOVED***&&***REMOVED***!file.endsWith(".d.vue.ts"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***file***REMOVED***=***REMOVED***file.replace(/\.ts$/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fs.readFile(file);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***realpath:***REMOVED***fs.realpath
***REMOVED******REMOVED***};
}
function***REMOVED***resolveTypeFromImport(ctx,***REMOVED***node,***REMOVED***name,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***source,***REMOVED***imported***REMOVED***}***REMOVED***=***REMOVED***scope.imports[name];
***REMOVED******REMOVED***const***REMOVED***sourceScope***REMOVED***=***REMOVED***importSourceToScope(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***source);
***REMOVED******REMOVED***return***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***sourceScope,***REMOVED***imported,***REMOVED***true);
}
function***REMOVED***importSourceToScope(ctx,***REMOVED***node,***REMOVED***scope,***REMOVED***source)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***fs;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fs***REMOVED***=***REMOVED***resolveFS(ctx);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.error(err.message,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!fs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`No***REMOVED***fs***REMOVED***option***REMOVED***provided***REMOVED***to***REMOVED***\`compileScript\`***REMOVED***in***REMOVED***non-Node***REMOVED***environment.***REMOVED***File***REMOVED***system***REMOVED***access***REMOVED***is***REMOVED***required***REMOVED***for***REMOVED***resolving***REMOVED***imported***REMOVED***types.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***resolved***REMOVED***=***REMOVED***scope.resolvedImportSources[source];
***REMOVED******REMOVED***if***REMOVED***(!resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source.startsWith(".."))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***osSpecificJoinFn***REMOVED***=***REMOVED***process__namespace.platform***REMOVED***===***REMOVED***"win32"***REMOVED***?***REMOVED***path$1.join***REMOVED***:***REMOVED***joinPaths;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filename***REMOVED***=***REMOVED***osSpecificJoinFn(path$1.dirname(scope.filename),***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveExt(filename,***REMOVED***fs);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(source[0]***REMOVED***===***REMOVED***".")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***filename***REMOVED***=***REMOVED***joinPaths(path$1.dirname(scope.filename),***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveExt(filename,***REMOVED***fs);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(loadTS)***REMOVED***ts***REMOVED***=***REMOVED***loadTS();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Failed***REMOVED***to***REMOVED***resolve***REMOVED***import***REMOVED***source***REMOVED***${JSON.stringify(source)}.***REMOVED***typescript***REMOVED***is***REMOVED***required***REMOVED***as***REMOVED***a***REMOVED***peer***REMOVED***dep***REMOVED***for***REMOVED***vue***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***support***REMOVED***resolving***REMOVED***types***REMOVED***from***REMOVED***module***REMOVED***imports.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveWithTS(scope.filename,***REMOVED***source,***REMOVED***ts,***REMOVED***fs);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***scope.resolvedImportSources[source]***REMOVED***=***REMOVED***normalizePath(resolved);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***(ctx.deps***REMOVED***||***REMOVED***(ctx.deps***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set())).add(resolved);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fileToScope(ctx,***REMOVED***resolved);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Failed***REMOVED***to***REMOVED***resolve***REMOVED***import***REMOVED***source***REMOVED***${JSON.stringify(source)}.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***resolveExt(filename,***REMOVED***fs)***REMOVED***{
***REMOVED******REMOVED***filename***REMOVED***=***REMOVED***filename.replace(/\.js$/,***REMOVED***"");
***REMOVED******REMOVED***const***REMOVED***tryResolve***REMOVED***=***REMOVED***(filename2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fs.fileExists(filename2))***REMOVED***return***REMOVED***filename2;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***tryResolve(filename)***REMOVED***||***REMOVED***tryResolve(filename***REMOVED***+***REMOVED***`.ts`)***REMOVED***||***REMOVED***tryResolve(filename***REMOVED***+***REMOVED***`.tsx`)***REMOVED***||***REMOVED***tryResolve(filename***REMOVED***+***REMOVED***`.d.ts`)***REMOVED***||***REMOVED***tryResolve(joinPaths(filename,***REMOVED***`index.ts`))***REMOVED***||***REMOVED***tryResolve(joinPaths(filename,***REMOVED***`index.tsx`))***REMOVED***||***REMOVED***tryResolve(joinPaths(filename,***REMOVED***`index.d.ts`));
}
const***REMOVED***tsConfigCache***REMOVED***=***REMOVED***createCache();
const***REMOVED***tsConfigRefMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
function***REMOVED***resolveWithTS(containingFile,***REMOVED***source,***REMOVED***ts2,***REMOVED***fs)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED***const***REMOVED***configPath***REMOVED***=***REMOVED***ts2.findConfigFile(containingFile,***REMOVED***fs.fileExists);
***REMOVED******REMOVED***let***REMOVED***tsCompilerOptions;
***REMOVED******REMOVED***let***REMOVED***tsResolveCache;
***REMOVED******REMOVED***if***REMOVED***(configPath)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***configs;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedConfigPath***REMOVED***=***REMOVED***normalizePath(configPath);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***tsConfigCache.get(normalizedConfigPath);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configs***REMOVED***=***REMOVED***loadTSConfig(configPath,***REMOVED***ts2,***REMOVED***fs).map((config)***REMOVED***=>***REMOVED***({***REMOVED***config***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tsConfigCache.set(normalizedConfigPath,***REMOVED***configs);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configs***REMOVED***=***REMOVED***cached;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***matchedConfig;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(configs.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchedConfig***REMOVED***=***REMOVED***configs[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[major,***REMOVED***minor]***REMOVED***=***REMOVED***ts2.versionMajorMinor.split(".").map(Number);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***getPattern***REMOVED***=***REMOVED***(base,***REMOVED***p)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***supportsConfigDir***REMOVED***=***REMOVED***major***REMOVED***>***REMOVED***5***REMOVED***||***REMOVED***major***REMOVED***===***REMOVED***5***REMOVED***&&***REMOVED***minor***REMOVED***>=***REMOVED***5;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p.startsWith("${configDir}")***REMOVED***&&***REMOVED***supportsConfigDir***REMOVED***?***REMOVED***normalizePath(p.replace("${configDir}",***REMOVED***path$1.dirname(configPath)))***REMOVED***:***REMOVED***joinPaths(base,***REMOVED***p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***c***REMOVED***of***REMOVED***configs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***normalizePath(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c.config.options.pathsBasePath***REMOVED***||***REMOVED***path$1.dirname(c.config.options.configFilePath)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***included***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***c.config.raw)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.include;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***excluded***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***c.config.raw)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.exclude;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!included***REMOVED***&&***REMOVED***(!base***REMOVED***||***REMOVED***containingFile.startsWith(base))***REMOVED***||***REMOVED***(included***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***included.some((p)***REMOVED***=>***REMOVED***minimatch(containingFile,***REMOVED***getPattern(base,***REMOVED***p)))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(excluded***REMOVED***&&***REMOVED***excluded.some((p)***REMOVED***=>***REMOVED***minimatch(containingFile,***REMOVED***getPattern(base,***REMOVED***p))))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchedConfig***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!matchedConfig)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***matchedConfig***REMOVED***=***REMOVED***configs[configs.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***tsCompilerOptions***REMOVED***=***REMOVED***matchedConfig.config.options;
***REMOVED******REMOVED******REMOVED******REMOVED***tsResolveCache***REMOVED***=***REMOVED***matchedConfig.cache***REMOVED***||***REMOVED***(matchedConfig.cache***REMOVED***=***REMOVED***ts2.createModuleResolutionCache(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***process__namespace.cwd(),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createGetCanonicalFileName(ts2.sys.useCaseSensitiveFileNames),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tsCompilerOptions
***REMOVED******REMOVED******REMOVED******REMOVED***));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tsCompilerOptions***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***ts2.resolveModuleName(
***REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED***containingFile,
***REMOVED******REMOVED******REMOVED******REMOVED***tsCompilerOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***fs,
***REMOVED******REMOVED******REMOVED******REMOVED***tsResolveCache
***REMOVED******REMOVED***);
***REMOVED******REMOVED***if***REMOVED***(res.resolvedModule)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***filename***REMOVED***=***REMOVED***res.resolvedModule.resolvedFileName;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(filename.endsWith(".vue.ts")***REMOVED***&&***REMOVED***!filename.endsWith(".d.vue.ts"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename***REMOVED***=***REMOVED***filename.replace(/\.ts$/,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fs.realpath***REMOVED***?***REMOVED***fs.realpath(filename)***REMOVED***:***REMOVED***filename;
***REMOVED******REMOVED***}
}
function***REMOVED***loadTSConfig(configPath,***REMOVED***ts2,***REMOVED***fs,***REMOVED***visited***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set())***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***parseConfigHost***REMOVED***=***REMOVED***ts2.sys;
***REMOVED******REMOVED***const***REMOVED***config***REMOVED***=***REMOVED***ts2.parseJsonConfigFileContent(
***REMOVED******REMOVED******REMOVED******REMOVED***ts2.readConfigFile(configPath,***REMOVED***fs.readFile).config,
***REMOVED******REMOVED******REMOVED******REMOVED***parseConfigHost,
***REMOVED******REMOVED******REMOVED******REMOVED***path$1.dirname(configPath),
***REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***configPath
***REMOVED******REMOVED***);
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[config];
***REMOVED******REMOVED***visited.add(configPath);
***REMOVED******REMOVED***if***REMOVED***(config.projectReferences)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***ref***REMOVED***of***REMOVED***config.projectReferences)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***refPath***REMOVED***=***REMOVED***ts2.resolveProjectReferencePath(ref);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(visited.has(refPath)***REMOVED***||***REMOVED***!fs.fileExists(refPath))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tsConfigRefMap.set(refPath,***REMOVED***configPath);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.unshift(...loadTSConfig(refPath,***REMOVED***ts2,***REMOVED***fs,***REMOVED***visited));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
const***REMOVED***fileToScopeCache***REMOVED***=***REMOVED***createCache();
function***REMOVED***invalidateTypeCache(filename)***REMOVED***{
***REMOVED******REMOVED***filename***REMOVED***=***REMOVED***normalizePath(filename);
***REMOVED******REMOVED***fileToScopeCache.delete(filename);
***REMOVED******REMOVED***tsConfigCache.delete(filename);
***REMOVED******REMOVED***const***REMOVED***affectedConfig***REMOVED***=***REMOVED***tsConfigRefMap.get(filename);
***REMOVED******REMOVED***if***REMOVED***(affectedConfig)***REMOVED***tsConfigCache.delete(affectedConfig);
}
function***REMOVED***fileToScope(ctx,***REMOVED***filename,***REMOVED***asGlobal***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***fileToScopeCache.get(filename);
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***fs***REMOVED***=***REMOVED***resolveFS(ctx);
***REMOVED******REMOVED***const***REMOVED***source***REMOVED***=***REMOVED***fs.readFile(filename)***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***parseFile(filename,***REMOVED***source,***REMOVED***fs,***REMOVED***ctx.options.babelParserPlugins);
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***new***REMOVED***TypeScope(filename,***REMOVED***source,***REMOVED***0,***REMOVED***recordImports(body));
***REMOVED******REMOVED***recordTypes(ctx,***REMOVED***body,***REMOVED***scope,***REMOVED***asGlobal);
***REMOVED******REMOVED***fileToScopeCache.set(filename,***REMOVED***scope);
***REMOVED******REMOVED***return***REMOVED***scope;
}
function***REMOVED***parseFile(filename,***REMOVED***content,***REMOVED***fs,***REMOVED***parserPlugins)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ext***REMOVED***=***REMOVED***path$1.extname(filename);
***REMOVED******REMOVED***if***REMOVED***(ext***REMOVED***===***REMOVED***".ts"***REMOVED***||***REMOVED***ext***REMOVED***===***REMOVED***".mts"***REMOVED***||***REMOVED***ext***REMOVED***===***REMOVED***".tsx"***REMOVED***||***REMOVED***ext***REMOVED***===***REMOVED***".mtsx")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser$2.parse(content,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***resolveParserPlugins(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ext.slice(1),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parserPlugins,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/\.d\.m?ts$/.test(filename)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"module"
***REMOVED******REMOVED******REMOVED******REMOVED***}).program.body;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***isUnknownTypeSource***REMOVED***=***REMOVED***!/\.[cm]?[tj]sx?$/.test(filename);
***REMOVED******REMOVED***const***REMOVED***arbitraryTypeSource***REMOVED***=***REMOVED***`${filename.slice(0,***REMOVED***-ext.length)}.d${ext}.ts`;
***REMOVED******REMOVED***const***REMOVED***hasArbitraryTypeDeclaration***REMOVED***=***REMOVED***isUnknownTypeSource***REMOVED***&&***REMOVED***fs.fileExists(arbitraryTypeSource);
***REMOVED******REMOVED***if***REMOVED***(hasArbitraryTypeDeclaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser$2.parse(fs.readFile(arbitraryTypeSource),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***resolveParserPlugins("ts",***REMOVED***parserPlugins,***REMOVED***true),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"module"
***REMOVED******REMOVED******REMOVED******REMOVED***}).program.body;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ext***REMOVED***===***REMOVED***".vue")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***descriptor:***REMOVED***{***REMOVED***script,***REMOVED***scriptSetup***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***parse$1(content);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!script***REMOVED***&&***REMOVED***!scriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptOffset***REMOVED***=***REMOVED***script***REMOVED***?***REMOVED***script.loc.start.offset***REMOVED***:***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scriptSetupOffset***REMOVED***=***REMOVED***scriptSetup***REMOVED***?***REMOVED***scriptSetup.loc.start.offset***REMOVED***:***REMOVED***Infinity;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***firstBlock***REMOVED***=***REMOVED***scriptOffset***REMOVED***<***REMOVED***scriptSetupOffset***REMOVED***?***REMOVED***script***REMOVED***:***REMOVED***scriptSetup;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***secondBlock***REMOVED***=***REMOVED***scriptOffset***REMOVED***<***REMOVED***scriptSetupOffset***REMOVED***?***REMOVED***scriptSetup***REMOVED***:***REMOVED***script;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***scriptContent***REMOVED***=***REMOVED***"***REMOVED***".repeat(Math.min(scriptOffset,***REMOVED***scriptSetupOffset))***REMOVED***+***REMOVED***firstBlock.content;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(secondBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptContent***REMOVED***+=***REMOVED***"***REMOVED***".repeat(secondBlock.loc.start.offset***REMOVED***-***REMOVED***script.loc.end.offset)***REMOVED***+***REMOVED***secondBlock.content;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lang***REMOVED***=***REMOVED***(script***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***script.lang)***REMOVED***||***REMOVED***(scriptSetup***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scriptSetup.lang);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parser$2.parse(scriptContent,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugins:***REMOVED***resolveParserPlugins(lang,***REMOVED***parserPlugins),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sourceType:***REMOVED***"module"
***REMOVED******REMOVED******REMOVED******REMOVED***}).program.body;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[];
}
function***REMOVED***ctxToScope(ctx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctx.scope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx.scope;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***body***REMOVED***=***REMOVED***"ast"***REMOVED***in***REMOVED***ctx***REMOVED***?***REMOVED***ctx.ast***REMOVED***:***REMOVED***ctx.scriptAst***REMOVED***?***REMOVED***[...ctx.scriptAst.body,***REMOVED***...ctx.scriptSetupAst.body]***REMOVED***:***REMOVED***ctx.scriptSetupAst.body;
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***new***REMOVED***TypeScope(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.filename,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.source,
***REMOVED******REMOVED******REMOVED******REMOVED***"startOffset"***REMOVED***in***REMOVED***ctx***REMOVED***?***REMOVED***ctx.startOffset***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***"userImports"***REMOVED***in***REMOVED***ctx***REMOVED***?***REMOVED***Object.create(ctx.userImports)***REMOVED***:***REMOVED***recordImports(body)
***REMOVED******REMOVED***);
***REMOVED******REMOVED***recordTypes(ctx,***REMOVED***body,***REMOVED***scope);
***REMOVED******REMOVED***return***REMOVED***ctx.scope***REMOVED***=***REMOVED***scope;
}
function***REMOVED***moduleDeclToScope(ctx,***REMOVED***node,***REMOVED***parentScope)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node._resolvedChildScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node._resolvedChildScope;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***createChildScope(parentScope);
***REMOVED******REMOVED***if***REMOVED***(node.body.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***node.body;
***REMOVED******REMOVED******REMOVED******REMOVED***decl._ownerScope***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***getId(decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED***scope.types[id]***REMOVED***=***REMOVED***scope.exportedTypes[id]***REMOVED***=***REMOVED***decl;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***recordTypes(ctx,***REMOVED***node.body.body,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***node._resolvedChildScope***REMOVED***=***REMOVED***scope;
}
function***REMOVED***createChildScope(parentScope)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***TypeScope(
***REMOVED******REMOVED******REMOVED******REMOVED***parentScope.filename,
***REMOVED******REMOVED******REMOVED******REMOVED***parentScope.source,
***REMOVED******REMOVED******REMOVED******REMOVED***parentScope.offset,
***REMOVED******REMOVED******REMOVED******REMOVED***Object.create(parentScope.imports),
***REMOVED******REMOVED******REMOVED******REMOVED***Object.create(parentScope.types),
***REMOVED******REMOVED******REMOVED******REMOVED***Object.create(parentScope.declares)
***REMOVED******REMOVED***);
}
const***REMOVED***importExportRE***REMOVED***=***REMOVED***/^Import|^Export/;
function***REMOVED***recordTypes(ctx,***REMOVED***body,***REMOVED***scope,***REMOVED***asGlobal***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***types,***REMOVED***declares,***REMOVED***exportedTypes,***REMOVED***exportedDeclares,***REMOVED***imports***REMOVED***}***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED***const***REMOVED***isAmbient***REMOVED***=***REMOVED***asGlobal***REMOVED***?***REMOVED***!body.some((s)***REMOVED***=>***REMOVED***importExportRE.test(s.type))***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***stmt***REMOVED***of***REMOVED***body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asGlobal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAmbient)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(stmt,***REMOVED***types,***REMOVED***declares);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"TSModuleDeclaration"***REMOVED***&&***REMOVED***stmt.global)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***s***REMOVED***of***REMOVED***stmt.body.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(s.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***s.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(s.declaration,***REMOVED***types,***REMOVED***declares);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(s,***REMOVED***types,***REMOVED***declares);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(stmt,***REMOVED***types,***REMOVED***declares);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!asGlobal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***stmt***REMOVED***of***REMOVED***body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportNamedDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(stmt.declaration,***REMOVED***types,***REMOVED***declares);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(stmt.declaration,***REMOVED***exportedTypes,***REMOVED***exportedDeclares);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***spec***REMOVED***of***REMOVED***stmt.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(spec.type***REMOVED***===***REMOVED***"ExportSpecifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***local***REMOVED***=***REMOVED***spec.local.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exported***REMOVED***=***REMOVED***getId(spec.exported);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imports[exported]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***stmt.source.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedTypes[exported]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"TSTypeReference",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeName:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"Identifier",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***local
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_ownerScope:***REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(types[local])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedTypes[exported]***REMOVED***=***REMOVED***types[local];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportAllDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceScope***REMOVED***=***REMOVED***importSourceToScope(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stmt.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stmt.source.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(scope.exportedTypes,***REMOVED***sourceScope.exportedTypes);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration"***REMOVED***&&***REMOVED***stmt.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.declaration.type***REMOVED***!==***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(stmt.declaration,***REMOVED***types,***REMOVED***declares,***REMOVED***"default");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recordType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stmt.declaration,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedTypes,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedDeclares,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"default"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(types[stmt.declaration.name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportedTypes["default"]***REMOVED***=***REMOVED***types[stmt.declaration.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(types))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***types[key];
***REMOVED******REMOVED******REMOVED******REMOVED***node._ownerScope***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node._ns)***REMOVED***node._ns._ownerScope***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.keys(declares))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***declares[key]._ownerScope***REMOVED***=***REMOVED***scope;
***REMOVED******REMOVED***}
}
function***REMOVED***recordType(node,***REMOVED***types,***REMOVED***declares,***REMOVED***overwriteId)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSInterfaceDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSModuleDeclaration":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***overwriteId***REMOVED***||***REMOVED***getId(node.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***existing***REMOVED***=***REMOVED***types[id];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergeNamespaces(existing,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attachNamespace(existing,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types[id]***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attachNamespace(node,***REMOVED***existing);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing.type***REMOVED***!==***REMOVED***node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSInterfaceDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.body.body.push(...node.body.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.members.push(...node.members);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types[id]***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(overwriteId***REMOVED***||***REMOVED***node.id)***REMOVED***types[overwriteId***REMOVED***||***REMOVED***getId(node.id)]***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeAliasDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types[node.id.name]***REMOVED***=***REMOVED***node.typeParameters***REMOVED***?***REMOVED***node***REMOVED***:***REMOVED***node.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSDeclareFunction":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.id)***REMOVED***declares[node.id.name]***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"VariableDeclaration":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***decl***REMOVED***of***REMOVED***node.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(decl.id.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***decl.id.typeAnnotation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declares[decl.id.name]***REMOVED***=***REMOVED***decl.id.typeAnnotation.typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***mergeNamespaces(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***toBody***REMOVED***=***REMOVED***to.body;
***REMOVED******REMOVED***const***REMOVED***fromBody***REMOVED***=***REMOVED***from.body;
***REMOVED******REMOVED***if***REMOVED***(toBody.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fromBody.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergeNamespaces(toBody,***REMOVED***fromBody);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fromBody.body.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"ExportNamedDeclaration",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***toBody,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***"type",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fromBody.type***REMOVED***===***REMOVED***"TSModuleDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***toBody.body.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"ExportNamedDeclaration",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***declaration:***REMOVED***fromBody,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exportKind:***REMOVED***"type",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifiers:***REMOVED***[]
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***toBody.body.push(...fromBody.body);
***REMOVED******REMOVED***}
}
function***REMOVED***attachNamespace(to,***REMOVED***ns)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!to._ns)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***to._ns***REMOVED***=***REMOVED***ns;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mergeNamespaces(to._ns,***REMOVED***ns);
***REMOVED******REMOVED***}
}
function***REMOVED***recordImports(body)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***imports***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***s***REMOVED***of***REMOVED***body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***recordImport(s,***REMOVED***imports);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***imports;
}
function***REMOVED***recordImport(node,***REMOVED***imports)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"ImportDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***s***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***imports[s.local.name]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported:***REMOVED***getImportedName(s),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***node.source.value
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
}
function***REMOVED***inferRuntimeType(ctx,***REMOVED***node,***REMOVED***scope***REMOVED***=***REMOVED***node._ownerScope***REMOVED***||***REMOVED***ctxToScope(ctx),***REMOVED***isKeyOf***REMOVED***=***REMOVED***false,***REMOVED***typeParameters)***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSStringKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNumberKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Number"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSBooleanKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Boolean"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSObjectKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Object"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSNullKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["null"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSInterfaceDeclaration":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***members***REMOVED***=***REMOVED***node.type***REMOVED***===***REMOVED***"TSTypeLiteral"***REMOVED***?***REMOVED***node.members***REMOVED***:***REMOVED***node.body.body;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***m***REMOVED***of***REMOVED***members)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isKeyOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.type***REMOVED***===***REMOVED***"TSPropertySignature"***REMOVED***&&***REMOVED***m.key.type***REMOVED***===***REMOVED***"NumericLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("Number");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(m.type***REMOVED***===***REMOVED***"TSIndexSignature")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***annotation***REMOVED***=***REMOVED***m.parameters[0].typeAnnotation;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(annotation***REMOVED***&&***REMOVED***annotation.type***REMOVED***!==***REMOVED***"Noop")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***annotation.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***UNKNOWN_TYPE)***REMOVED***return***REMOVED***[UNKNOWN_TYPE];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add(type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("String");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(m.type***REMOVED***===***REMOVED***"TSCallSignatureDeclaration"***REMOVED***||***REMOVED***m.type***REMOVED***===***REMOVED***"TSConstructSignatureDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("Function");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("Object");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***types.size***REMOVED***?***REMOVED***Array.from(types)***REMOVED***:***REMOVED***[isKeyOf***REMOVED***?***REMOVED***UNKNOWN_TYPE***REMOVED***:***REMOVED***"Object"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSPropertySignature":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeAnnotation)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSMethodSignature":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSFunctionType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Function"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSArrayType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTupleType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Array"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSLiteralType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.literal.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BooleanLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Boolean"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NumericLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BigIntLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Number"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[UNKNOWN_TYPE];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeReference":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved.type***REMOVED***===***REMOVED***"TSTypeAliasDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved.typeAnnotation.type***REMOVED***===***REMOVED***"TSFunctionType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Function"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeParams***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved.typeParameters.params.forEach((p,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParams[p.name]***REMOVED***=***REMOVED***node.typeParameters.params[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved._ownerScope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isKeyOf,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParams
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(ctx,***REMOVED***resolved,***REMOVED***resolved._ownerScope,***REMOVED***isKeyOf);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeName.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeParameters***REMOVED***&&***REMOVED***typeParameters[node.typeName.name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters[node.typeName.name],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isKeyOf,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isKeyOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.typeName.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"String":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Array":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayLike":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Parameters":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ConstructorParameters":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlyArray":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String",***REMOVED***"Number"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TS***REMOVED***built-in***REMOVED***utility***REMOVED***types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Record":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Partial":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Required":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Readonly":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Pick":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Extract":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[1])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Function":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Object":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Set":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Map":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakSet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakMap":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Date":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Promise":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Error":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uppercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Lowercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Capitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uncapitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlyMap":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlySet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(node.typeName.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Array":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Function":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Object":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Set":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Map":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakSet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakMap":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Date":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Promise":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Error":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node.typeName.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TS***REMOVED***built-in***REMOVED***utility***REMOVED***types
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***https://www.typescriptlang.org/docs/handbook/utility-types.html
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Partial":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Required":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Readonly":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Record":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Pick":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Omit":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"InstanceType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Object"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uppercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Lowercase":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Capitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Uncapitalize":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Parameters":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ConstructorParameters":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlyArray":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Array"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlyMap":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Map"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ReadonlySet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Set"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NonNullable":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).filter((t)***REMOVED***=>***REMOVED***t***REMOVED***!==***REMOVED***"null");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Extract":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[1])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Exclude":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"OmitThisParameter":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeParameters.params[0],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSParenthesizedType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(ctx,***REMOVED***node.typeAnnotation,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSUnionType":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flattenTypes(ctx,***REMOVED***node.types,***REMOVED***scope,***REMOVED***isKeyOf,***REMOVED***typeParameters);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSIntersectionType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flattenTypes(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.types,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isKeyOf,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeParameters
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).filter((t)***REMOVED***=>***REMOVED***t***REMOVED***!==***REMOVED***UNKNOWN_TYPE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSEnumDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferEnumType(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSSymbolKeyword":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Symbol"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSIndexedAccessType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***resolveIndexType(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***flattenTypes(ctx,***REMOVED***types,***REMOVED***scope,***REMOVED***isKeyOf);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassDeclaration":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["Object"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSImportType":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceScope***REMOVED***=***REMOVED***importSourceToScope(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.argument.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***sourceScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(ctx,***REMOVED***resolved,***REMOVED***resolved._ownerScope);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeQuery":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***node.exprName;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***matched***REMOVED***=***REMOVED***scope.declares[id.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(matched)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(ctx,***REMOVED***matched,***REMOVED***matched._ownerScope,***REMOVED***isKeyOf);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***e.g.***REMOVED***readonly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSTypeOperator":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.operator***REMOVED***===***REMOVED***"keyof"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TSAnyKeyword":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isKeyOf)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***["String",***REMOVED***"Number",***REMOVED***"Symbol"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[UNKNOWN_TYPE];
}
function***REMOVED***flattenTypes(ctx,***REMOVED***types,***REMOVED***scope,***REMOVED***isKeyOf***REMOVED***=***REMOVED***false,***REMOVED***typeParameters***REMOVED***=***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(types.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***inferRuntimeType(ctx,***REMOVED***types[0],***REMOVED***scope,***REMOVED***isKeyOf,***REMOVED***typeParameters);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***...new***REMOVED***Set(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[].concat(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...types.map(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(t)***REMOVED***=>***REMOVED***inferRuntimeType(ctx,***REMOVED***t,***REMOVED***scope,***REMOVED***isKeyOf,***REMOVED***typeParameters)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED***];
}
function***REMOVED***inferEnumType(node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***m***REMOVED***of***REMOVED***node.members)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.initializer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(m.initializer.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("String");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NumericLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***types.add("Number");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***types.size***REMOVED***?***REMOVED***[...types]***REMOVED***:***REMOVED***["Number"];
}
function***REMOVED***resolveExtractPropTypes({***REMOVED***props***REMOVED***},***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{***REMOVED***props:***REMOVED***{}***REMOVED***};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED***res.props[key]***REMOVED***=***REMOVED***reverseInferType(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw.key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw.typeAnnotation.typeAnnotation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***reverseInferType(key,***REMOVED***node,***REMOVED***scope,***REMOVED***optional***REMOVED***=***REMOVED***true,***REMOVED***checkObjectSyntax***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(checkObjectSyntax***REMOVED***&&***REMOVED***node.type***REMOVED***===***REMOVED***"TSTypeLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeType***REMOVED***=***REMOVED***findStaticPropertyType(node,***REMOVED***"type");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***requiredType***REMOVED***=***REMOVED***findStaticPropertyType(node,***REMOVED***"required");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***optional2***REMOVED***=***REMOVED***requiredType***REMOVED***&&***REMOVED***requiredType.type***REMOVED***===***REMOVED***"TSLiteralType"***REMOVED***&&***REMOVED***requiredType.literal.type***REMOVED***===***REMOVED***"BooleanLiteral"***REMOVED***?***REMOVED***!requiredType.literal.value***REMOVED***:***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reverseInferType(key,***REMOVED***typeType,***REMOVED***scope,***REMOVED***optional2,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSTypeReference"***REMOVED***&&***REMOVED***node.typeName.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeName.name.endsWith("Constructor"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createProperty(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctorToType(node.typeName.name),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optional
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.typeName.name***REMOVED***===***REMOVED***"PropType"***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createProperty(key,***REMOVED***node.typeParameters.params[0],***REMOVED***scope,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***((node.type***REMOVED***===***REMOVED***"TSTypeReference"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"TSImportType")***REMOVED***&&***REMOVED***node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***t***REMOVED***of***REMOVED***node.typeParameters.params)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inferred***REMOVED***=***REMOVED***reverseInferType(key,***REMOVED***t,***REMOVED***scope,***REMOVED***optional);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inferred)***REMOVED***return***REMOVED***inferred;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***createProperty(key,***REMOVED***{***REMOVED***type:***REMOVED***`TSNullKeyword`***REMOVED***},***REMOVED***scope,***REMOVED***optional);
}
function***REMOVED***ctorToType(ctorType)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ctor***REMOVED***=***REMOVED***ctorType.slice(0,***REMOVED***-11);
***REMOVED******REMOVED***switch***REMOVED***(ctor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"String":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Number":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Boolean":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***type:***REMOVED***`TS${ctor}Keyword`***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Array":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Function":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Object":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Set":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Map":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakSet":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakMap":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Date":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Promise":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"TSTypeReference",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeName:***REMOVED***{***REMOVED***type:***REMOVED***"Identifier",***REMOVED***name:***REMOVED***ctor***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{***REMOVED***type:***REMOVED***`TSNullKeyword`***REMOVED***};
}
function***REMOVED***findStaticPropertyType(node,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***node.members.find(
***REMOVED******REMOVED******REMOVED******REMOVED***(m)***REMOVED***=>***REMOVED***m.type***REMOVED***===***REMOVED***"TSPropertySignature"***REMOVED***&&***REMOVED***!m.computed***REMOVED***&&***REMOVED***getId(m.key)***REMOVED***===***REMOVED***key***REMOVED***&&***REMOVED***m.typeAnnotation
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***prop***REMOVED***&&***REMOVED***prop.typeAnnotation.typeAnnotation;
}
function***REMOVED***resolveReturnType(ctx,***REMOVED***arg,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***let***REMOVED***resolved***REMOVED***=***REMOVED***arg;
***REMOVED******REMOVED***if***REMOVED***(arg.type***REMOVED***===***REMOVED***"TSTypeReference"***REMOVED***||***REMOVED***arg.type***REMOVED***===***REMOVED***"TSTypeQuery"***REMOVED***||***REMOVED***arg.type***REMOVED***===***REMOVED***"TSImportType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***arg,***REMOVED***scope);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!resolved)***REMOVED***return;
***REMOVED******REMOVED***if***REMOVED***(resolved.type***REMOVED***===***REMOVED***"TSFunctionType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(_a***REMOVED***=***REMOVED***resolved.typeAnnotation)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.typeAnnotation;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(resolved.type***REMOVED***===***REMOVED***"TSDeclareFunction")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolved.returnType;
***REMOVED******REMOVED***}
}
function***REMOVED***resolveUnionType(ctx,***REMOVED***node,***REMOVED***scope)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSTypeReference")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***resolved***REMOVED***=***REMOVED***resolveTypeReference(ctx,***REMOVED***node,***REMOVED***scope);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(resolved)***REMOVED***node***REMOVED***=***REMOVED***resolved;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***types;
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSUnionType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***types***REMOVED***=***REMOVED***node.types.flatMap((node2)***REMOVED***=>***REMOVED***resolveUnionType(ctx,***REMOVED***node2,***REMOVED***scope));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***types***REMOVED***=***REMOVED***[node];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***types;
}

const***REMOVED***DEFINE_MODEL***REMOVED***=***REMOVED***"defineModel";
function***REMOVED***processDefineModel(ctx,***REMOVED***node,***REMOVED***declId)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***DEFINE_MODEL))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.hasDefineModelCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***node.typeParameters***REMOVED***&&***REMOVED***node.typeParameters.params[0]***REMOVED***||***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***modelName;
***REMOVED******REMOVED***let***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***arg0***REMOVED***=***REMOVED***node.arguments[0]***REMOVED***&&***REMOVED***CompilerDOM.unwrapTSNode(node.arguments[0]);
***REMOVED******REMOVED***const***REMOVED***hasName***REMOVED***=***REMOVED***arg0***REMOVED***&&***REMOVED***arg0.type***REMOVED***===***REMOVED***"StringLiteral";
***REMOVED******REMOVED***if***REMOVED***(hasName)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***modelName***REMOVED***=***REMOVED***arg0.value;
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***node.arguments[1];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***modelName***REMOVED***=***REMOVED***"modelValue";
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***arg0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.modelDecls[modelName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***model***REMOVED***name***REMOVED***${JSON.stringify(modelName)}`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***optionsString***REMOVED***=***REMOVED***options***REMOVED***&&***REMOVED***ctx.getString(options);
***REMOVED******REMOVED***let***REMOVED***optionsRemoved***REMOVED***=***REMOVED***!options;
***REMOVED******REMOVED***const***REMOVED***runtimeOptionNodes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(options***REMOVED***&&***REMOVED***options.type***REMOVED***===***REMOVED***"ObjectExpression"***REMOVED***&&***REMOVED***!options.properties.some((p)***REMOVED***=>***REMOVED***p.type***REMOVED***===***REMOVED***"SpreadElement"***REMOVED***||***REMOVED***p.computed))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***removed***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***options.properties.length***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***options.properties[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***options.properties[i***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***p.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***next***REMOVED***?***REMOVED***next.start***REMOVED***:***REMOVED***options.end***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((p.type***REMOVED***===***REMOVED***"ObjectProperty"***REMOVED***||***REMOVED***p.type***REMOVED***===***REMOVED***"ObjectMethod")***REMOVED***&&***REMOVED***(p.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***(p.key.name***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***p.key.name***REMOVED***===***REMOVED***"set")***REMOVED***||***REMOVED***p.key.type***REMOVED***===***REMOVED***"StringLiteral"***REMOVED***&&***REMOVED***(p.key.value***REMOVED***===***REMOVED***"get"***REMOVED***||***REMOVED***p.key.value***REMOVED***===***REMOVED***"set")))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionsString***REMOVED***=***REMOVED***optionsString.slice(0,***REMOVED***start***REMOVED***-***REMOVED***options.start)***REMOVED***+***REMOVED***optionsString.slice(end***REMOVED***-***REMOVED***options.start);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removed++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(ctx.startOffset***REMOVED***+***REMOVED***start,***REMOVED***ctx.startOffset***REMOVED***+***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeOptionNodes.push(p);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(removed***REMOVED***===***REMOVED***options.properties.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionsRemoved***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***(hasName***REMOVED***?***REMOVED***arg0.end***REMOVED***:***REMOVED***options.start),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***options.end
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.modelDecls[modelName]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***options:***REMOVED***optionsString,
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeOptionNodes,
***REMOVED******REMOVED******REMOVED******REMOVED***identifier:***REMOVED***declId***REMOVED***&&***REMOVED***declId.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***?***REMOVED***declId.name***REMOVED***:***REMOVED***void***REMOVED***0
***REMOVED******REMOVED***};
***REMOVED******REMOVED***ctx.bindingMetadata[modelName]***REMOVED***=***REMOVED***"props";
***REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***node.callee.start,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***node.callee.end,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.helper("useModel")
***REMOVED******REMOVED***);
***REMOVED******REMOVED***ctx.s.appendLeft(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***(node.arguments.length***REMOVED***?***REMOVED***node.arguments[0].start***REMOVED***:***REMOVED***node.end***REMOVED***-***REMOVED***1),
***REMOVED******REMOVED******REMOVED******REMOVED***`__props,***REMOVED***`***REMOVED***+***REMOVED***(hasName***REMOVED***?***REMOVED***``***REMOVED***:***REMOVED***`${JSON.stringify(modelName)}${optionsRemoved***REMOVED***?***REMOVED***``***REMOVED***:***REMOVED***`,***REMOVED***`}`)
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***genModelProps(ctx)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!ctx.hasDefineModelCall)***REMOVED***return;
***REMOVED******REMOVED***const***REMOVED***isProd***REMOVED***=***REMOVED***!!ctx.options.isProd;
***REMOVED******REMOVED***let***REMOVED***modelPropsDecl***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[name,***REMOVED***{***REMOVED***type,***REMOVED***options:***REMOVED***runtimeOptions***REMOVED***}]***REMOVED***of***REMOVED***Object.entries(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.modelDecls
***REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***skipCheck***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***codegenOptions***REMOVED***=***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***runtimeTypes***REMOVED***=***REMOVED***type***REMOVED***&&***REMOVED***inferRuntimeType(ctx,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(runtimeTypes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasBoolean***REMOVED***=***REMOVED***runtimeTypes.includes("Boolean");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasFunction***REMOVED***=***REMOVED***runtimeTypes.includes("Function");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasUnknownType***REMOVED***=***REMOVED***runtimeTypes.includes(UNKNOWN_TYPE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasUnknownType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasBoolean***REMOVED***||***REMOVED***hasFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeTypes***REMOVED***=***REMOVED***runtimeTypes.filter((t)***REMOVED***=>***REMOVED***t***REMOVED***!==***REMOVED***UNKNOWN_TYPE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipCheck***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeTypes***REMOVED***=***REMOVED***["null"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isProd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***codegenOptions***REMOVED***=***REMOVED***`type:***REMOVED***${toRuntimeTypeString(runtimeTypes)}`***REMOVED***+***REMOVED***(skipCheck***REMOVED***?***REMOVED***",***REMOVED***skipCheck:***REMOVED***true"***REMOVED***:***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasBoolean***REMOVED***||***REMOVED***runtimeOptions***REMOVED***&&***REMOVED***hasFunction)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***codegenOptions***REMOVED***=***REMOVED***`type:***REMOVED***${toRuntimeTypeString(runtimeTypes)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***decl;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(codegenOptions***REMOVED***&&***REMOVED***runtimeOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl***REMOVED***=***REMOVED***ctx.isTS***REMOVED***?***REMOVED***`{***REMOVED***${codegenOptions},***REMOVED***...${runtimeOptions}***REMOVED***}`***REMOVED***:***REMOVED***`Object.assign({***REMOVED***${codegenOptions}***REMOVED***},***REMOVED***${runtimeOptions})`;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(codegenOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl***REMOVED***=***REMOVED***`{***REMOVED***${codegenOptions}***REMOVED***}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(runtimeOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl***REMOVED***=***REMOVED***runtimeOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***decl***REMOVED***=***REMOVED***`{}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***modelPropsDecl***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED******REMOVED******REMOVED***${JSON.stringify(name)}:***REMOVED***${decl},`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***modifierPropName***REMOVED***=***REMOVED***JSON.stringify(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***===***REMOVED***"modelValue"***REMOVED***?***REMOVED***`modelModifiers`***REMOVED***:***REMOVED***`${name}Modifiers`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***modelPropsDecl***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED******REMOVED******REMOVED***${modifierPropName}:***REMOVED***{},`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***`{${modelPropsDecl}
***REMOVED******REMOVED***}`;
}

const***REMOVED***DEFINE_PROPS***REMOVED***=***REMOVED***"defineProps";
const***REMOVED***WITH_DEFAULTS***REMOVED***=***REMOVED***"withDefaults";
function***REMOVED***processDefineProps(ctx,***REMOVED***node,***REMOVED***declId,***REMOVED***isWithDefaults***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***DEFINE_PROPS))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***processWithDefaults(ctx,***REMOVED***node,***REMOVED***declId);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.hasDefinePropsCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***${DEFINE_PROPS}()***REMOVED***call`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.hasDefinePropsCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***ctx.propsRuntimeDecl***REMOVED***=***REMOVED***node.arguments[0];
***REMOVED******REMOVED***if***REMOVED***(ctx.propsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***getObjectOrArrayExpressionKeys(ctx.propsRuntimeDecl))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(key***REMOVED***in***REMOVED***ctx.bindingMetadata))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[key]***REMOVED***=***REMOVED***"props";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.propsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_PROPS}()***REMOVED***cannot***REMOVED***accept***REMOVED***both***REMOVED***type***REMOVED***and***REMOVED***non-type***REMOVED***arguments***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***time.***REMOVED***Use***REMOVED***one***REMOVED***or***REMOVED***the***REMOVED***other.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.propsTypeDecl***REMOVED***=***REMOVED***node.typeParameters.params[0];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!isWithDefaults***REMOVED***&&***REMOVED***declId***REMOVED***&&***REMOVED***declId.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***processPropsDestructure(ctx,***REMOVED***declId);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.propsCall***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED***ctx.propsDecl***REMOVED***=***REMOVED***declId;
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***processWithDefaults(ctx,***REMOVED***node,***REMOVED***declId)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***WITH_DEFAULTS))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!processDefineProps(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***node.arguments[0],
***REMOVED******REMOVED******REMOVED******REMOVED***declId,
***REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${WITH_DEFAULTS}'***REMOVED***first***REMOVED***argument***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***${DEFINE_PROPS}***REMOVED***call.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.arguments[0]***REMOVED***||***REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.propsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${WITH_DEFAULTS}***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***with***REMOVED***type-based***REMOVED***${DEFINE_PROPS}***REMOVED***declaration.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(declId***REMOVED***&&***REMOVED***declId.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${WITH_DEFAULTS}()***REMOVED***is***REMOVED***unnecessary***REMOVED***when***REMOVED***using***REMOVED***destructure***REMOVED***with***REMOVED***${DEFINE_PROPS}().
Reactive***REMOVED***destructure***REMOVED***will***REMOVED***be***REMOVED***disabled***REMOVED***when***REMOVED***using***REMOVED***withDefaults().
Prefer***REMOVED***using***REMOVED***destructure***REMOVED***default***REMOVED***values,***REMOVED***e.g.***REMOVED***const***REMOVED***{***REMOVED***foo***REMOVED***=***REMOVED***1***REMOVED***}***REMOVED***=***REMOVED***defineProps(...).***REMOVED***`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.callee
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.propsRuntimeDefaults***REMOVED***=***REMOVED***node.arguments[1];
***REMOVED******REMOVED***if***REMOVED***(!ctx.propsRuntimeDefaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`The***REMOVED***2nd***REMOVED***argument***REMOVED***of***REMOVED***${WITH_DEFAULTS}***REMOVED***is***REMOVED***required.`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.propsCall***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***genRuntimeProps(ctx)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***propsDecls;
***REMOVED******REMOVED***if***REMOVED***(ctx.propsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***propsDecls***REMOVED***=***REMOVED***ctx.getString(ctx.propsRuntimeDecl).trim();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.propsDestructureDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaults***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***ctx.propsDestructuredBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***d***REMOVED***=***REMOVED***genDestructuredDefaultValue(ctx,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***finalKey***REMOVED***=***REMOVED***getEscapedPropName(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(d)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaults.push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${finalKey}:***REMOVED***${d.valueString}${d.needSkipFactory***REMOVED***?***REMOVED***`,***REMOVED***__skip_${finalKey}:***REMOVED***true`***REMOVED***:***REMOVED***``}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaults.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsDecls***REMOVED***=***REMOVED***`/*@__PURE__*/${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`mergeDefaults`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}(${propsDecls},***REMOVED***{
***REMOVED******REMOVED***${defaults.join(",\n***REMOVED******REMOVED***")}
})`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx.propsTypeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***propsDecls***REMOVED***=***REMOVED***extractRuntimeProps(ctx);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***modelsDecls***REMOVED***=***REMOVED***genModelProps(ctx);
***REMOVED******REMOVED***if***REMOVED***(propsDecls***REMOVED***&&***REMOVED***modelsDecls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`/*@__PURE__*/${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"mergeModels"
***REMOVED******REMOVED******REMOVED******REMOVED***)}(${propsDecls},***REMOVED***${modelsDecls})`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***modelsDecls***REMOVED***||***REMOVED***propsDecls;
***REMOVED******REMOVED***}
}
function***REMOVED***extractRuntimeProps(ctx)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***resolveRuntimePropsFromType(ctx,***REMOVED***ctx.propsTypeDecl);
***REMOVED******REMOVED***if***REMOVED***(!props.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***propStrings***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***hasStaticDefaults***REMOVED***=***REMOVED***hasStaticWithDefaults(ctx);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***propStrings.push(genRuntimePropFromType(ctx,***REMOVED***prop,***REMOVED***hasStaticDefaults));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("bindingMetadata"***REMOVED***in***REMOVED***ctx***REMOVED***&&***REMOVED***!(prop.key***REMOVED***in***REMOVED***ctx.bindingMetadata))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[prop.key]***REMOVED***=***REMOVED***"props";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***propsDecls***REMOVED***=***REMOVED***`{
***REMOVED******REMOVED******REMOVED******REMOVED***${propStrings.join(",\n***REMOVED******REMOVED******REMOVED******REMOVED***")}
***REMOVED******REMOVED***}`;
***REMOVED******REMOVED***if***REMOVED***(ctx.propsRuntimeDefaults***REMOVED***&&***REMOVED***!hasStaticDefaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***propsDecls***REMOVED***=***REMOVED***`/*@__PURE__*/${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"mergeDefaults"
***REMOVED******REMOVED******REMOVED******REMOVED***)}(${propsDecls},***REMOVED***${ctx.getString(ctx.propsRuntimeDefaults)})`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***propsDecls;
}
function***REMOVED***resolveRuntimePropsFromType(ctx,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***elements***REMOVED***=***REMOVED***resolveTypeElements(ctx,***REMOVED***node);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***elements.props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***e***REMOVED***=***REMOVED***elements.props[key];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***inferRuntimeType(ctx,***REMOVED***e);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***skipCheck***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type.includes(UNKNOWN_TYPE))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type.includes("Boolean")***REMOVED***||***REMOVED***type.includes("Function"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type.filter((t)***REMOVED***=>***REMOVED***t***REMOVED***!==***REMOVED***UNKNOWN_TYPE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipCheck***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***["null"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***props.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***required:***REMOVED***!e.optional,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***type***REMOVED***||***REMOVED***[`null`],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipCheck
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***props;
}
function***REMOVED***genRuntimePropFromType(ctx,***REMOVED***{***REMOVED***key,***REMOVED***required,***REMOVED***type,***REMOVED***skipCheck***REMOVED***},***REMOVED***hasStaticDefaults)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***defaultString;
***REMOVED******REMOVED***const***REMOVED***destructured***REMOVED***=***REMOVED***genDestructuredDefaultValue(ctx,***REMOVED***key,***REMOVED***type);
***REMOVED******REMOVED***if***REMOVED***(destructured)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***defaultString***REMOVED***=***REMOVED***`default:***REMOVED***${destructured.valueString}${destructured.needSkipFactory***REMOVED***?***REMOVED***`,***REMOVED***skipFactory:***REMOVED***true`***REMOVED***:***REMOVED***``}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasStaticDefaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***ctx.propsRuntimeDefaults.properties.find(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(node)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"SpreadElement")***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***resolveObjectKey(node.key,***REMOVED***node.computed)***REMOVED***===***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"ObjectProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultString***REMOVED***=***REMOVED***`default:***REMOVED***${ctx.getString(prop.value)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultString***REMOVED***=***REMOVED***`${prop.async***REMOVED***?***REMOVED***"async***REMOVED***"***REMOVED***:***REMOVED***""}${prop.kind***REMOVED***!==***REMOVED***"method"***REMOVED***?***REMOVED***`${prop.kind}***REMOVED***`***REMOVED***:***REMOVED***""}default()***REMOVED***${ctx.getString(prop.body)}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***finalKey***REMOVED***=***REMOVED***getEscapedPropName(key);
***REMOVED******REMOVED***if***REMOVED***(!ctx.options.isProd)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${finalKey}:***REMOVED***{***REMOVED***${concatStrings([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`type:***REMOVED***${toRuntimeTypeString(type)}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`required:***REMOVED***${required}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***skipCheck***REMOVED***&&***REMOVED***"skipCheck:***REMOVED***true",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultString
***REMOVED******REMOVED******REMOVED******REMOVED***])}***REMOVED***}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type.some(
***REMOVED******REMOVED******REMOVED******REMOVED***(el)***REMOVED***=>***REMOVED***el***REMOVED***===***REMOVED***"Boolean"***REMOVED***||***REMOVED***(!hasStaticDefaults***REMOVED***||***REMOVED***defaultString)***REMOVED***&&***REMOVED***el***REMOVED***===***REMOVED***"Function"
***REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${finalKey}:***REMOVED***{***REMOVED***${concatStrings([
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`type:***REMOVED***${toRuntimeTypeString(type)}`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultString
***REMOVED******REMOVED******REMOVED******REMOVED***])}***REMOVED***}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.isCE)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${finalKey}:***REMOVED***${`{***REMOVED***${defaultString},***REMOVED***type:***REMOVED***${toRuntimeTypeString(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***}`}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${finalKey}:***REMOVED***{type:***REMOVED***${toRuntimeTypeString(type)}}`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${finalKey}:***REMOVED***${defaultString***REMOVED***?***REMOVED***`{***REMOVED***${defaultString}***REMOVED***}`***REMOVED***:***REMOVED***`{}`}`;
***REMOVED******REMOVED***}
}
function***REMOVED***hasStaticWithDefaults(ctx)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(ctx.propsRuntimeDefaults***REMOVED***&&***REMOVED***ctx.propsRuntimeDefaults.type***REMOVED***===***REMOVED***"ObjectExpression"***REMOVED***&&***REMOVED***ctx.propsRuntimeDefaults.properties.every(
***REMOVED******REMOVED******REMOVED******REMOVED***(node)***REMOVED***=>***REMOVED***node.type***REMOVED***!==***REMOVED***"SpreadElement"***REMOVED***&&***REMOVED***(!node.computed***REMOVED***||***REMOVED***node.key.type.endsWith("Literal"))
***REMOVED******REMOVED***));
}
function***REMOVED***genDestructuredDefaultValue(ctx,***REMOVED***key,***REMOVED***inferredType)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***destructured***REMOVED***=***REMOVED***ctx.propsDestructuredBindings[key];
***REMOVED******REMOVED***const***REMOVED***defaultVal***REMOVED***=***REMOVED***destructured***REMOVED***&&***REMOVED***destructured.default;
***REMOVED******REMOVED***if***REMOVED***(defaultVal)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***ctx.getString(defaultVal);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unwrapped***REMOVED***=***REMOVED***CompilerDOM.unwrapTSNode(defaultVal);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inferredType***REMOVED***&&***REMOVED***inferredType.length***REMOVED***&&***REMOVED***!inferredType.includes("null"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***valueType***REMOVED***=***REMOVED***inferValueType(unwrapped);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(valueType***REMOVED***&&***REMOVED***!inferredType.includes(valueType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Default***REMOVED***value***REMOVED***of***REMOVED***prop***REMOVED***"${key}"***REMOVED***does***REMOVED***not***REMOVED***match***REMOVED***declared***REMOVED***type.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unwrapped
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needSkipFactory***REMOVED***=***REMOVED***!inferredType***REMOVED***&&***REMOVED***(CompilerDOM.isFunctionType(unwrapped)***REMOVED***||***REMOVED***unwrapped.type***REMOVED***===***REMOVED***"Identifier");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needFactoryWrap***REMOVED***=***REMOVED***!needSkipFactory***REMOVED***&&***REMOVED***!isLiteralNode(unwrapped)***REMOVED***&&***REMOVED***!(inferredType***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***inferredType.includes("Function"));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***valueString:***REMOVED***needFactoryWrap***REMOVED***?***REMOVED***`()***REMOVED***=>***REMOVED***(${value})`***REMOVED***:***REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needSkipFactory
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
}
function***REMOVED***inferValueType(node)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"String";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NumericLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"Number";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BooleanLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"Boolean";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"Object";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"Array";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrowFunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"Function";
***REMOVED******REMOVED***}
}

function***REMOVED***processPropsDestructure(ctx,***REMOVED***declId)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctx.options.propsDestructure***REMOVED***===***REMOVED***"error")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`Props***REMOVED***destructure***REMOVED***is***REMOVED***explicitly***REMOVED***prohibited***REMOVED***via***REMOVED***config.`,***REMOVED***declId);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx.options.propsDestructure***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.propsDestructureDecl***REMOVED***=***REMOVED***declId;
***REMOVED******REMOVED***const***REMOVED***registerBinding***REMOVED***=***REMOVED***(key,***REMOVED***local,***REMOVED***defaultValue)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.propsDestructuredBindings[key]***REMOVED***=***REMOVED***{***REMOVED***local,***REMOVED***default:***REMOVED***defaultValue***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(local***REMOVED***!==***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[local]***REMOVED***=***REMOVED***"props-aliased";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(ctx.bindingMetadata.__propsAliases***REMOVED***||***REMOVED***(ctx.bindingMetadata.__propsAliases***REMOVED***=***REMOVED***{}))[local]***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***declId.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.type***REMOVED***===***REMOVED***"ObjectProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propKey***REMOVED***=***REMOVED***resolveObjectKey(prop.key,***REMOVED***prop.computed);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_PROPS}()***REMOVED***destructure***REMOVED***cannot***REMOVED***use***REMOVED***computed***REMOVED***key.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop.value.type***REMOVED***===***REMOVED***"AssignmentPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***left,***REMOVED***right***REMOVED***}***REMOVED***=***REMOVED***prop.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left.type***REMOVED***!==***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_PROPS}()***REMOVED***destructure***REMOVED***does***REMOVED***not***REMOVED***support***REMOVED***nested***REMOVED***patterns.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(propKey,***REMOVED***left.name,***REMOVED***right);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop.value.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(propKey,***REMOVED***prop.value.name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_PROPS}()***REMOVED***destructure***REMOVED***does***REMOVED***not***REMOVED***support***REMOVED***nested***REMOVED***patterns.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop.value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.propsDestructureRestId***REMOVED***=***REMOVED***prop.argument.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[ctx.propsDestructureRestId]***REMOVED***=***REMOVED***"setup-reactive-const";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***transformDestructuredProps(ctx,***REMOVED***vueImportAliases)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctx.options.propsDestructure***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***rootScope***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***const***REMOVED***scopeStack***REMOVED***=***REMOVED***[rootScope];
***REMOVED******REMOVED***let***REMOVED***currentScope***REMOVED***=***REMOVED***rootScope;
***REMOVED******REMOVED***const***REMOVED***excludedIds***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();
***REMOVED******REMOVED***const***REMOVED***parentStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***propsLocalToPublicMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***ctx.propsDestructuredBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***local***REMOVED***}***REMOVED***=***REMOVED***ctx.propsDestructuredBindings[key];
***REMOVED******REMOVED******REMOVED******REMOVED***rootScope[local]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***propsLocalToPublicMap[local]***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***pushScope()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scopeStack.push(currentScope***REMOVED***=***REMOVED***Object.create(currentScope));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***popScope()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scopeStack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED***currentScope***REMOVED***=***REMOVED***scopeStack[scopeStack.length***REMOVED***-***REMOVED***1]***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***registerLocalBinding(id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***excludedIds.add(id);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentScope[id.name]***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"registerBinding***REMOVED***called***REMOVED***without***REMOVED***active***REMOVED***scope,***REMOVED***something***REMOVED***is***REMOVED***wrong.",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***walkScope(node,***REMOVED***isRoot***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***stmt***REMOVED***of***REMOVED***node.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkVariableDeclaration(stmt,***REMOVED***isRoot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***||***REMOVED***stmt.type***REMOVED***===***REMOVED***"ClassDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.declare***REMOVED***||***REMOVED***!stmt.id)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerLocalBinding(stmt.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((stmt.type***REMOVED***===***REMOVED***"ForOfStatement"***REMOVED***||***REMOVED***stmt.type***REMOVED***===***REMOVED***"ForInStatement")***REMOVED***&&***REMOVED***stmt.left.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkVariableDeclaration(stmt.left);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***stmt.declaration***REMOVED***&&***REMOVED***stmt.declaration.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkVariableDeclaration(stmt.declaration,***REMOVED***isRoot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(stmt.type***REMOVED***===***REMOVED***"LabeledStatement"***REMOVED***&&***REMOVED***stmt.body.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkVariableDeclaration(stmt.body,***REMOVED***isRoot);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***walkVariableDeclaration(stmt,***REMOVED***isRoot***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(stmt.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***decl***REMOVED***of***REMOVED***stmt.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDefineProps***REMOVED***=***REMOVED***isRoot***REMOVED***&&***REMOVED***decl.init***REMOVED***&&***REMOVED***isCallOf(CompilerDOM.unwrapTSNode(decl.init),***REMOVED***"defineProps");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***id***REMOVED***of***REMOVED***CompilerDOM.extractIdentifiers(decl.id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDefineProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***excludedIds.add(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerLocalBinding(id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***rewriteId(id,***REMOVED***parent,***REMOVED***parentStack2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent.type***REMOVED***===***REMOVED***"AssignmentExpression"***REMOVED***&&***REMOVED***id***REMOVED***===***REMOVED***parent.left***REMOVED***||***REMOVED***parent.type***REMOVED***===***REMOVED***"UpdateExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`Cannot***REMOVED***assign***REMOVED***to***REMOVED***destructured***REMOVED***props***REMOVED***as***REMOVED***they***REMOVED***are***REMOVED***readonly.`,***REMOVED***id);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(CompilerDOM.isStaticProperty(parent)***REMOVED***&&***REMOVED***parent.shorthand)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!parent.inPattern***REMOVED***||***REMOVED***CompilerDOM.isInDestructureAssignment(parent,***REMOVED***parentStack2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.end***REMOVED***+***REMOVED***ctx.startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`:***REMOVED***${shared.genPropsAccessExp(propsLocalToPublicMap[id.name])}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.start***REMOVED***+***REMOVED***ctx.startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id.end***REMOVED***+***REMOVED***ctx.startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shared.genPropsAccessExp(propsLocalToPublicMap[id.name])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***checkUsage(node,***REMOVED***method,***REMOVED***alias***REMOVED***=***REMOVED***method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCallOf(node,***REMOVED***alias))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arg***REMOVED***=***REMOVED***CompilerDOM.unwrapTSNode(node.arguments[0]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arg.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***currentScope[arg.name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"${arg.name}"***REMOVED***is***REMOVED***a***REMOVED***destructured***REMOVED***prop***REMOVED***and***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***passed***REMOVED***directly***REMOVED***to***REMOVED***${method}().***REMOVED***Pass***REMOVED***a***REMOVED***getter***REMOVED***()***REMOVED***=>***REMOVED***${arg.name}***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arg
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***ast***REMOVED***=***REMOVED***ctx.scriptSetupAst;
***REMOVED******REMOVED***walkScope(ast,***REMOVED***true);
***REMOVED******REMOVED***estreeWalker.walk(ast,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***enter(node,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***&&***REMOVED***parentStack.push(parent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***&&***REMOVED***parent.type.startsWith("TS")***REMOVED***&&***REMOVED***!CompilerDOM.TS_NODE_TYPES.includes(parent.type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.skip();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkUsage(node,***REMOVED***"watch",***REMOVED***vueImportAliases.watch);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkUsage(node,***REMOVED***"toRef",***REMOVED***vueImportAliases.toRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(CompilerDOM.isFunctionType(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***CompilerDOM.walkFunctionParams(node,***REMOVED***registerLocalBinding);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.body.type***REMOVED***===***REMOVED***"BlockStatement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkScope(node.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"CatchClause")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.param***REMOVED***&&***REMOVED***node.param.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerLocalBinding(node.param);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkScope(node.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"BlockStatement"***REMOVED***&&***REMOVED***!CompilerDOM.isFunctionType(parent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkScope(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(CompilerDOM.isReferencedIdentifier(node,***REMOVED***parent,***REMOVED***parentStack)***REMOVED***&&***REMOVED***!excludedIds.has(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentScope[node.name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rewriteId(node,***REMOVED***parent,***REMOVED***parentStack);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***leave(node,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***&&***REMOVED***parentStack.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"BlockStatement"***REMOVED***&&***REMOVED***!CompilerDOM.isFunctionType(parent)***REMOVED***||***REMOVED***CompilerDOM.isFunctionType(node)***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"CatchClause")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popScope();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}

const***REMOVED***DEFINE_EMITS***REMOVED***=***REMOVED***"defineEmits";
function***REMOVED***processDefineEmits(ctx,***REMOVED***node,***REMOVED***declId)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***DEFINE_EMITS))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.hasDefineEmitCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***${DEFINE_EMITS}()***REMOVED***call`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.hasDefineEmitCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***ctx.emitsRuntimeDecl***REMOVED***=***REMOVED***node.arguments[0];
***REMOVED******REMOVED***if***REMOVED***(node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.emitsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_EMITS}()***REMOVED***cannot***REMOVED***accept***REMOVED***both***REMOVED***type***REMOVED***and***REMOVED***non-type***REMOVED***arguments***REMOVED***at***REMOVED***the***REMOVED***same***REMOVED***time.***REMOVED***Use***REMOVED***one***REMOVED***or***REMOVED***the***REMOVED***other.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.emitsTypeDecl***REMOVED***=***REMOVED***node.typeParameters.params[0];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.emitDecl***REMOVED***=***REMOVED***declId;
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***genRuntimeEmits(ctx)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***emitsDecl***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(ctx.emitsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emitsDecl***REMOVED***=***REMOVED***ctx.getString(ctx.emitsRuntimeDecl).trim();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx.emitsTypeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeDeclaredEmits***REMOVED***=***REMOVED***extractRuntimeEmits(ctx);
***REMOVED******REMOVED******REMOVED******REMOVED***emitsDecl***REMOVED***=***REMOVED***typeDeclaredEmits.size***REMOVED***?***REMOVED***`[${Array.from(typeDeclaredEmits).map((k)***REMOVED***=>***REMOVED***JSON.stringify(k)).join(",***REMOVED***")}]`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.hasDefineModelCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***modelEmitsDecl***REMOVED***=***REMOVED***`[${Object.keys(ctx.modelDecls).map((n)***REMOVED***=>***REMOVED***JSON.stringify(`update:${n}`)).join(",***REMOVED***")}]`;
***REMOVED******REMOVED******REMOVED******REMOVED***emitsDecl***REMOVED***=***REMOVED***emitsDecl***REMOVED***?***REMOVED***`/*@__PURE__*/${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"mergeModels"
***REMOVED******REMOVED******REMOVED******REMOVED***)}(${emitsDecl},***REMOVED***${modelEmitsDecl})`***REMOVED***:***REMOVED***modelEmitsDecl;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***emitsDecl;
}
function***REMOVED***extractRuntimeEmits(ctx)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***emits***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set();
***REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***ctx.emitsTypeDecl;
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSFunctionType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***extractEventNames(ctx,***REMOVED***node.parameters[0],***REMOVED***emits);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***emits;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props,***REMOVED***calls***REMOVED***}***REMOVED***=***REMOVED***resolveTypeElements(ctx,***REMOVED***node);
***REMOVED******REMOVED***let***REMOVED***hasProperty***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emits.add(key);
***REMOVED******REMOVED******REMOVED******REMOVED***hasProperty***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(calls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasProperty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`defineEmits()***REMOVED***type***REMOVED***cannot***REMOVED***mixed***REMOVED***call***REMOVED***signature***REMOVED***and***REMOVED***property***REMOVED***syntax.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***call***REMOVED***of***REMOVED***calls)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extractEventNames(ctx,***REMOVED***call.parameters[0],***REMOVED***emits);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***emits;
}
function***REMOVED***extractEventNames(ctx,***REMOVED***eventName,***REMOVED***emits)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(eventName.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***eventName.typeAnnotation***REMOVED***&&***REMOVED***eventName.typeAnnotation.type***REMOVED***===***REMOVED***"TSTypeAnnotation")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***resolveUnionType(ctx,***REMOVED***eventName.typeAnnotation.typeAnnotation);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***type***REMOVED***of***REMOVED***types)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type.type***REMOVED***===***REMOVED***"TSLiteralType")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type.literal.type***REMOVED***!==***REMOVED***"UnaryExpression"***REMOVED***&&***REMOVED***type.literal.type***REMOVED***!==***REMOVED***"TemplateLiteral")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emits.add(String(type.literal.value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***DEFINE_EXPOSE***REMOVED***=***REMOVED***"defineExpose";
function***REMOVED***processDefineExpose(ctx,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isCallOf(node,***REMOVED***DEFINE_EXPOSE))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.hasDefineExposeCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***${DEFINE_EXPOSE}()***REMOVED***call`,***REMOVED***node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.hasDefineExposeCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}

const***REMOVED***DEFINE_SLOTS***REMOVED***=***REMOVED***"defineSlots";
function***REMOVED***processDefineSlots(ctx,***REMOVED***node,***REMOVED***declId)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***DEFINE_SLOTS))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.hasDefineSlotsCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***${DEFINE_SLOTS}()***REMOVED***call`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ctx.hasDefineSlotsCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(node.arguments.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`${DEFINE_SLOTS}()***REMOVED***cannot***REMOVED***accept***REMOVED***arguments`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(declId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***node.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.startOffset***REMOVED***+***REMOVED***node.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${ctx.helper("useSlots")}()`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}

const***REMOVED***DEFINE_OPTIONS***REMOVED***=***REMOVED***"defineOptions";
function***REMOVED***processDefineOptions(ctx,***REMOVED***node)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isCallOf(node,***REMOVED***DEFINE_OPTIONS))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.hasDefineOptionsCall)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`duplicate***REMOVED***${DEFINE_OPTIONS}()***REMOVED***call`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(node.typeParameters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(`${DEFINE_OPTIONS}()***REMOVED***cannot***REMOVED***accept***REMOVED***type***REMOVED***arguments`,***REMOVED***node);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!node.arguments[0])***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***ctx.hasDefineOptionsCall***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***ctx.optionsRuntimeDecl***REMOVED***=***REMOVED***CompilerDOM.unwrapTSNode(node.arguments[0]);
***REMOVED******REMOVED***let***REMOVED***propsOption***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***emitsOption***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***exposeOption***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***let***REMOVED***slotsOption***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(ctx.optionsRuntimeDecl.type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prop***REMOVED***of***REMOVED***ctx.optionsRuntimeDecl.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((prop.type***REMOVED***===***REMOVED***"ObjectProperty"***REMOVED***||***REMOVED***prop.type***REMOVED***===***REMOVED***"ObjectMethod")***REMOVED***&&***REMOVED***prop.key.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(prop.key.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"props":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsOption***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"emits":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitsOption***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"expose":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposeOption***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"slots":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotsOption***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(propsOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_OPTIONS}()***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***declare***REMOVED***props.***REMOVED***Use***REMOVED***${DEFINE_PROPS}()***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsOption
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(emitsOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_OPTIONS}()***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***declare***REMOVED***emits.***REMOVED***Use***REMOVED***${DEFINE_EMITS}()***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitsOption
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(exposeOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_OPTIONS}()***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***declare***REMOVED***expose.***REMOVED***Use***REMOVED***${DEFINE_EXPOSE}()***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposeOption
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(slotsOption)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_OPTIONS}()***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***to***REMOVED***declare***REMOVED***slots.***REMOVED***Use***REMOVED***${DEFINE_SLOTS}()***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotsOption
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***true;
}

function***REMOVED***processAwait(ctx,***REMOVED***node,***REMOVED***needSemi,***REMOVED***isStatement)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***argumentStart***REMOVED***=***REMOVED***node.argument.extra***REMOVED***&&***REMOVED***node.argument.extra.parenthesized***REMOVED***?***REMOVED***node.argument.extra.parenStart***REMOVED***:***REMOVED***node.argument.start;
***REMOVED******REMOVED***const***REMOVED***startOffset***REMOVED***=***REMOVED***ctx.startOffset;
***REMOVED******REMOVED***const***REMOVED***argumentStr***REMOVED***=***REMOVED***ctx.descriptor.source.slice(
***REMOVED******REMOVED******REMOVED******REMOVED***argumentStart***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED***node.argument.end***REMOVED***+***REMOVED***startOffset
***REMOVED******REMOVED***);
***REMOVED******REMOVED***const***REMOVED***containsNestedAwait***REMOVED***=***REMOVED***/\bawait\b/.test(argumentStr);
***REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED***node.start***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED***argumentStart***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED***`${needSemi***REMOVED***?***REMOVED***`;`***REMOVED***:***REMOVED***``}(
***REMOVED******REMOVED***([__temp,__restore]***REMOVED***=***REMOVED***${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`withAsyncContext`
***REMOVED******REMOVED******REMOVED******REMOVED***)}(${containsNestedAwait***REMOVED***?***REMOVED***`async***REMOVED***`***REMOVED***:***REMOVED***``}()***REMOVED***=>***REMOVED***`
***REMOVED******REMOVED***);
***REMOVED******REMOVED***ctx.s.appendLeft(
***REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED***`)),
***REMOVED******REMOVED***${isStatement***REMOVED***?***REMOVED***``***REMOVED***:***REMOVED***`__temp***REMOVED***=***REMOVED***`}await***REMOVED***__temp,
***REMOVED******REMOVED***__restore()${isStatement***REMOVED***?***REMOVED***``***REMOVED***:***REMOVED***`,
***REMOVED******REMOVED***__temp`}
)`
***REMOVED******REMOVED***);
}

const***REMOVED***MACROS***REMOVED***=***REMOVED***[
***REMOVED******REMOVED***DEFINE_PROPS,
***REMOVED******REMOVED***DEFINE_EMITS,
***REMOVED******REMOVED***DEFINE_EXPOSE,
***REMOVED******REMOVED***DEFINE_OPTIONS,
***REMOVED******REMOVED***DEFINE_SLOTS,
***REMOVED******REMOVED***DEFINE_MODEL,
***REMOVED******REMOVED***WITH_DEFAULTS
];
function***REMOVED***compileScript(sfc,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b,***REMOVED***_c;
***REMOVED******REMOVED***if***REMOVED***(!options.id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warnOnce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`compileScript***REMOVED***now***REMOVED***requires***REMOVED***passing***REMOVED***the***REMOVED***\`id\`***REMOVED***option.
Upgrade***REMOVED***your***REMOVED***vite***REMOVED***or***REMOVED***vue-loader***REMOVED***version***REMOVED***for***REMOVED***compatibility***REMOVED***with***REMOVED***the***REMOVED***latest***REMOVED***experimental***REMOVED***proposals.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***script,***REMOVED***scriptSetup,***REMOVED***source,***REMOVED***filename***REMOVED***}***REMOVED***=***REMOVED***sfc;
***REMOVED******REMOVED***const***REMOVED***hoistStatic***REMOVED***=***REMOVED***options.hoistStatic***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***!script;
***REMOVED******REMOVED***const***REMOVED***scopeId***REMOVED***=***REMOVED***options.id***REMOVED***?***REMOVED***options.id.replace(/^data-v-/,***REMOVED***"")***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED***const***REMOVED***scriptLang***REMOVED***=***REMOVED***script***REMOVED***&&***REMOVED***script.lang;
***REMOVED******REMOVED***const***REMOVED***scriptSetupLang***REMOVED***=***REMOVED***scriptSetup***REMOVED***&&***REMOVED***scriptSetup.lang;
***REMOVED******REMOVED***const***REMOVED***isJSOrTS***REMOVED***=***REMOVED***isJS(scriptLang,***REMOVED***scriptSetupLang)***REMOVED***||***REMOVED***isTS(scriptLang,***REMOVED***scriptSetupLang);
***REMOVED******REMOVED***if***REMOVED***(script***REMOVED***&&***REMOVED***scriptSetup***REMOVED***&&***REMOVED***scriptLang***REMOVED***!==***REMOVED***scriptSetupLang)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`[@vue/compiler-sfc]***REMOVED***<script>***REMOVED***and***REMOVED***<script***REMOVED***setup>***REMOVED***must***REMOVED***have***REMOVED***the***REMOVED***same***REMOVED***language***REMOVED***type.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!scriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!script)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(`[@vue/compiler-sfc]***REMOVED***SFC***REMOVED***contains***REMOVED***no***REMOVED***<script>***REMOVED***tags.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(script.lang***REMOVED***&&***REMOVED***!isJSOrTS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***script;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ctx2***REMOVED***=***REMOVED***new***REMOVED***ScriptCompileContext(sfc,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***processNormalScript(ctx2,***REMOVED***scopeId);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(scriptSetupLang***REMOVED***&&***REMOVED***!isJSOrTS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***scriptSetup;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***ctx***REMOVED***=***REMOVED***new***REMOVED***ScriptCompileContext(sfc,***REMOVED***options);
***REMOVED******REMOVED***const***REMOVED***scriptBindings***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***const***REMOVED***setupBindings***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***let***REMOVED***defaultExport;
***REMOVED******REMOVED***let***REMOVED***hasAwait***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***hasInlinedSsrRenderFn***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***startOffset***REMOVED***=***REMOVED***ctx.startOffset;
***REMOVED******REMOVED***const***REMOVED***endOffset***REMOVED***=***REMOVED***ctx.endOffset;
***REMOVED******REMOVED***const***REMOVED***scriptStartOffset***REMOVED***=***REMOVED***script***REMOVED***&&***REMOVED***script.loc.start.offset;
***REMOVED******REMOVED***const***REMOVED***scriptEndOffset***REMOVED***=***REMOVED***script***REMOVED***&&***REMOVED***script.loc.end.offset;
***REMOVED******REMOVED***function***REMOVED***hoistNode(node)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***node.start***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***end***REMOVED***=***REMOVED***node.end***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.trailingComments***REMOVED***&&***REMOVED***node.trailingComments.length***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastCommentNode***REMOVED***=***REMOVED***node.trailingComments[node.trailingComments.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***lastCommentNode.end***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(end***REMOVED***<=***REMOVED***source.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/\s/.test(source.charAt(end)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.move(start,***REMOVED***end,***REMOVED***0);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***registerUserImport(source2,***REMOVED***local,***REMOVED***imported,***REMOVED***isType,***REMOVED***isFromSetup,***REMOVED***needTemplateUsageCheck)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isUsedInTemplate***REMOVED***=***REMOVED***needTemplateUsageCheck;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needTemplateUsageCheck***REMOVED***&&***REMOVED***ctx.isTS***REMOVED***&&***REMOVED***sfc.template***REMOVED***&&***REMOVED***!sfc.template.src***REMOVED***&&***REMOVED***!sfc.template.lang)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isUsedInTemplate***REMOVED***=***REMOVED***isImportUsed(local,***REMOVED***sfc);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.userImports[local]***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isType,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***source2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFromSetup,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isUsedInTemplate
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***checkInvalidScopeReference(node,***REMOVED***method)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***CompilerDOM.walkIdentifiers(node,***REMOVED***(id)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***binding***REMOVED***=***REMOVED***setupBindings[id.name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(binding***REMOVED***&&***REMOVED***binding***REMOVED***!==***REMOVED***"literal-const")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\`${method}()\`***REMOVED***in***REMOVED***<script***REMOVED***setup>***REMOVED***cannot***REMOVED***reference***REMOVED***locally***REMOVED***declared***REMOVED***variables***REMOVED***because***REMOVED***it***REMOVED***will***REMOVED***be***REMOVED***hoisted***REMOVED***outside***REMOVED***of***REMOVED***the***REMOVED***setup()***REMOVED***function.***REMOVED***If***REMOVED***your***REMOVED***component***REMOVED***options***REMOVED***require***REMOVED***initialization***REMOVED***in***REMOVED***the***REMOVED***module***REMOVED***scope,***REMOVED***use***REMOVED***a***REMOVED***separate***REMOVED***normal***REMOVED***<script>***REMOVED***to***REMOVED***export***REMOVED***the***REMOVED***options***REMOVED***instead.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***scriptAst***REMOVED***=***REMOVED***ctx.scriptAst;
***REMOVED******REMOVED***const***REMOVED***scriptSetupAst***REMOVED***=***REMOVED***ctx.scriptSetupAst;
***REMOVED******REMOVED***if***REMOVED***(scriptAst)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***scriptAst.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ImportDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***specifier***REMOVED***of***REMOVED***node.specifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imported***REMOVED***=***REMOVED***getImportedName(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerUserImport(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.source.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier.local.name,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***specifier.type***REMOVED***===***REMOVED***"ImportSpecifier"***REMOVED***&&***REMOVED***specifier.importKind***REMOVED***===***REMOVED***"type",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!options.inlineTemplate
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***scriptSetupAst.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ImportDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistNode(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***removed***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***removeSpecifier***REMOVED***=***REMOVED***(i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***removeLeft***REMOVED***=***REMOVED***i***REMOVED***>***REMOVED***removed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removed++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***current***REMOVED***=***REMOVED***node.specifiers[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***node.specifiers[i***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeLeft***REMOVED***?***REMOVED***node.specifiers[i***REMOVED***-***REMOVED***1].end***REMOVED***+***REMOVED***startOffset***REMOVED***:***REMOVED***current.start***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***&&***REMOVED***!removeLeft***REMOVED***?***REMOVED***next.start***REMOVED***+***REMOVED***startOffset***REMOVED***:***REMOVED***current.end***REMOVED***+***REMOVED***startOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***node.specifiers.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***specifier***REMOVED***=***REMOVED***node.specifiers[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***local***REMOVED***=***REMOVED***specifier.local.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***imported***REMOVED***=***REMOVED***getImportedName(specifier);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***source2***REMOVED***=***REMOVED***node.source.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existing***REMOVED***=***REMOVED***ctx.userImports[local];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source2***REMOVED***===***REMOVED***"vue"***REMOVED***&&***REMOVED***MACROS.includes(imported))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(local***REMOVED***===***REMOVED***imported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnOnce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\`${imported}\`***REMOVED***is***REMOVED***a***REMOVED***compiler***REMOVED***macro***REMOVED***and***REMOVED***no***REMOVED***longer***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***imported.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\`${imported}\`***REMOVED***is***REMOVED***a***REMOVED***compiler***REMOVED***macro***REMOVED***and***REMOVED***cannot***REMOVED***be***REMOVED***aliased***REMOVED***to***REMOVED***a***REMOVED***different***REMOVED***name.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSpecifier(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(existing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing.source***REMOVED***===***REMOVED***source2***REMOVED***&&***REMOVED***existing.imported***REMOVED***===***REMOVED***imported)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSpecifier(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`different***REMOVED***imports***REMOVED***aliased***REMOVED***to***REMOVED***same***REMOVED***local***REMOVED***name.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***specifier
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerUserImport(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***local,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***imported,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.importKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***specifier.type***REMOVED***===***REMOVED***"ImportSpecifier"***REMOVED***&&***REMOVED***specifier.importKind***REMOVED***===***REMOVED***"type",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!options.inlineTemplate
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.specifiers.length***REMOVED***&&***REMOVED***removed***REMOVED***===***REMOVED***node.specifiers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(node.start***REMOVED***+***REMOVED***startOffset,***REMOVED***node.end***REMOVED***+***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***vueImportAliases***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***ctx.userImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***source:***REMOVED***source2,***REMOVED***imported,***REMOVED***local***REMOVED***}***REMOVED***=***REMOVED***ctx.userImports[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source2***REMOVED***===***REMOVED***"vue")***REMOVED***vueImportAliases[imported]***REMOVED***=***REMOVED***local;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(script***REMOVED***&&***REMOVED***scriptAst)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***scriptAst.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultExport***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***optionProperties;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultExport.declaration.type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionProperties***REMOVED***=***REMOVED***defaultExport.declaration.properties;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(defaultExport.declaration.type***REMOVED***===***REMOVED***"CallExpression"***REMOVED***&&***REMOVED***defaultExport.declaration.arguments[0]***REMOVED***&&***REMOVED***defaultExport.declaration.arguments[0].type***REMOVED***===***REMOVED***"ObjectExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionProperties***REMOVED***=***REMOVED***defaultExport.declaration.arguments[0].properties;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optionProperties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***p***REMOVED***of***REMOVED***optionProperties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.type***REMOVED***===***REMOVED***"ObjectProperty"***REMOVED***&&***REMOVED***p.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***p.key.name***REMOVED***===***REMOVED***"name")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.hasDefaultExportName***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((p.type***REMOVED***===***REMOVED***"ObjectMethod"***REMOVED***||***REMOVED***p.type***REMOVED***===***REMOVED***"ObjectProperty")***REMOVED***&&***REMOVED***p.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***p.key.name***REMOVED***===***REMOVED***"render")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.hasDefaultExportRender***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***start***REMOVED***=***REMOVED***node.start***REMOVED***+***REMOVED***scriptStartOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***end***REMOVED***=***REMOVED***node.declaration.start***REMOVED***+***REMOVED***scriptStartOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(start,***REMOVED***end,***REMOVED***`const***REMOVED***${normalScriptDefaultVar}***REMOVED***=***REMOVED***`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultSpecifier***REMOVED***=***REMOVED***node.specifiers.find(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(s)***REMOVED***=>***REMOVED***s.exported.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***s.exported.name***REMOVED***===***REMOVED***"default"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultSpecifier)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultExport***REMOVED***=***REMOVED***node;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.specifiers.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultSpecifier.start***REMOVED***+***REMOVED***scriptStartOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***defaultSpecifier.end***REMOVED***+***REMOVED***scriptStartOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.start***REMOVED***+***REMOVED***scriptStartOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.end***REMOVED***+***REMOVED***scriptStartOffset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.source)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prepend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`import***REMOVED***{***REMOVED***${defaultSpecifier.local.name}***REMOVED***as***REMOVED***${normalScriptDefaultVar}***REMOVED***}***REMOVED***from***REMOVED***'${node.source.value}'
`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptEndOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
const***REMOVED***${normalScriptDefaultVar}***REMOVED***=***REMOVED***${defaultSpecifier.local.name}
`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.declaration)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkDeclaration(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"script",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.declaration,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptBindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vueImportAliases,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***((node.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ClassDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"TSEnumDeclaration")***REMOVED***&&***REMOVED***!node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkDeclaration(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"script",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scriptBindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vueImportAliases,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scriptStartOffset***REMOVED***>***REMOVED***startOffset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/\n$/.test(script.content.trim()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendLeft(scriptEndOffset,***REMOVED***`
`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.move(scriptStartOffset,***REMOVED***scriptEndOffset,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***scriptSetupAst.body)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExpressionStatement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expr***REMOVED***=***REMOVED***CompilerDOM.unwrapTSNode(node.expression);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(processDefineProps(ctx,***REMOVED***expr)***REMOVED***||***REMOVED***processDefineEmits(ctx,***REMOVED***expr)***REMOVED***||***REMOVED***processDefineOptions(ctx,***REMOVED***expr)***REMOVED***||***REMOVED***processDefineSlots(ctx,***REMOVED***expr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(node.start***REMOVED***+***REMOVED***startOffset,***REMOVED***node.end***REMOVED***+***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(processDefineExpose(ctx,***REMOVED***expr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***callee***REMOVED***=***REMOVED***expr.callee;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callee.start***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callee.end***REMOVED***+***REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"__expose"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processDefineModel(ctx,***REMOVED***expr);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***&&***REMOVED***!node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***total***REMOVED***=***REMOVED***node.declarations.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***left***REMOVED***=***REMOVED***total;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***lastNonRemoved;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***total;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***decl***REMOVED***=***REMOVED***node.declarations[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***init***REMOVED***=***REMOVED***decl.init***REMOVED***&&***REMOVED***CompilerDOM.unwrapTSNode(decl.init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(init)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(processDefineOptions(ctx,***REMOVED***init))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${DEFINE_OPTIONS}()***REMOVED***has***REMOVED***no***REMOVED***returning***REMOVED***value,***REMOVED***it***REMOVED***cannot***REMOVED***be***REMOVED***assigned.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDefineProps***REMOVED***=***REMOVED***processDefineProps(ctx,***REMOVED***init,***REMOVED***decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.propsDestructureRestId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupBindings[ctx.propsDestructureRestId]***REMOVED***=***REMOVED***"setup-reactive-const";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isDefineEmits***REMOVED***=***REMOVED***!isDefineProps***REMOVED***&&***REMOVED***processDefineEmits(ctx,***REMOVED***init,***REMOVED***decl.id);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isDefineEmits***REMOVED***&&***REMOVED***(processDefineSlots(ctx,***REMOVED***init,***REMOVED***decl.id)***REMOVED***||***REMOVED***processDefineModel(ctx,***REMOVED***init,***REMOVED***decl.id));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDefineProps***REMOVED***&&***REMOVED***!ctx.propsDestructureRestId***REMOVED***&&***REMOVED***ctx.propsDestructureDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(left***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(node.start***REMOVED***+***REMOVED***startOffset,***REMOVED***node.end***REMOVED***+***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***decl.start***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***end***REMOVED***=***REMOVED***decl.end***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***===***REMOVED***total***REMOVED***-***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***node.declarations[lastNonRemoved].end***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***node.declarations[i***REMOVED***+***REMOVED***1].start***REMOVED***+***REMOVED***startOffset;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(start,***REMOVED***end);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***left--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isDefineEmits)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***init.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***init.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"__emit"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastNonRemoved***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isAllLiteral***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((node.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ClassDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"TSEnumDeclaration")***REMOVED***&&***REMOVED***!node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isAllLiteral***REMOVED***=***REMOVED***walkDeclaration(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"scriptSetup",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupBindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vueImportAliases,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!!ctx.propsDestructureDecl
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hoistStatic***REMOVED***&&***REMOVED***isAllLiteral)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistNode(node);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***&&***REMOVED***!node.declare***REMOVED***||***REMOVED***node.type.endsWith("Statement"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***[scriptSetupAst.body];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***estreeWalker.walk(node,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enter(child,***REMOVED***parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(CompilerDOM.isFunctionType(child))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.skip();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***===***REMOVED***"BlockStatement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scope.push(child.body);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***===***REMOVED***"AwaitExpression")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAwait***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentScope***REMOVED***=***REMOVED***scope[scope.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needsSemi***REMOVED***=***REMOVED***currentScope.some((n,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(scope.length***REMOVED***===***REMOVED***1***REMOVED***||***REMOVED***i***REMOVED***>***REMOVED***0)***REMOVED***&&***REMOVED***n.type***REMOVED***===***REMOVED***"ExpressionStatement"***REMOVED***&&***REMOVED***n.start***REMOVED***===***REMOVED***child.start;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processAwait(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needsSemi,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.type***REMOVED***===***REMOVED***"ExpressionStatement"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exit(node2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node2.type***REMOVED***===***REMOVED***"BlockStatement")***REMOVED***scope.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***node.exportKind***REMOVED***!==***REMOVED***"type"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ExportAllDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ExportDefaultDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`<script***REMOVED***setup>***REMOVED***cannot***REMOVED***contain***REMOVED***ES***REMOVED***module***REMOVED***exports.***REMOVED***If***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***a***REMOVED***previous***REMOVED***version***REMOVED***of***REMOVED***<script***REMOVED***setup>,***REMOVED***please***REMOVED***consult***REMOVED***the***REMOVED***updated***REMOVED***RFC***REMOVED***at***REMOVED***https://github.com/vuejs/rfcs/pull/227.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.isTS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type.startsWith("TS")***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ExportNamedDeclaration"***REMOVED***&&***REMOVED***node.exportKind***REMOVED***===***REMOVED***"type"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"VariableDeclaration"***REMOVED***&&***REMOVED***node.declare)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***!==***REMOVED***"TSEnumDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hoistNode(node);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.propsDestructureDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***transformDestructuredProps(ctx,***REMOVED***vueImportAliases);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***checkInvalidScopeReference(ctx.propsRuntimeDecl,***REMOVED***DEFINE_PROPS);
***REMOVED******REMOVED***checkInvalidScopeReference(ctx.propsRuntimeDefaults,***REMOVED***DEFINE_PROPS);
***REMOVED******REMOVED***checkInvalidScopeReference(ctx.propsDestructureDecl,***REMOVED***DEFINE_PROPS);
***REMOVED******REMOVED***checkInvalidScopeReference(ctx.emitsRuntimeDecl,***REMOVED***DEFINE_EMITS);
***REMOVED******REMOVED***checkInvalidScopeReference(ctx.optionsRuntimeDecl,***REMOVED***DEFINE_OPTIONS);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***runtimeOptionNodes***REMOVED***}***REMOVED***of***REMOVED***Object.values(ctx.modelDecls))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***node***REMOVED***of***REMOVED***runtimeOptionNodes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkInvalidScopeReference(node,***REMOVED***DEFINE_MODEL);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(script)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(startOffset***REMOVED***<***REMOVED***scriptStartOffset)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(0,***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(endOffset,***REMOVED***scriptStartOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(scriptEndOffset,***REMOVED***source.length);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(0,***REMOVED***scriptStartOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(scriptEndOffset,***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(endOffset,***REMOVED***source.length);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(0,***REMOVED***startOffset);
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.remove(endOffset,***REMOVED***source.length);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(scriptAst)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(ctx.bindingMetadata,***REMOVED***analyzeScriptBindings(scriptAst.body));
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[key,***REMOVED***{***REMOVED***isType,***REMOVED***imported,***REMOVED***source:***REMOVED***source2***REMOVED***}]***REMOVED***of***REMOVED***Object.entries(
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.userImports
***REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isType)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[key]***REMOVED***=***REMOVED***imported***REMOVED***===***REMOVED***"*"***REMOVED***||***REMOVED***imported***REMOVED***===***REMOVED***"default"***REMOVED***&&***REMOVED***source2.endsWith(".vue")***REMOVED***||***REMOVED***source2***REMOVED***===***REMOVED***"vue"***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***"setup-maybe-ref";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***scriptBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[key]***REMOVED***=***REMOVED***scriptBindings[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***setupBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata[key]***REMOVED***=***REMOVED***setupBindings[key];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(sfc.cssVars.length***REMOVED***&&***REMOVED***//***REMOVED***no***REMOVED***need***REMOVED***to***REMOVED***do***REMOVED***this***REMOVED***when***REMOVED***targeting***REMOVED***SSR
***REMOVED******REMOVED***!((_a***REMOVED***=***REMOVED***options.templateOptions)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.ssr))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.helperImports.add(CSS_VARS_HELPER);
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.helperImports.add("unref");
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prependLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
${genCssVarsCode(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sfc.cssVars,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.bindingMetadata,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scopeId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!!options.isProd
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}
`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***args***REMOVED***=***REMOVED***`__props`;
***REMOVED******REMOVED***if***REMOVED***(ctx.propsTypeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args***REMOVED***+=***REMOVED***`:***REMOVED***any`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.propsDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ctx.propsDestructureRestId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsCall.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsCall.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${ctx.helper(`createPropsRestProxy`)}(__props,***REMOVED***${JSON.stringify(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(ctx.propsDestructuredBindings)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)})`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsDestructureDecl.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsDestructureDecl.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.propsDestructureRestId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!ctx.propsDestructureDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.overwrite(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsCall.start,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset***REMOVED***+***REMOVED***ctx.propsCall.end,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"__props"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasAwait)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***any***REMOVED***=***REMOVED***ctx.isTS***REMOVED***?***REMOVED***`:***REMOVED***any`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prependLeft(startOffset,***REMOVED***`
let***REMOVED***__temp${any},***REMOVED***__restore${any}
`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***destructureElements***REMOVED***=***REMOVED***ctx.hasDefineExposeCall***REMOVED***||***REMOVED***!options.inlineTemplate***REMOVED***?***REMOVED***[`expose:***REMOVED***__expose`]***REMOVED***:***REMOVED***[];
***REMOVED******REMOVED***if***REMOVED***(ctx.emitDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***destructureElements.push(`emit:***REMOVED***__emit`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(destructureElements.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args***REMOVED***+=***REMOVED***`,***REMOVED***{***REMOVED***${destructureElements.join(",***REMOVED***")}***REMOVED***}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***templateMap;
***REMOVED******REMOVED***let***REMOVED***returned;
***REMOVED******REMOVED***if***REMOVED***(!options.inlineTemplate***REMOVED***||***REMOVED***!sfc.template***REMOVED***&&***REMOVED***ctx.hasDefaultExportRender)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allBindings***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...scriptBindings,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...setupBindings
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***ctx.userImports)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ctx.userImports[key].isType***REMOVED***&&***REMOVED***ctx.userImports[key].isUsedInTemplate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***allBindings[key]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***=***REMOVED***`{***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***allBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allBindings[key]***REMOVED***===***REMOVED***true***REMOVED***&&***REMOVED***ctx.userImports[key].source***REMOVED***!==***REMOVED***"vue"***REMOVED***&&***REMOVED***!ctx.userImports[key].source.endsWith(".vue"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***+=***REMOVED***`get***REMOVED***${key}()***REMOVED***{***REMOVED***return***REMOVED***${key}***REMOVED***},***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx.bindingMetadata[key]***REMOVED***===***REMOVED***"setup-let")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setArg***REMOVED***=***REMOVED***key***REMOVED***===***REMOVED***"v"***REMOVED***?***REMOVED***`_v`***REMOVED***:***REMOVED***`v`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***+=***REMOVED***`get***REMOVED***${key}()***REMOVED***{***REMOVED***return***REMOVED***${key}***REMOVED***},***REMOVED***set***REMOVED***${key}(${setArg})***REMOVED***{***REMOVED***${key}***REMOVED***=***REMOVED***${setArg}***REMOVED***},***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***+=***REMOVED***`${key},***REMOVED***`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***=***REMOVED***returned.replace(/,***REMOVED***$/,***REMOVED***"")***REMOVED***+***REMOVED***`***REMOVED***}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sfc.template***REMOVED***&&***REMOVED***!sfc.template.src)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options.templateOptions***REMOVED***&&***REMOVED***options.templateOptions.ssr)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasInlinedSsrRenderFn***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***code,***REMOVED***ast,***REMOVED***preamble,***REMOVED***tips,***REMOVED***errors,***REMOVED***map:***REMOVED***map2***REMOVED***}***REMOVED***=***REMOVED***compileTemplate({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***sfc.template.ast,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***sfc.template.content,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inMap:***REMOVED***sfc.template.map,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options.templateOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***id:***REMOVED***scopeId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***scoped:***REMOVED***sfc.styles.some((s)***REMOVED***=>***REMOVED***s.scoped),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isProd:***REMOVED***options.isProd,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ssrCssVars:***REMOVED***sfc.cssVars,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compilerOptions:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...options.templateOptions***REMOVED***&&***REMOVED***options.templateOptions.compilerOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***inline:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isTS:***REMOVED***ctx.isTS,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingMetadata:***REMOVED***ctx.bindingMetadata
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateMap***REMOVED***=***REMOVED***map2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tips.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tips.forEach(warnOnce);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***err***REMOVED***=***REMOVED***errors[0];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***err***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(err.loc)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.message***REMOVED***+=***REMOVED***`

`***REMOVED***+***REMOVED***sfc.filename***REMOVED***+***REMOVED***"\n"***REMOVED***+***REMOVED***shared.generateCodeFrame(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.start.offset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err.loc.end.offset
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***+***REMOVED***`
`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(preamble)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prepend(preamble);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ast***REMOVED***&&***REMOVED***ast.helpers.has(CompilerDOM.UNREF))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.helperImports.delete("unref");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***returned***REMOVED***=***REMOVED***`()***REMOVED***=>***REMOVED***{}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!options.inlineTemplate***REMOVED***&&***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendRight(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
const***REMOVED***__returned__***REMOVED***=***REMOVED***${returned}
Object.defineProperty(__returned__,***REMOVED***'__isScriptSetup',***REMOVED***{***REMOVED***enumerable:***REMOVED***false,***REMOVED***value:***REMOVED***true***REMOVED***})
return***REMOVED***__returned__
}

`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendRight(endOffset,***REMOVED***`
return***REMOVED***${returned}
}

`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***genDefaultAs***REMOVED***=***REMOVED***options.genDefaultAs***REMOVED***?***REMOVED***`const***REMOVED***${options.genDefaultAs}***REMOVED***=`***REMOVED***:***REMOVED***`export***REMOVED***default`;
***REMOVED******REMOVED***let***REMOVED***runtimeOptions***REMOVED***=***REMOVED***``;
***REMOVED******REMOVED***if***REMOVED***(!ctx.hasDefaultExportName***REMOVED***&&***REMOVED***filename***REMOVED***&&***REMOVED***filename***REMOVED***!==***REMOVED***DEFAULT_FILENAME)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***filename.match(/([^/\\]+)\.\w+$/);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runtimeOptions***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED***__name:***REMOVED***'${match[1]}',`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasInlinedSsrRenderFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeOptions***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED***__ssrInlineRender:***REMOVED***true,`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***propsDecl***REMOVED***=***REMOVED***genRuntimeProps(ctx);
***REMOVED******REMOVED***if***REMOVED***(propsDecl)***REMOVED***runtimeOptions***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED***props:***REMOVED***${propsDecl},`;
***REMOVED******REMOVED***const***REMOVED***emitsDecl***REMOVED***=***REMOVED***genRuntimeEmits(ctx);
***REMOVED******REMOVED***if***REMOVED***(emitsDecl)***REMOVED***runtimeOptions***REMOVED***+=***REMOVED***`
***REMOVED******REMOVED***emits:***REMOVED***${emitsDecl},`;
***REMOVED******REMOVED***let***REMOVED***definedOptions***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(ctx.optionsRuntimeDecl)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***definedOptions***REMOVED***=***REMOVED***scriptSetup.content.slice(ctx.optionsRuntimeDecl.start,***REMOVED***ctx.optionsRuntimeDecl.end).trim();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***exposeCall***REMOVED***=***REMOVED***ctx.hasDefineExposeCall***REMOVED***||***REMOVED***options.inlineTemplate***REMOVED***?***REMOVED***``***REMOVED***:***REMOVED***`***REMOVED******REMOVED***__expose();
`;
***REMOVED******REMOVED***if***REMOVED***(ctx.isTS)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***def***REMOVED***=***REMOVED***(defaultExport***REMOVED***?***REMOVED***`
***REMOVED******REMOVED***...${normalScriptDefaultVar},`***REMOVED***:***REMOVED***``)***REMOVED***+***REMOVED***(definedOptions***REMOVED***?***REMOVED***`
***REMOVED******REMOVED***...${definedOptions},`***REMOVED***:***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prependLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
${genDefaultAs}***REMOVED***/*@__PURE__*/${ctx.helper(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`defineComponent`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}({${def}${runtimeOptions}
***REMOVED******REMOVED***${hasAwait***REMOVED***?***REMOVED***`async***REMOVED***`***REMOVED***:***REMOVED***``}setup(${args})***REMOVED***{
${exposeCall}`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendRight(endOffset,***REMOVED***`})`);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(defaultExport***REMOVED***||***REMOVED***definedOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prependLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
${genDefaultAs}***REMOVED***/*@__PURE__*/Object.assign(${defaultExport***REMOVED***?***REMOVED***`${normalScriptDefaultVar},***REMOVED***`***REMOVED***:***REMOVED***""}${definedOptions***REMOVED***?***REMOVED***`${definedOptions},***REMOVED***`***REMOVED***:***REMOVED***""}{${runtimeOptions}
***REMOVED******REMOVED***${hasAwait***REMOVED***?***REMOVED***`async***REMOVED***`***REMOVED***:***REMOVED***``}setup(${args})***REMOVED***{
${exposeCall}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendRight(endOffset,***REMOVED***`})`);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prependLeft(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
${genDefaultAs}***REMOVED***{${runtimeOptions}
***REMOVED******REMOVED***${hasAwait***REMOVED***?***REMOVED***`async***REMOVED***`***REMOVED***:***REMOVED***``}setup(${args})***REMOVED***{
${exposeCall}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.appendRight(endOffset,***REMOVED***`}`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(ctx.helperImports.size***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***runtimeModuleName***REMOVED***=***REMOVED***(_c***REMOVED***=***REMOVED***(_b***REMOVED***=***REMOVED***options.templateOptions)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.compilerOptions)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_c.runtimeModuleName;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***importSrc***REMOVED***=***REMOVED***runtimeModuleName***REMOVED***?***REMOVED***JSON.stringify(runtimeModuleName)***REMOVED***:***REMOVED***`'vue'`;
***REMOVED******REMOVED******REMOVED******REMOVED***ctx.s.prepend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`import***REMOVED***{***REMOVED***${[...ctx.helperImports].map((h)***REMOVED***=>***REMOVED***`${h}***REMOVED***as***REMOVED***_${h}`).join(",***REMOVED***")}***REMOVED***}***REMOVED***from***REMOVED***${importSrc}
`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***content***REMOVED***=***REMOVED***ctx.s.toString();
***REMOVED******REMOVED***let***REMOVED***map***REMOVED***=***REMOVED***options.sourceMap***REMOVED***!==***REMOVED***false***REMOVED***?***REMOVED***ctx.s.generateMap({
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***filename,
***REMOVED******REMOVED******REMOVED******REMOVED***hires:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***includeContent:***REMOVED***true
***REMOVED******REMOVED***})***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(templateMap***REMOVED***&&***REMOVED***map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***offset***REMOVED***=***REMOVED***content.indexOf(returned);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***templateLineOffset***REMOVED***=***REMOVED***content.slice(0,***REMOVED***offset).split(/\r?\n/).length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***map***REMOVED***=***REMOVED***mergeSourceMaps(map,***REMOVED***templateMap,***REMOVED***templateLineOffset);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***...scriptSetup,
***REMOVED******REMOVED******REMOVED******REMOVED***bindings:***REMOVED***ctx.bindingMetadata,
***REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***ctx.userImports,
***REMOVED******REMOVED******REMOVED******REMOVED***content,
***REMOVED******REMOVED******REMOVED******REMOVED***map,
***REMOVED******REMOVED******REMOVED******REMOVED***scriptAst:***REMOVED***scriptAst***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scriptAst.body,
***REMOVED******REMOVED******REMOVED******REMOVED***scriptSetupAst:***REMOVED***scriptSetupAst***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***scriptSetupAst.body,
***REMOVED******REMOVED******REMOVED******REMOVED***deps:***REMOVED***ctx.deps***REMOVED***?***REMOVED***[...ctx.deps]***REMOVED***:***REMOVED***void***REMOVED***0
***REMOVED******REMOVED***};
}
function***REMOVED***registerBinding(bindings,***REMOVED***node,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***bindings[node.name]***REMOVED***=***REMOVED***type;
}
function***REMOVED***walkDeclaration(from,***REMOVED***node,***REMOVED***bindings,***REMOVED***userImportAliases,***REMOVED***hoistStatic,***REMOVED***isPropsDestructureEnabled***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***isAllLiteral***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"VariableDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isConst***REMOVED***=***REMOVED***node.kind***REMOVED***===***REMOVED***"const";
***REMOVED******REMOVED******REMOVED******REMOVED***isAllLiteral***REMOVED***=***REMOVED***isConst***REMOVED***&&***REMOVED***node.declarations.every(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(decl)***REMOVED***=>***REMOVED***decl.id.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***isStaticNode(decl.init)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***id,***REMOVED***init:***REMOVED***_init***REMOVED***}***REMOVED***of***REMOVED***node.declarations)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***init***REMOVED***=***REMOVED***_init***REMOVED***&&***REMOVED***CompilerDOM.unwrapTSNode(_init);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isConstMacroCall***REMOVED***=***REMOVED***isConst***REMOVED***&&***REMOVED***isCallOf(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(c)***REMOVED***=>***REMOVED***c***REMOVED***===***REMOVED***DEFINE_PROPS***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***DEFINE_EMITS***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***WITH_DEFAULTS***REMOVED***||***REMOVED***c***REMOVED***===***REMOVED***DEFINE_SLOTS
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***bindingType;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***userReactiveBinding***REMOVED***=***REMOVED***userImportAliases["reactive"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((hoistStatic***REMOVED***||***REMOVED***from***REMOVED***===***REMOVED***"script")***REMOVED***&&***REMOVED***(isAllLiteral***REMOVED***||***REMOVED***isConst***REMOVED***&&***REMOVED***isStaticNode(init)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***"literal-const";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isCallOf(init,***REMOVED***userReactiveBinding))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***isConst***REMOVED***?***REMOVED***"setup-reactive-const"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***a***REMOVED***declaration***REMOVED***is***REMOVED***a***REMOVED***const***REMOVED***literal,***REMOVED***we***REMOVED***can***REMOVED***mark***REMOVED***it***REMOVED***so***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***generated***REMOVED***render***REMOVED***fn***REMOVED***code***REMOVED***doesn't***REMOVED***need***REMOVED***to***REMOVED***unref()***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isConstMacroCall***REMOVED***||***REMOVED***isConst***REMOVED***&&***REMOVED***canNeverBeRef(init,***REMOVED***userReactiveBinding)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***isCallOf(init,***REMOVED***DEFINE_PROPS)***REMOVED***?***REMOVED***"setup-reactive-const"***REMOVED***:***REMOVED***"setup-const";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isConst)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCallOf(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***init,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(m)***REMOVED***=>***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["ref"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["computed"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["shallowRef"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["customRef"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["toRef"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***userImportAliases["useTemplateRef"]***REMOVED***||***REMOVED***m***REMOVED***===***REMOVED***DEFINE_MODEL
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***"setup-ref";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***"setup-maybe-ref";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bindingType***REMOVED***=***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***id,***REMOVED***bindingType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCallOf(init,***REMOVED***DEFINE_PROPS)***REMOVED***&&***REMOVED***isPropsDestructureEnabled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkObjectPattern(id,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isConstMacroCall);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(id.type***REMOVED***===***REMOVED***"ArrayPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkArrayPattern(id,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isConstMacroCall);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"TSEnumDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isAllLiteral***REMOVED***=***REMOVED***node.members.every(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(member)***REMOVED***=>***REMOVED***!member.initializer***REMOVED***||***REMOVED***isStaticNode(member.initializer)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***bindings[node.id.name]***REMOVED***=***REMOVED***isAllLiteral***REMOVED***?***REMOVED***"literal-const"***REMOVED***:***REMOVED***"setup-const";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"FunctionDeclaration"***REMOVED***||***REMOVED***node.type***REMOVED***===***REMOVED***"ClassDeclaration")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***bindings[node.id.name]***REMOVED***=***REMOVED***"setup-const";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isAllLiteral;
}
function***REMOVED***walkObjectPattern(node,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isDefineCall***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***p***REMOVED***of***REMOVED***node.properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.type***REMOVED***===***REMOVED***"ObjectProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(p.key.type***REMOVED***===***REMOVED***"Identifier"***REMOVED***&&***REMOVED***p.key***REMOVED***===***REMOVED***p.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isDefineCall***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***isConst***REMOVED***?***REMOVED***"setup-maybe-ref"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***p.key,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkPattern(p.value,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isDefineCall);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isConst***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***p.argument,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***walkArrayPattern(node,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isDefineCall***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***e***REMOVED***of***REMOVED***node.elements)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***e***REMOVED***&&***REMOVED***walkPattern(e,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isDefineCall);
***REMOVED******REMOVED***}
}
function***REMOVED***walkPattern(node,***REMOVED***bindings,***REMOVED***isConst,***REMOVED***isDefineCall***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isDefineCall***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***isConst***REMOVED***?***REMOVED***"setup-maybe-ref"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***node,***REMOVED***type);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"RestElement")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isConst***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***node.argument,***REMOVED***type);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ObjectPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***walkObjectPattern(node,***REMOVED***bindings,***REMOVED***isConst);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"ArrayPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***walkArrayPattern(node,***REMOVED***bindings,***REMOVED***isConst);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(node.type***REMOVED***===***REMOVED***"AssignmentPattern")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.left.type***REMOVED***===***REMOVED***"Identifier")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***isDefineCall***REMOVED***?***REMOVED***"setup-const"***REMOVED***:***REMOVED***isConst***REMOVED***?***REMOVED***"setup-maybe-ref"***REMOVED***:***REMOVED***"setup-let";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerBinding(bindings,***REMOVED***node.left,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***walkPattern(node.left,***REMOVED***bindings,***REMOVED***isConst);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***canNeverBeRef(node,***REMOVED***userReactiveImport)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isCallOf(node,***REMOVED***userReactiveImport))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"UnaryExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BinaryExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrayExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ObjectExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"FunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ArrowFunctionExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"UpdateExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ClassExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TaggedTemplateExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"SequenceExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***canNeverBeRef(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***node.expressions[node.expressions.length***REMOVED***-***REMOVED***1],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***userReactiveImport
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isLiteralNode(node))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
}
function***REMOVED***isStaticNode(node)***REMOVED***{
***REMOVED******REMOVED***node***REMOVED***=***REMOVED***CompilerDOM.unwrapTSNode(node);
***REMOVED******REMOVED***switch***REMOVED***(node.type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"UnaryExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStaticNode(node.argument);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"LogicalExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***1***REMOVED***>***REMOVED***2
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BinaryExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStaticNode(node.left)***REMOVED***&&***REMOVED***isStaticNode(node.right);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ConditionalExpression":***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStaticNode(node.test)***REMOVED***&&***REMOVED***isStaticNode(node.consequent)***REMOVED***&&***REMOVED***isStaticNode(node.alternate);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"SequenceExpression":
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(1,***REMOVED***2)
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"TemplateLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***node.expressions.every((expr)***REMOVED***=>***REMOVED***isStaticNode(expr));
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"ParenthesizedExpression":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isStaticNode(node.expression);
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"StringLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NumericLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BooleanLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"NullLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"BigIntLiteral":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***mergeSourceMaps(scriptMap,***REMOVED***templateMap,***REMOVED***templateLineOffset)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***generator***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapGenerator();
***REMOVED******REMOVED***const***REMOVED***addMapping***REMOVED***=***REMOVED***(map,***REMOVED***lineOffset***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***consumer***REMOVED***=***REMOVED***new***REMOVED***sourceMapJs.SourceMapConsumer(map);
***REMOVED******REMOVED******REMOVED******REMOVED***consumer.sources.forEach((sourceFile)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator._sources.add(sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***sourceContent***REMOVED***=***REMOVED***consumer.sourceContentFor(sourceFile);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(sourceContent***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator.setSourceContent(sourceFile,***REMOVED***sourceContent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***consumer.eachMapping((m)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m.originalLine***REMOVED***==***REMOVED***null)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generator.addMapping({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generated:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.generatedLine***REMOVED***+***REMOVED***lineOffset,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.generatedColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***original:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***m.originalLine,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***m.originalColumn
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***m.source,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***m.name
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***};
***REMOVED******REMOVED***addMapping(scriptMap);
***REMOVED******REMOVED***addMapping(templateMap,***REMOVED***templateLineOffset);
***REMOVED******REMOVED***generator._sourceRoot***REMOVED***=***REMOVED***scriptMap.sourceRoot;
***REMOVED******REMOVED***generator._file***REMOVED***=***REMOVED***scriptMap.file;
***REMOVED******REMOVED***return***REMOVED***generator.toJSON();
}

const***REMOVED***version***REMOVED***=***REMOVED***"3.5.21";
const***REMOVED***parseCache***REMOVED***=***REMOVED***parseCache$1;
const***REMOVED***errorMessages***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***...CompilerDOM.errorMessages,
***REMOVED******REMOVED***...CompilerDOM.DOMErrorMessages
};
const***REMOVED***walk***REMOVED***=***REMOVED***estreeWalker.walk;
const***REMOVED***shouldTransformRef***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;

exports.extractIdentifiers***REMOVED***=***REMOVED***compilerCore.extractIdentifiers;
exports.generateCodeFrame***REMOVED***=***REMOVED***compilerCore.generateCodeFrame;
exports.isInDestructureAssignment***REMOVED***=***REMOVED***compilerCore.isInDestructureAssignment;
exports.isStaticProperty***REMOVED***=***REMOVED***compilerCore.isStaticProperty;
exports.walkIdentifiers***REMOVED***=***REMOVED***compilerCore.walkIdentifiers;
exports.MagicString***REMOVED***=***REMOVED***MagicString;
exports.babelParse***REMOVED***=***REMOVED***parser$2.parse;
exports.compileScript***REMOVED***=***REMOVED***compileScript;
exports.compileStyle***REMOVED***=***REMOVED***compileStyle;
exports.compileStyleAsync***REMOVED***=***REMOVED***compileStyleAsync;
exports.compileTemplate***REMOVED***=***REMOVED***compileTemplate;
exports.errorMessages***REMOVED***=***REMOVED***errorMessages;
exports.extractRuntimeEmits***REMOVED***=***REMOVED***extractRuntimeEmits;
exports.extractRuntimeProps***REMOVED***=***REMOVED***extractRuntimeProps;
exports.inferRuntimeType***REMOVED***=***REMOVED***inferRuntimeType;
exports.invalidateTypeCache***REMOVED***=***REMOVED***invalidateTypeCache;
exports.parse***REMOVED***=***REMOVED***parse$1;
exports.parseCache***REMOVED***=***REMOVED***parseCache;
exports.registerTS***REMOVED***=***REMOVED***registerTS;
exports.resolveTypeElements***REMOVED***=***REMOVED***resolveTypeElements;
exports.rewriteDefault***REMOVED***=***REMOVED***rewriteDefault;
exports.rewriteDefaultAST***REMOVED***=***REMOVED***rewriteDefaultAST;
exports.shouldTransformRef***REMOVED***=***REMOVED***shouldTransformRef;
exports.version***REMOVED***=***REMOVED***version;
exports.walk***REMOVED***=***REMOVED***walk;
