/**
****REMOVED***@vue/server-renderer***REMOVED***v3.5.21
****REMOVED***(c)***REMOVED***2018-present***REMOVED***Yuxi***REMOVED***(Evan)***REMOVED***You***REMOVED***and***REMOVED***Vue***REMOVED***contributors
****REMOVED***@license***REMOVED***MIT
**/
//***REMOVED***@__NO_SIDE_EFFECTS__
function***REMOVED***makeMap(str)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***map***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***str.split(","))***REMOVED***map[key]***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED***return***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***in***REMOVED***map;
}

const***REMOVED***EMPTY_OBJ***REMOVED***=***REMOVED***Object.freeze({})***REMOVED***;
const***REMOVED***EMPTY_ARR***REMOVED***=***REMOVED***Object.freeze([])***REMOVED***;
const***REMOVED***NOOP***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
};
const***REMOVED***NO***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***false;
const***REMOVED***isOn***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key.charCodeAt(0)***REMOVED***===***REMOVED***111***REMOVED***&&***REMOVED***key.charCodeAt(1)***REMOVED***===***REMOVED***110***REMOVED***&&***REMOVED***//***REMOVED***uppercase***REMOVED***letter
(key.charCodeAt(2)***REMOVED***>***REMOVED***122***REMOVED***||***REMOVED***key.charCodeAt(2)***REMOVED***<***REMOVED***97);
const***REMOVED***isModelListener***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key.startsWith("onUpdate:");
const***REMOVED***extend***REMOVED***=***REMOVED***Object.assign;
const***REMOVED***remove***REMOVED***=***REMOVED***(arr,***REMOVED***el)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***arr.indexOf(el);
***REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***arr.splice(i,***REMOVED***1);
***REMOVED******REMOVED***}
};
const***REMOVED***hasOwnProperty$1***REMOVED***=***REMOVED***Object.prototype.hasOwnProperty;
const***REMOVED***hasOwn***REMOVED***=***REMOVED***(val,***REMOVED***key)***REMOVED***=>***REMOVED***hasOwnProperty$1.call(val,***REMOVED***key);
const***REMOVED***isArray***REMOVED***=***REMOVED***Array.isArray;
const***REMOVED***isMap***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Map]";
const***REMOVED***isSet***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Set]";
const***REMOVED***isDate***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Date]";
const***REMOVED***isFunction***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"function";
const***REMOVED***isString***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"string";
const***REMOVED***isSymbol***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"symbol";
const***REMOVED***isObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***val***REMOVED***!==***REMOVED***null***REMOVED***&&***REMOVED***typeof***REMOVED***val***REMOVED***===***REMOVED***"object";
const***REMOVED***isPromise***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(isObject(val)***REMOVED***||***REMOVED***isFunction(val))***REMOVED***&&***REMOVED***isFunction(val.then)***REMOVED***&&***REMOVED***isFunction(val.catch);
};
const***REMOVED***objectToString***REMOVED***=***REMOVED***Object.prototype.toString;
const***REMOVED***toTypeString***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***objectToString.call(value);
const***REMOVED***toRawType***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***toTypeString(value).slice(8,***REMOVED***-1);
};
const***REMOVED***isPlainObject***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***toTypeString(val)***REMOVED***===***REMOVED***"[object***REMOVED***Object]";
const***REMOVED***isIntegerKey***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***isString(key)***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"NaN"***REMOVED***&&***REMOVED***key[0]***REMOVED***!==***REMOVED***"-"***REMOVED***&&***REMOVED***""***REMOVED***+***REMOVED***parseInt(key,***REMOVED***10)***REMOVED***===***REMOVED***key;
const***REMOVED***isReservedProp***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***leading***REMOVED***comma***REMOVED***is***REMOVED***intentional***REMOVED***so***REMOVED***empty***REMOVED***string***REMOVED***""***REMOVED***is***REMOVED***also***REMOVED***included
***REMOVED******REMOVED***",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
const***REMOVED***isBuiltInDirective***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"
);
const***REMOVED***cacheStringFunction***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***return***REMOVED***((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hit***REMOVED***=***REMOVED***cache[str];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hit***REMOVED***||***REMOVED***(cache[str]***REMOVED***=***REMOVED***fn(str));
***REMOVED******REMOVED***});
};
const***REMOVED***camelizeRE***REMOVED***=***REMOVED***/-\w/g;
const***REMOVED***camelize***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str.replace(camelizeRE,***REMOVED***(c)***REMOVED***=>***REMOVED***c.slice(1).toUpperCase());
***REMOVED******REMOVED***}
);
const***REMOVED***hyphenateRE***REMOVED***=***REMOVED***/\B([A-Z])/g;
const***REMOVED***hyphenate***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***str.replace(hyphenateRE,***REMOVED***"-$1").toLowerCase()
);
const***REMOVED***capitalize***REMOVED***=***REMOVED***cacheStringFunction((str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***str.charAt(0).toUpperCase()***REMOVED***+***REMOVED***str.slice(1);
});
const***REMOVED***toHandlerKey***REMOVED***=***REMOVED***cacheStringFunction(
***REMOVED******REMOVED***(str)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s***REMOVED***=***REMOVED***str***REMOVED***?***REMOVED***`on${capitalize(str)}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s;
***REMOVED******REMOVED***}
);
const***REMOVED***hasChanged***REMOVED***=***REMOVED***(value,***REMOVED***oldValue)***REMOVED***=>***REMOVED***!Object.is(value,***REMOVED***oldValue);
const***REMOVED***invokeArrayFns***REMOVED***=***REMOVED***(fns,***REMOVED***...arg)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***fns.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fns[i](...arg);
***REMOVED******REMOVED***}
};
const***REMOVED***def***REMOVED***=***REMOVED***(obj,***REMOVED***key,***REMOVED***value,***REMOVED***writable***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(obj,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***writable,
***REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED***});
};
const***REMOVED***looseToNumber***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***parseFloat(val);
***REMOVED******REMOVED***return***REMOVED***isNaN(n)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***n;
};
let***REMOVED***_globalThis;
const***REMOVED***getGlobalThis***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***_globalThis***REMOVED***||***REMOVED***(_globalThis***REMOVED***=***REMOVED***typeof***REMOVED***globalThis***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***globalThis***REMOVED***:***REMOVED***typeof***REMOVED***self***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***self***REMOVED***:***REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***window***REMOVED***:***REMOVED***typeof***REMOVED***global***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***global***REMOVED***:***REMOVED***{});
};

function***REMOVED***normalizeStyle(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***value[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***isString(item)***REMOVED***?***REMOVED***parseStringStyle(item)***REMOVED***:***REMOVED***normalizeStyle(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[key]***REMOVED***=***REMOVED***normalized[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isString(value)***REMOVED***||***REMOVED***isObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
}
const***REMOVED***listDelimiterRE***REMOVED***=***REMOVED***/;(?![^(]*\))/g;
const***REMOVED***propertyDelimiterRE***REMOVED***=***REMOVED***/:([^]+)/;
const***REMOVED***styleCommentRE***REMOVED***=***REMOVED***/\/\*[^]*?\*\//g;
function***REMOVED***parseStringStyle(cssText)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***cssText.replace(styleCommentRE,***REMOVED***"").split(listDelimiterRE).forEach((item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(item)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tmp***REMOVED***=***REMOVED***item.split(propertyDelimiterRE);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***tmp.length***REMOVED***>***REMOVED***1***REMOVED***&&***REMOVED***(ret[tmp[0].trim()]***REMOVED***=***REMOVED***tmp[1].trim());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***stringifyStyle(styles)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!styles)***REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(isString(styles))***REMOVED***return***REMOVED***styles;
***REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***styles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***styles[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(value)***REMOVED***||***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedKey***REMOVED***=***REMOVED***key.startsWith(`--`)***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***hyphenate(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***`${normalizedKey}:${value};`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***normalizeClass(value)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***res***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***if***REMOVED***(isString(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***normalizeClass(value[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***+=***REMOVED***normalized***REMOVED***+***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***name***REMOVED***in***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***+=***REMOVED***name***REMOVED***+***REMOVED***"***REMOVED***";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res.trim();
}

const***REMOVED***HTML_TAGS***REMOVED***=***REMOVED***"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const***REMOVED***SVG_TAGS***REMOVED***=***REMOVED***"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const***REMOVED***MATH_TAGS***REMOVED***=***REMOVED***"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
const***REMOVED***VOID_TAGS***REMOVED***=***REMOVED***"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
const***REMOVED***isHTMLTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(HTML_TAGS);
const***REMOVED***isSVGTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(SVG_TAGS);
const***REMOVED***isMathMLTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(MATH_TAGS);
const***REMOVED***isVoidTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(VOID_TAGS);

const***REMOVED***specialBooleanAttrs***REMOVED***=***REMOVED***`itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const***REMOVED***isSpecialBooleanAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(specialBooleanAttrs);
const***REMOVED***isBooleanAttr***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***specialBooleanAttrs***REMOVED***+***REMOVED***`,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`
);
function***REMOVED***includeBooleanAttr(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!value***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***"";
}
const***REMOVED***unsafeAttrCharRE***REMOVED***=***REMOVED***/[>/="'\u0009\u000a\u000c\u0020]/;
const***REMOVED***attrValidationCache***REMOVED***=***REMOVED***{};
function***REMOVED***isSSRSafeAttrName(name)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(attrValidationCache.hasOwnProperty(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrValidationCache[name];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***isUnsafe***REMOVED***=***REMOVED***unsafeAttrCharRE.test(name);
***REMOVED******REMOVED***if***REMOVED***(isUnsafe)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***console.error(`unsafe***REMOVED***attribute***REMOVED***name:***REMOVED***${name}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***attrValidationCache[name]***REMOVED***=***REMOVED***!isUnsafe;
}
const***REMOVED***propsToAttrMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***acceptCharset:***REMOVED***"accept-charset",
***REMOVED******REMOVED***className:***REMOVED***"class",
***REMOVED******REMOVED***htmlFor:***REMOVED***"for",
***REMOVED******REMOVED***httpEquiv:***REMOVED***"http-equiv"
};
function***REMOVED***isRenderableAttrValue(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***value;
***REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"number"***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***"boolean";
}

const***REMOVED***escapeRE***REMOVED***=***REMOVED***/["'&<>]/;
function***REMOVED***escapeHtml(string)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***str***REMOVED***=***REMOVED***""***REMOVED***+***REMOVED***string;
***REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***escapeRE.exec(str);
***REMOVED******REMOVED***if***REMOVED***(!match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***str;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***html***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***let***REMOVED***escaped;
***REMOVED******REMOVED***let***REMOVED***index;
***REMOVED******REMOVED***let***REMOVED***lastIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***for***REMOVED***(index***REMOVED***=***REMOVED***match.index;***REMOVED***index***REMOVED***<***REMOVED***str.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(str.charCodeAt(index))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***34:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&quot;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***38:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&amp;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***39:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&#39;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***60:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&lt;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***62:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***escaped***REMOVED***=***REMOVED***"&gt;";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lastIndex***REMOVED***!==***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***html***REMOVED***+=***REMOVED***str.slice(lastIndex,***REMOVED***index);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***lastIndex***REMOVED***=***REMOVED***index***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***html***REMOVED***+=***REMOVED***escaped;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***lastIndex***REMOVED***!==***REMOVED***index***REMOVED***?***REMOVED***html***REMOVED***+***REMOVED***str.slice(lastIndex,***REMOVED***index)***REMOVED***:***REMOVED***html;
}
const***REMOVED***commentStripRE***REMOVED***=***REMOVED***/^-?>|<!--|-->|--!>|<!-$/g;
function***REMOVED***escapeHtmlComment(src)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***src.replace(commentStripRE,***REMOVED***"");
}

function***REMOVED***looseCompareArrays(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(a.length***REMOVED***!==***REMOVED***b.length)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***equal***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***equal***REMOVED***&&***REMOVED***i***REMOVED***<***REMOVED***a.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***equal***REMOVED***=***REMOVED***looseEqual(a[i],***REMOVED***b[i]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***equal;
}
function***REMOVED***looseEqual(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(a***REMOVED***===***REMOVED***b)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***let***REMOVED***aValidType***REMOVED***=***REMOVED***isDate(a);
***REMOVED******REMOVED***let***REMOVED***bValidType***REMOVED***=***REMOVED***isDate(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aValidType***REMOVED***&&***REMOVED***bValidType***REMOVED***?***REMOVED***a.getTime()***REMOVED***===***REMOVED***b.getTime()***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isSymbol(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isSymbol(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***a***REMOVED***===***REMOVED***b;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isArray(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isArray(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***aValidType***REMOVED***&&***REMOVED***bValidType***REMOVED***?***REMOVED***looseCompareArrays(a,***REMOVED***b)***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***aValidType***REMOVED***=***REMOVED***isObject(a);
***REMOVED******REMOVED***bValidType***REMOVED***=***REMOVED***isObject(b);
***REMOVED******REMOVED***if***REMOVED***(aValidType***REMOVED***||***REMOVED***bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!aValidType***REMOVED***||***REMOVED***!bValidType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aKeysCount***REMOVED***=***REMOVED***Object.keys(a).length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bKeysCount***REMOVED***=***REMOVED***Object.keys(b).length;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aKeysCount***REMOVED***!==***REMOVED***bKeysCount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***a)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***aHasKey***REMOVED***=***REMOVED***a.hasOwnProperty(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bHasKey***REMOVED***=***REMOVED***b.hasOwnProperty(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(aHasKey***REMOVED***&&***REMOVED***!bHasKey***REMOVED***||***REMOVED***!aHasKey***REMOVED***&&***REMOVED***bHasKey***REMOVED***||***REMOVED***!looseEqual(a[key],***REMOVED***b[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***String(a)***REMOVED***===***REMOVED***String(b);
}
function***REMOVED***looseIndexOf(arr,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***arr.findIndex((item)***REMOVED***=>***REMOVED***looseEqual(item,***REMOVED***val));
}

const***REMOVED***isRef$1***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(val***REMOVED***&&***REMOVED***val["__v_isRef"]***REMOVED***===***REMOVED***true);
};
const***REMOVED***toDisplayString***REMOVED***=***REMOVED***(val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isString(val)***REMOVED***?***REMOVED***val***REMOVED***:***REMOVED***val***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***isArray(val)***REMOVED***||***REMOVED***isObject(val)***REMOVED***&&***REMOVED***(val.toString***REMOVED***===***REMOVED***objectToString***REMOVED***||***REMOVED***!isFunction(val.toString))***REMOVED***?***REMOVED***isRef$1(val)***REMOVED***?***REMOVED***toDisplayString(val.value)***REMOVED***:***REMOVED***JSON.stringify(val,***REMOVED***replacer,***REMOVED***2)***REMOVED***:***REMOVED***String(val);
};
const***REMOVED***replacer***REMOVED***=***REMOVED***(_key,***REMOVED***val)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isRef$1(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***replacer(_key,***REMOVED***val.value);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isMap(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[`Map(${val.size})`]:***REMOVED***[...val.entries()].reduce(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(entries,***REMOVED***[key,***REMOVED***val2],***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***entries[stringifySymbol(key,***REMOVED***i)***REMOVED***+***REMOVED***"***REMOVED***=>"]***REMOVED***=***REMOVED***val2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***entries;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSet(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[`Set(${val.size})`]:***REMOVED***[...val.values()].map((v)***REMOVED***=>***REMOVED***stringifySymbol(v))
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSymbol(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***stringifySymbol(val);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(val)***REMOVED***&&***REMOVED***!isArray(val)***REMOVED***&&***REMOVED***!isPlainObject(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***String(val);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***val;
};
const***REMOVED***stringifySymbol***REMOVED***=***REMOVED***(v,***REMOVED***i***REMOVED***=***REMOVED***"")***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***return***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Symbol.description***REMOVED***in***REMOVED***es2019+***REMOVED***so***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***cast***REMOVED***here***REMOVED***to***REMOVED***pass
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***lib:***REMOVED***es2016***REMOVED***check
***REMOVED******REMOVED******REMOVED******REMOVED***isSymbol(v)***REMOVED***?***REMOVED***`Symbol(${(_a***REMOVED***=***REMOVED***v.description)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_a***REMOVED***:***REMOVED***i})`***REMOVED***:***REMOVED***v
***REMOVED******REMOVED***);
};

function***REMOVED***normalizeCssVarValue(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"initial";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***===***REMOVED***""***REMOVED***?***REMOVED***"***REMOVED***"***REMOVED***:***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***!==***REMOVED***"number"***REMOVED***||***REMOVED***!Number.isFinite(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"[Vue***REMOVED***warn]***REMOVED***Invalid***REMOVED***value***REMOVED***used***REMOVED***for***REMOVED***CSS***REMOVED***binding.***REMOVED***Expected***REMOVED***a***REMOVED***string***REMOVED***or***REMOVED***a***REMOVED***finite***REMOVED***number***REMOVED***but***REMOVED***received:",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***String(value);
}

function***REMOVED***warn$2(msg,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED***console.warn(`[Vue***REMOVED***warn]***REMOVED***${msg}`,***REMOVED***...args);
}

let***REMOVED***activeEffectScope;
class***REMOVED***EffectScope***REMOVED***{
***REMOVED******REMOVED***constructor(detached***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.detached***REMOVED***=***REMOVED***detached;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._active***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal***REMOVED***track***REMOVED***`on`***REMOVED***calls,***REMOVED***allow***REMOVED***`on`***REMOVED***call***REMOVED***multiple***REMOVED***times
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._on***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.effects***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!detached***REMOVED***&&***REMOVED***activeEffectScope)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.index***REMOVED***=***REMOVED***(activeEffectScope.scopes***REMOVED***||***REMOVED***(activeEffectScope.scopes***REMOVED***=***REMOVED***[])).push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***active()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._active;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pause()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].pause();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].pause();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***Resumes***REMOVED***the***REMOVED***effect***REMOVED***scope,***REMOVED***including***REMOVED***all***REMOVED***child***REMOVED***scopes***REMOVED***and***REMOVED***effects.
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***resume()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._isPaused)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._isPaused***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].resume();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].resume();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***run(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentEffectScope***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***currentEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(`cannot***REMOVED***run***REMOVED***an***REMOVED***inactive***REMOVED***effect***REMOVED***scope.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***called***REMOVED***on***REMOVED***non-detached***REMOVED***scopes
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***on()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(++this._on***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prevScope***REMOVED***=***REMOVED***activeEffectScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***called***REMOVED***on***REMOVED***non-detached***REMOVED***scopes
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***off()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._on***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***--this._on***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope***REMOVED***=***REMOVED***this.prevScope;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.prevScope***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stop(fromParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this._active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this._active***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i,***REMOVED***l;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.effects.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects[i].stop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.effects.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.cleanups.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups[i]();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.cleanups.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.scopes)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***this.scopes.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes[i].stop(true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scopes.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this.detached***REMOVED***&&***REMOVED***this.parent***REMOVED***&&***REMOVED***!fromParent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***this.parent.scopes.pop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent.scopes[this.index]***REMOVED***=***REMOVED***last;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.index***REMOVED***=***REMOVED***this.index;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.parent***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***getCurrentScope()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***activeEffectScope;
}

let***REMOVED***activeSub;
const***REMOVED***pausedQueueEffects***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();
class***REMOVED***ReactiveEffect***REMOVED***{
***REMOVED******REMOVED***constructor(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.fn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***1***REMOVED***|***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.cleanup***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.scheduler***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeEffectScope***REMOVED***&&***REMOVED***activeEffectScope.active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeEffectScope.effects.push(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***pause()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***64;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resume()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-65;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(pausedQueueEffects.has(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pausedQueueEffects.delete(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.trigger();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***notify()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***2***REMOVED***&&***REMOVED***!(this.flags***REMOVED***&***REMOVED***32))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***batch(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***run()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fn();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED***cleanupEffect(this);
***REMOVED******REMOVED******REMOVED******REMOVED***prepareDeps(this);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevEffect***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevShouldTrack***REMOVED***=***REMOVED***shouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this.fn();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Active***REMOVED***effect***REMOVED***was***REMOVED***not***REMOVED***restored***REMOVED***correctly***REMOVED***-***REMOVED***this***REMOVED***is***REMOVED***likely***REMOVED***a***REMOVED***Vue***REMOVED***internal***REMOVED***bug."
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupDeps(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevEffect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***prevShouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-3;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***stop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***this.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupEffect(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.onStop***REMOVED***&&***REMOVED***this.onStop();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***trigger()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.flags***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pausedQueueEffects.add(this);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(this.scheduler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.scheduler();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.runIfDirty();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***runIfDirty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isDirty(this))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***dirty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isDirty(this);
***REMOVED******REMOVED***}
}
let***REMOVED***batchDepth***REMOVED***=***REMOVED***0;
let***REMOVED***batchedSub;
let***REMOVED***batchedComputed;
function***REMOVED***batch(sub,***REMOVED***isComputed***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***sub.flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED***if***REMOVED***(isComputed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***sub.next***REMOVED***=***REMOVED***batchedComputed;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedComputed***REMOVED***=***REMOVED***sub;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sub.next***REMOVED***=***REMOVED***batchedSub;
***REMOVED******REMOVED***batchedSub***REMOVED***=***REMOVED***sub;
}
function***REMOVED***startBatch()***REMOVED***{
***REMOVED******REMOVED***batchDepth++;
}
function***REMOVED***endBatch()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(--batchDepth***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(batchedComputed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e***REMOVED***=***REMOVED***batchedComputed;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedComputed***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***e.next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.flags***REMOVED***&=***REMOVED***-9;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***error;
***REMOVED******REMOVED***while***REMOVED***(batchedSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e***REMOVED***=***REMOVED***batchedSub;
***REMOVED******REMOVED******REMOVED******REMOVED***batchedSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***e.next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.flags***REMOVED***&=***REMOVED***-9;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(e.flags***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e.trigger();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!error)***REMOVED***error***REMOVED***=***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(error)***REMOVED***throw***REMOVED***error;
}
function***REMOVED***prepareDeps(sub)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***sub.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevActiveLink***REMOVED***=***REMOVED***link.dep.activeLink;
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.activeLink***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***}
}
function***REMOVED***cleanupDeps(sub)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***head;
***REMOVED******REMOVED***let***REMOVED***tail***REMOVED***=***REMOVED***sub.depsTail;
***REMOVED******REMOVED***let***REMOVED***link***REMOVED***=***REMOVED***tail;
***REMOVED******REMOVED***while***REMOVED***(link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***link.prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.version***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link***REMOVED***===***REMOVED***tail)***REMOVED***tail***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeDep(link);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***head***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.activeLink***REMOVED***=***REMOVED***link.prevActiveLink;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevActiveLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***link***REMOVED***=***REMOVED***prev;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***sub.deps***REMOVED***=***REMOVED***head;
***REMOVED******REMOVED***sub.depsTail***REMOVED***=***REMOVED***tail;
}
function***REMOVED***isDirty(sub)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***sub.deps;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.dep.version***REMOVED***!==***REMOVED***link.version***REMOVED***||***REMOVED***link.dep.computed***REMOVED***&&***REMOVED***(refreshComputed(link.dep.computed)***REMOVED***||***REMOVED***link.dep.version***REMOVED***!==***REMOVED***link.version))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(sub._dirty)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***refreshComputed(computed)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(computed.flags***REMOVED***&***REMOVED***4***REMOVED***&&***REMOVED***!(computed.flags***REMOVED***&***REMOVED***16))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.flags***REMOVED***&=***REMOVED***-17;
***REMOVED******REMOVED***if***REMOVED***(computed.globalVersion***REMOVED***===***REMOVED***globalVersion)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.globalVersion***REMOVED***=***REMOVED***globalVersion;
***REMOVED******REMOVED***if***REMOVED***(!computed.isSSR***REMOVED***&&***REMOVED***computed.flags***REMOVED***&***REMOVED***128***REMOVED***&&***REMOVED***(!computed.deps***REMOVED***&&***REMOVED***!computed._dirty***REMOVED***||***REMOVED***!isDirty(computed)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED***const***REMOVED***dep***REMOVED***=***REMOVED***computed.dep;
***REMOVED******REMOVED***const***REMOVED***prevSub***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED***const***REMOVED***prevShouldTrack***REMOVED***=***REMOVED***shouldTrack;
***REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***computed;
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prepareDeps(computed);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***computed.fn(computed._value);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep.version***REMOVED***===***REMOVED***0***REMOVED***||***REMOVED***hasChanged(value,***REMOVED***computed._value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***128;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed._value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***prevShouldTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***cleanupDeps(computed);
***REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***&=***REMOVED***-3;
***REMOVED******REMOVED***}
}
function***REMOVED***removeSub(link,***REMOVED***soft***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***dep,***REMOVED***prevSub,***REMOVED***nextSub***REMOVED***}***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***if***REMOVED***(prevSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prevSub.nextSub***REMOVED***=***REMOVED***nextSub;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(nextSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nextSub.prevSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***link.nextSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(dep.subsHead***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.subsHead***REMOVED***=***REMOVED***nextSub;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(dep.subs***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.subs***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevSub***REMOVED***&&***REMOVED***dep.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.computed.flags***REMOVED***&=***REMOVED***-5;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***l***REMOVED***=***REMOVED***dep.computed.deps;***REMOVED***l;***REMOVED***l***REMOVED***=***REMOVED***l.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeSub(l,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!soft***REMOVED***&&***REMOVED***!--dep.sc***REMOVED***&&***REMOVED***dep.map)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***dep.map.delete(dep.key);
***REMOVED******REMOVED***}
}
function***REMOVED***removeDep(link)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***prevDep,***REMOVED***nextDep***REMOVED***}***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***if***REMOVED***(prevDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***prevDep.nextDep***REMOVED***=***REMOVED***nextDep;
***REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nextDep.prevDep***REMOVED***=***REMOVED***prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED***link.nextDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
}
let***REMOVED***shouldTrack***REMOVED***=***REMOVED***true;
const***REMOVED***trackStack***REMOVED***=***REMOVED***[];
function***REMOVED***pauseTracking()***REMOVED***{
***REMOVED******REMOVED***trackStack.push(shouldTrack);
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***false;
}
function***REMOVED***resetTracking()***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***trackStack.pop();
***REMOVED******REMOVED***shouldTrack***REMOVED***=***REMOVED***last***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***?***REMOVED***true***REMOVED***:***REMOVED***last;
}
function***REMOVED***cleanupEffect(e)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***cleanup***REMOVED***}***REMOVED***=***REMOVED***e;
***REMOVED******REMOVED***e.cleanup***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevSub***REMOVED***=***REMOVED***activeSub;
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***=***REMOVED***prevSub;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

let***REMOVED***globalVersion***REMOVED***=***REMOVED***0;
class***REMOVED***Link***REMOVED***{
***REMOVED******REMOVED***constructor(sub,***REMOVED***dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.sub***REMOVED***=***REMOVED***sub;
***REMOVED******REMOVED******REMOVED******REMOVED***this.dep***REMOVED***=***REMOVED***dep;
***REMOVED******REMOVED******REMOVED******REMOVED***this.version***REMOVED***=***REMOVED***dep.version;
***REMOVED******REMOVED******REMOVED******REMOVED***this.nextDep***REMOVED***=***REMOVED***this.prevDep***REMOVED***=***REMOVED***this.nextSub***REMOVED***=***REMOVED***this.prevSub***REMOVED***=***REMOVED***this.prevActiveLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***}
}
class***REMOVED***Dep***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***isolatedDeclarations***REMOVED***"__v_skip"
***REMOVED******REMOVED***constructor(computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.computed***REMOVED***=***REMOVED***computed;
***REMOVED******REMOVED******REMOVED******REMOVED***this.version***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Link***REMOVED***between***REMOVED***this***REMOVED***dep***REMOVED***and***REMOVED***the***REMOVED***current***REMOVED***active***REMOVED***effect
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.activeLink***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Doubly***REMOVED***linked***REMOVED***list***REMOVED***representing***REMOVED***the***REMOVED***subscribing***REMOVED***effects***REMOVED***(tail)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.subs***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***For***REMOVED***object***REMOVED***property***REMOVED***deps***REMOVED***cleanup
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.map***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***this.key***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Subscriber***REMOVED***counter
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.sc***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.__v_skip***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.subsHead***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***track(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!activeSub***REMOVED***||***REMOVED***!shouldTrack***REMOVED***||***REMOVED***activeSub***REMOVED***===***REMOVED***this.computed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***link***REMOVED***=***REMOVED***this.activeLink;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link***REMOVED***===***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***link.sub***REMOVED***!==***REMOVED***activeSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link***REMOVED***=***REMOVED***this.activeLink***REMOVED***=***REMOVED***new***REMOVED***Link(activeSub,***REMOVED***this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!activeSub.deps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.deps***REMOVED***=***REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***activeSub.depsTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail.nextDep***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSub(link);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(link.version***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***this.version;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***link.nextDep;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.prevDep***REMOVED***=***REMOVED***link.prevDep;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.prevDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep.nextDep***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevDep***REMOVED***=***REMOVED***activeSub.depsTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.nextDep***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail.nextDep***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.depsTail***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub.deps***REMOVED***===***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.deps***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activeSub.onTrack)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeSub.onTrack(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect:***REMOVED***activeSub
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debugInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***link;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***trigger(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.version++;
***REMOVED******REMOVED******REMOVED******REMOVED***globalVersion++;
***REMOVED******REMOVED******REMOVED******REMOVED***this.notify(debugInfo);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***notify(debugInfo)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***head***REMOVED***=***REMOVED***this.subsHead;***REMOVED***head;***REMOVED***head***REMOVED***=***REMOVED***head.nextSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(head.sub.onTrigger***REMOVED***&&***REMOVED***!(head.sub.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***head.sub.onTrigger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect:***REMOVED***head.sub
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debugInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***link***REMOVED***=***REMOVED***this.subs;***REMOVED***link;***REMOVED***link***REMOVED***=***REMOVED***link.prevSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.sub.notify())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.sub.dep.notify();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endBatch();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***addSub(link)***REMOVED***{
***REMOVED******REMOVED***link.dep.sc++;
***REMOVED******REMOVED***if***REMOVED***(link.sub.flags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***computed***REMOVED***=***REMOVED***link.dep.computed;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(computed***REMOVED***&&***REMOVED***!link.dep.subs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***computed.flags***REMOVED***|=***REMOVED***4***REMOVED***|***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***l***REMOVED***=***REMOVED***computed.deps;***REMOVED***l;***REMOVED***l***REMOVED***=***REMOVED***l.nextDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addSub(l);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentTail***REMOVED***=***REMOVED***link.dep.subs;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentTail***REMOVED***!==***REMOVED***link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.prevSub***REMOVED***=***REMOVED***currentTail;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentTail)***REMOVED***currentTail.nextSub***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link.dep.subsHead***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.dep.subsHead***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***link.dep.subs***REMOVED***=***REMOVED***link;
***REMOVED******REMOVED***}
}
const***REMOVED***targetMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Object***REMOVED***iterate"***REMOVED***
);
const***REMOVED***MAP_KEY_ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Map***REMOVED***keys***REMOVED***iterate"***REMOVED***
);
const***REMOVED***ARRAY_ITERATE_KEY***REMOVED***=***REMOVED***Symbol(
***REMOVED******REMOVED***"Array***REMOVED***iterate"***REMOVED***
);
function***REMOVED***track(target,***REMOVED***type,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(shouldTrack***REMOVED***&&***REMOVED***activeSub)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***depsMap***REMOVED***=***REMOVED***targetMap.get(target);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!depsMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***targetMap.set(target,***REMOVED***depsMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dep***REMOVED***=***REMOVED***depsMap.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depsMap.set(key,***REMOVED***dep***REMOVED***=***REMOVED***new***REMOVED***Dep());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.map***REMOVED***=***REMOVED***depsMap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.key***REMOVED***=***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.track({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***trigger(target,***REMOVED***type,***REMOVED***key,***REMOVED***newValue,***REMOVED***oldValue,***REMOVED***oldTarget)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***depsMap***REMOVED***=***REMOVED***targetMap.get(target);
***REMOVED******REMOVED***if***REMOVED***(!depsMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***globalVersion++;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***run***REMOVED***=***REMOVED***(dep)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dep.trigger({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldTarget
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"clear")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***depsMap.forEach(run);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsArray***REMOVED***=***REMOVED***isArray(target);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isArrayIndex***REMOVED***=***REMOVED***targetIsArray***REMOVED***&&***REMOVED***isIntegerKey(key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetIsArray***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"length")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newLength***REMOVED***=***REMOVED***Number(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***depsMap.forEach((dep,***REMOVED***key2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key2***REMOVED***===***REMOVED***"length"***REMOVED***||***REMOVED***key2***REMOVED***===***REMOVED***ARRAY_ITERATE_KEY***REMOVED***||***REMOVED***!isSymbol(key2)***REMOVED***&&***REMOVED***key2***REMOVED***>=***REMOVED***newLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(dep);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***depsMap.has(void***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArrayIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ARRAY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"add":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!targetIsArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(MAP_KEY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArrayIndex)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get("length"));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"delete":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!targetIsArray)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(MAP_KEY_ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"set":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMap(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***run(depsMap.get(ITERATE_KEY));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***endBatch();
}

function***REMOVED***reactiveReadArray(array)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***toRaw(array);
***REMOVED******REMOVED***if***REMOVED***(raw***REMOVED***===***REMOVED***array)***REMOVED***return***REMOVED***raw;
***REMOVED******REMOVED***track(raw,***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***return***REMOVED***isShallow(array)***REMOVED***?***REMOVED***raw***REMOVED***:***REMOVED***raw.map(toReactive);
}
function***REMOVED***shallowReadArray(arr)***REMOVED***{
***REMOVED******REMOVED***track(arr***REMOVED***=***REMOVED***toRaw(arr),***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***return***REMOVED***arr;
}
const***REMOVED***arrayInstrumentations***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***__proto__:***REMOVED***null,
***REMOVED******REMOVED***[Symbol.iterator]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***Symbol.iterator,***REMOVED***toReactive);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***concat(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).concat(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***...args.map((x)***REMOVED***=>***REMOVED***isArray(x)***REMOVED***?***REMOVED***reactiveReadArray(x)***REMOVED***:***REMOVED***x)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***entries()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***"entries",***REMOVED***(value)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value[1]***REMOVED***=***REMOVED***toReactive(value[1]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***},
***REMOVED******REMOVED***every(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"every",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***filter(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"filter",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***(v)***REMOVED***=>***REMOVED***v.map(toReactive),***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***find(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"find",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***toReactive,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findIndex(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findIndex",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findLast(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findLast",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***toReactive,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***findLastIndex(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"findLastIndex",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***flat,***REMOVED***flatMap***REMOVED***could***REMOVED***benefit***REMOVED***from***REMOVED***ARRAY_ITERATE***REMOVED***but***REMOVED***are***REMOVED***not***REMOVED***straight-forward***REMOVED***to***REMOVED***implement
***REMOVED******REMOVED***forEach(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"forEach",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***includes(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"includes",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***indexOf(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"indexOf",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***join(separator)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).join(separator);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***keys()***REMOVED***iterator***REMOVED***only***REMOVED***reads***REMOVED***`length`,***REMOVED***no***REMOVED***optimization***REMOVED***required
***REMOVED******REMOVED***lastIndexOf(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***searchProxy(this,***REMOVED***"lastIndexOf",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***map(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"map",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***pop()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"pop");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***push(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"push",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***reduce(fn,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reduce(this,***REMOVED***"reduce",***REMOVED***fn,***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***reduceRight(fn,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reduce(this,***REMOVED***"reduceRight",***REMOVED***fn,***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***shift()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"shift");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***slice***REMOVED***could***REMOVED***use***REMOVED***ARRAY_ITERATE***REMOVED***but***REMOVED***also***REMOVED***seems***REMOVED***to***REMOVED***beg***REMOVED***for***REMOVED***range***REMOVED***tracking
***REMOVED******REMOVED***some(fn,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(this,***REMOVED***"some",***REMOVED***fn,***REMOVED***thisArg,***REMOVED***void***REMOVED***0,***REMOVED***arguments);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***splice(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"splice",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toReversed()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toReversed();
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toSorted(comparer)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toSorted(comparer);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***toSpliced(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveReadArray(this).toSpliced(...args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***unshift(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***noTracking(this,***REMOVED***"unshift",***REMOVED***args);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***values()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***iterator(this,***REMOVED***"values",***REMOVED***toReactive);
***REMOVED******REMOVED***}
};
function***REMOVED***iterator(self,***REMOVED***method,***REMOVED***wrapValue)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***const***REMOVED***iter***REMOVED***=***REMOVED***arr[method]();
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self***REMOVED***&&***REMOVED***!isShallow(self))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***iter._next***REMOVED***=***REMOVED***iter.next;
***REMOVED******REMOVED******REMOVED******REMOVED***iter.next***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***iter._next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.value***REMOVED***=***REMOVED***wrapValue(result.value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***iter;
}
const***REMOVED***arrayProto***REMOVED***=***REMOVED***Array.prototype;
function***REMOVED***apply(self,***REMOVED***method,***REMOVED***fn,***REMOVED***thisArg,***REMOVED***wrappedRetFn,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***const***REMOVED***needsWrap***REMOVED***=***REMOVED***arr***REMOVED***!==***REMOVED***self***REMOVED***&&***REMOVED***!isShallow(self);
***REMOVED******REMOVED***const***REMOVED***methodFn***REMOVED***=***REMOVED***arr[method];
***REMOVED******REMOVED***if***REMOVED***(methodFn***REMOVED***!==***REMOVED***arrayProto[method])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result2***REMOVED***=***REMOVED***methodFn.apply(self,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***needsWrap***REMOVED***?***REMOVED***toReactive(result2)***REMOVED***:***REMOVED***result2;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***wrappedFn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needsWrap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***toReactive(item),***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fn.length***REMOVED***>***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***item,***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***methodFn.call(arr,***REMOVED***wrappedFn,***REMOVED***thisArg);
***REMOVED******REMOVED***return***REMOVED***needsWrap***REMOVED***&&***REMOVED***wrappedRetFn***REMOVED***?***REMOVED***wrappedRetFn(result)***REMOVED***:***REMOVED***result;
}
function***REMOVED***reduce(self,***REMOVED***method,***REMOVED***fn,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***shallowReadArray(self);
***REMOVED******REMOVED***let***REMOVED***wrappedFn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED***if***REMOVED***(arr***REMOVED***!==***REMOVED***self)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isShallow(self))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(acc,***REMOVED***item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***acc,***REMOVED***toReactive(item),***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fn.length***REMOVED***>***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedFn***REMOVED***=***REMOVED***function(acc,***REMOVED***item,***REMOVED***index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn.call(this,***REMOVED***acc,***REMOVED***item,***REMOVED***index,***REMOVED***self);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***arr[method](wrappedFn,***REMOVED***...args);
}
function***REMOVED***searchProxy(self,***REMOVED***method,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***toRaw(self);
***REMOVED******REMOVED***track(arr,***REMOVED***"iterate",***REMOVED***ARRAY_ITERATE_KEY);
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***arr[method](...args);
***REMOVED******REMOVED***if***REMOVED***((res***REMOVED***===***REMOVED***-1***REMOVED***||***REMOVED***res***REMOVED***===***REMOVED***false)***REMOVED***&&***REMOVED***isProxy(args[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***args[0]***REMOVED***=***REMOVED***toRaw(args[0]);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***arr[method](...args);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***noTracking(self,***REMOVED***method,***REMOVED***args***REMOVED***=***REMOVED***[])***REMOVED***{
***REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED***startBatch();
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***toRaw(self)[method].apply(self,***REMOVED***args);
***REMOVED******REMOVED***endBatch();
***REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED***return***REMOVED***res;
}

const***REMOVED***isNonTrackableKeys***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(`__proto__,__v_isRef,__isVue`);
const***REMOVED***builtInSymbols***REMOVED***=***REMOVED***new***REMOVED***Set(
***REMOVED******REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.getOwnPropertyNames(Symbol).filter((key)***REMOVED***=>***REMOVED***key***REMOVED***!==***REMOVED***"arguments"***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"caller").map((key)***REMOVED***=>***REMOVED***Symbol[key]).filter(isSymbol)
);
function***REMOVED***hasOwnProperty(key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isSymbol(key))***REMOVED***key***REMOVED***=***REMOVED***String(key);
***REMOVED******REMOVED***const***REMOVED***obj***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED***track(obj,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED***return***REMOVED***obj.hasOwnProperty(key);
}
class***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(_isReadonly***REMOVED***=***REMOVED***false,***REMOVED***_isShallow***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._isReadonly***REMOVED***=***REMOVED***_isReadonly;
***REMOVED******REMOVED******REMOVED******REMOVED***this._isShallow***REMOVED***=***REMOVED***_isShallow;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_skip")***REMOVED***return***REMOVED***target["__v_skip"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isReadonly2***REMOVED***=***REMOVED***this._isReadonly,***REMOVED***isShallow2***REMOVED***=***REMOVED***this._isShallow;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReactive")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReadonly")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isShallow")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isShallow2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_raw")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(receiver***REMOVED***===***REMOVED***(isReadonly2***REMOVED***?***REMOVED***isShallow2***REMOVED***?***REMOVED***shallowReadonlyMap***REMOVED***:***REMOVED***readonlyMap***REMOVED***:***REMOVED***isShallow2***REMOVED***?***REMOVED***shallowReactiveMap***REMOVED***:***REMOVED***reactiveMap).get(target)***REMOVED***||***REMOVED***//***REMOVED***receiver***REMOVED***is***REMOVED***not***REMOVED***the***REMOVED***reactive***REMOVED***proxy,***REMOVED***but***REMOVED***has***REMOVED***the***REMOVED***same***REMOVED***prototype
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***means***REMOVED***the***REMOVED***receiver***REMOVED***is***REMOVED***a***REMOVED***user***REMOVED***proxy***REMOVED***of***REMOVED***the***REMOVED***reactive***REMOVED***proxy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.getPrototypeOf(target)***REMOVED***===***REMOVED***Object.getPrototypeOf(receiver))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsArray***REMOVED***=***REMOVED***isArray(target);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReadonly2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(targetIsArray***REMOVED***&&***REMOVED***(fn***REMOVED***=***REMOVED***arrayInstrumentations[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"hasOwnProperty")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasOwnProperty;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***Reflect.get(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***this***REMOVED***is***REMOVED***a***REMOVED***proxy***REMOVED***wrapping***REMOVED***a***REMOVED***ref,***REMOVED***return***REMOVED***methods***REMOVED***using***REMOVED***the***REMOVED***raw***REMOVED***ref
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***as***REMOVED***receiver***REMOVED***so***REMOVED***that***REMOVED***we***REMOVED***don't***REMOVED***have***REMOVED***to***REMOVED***call***REMOVED***`toRaw`***REMOVED***on***REMOVED***the***REMOVED***ref***REMOVED***in***REMOVED***all
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***its***REMOVED***class***REMOVED***methods
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isRef(target)***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSymbol(key)***REMOVED***?***REMOVED***builtInSymbols.has(key)***REMOVED***:***REMOVED***isNonTrackableKeys(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReadonly2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(target,***REMOVED***"get",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isShallow2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(res))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***targetIsArray***REMOVED***&&***REMOVED***isIntegerKey(key)***REMOVED***?***REMOVED***res***REMOVED***:***REMOVED***res.value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(res))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2***REMOVED***?***REMOVED***readonly(res)***REMOVED***:***REMOVED***reactive(res);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
}
class***REMOVED***MutableReactiveHandler***REMOVED***extends***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(isShallow2***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(false,***REMOVED***isShallow2);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!this._isShallow)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isOldValueReadonly***REMOVED***=***REMOVED***isReadonly(oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***toRaw(oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isArray(target)***REMOVED***&&***REMOVED***isRef(oldValue)***REMOVED***&&***REMOVED***!isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOldValueReadonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Set***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target[key]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***isArray(target)***REMOVED***&&***REMOVED***isIntegerKey(key)***REMOVED***?***REMOVED***Number(key)***REMOVED***<***REMOVED***target.length***REMOVED***:***REMOVED***hasOwn(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.set(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isRef(target)***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(target***REMOVED***===***REMOVED***toRaw(receiver))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChanged(value,***REMOVED***oldValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"set",***REMOVED***key,***REMOVED***value,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***deleteProperty(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***hasOwn(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.deleteProperty(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(result***REMOVED***&&***REMOVED***hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"delete",***REMOVED***key,***REMOVED***void***REMOVED***0,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***has(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***Reflect.has(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isSymbol(key)***REMOVED***||***REMOVED***!builtInSymbols.has(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(target,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ownKeys(target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***track(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"iterate",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isArray(target)***REMOVED***?***REMOVED***"length"***REMOVED***:***REMOVED***ITERATE_KEY
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.ownKeys(target);
***REMOVED******REMOVED***}
}
class***REMOVED***ReadonlyReactiveHandler***REMOVED***extends***REMOVED***BaseReactiveHandler***REMOVED***{
***REMOVED******REMOVED***constructor(isShallow2***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***super(true,***REMOVED***isShallow2);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Set***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***deleteProperty(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Delete***REMOVED***operation***REMOVED***on***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
}
const***REMOVED***mutableHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***MutableReactiveHandler();
const***REMOVED***readonlyHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***ReadonlyReactiveHandler();
const***REMOVED***shallowReactiveHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***MutableReactiveHandler(true);
const***REMOVED***shallowReadonlyHandlers***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***ReadonlyReactiveHandler(true);

const***REMOVED***toShallow***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***value;
const***REMOVED***getProto***REMOVED***=***REMOVED***(v)***REMOVED***=>***REMOVED***Reflect.getPrototypeOf(v);
function***REMOVED***createIterableMethod(method,***REMOVED***isReadonly2,***REMOVED***isShallow2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***targetIsMap***REMOVED***=***REMOVED***isMap(rawTarget);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isPair***REMOVED***=***REMOVED***method***REMOVED***===***REMOVED***"entries"***REMOVED***||***REMOVED***method***REMOVED***===***REMOVED***Symbol.iterator***REMOVED***&&***REMOVED***targetIsMap;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isKeyOnly***REMOVED***=***REMOVED***method***REMOVED***===***REMOVED***"keys"***REMOVED***&&***REMOVED***targetIsMap;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***innerIterator***REMOVED***=***REMOVED***target[method](...args);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***isShallow2***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***isReadonly2***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED***!isReadonly2***REMOVED***&&***REMOVED***track(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawTarget,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"iterate",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isKeyOnly***REMOVED***?***REMOVED***MAP_KEY_ITERATE_KEY***REMOVED***:***REMOVED***ITERATE_KEY
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***iterator***REMOVED***protocol
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***value,***REMOVED***done***REMOVED***}***REMOVED***=***REMOVED***innerIterator.next();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***done***REMOVED***?***REMOVED***{***REMOVED***value,***REMOVED***done***REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***isPair***REMOVED***?***REMOVED***[wrap(value[0]),***REMOVED***wrap(value[1])]***REMOVED***:***REMOVED***wrap(value),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***done
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***iterable***REMOVED***protocol
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[Symbol.iterator]()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};
}
function***REMOVED***createReadonlyMethod(type)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function(...args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***args[0]***REMOVED***?***REMOVED***`on***REMOVED***key***REMOVED***"${args[0]}"***REMOVED***`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${capitalize(type)}***REMOVED***operation***REMOVED***${key}failed:***REMOVED***target***REMOVED***is***REMOVED***readonly.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toRaw(this)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***type***REMOVED***===***REMOVED***"delete"***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***type***REMOVED***===***REMOVED***"clear"***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***this;
***REMOVED******REMOVED***};
}
function***REMOVED***createInstrumentations(readonly,***REMOVED***shallow)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instrumentations***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***get(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasChanged(key,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"get",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"get",***REMOVED***rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has***REMOVED***}***REMOVED***=***REMOVED***getProto(rawTarget);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***shallow***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***readonly***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(has.call(rawTarget,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrap(target.get(key));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(has.call(rawTarget,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrap(target.get(rawKey));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(target***REMOVED***!==***REMOVED***rawTarget)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.get(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***size()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!readonly***REMOVED***&&***REMOVED***track(toRaw(target),***REMOVED***"iterate",***REMOVED***ITERATE_KEY);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.size;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***has(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***this["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!readonly)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasChanged(key,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"has",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(rawTarget,***REMOVED***"has",***REMOVED***rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key***REMOVED***===***REMOVED***rawKey***REMOVED***?***REMOVED***target.has(key)***REMOVED***:***REMOVED***target.has(key)***REMOVED***||***REMOVED***target.has(rawKey);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***forEach(callback,***REMOVED***thisArg)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***observed***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***observed["__v_raw"];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawTarget***REMOVED***=***REMOVED***toRaw(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrap***REMOVED***=***REMOVED***shallow***REMOVED***?***REMOVED***toShallow***REMOVED***:***REMOVED***readonly***REMOVED***?***REMOVED***toReadonly***REMOVED***:***REMOVED***toReactive;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!readonly***REMOVED***&&***REMOVED***track(rawTarget,***REMOVED***"iterate",***REMOVED***ITERATE_KEY);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target.forEach((value,***REMOVED***key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***callback.call(thisArg,***REMOVED***wrap(value),***REMOVED***wrap(key),***REMOVED***observed);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED***instrumentations,
***REMOVED******REMOVED******REMOVED******REMOVED***readonly***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***add:***REMOVED***createReadonlyMethod("add"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***createReadonlyMethod("set"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete:***REMOVED***createReadonlyMethod("delete"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clear:***REMOVED***createReadonlyMethod("clear")
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***add(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shallow***REMOVED***&&***REMOVED***!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proto***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadKey***REMOVED***=***REMOVED***proto.has.call(target,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.add(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***value,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set(key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shallow***REMOVED***&&***REMOVED***!isShallow(value)***REMOVED***&&***REMOVED***!isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has,***REMOVED***get***REMOVED***}***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***get.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.set(key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"add",***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasChanged(value,***REMOVED***oldValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"set",***REMOVED***key,***REMOVED***value,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete(key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***has,***REMOVED***get***REMOVED***}***REMOVED***=***REMOVED***getProto(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hadKey***REMOVED***=***REMOVED***has.call(target,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***get***REMOVED***?***REMOVED***get.call(target,***REMOVED***key)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***target.delete(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hadKey)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(target,***REMOVED***"delete",***REMOVED***key,***REMOVED***void***REMOVED***0,***REMOVED***oldValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clear()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***toRaw(this);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hadItems***REMOVED***=***REMOVED***target.size***REMOVED***!==***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldTarget***REMOVED***=***REMOVED***isMap(target)***REMOVED***?***REMOVED***new***REMOVED***Map(target)***REMOVED***:***REMOVED***new***REMOVED***Set(target)***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***target.clear();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hadItems)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"clear",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldTarget
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***);
***REMOVED******REMOVED***const***REMOVED***iteratorMethods***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***"keys",
***REMOVED******REMOVED******REMOVED******REMOVED***"values",
***REMOVED******REMOVED******REMOVED******REMOVED***"entries",
***REMOVED******REMOVED******REMOVED******REMOVED***Symbol.iterator
***REMOVED******REMOVED***];
***REMOVED******REMOVED***iteratorMethods.forEach((method)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instrumentations[method]***REMOVED***=***REMOVED***createIterableMethod(method,***REMOVED***readonly,***REMOVED***shallow);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***instrumentations;
}
function***REMOVED***createInstrumentationGetter(isReadonly2,***REMOVED***shallow)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instrumentations***REMOVED***=***REMOVED***createInstrumentations(isReadonly2,***REMOVED***shallow);
***REMOVED******REMOVED***return***REMOVED***(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReactive")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_isReadonly")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReadonly2;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_raw")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.get(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasOwn(instrumentations,***REMOVED***key)***REMOVED***&&***REMOVED***key***REMOVED***in***REMOVED***target***REMOVED***?***REMOVED***instrumentations***REMOVED***:***REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***receiver
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
}
const***REMOVED***mutableCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(false,***REMOVED***false)
};
const***REMOVED***shallowCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(false,***REMOVED***true)
};
const***REMOVED***readonlyCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(true,***REMOVED***false)
};
const***REMOVED***shallowReadonlyCollectionHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createInstrumentationGetter(true,***REMOVED***true)
};
function***REMOVED***checkIdentityKeys(target,***REMOVED***has,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***rawKey***REMOVED***=***REMOVED***toRaw(key);
***REMOVED******REMOVED***if***REMOVED***(rawKey***REMOVED***!==***REMOVED***key***REMOVED***&&***REMOVED***has.call(target,***REMOVED***rawKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***toRawType(target);
***REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Reactive***REMOVED***${type}***REMOVED***contains***REMOVED***both***REMOVED***the***REMOVED***raw***REMOVED***and***REMOVED***reactive***REMOVED***versions***REMOVED***of***REMOVED***the***REMOVED***same***REMOVED***object${type***REMOVED***===***REMOVED***`Map`***REMOVED***?***REMOVED***`***REMOVED***as***REMOVED***keys`***REMOVED***:***REMOVED***``},***REMOVED***which***REMOVED***can***REMOVED***lead***REMOVED***to***REMOVED***inconsistencies.***REMOVED***Avoid***REMOVED***differentiating***REMOVED***between***REMOVED***the***REMOVED***raw***REMOVED***and***REMOVED***reactive***REMOVED***versions***REMOVED***of***REMOVED***an***REMOVED***object***REMOVED***and***REMOVED***only***REMOVED***use***REMOVED***the***REMOVED***reactive***REMOVED***version***REMOVED***if***REMOVED***possible.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}

const***REMOVED***reactiveMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***shallowReactiveMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***readonlyMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
const***REMOVED***shallowReadonlyMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
function***REMOVED***targetTypeMap(rawType)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(rawType)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Object":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Array":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***1***REMOVED***/****REMOVED***COMMON***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Map":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"Set":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakMap":
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"WeakSet":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***2***REMOVED***/****REMOVED***COLLECTION***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/;
***REMOVED******REMOVED***}
}
function***REMOVED***getTargetType(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value["__v_skip"]***REMOVED***||***REMOVED***!Object.isExtensible(value)***REMOVED***?***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/***REMOVED***:***REMOVED***targetTypeMap(toRawType(value));
}
function***REMOVED***reactive(target)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isReadonly(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***mutableHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***mutableCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***reactiveMap
***REMOVED******REMOVED***);
}
function***REMOVED***shallowReactive(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReactiveHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReactiveMap
***REMOVED******REMOVED***);
}
function***REMOVED***readonly(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***readonlyMap
***REMOVED******REMOVED***);
}
function***REMOVED***shallowReadonly(target)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createReactiveObject(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyCollectionHandlers,
***REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonlyMap
***REMOVED******REMOVED***);
}
function***REMOVED***createReactiveObject(target,***REMOVED***isReadonly2,***REMOVED***baseHandlers,***REMOVED***collectionHandlers,***REMOVED***proxyMap)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isObject(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`value***REMOVED***cannot***REMOVED***be***REMOVED***made***REMOVED***${isReadonly2***REMOVED***?***REMOVED***"readonly"***REMOVED***:***REMOVED***"reactive"}:***REMOVED***${String(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(target["__v_raw"]***REMOVED***&&***REMOVED***!(isReadonly2***REMOVED***&&***REMOVED***target["__v_isReactive"]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***targetType***REMOVED***=***REMOVED***getTargetType(target);
***REMOVED******REMOVED***if***REMOVED***(targetType***REMOVED***===***REMOVED***0***REMOVED***/****REMOVED***INVALID***REMOVED****/)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***existingProxy***REMOVED***=***REMOVED***proxyMap.get(target);
***REMOVED******REMOVED***if***REMOVED***(existingProxy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***existingProxy;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***proxy***REMOVED***=***REMOVED***new***REMOVED***Proxy(
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***targetType***REMOVED***===***REMOVED***2***REMOVED***/****REMOVED***COLLECTION***REMOVED****/***REMOVED***?***REMOVED***collectionHandlers***REMOVED***:***REMOVED***baseHandlers
***REMOVED******REMOVED***);
***REMOVED******REMOVED***proxyMap.set(target,***REMOVED***proxy);
***REMOVED******REMOVED***return***REMOVED***proxy;
}
function***REMOVED***isReactive(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isReadonly(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isReactive(value["__v_raw"]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isReactive"]);
}
function***REMOVED***isReadonly(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isReadonly"]);
}
function***REMOVED***isShallow(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***!!(value***REMOVED***&&***REMOVED***value["__v_isShallow"]);
}
function***REMOVED***isProxy(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***!!value["__v_raw"]***REMOVED***:***REMOVED***false;
}
function***REMOVED***toRaw(observed)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***observed***REMOVED***&&***REMOVED***observed["__v_raw"];
***REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***toRaw(raw)***REMOVED***:***REMOVED***observed;
}
function***REMOVED***markRaw(value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!hasOwn(value,***REMOVED***"__v_skip")***REMOVED***&&***REMOVED***Object.isExtensible(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***def(value,***REMOVED***"__v_skip",***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
}
const***REMOVED***toReactive***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***isObject(value)***REMOVED***?***REMOVED***reactive(value)***REMOVED***:***REMOVED***value;
const***REMOVED***toReadonly***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***isObject(value)***REMOVED***?***REMOVED***readonly(value)***REMOVED***:***REMOVED***value;

function***REMOVED***isRef(r)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***r***REMOVED***?***REMOVED***r["__v_isRef"]***REMOVED***===***REMOVED***true***REMOVED***:***REMOVED***false;
}
function***REMOVED***unref(ref2)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isRef(ref2)***REMOVED***?***REMOVED***ref2.value***REMOVED***:***REMOVED***ref2;
}
const***REMOVED***shallowUnwrapHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get:***REMOVED***(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***=>***REMOVED***key***REMOVED***===***REMOVED***"__v_raw"***REMOVED***?***REMOVED***target***REMOVED***:***REMOVED***unref(Reflect.get(target,***REMOVED***key,***REMOVED***receiver)),
***REMOVED******REMOVED***set:***REMOVED***(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(oldValue)***REMOVED***&&***REMOVED***!isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.set(target,***REMOVED***key,***REMOVED***value,***REMOVED***receiver);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
function***REMOVED***proxyRefs(objectWithRefs)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isReactive(objectWithRefs)***REMOVED***?***REMOVED***objectWithRefs***REMOVED***:***REMOVED***new***REMOVED***Proxy(objectWithRefs,***REMOVED***shallowUnwrapHandlers);
}

class***REMOVED***ComputedRefImpl***REMOVED***{
***REMOVED******REMOVED***constructor(fn,***REMOVED***setter,***REMOVED***isSSR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.fn***REMOVED***=***REMOVED***fn;
***REMOVED******REMOVED******REMOVED******REMOVED***this.setter***REMOVED***=***REMOVED***setter;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this._value***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.dep***REMOVED***=***REMOVED***new***REMOVED***Dep(this);
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.__v_isRef***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***TODO***REMOVED***isolatedDeclarations***REMOVED***"__v_isReadonly"
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***computed***REMOVED***is***REMOVED***also***REMOVED***a***REMOVED***subscriber***REMOVED***that***REMOVED***tracks***REMOVED***other***REMOVED***deps
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.deps***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.depsTail***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.globalVersion***REMOVED***=***REMOVED***globalVersion***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***this.next***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***for***REMOVED***backwards***REMOVED***compat
***REMOVED******REMOVED******REMOVED******REMOVED***this.effect***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***this["__v_isReadonly"]***REMOVED***=***REMOVED***!setter;
***REMOVED******REMOVED******REMOVED******REMOVED***this.isSSR***REMOVED***=***REMOVED***isSSR;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED*******REMOVED***@internal
***REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED***notify()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.flags***REMOVED***|=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(this.flags***REMOVED***&***REMOVED***8)***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***infinite***REMOVED***self***REMOVED***recursion
***REMOVED******REMOVED******REMOVED******REMOVED***activeSub***REMOVED***!==***REMOVED***this)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***batch(this,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***get***REMOVED***value()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***link***REMOVED***=***REMOVED***this.dep.track({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***this,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***"get",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***"value"
***REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED***refreshComputed(this);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(link)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***link.version***REMOVED***=***REMOVED***this.dep.version;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***set***REMOVED***value(newValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(this.setter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.setter(newValue);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$2("Write***REMOVED***operation***REMOVED***failed:***REMOVED***computed***REMOVED***value***REMOVED***is***REMOVED***readonly");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***computed$1(getterOrOptions,***REMOVED***debugOptions,***REMOVED***isSSR***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***getter;
***REMOVED******REMOVED***let***REMOVED***setter;
***REMOVED******REMOVED***if***REMOVED***(isFunction(getterOrOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***getterOrOptions;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***getterOrOptions.get;
***REMOVED******REMOVED******REMOVED******REMOVED***setter***REMOVED***=***REMOVED***getterOrOptions.set;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***cRef***REMOVED***=***REMOVED***new***REMOVED***ComputedRefImpl(getter,***REMOVED***setter,***REMOVED***isSSR);
***REMOVED******REMOVED***return***REMOVED***cRef;
}

const***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***=***REMOVED***{};
const***REMOVED***cleanupMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
let***REMOVED***activeWatcher***REMOVED***=***REMOVED***void***REMOVED***0;
function***REMOVED***onWatcherCleanup(cleanupFn,***REMOVED***failSilently***REMOVED***=***REMOVED***false,***REMOVED***owner***REMOVED***=***REMOVED***activeWatcher)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(owner)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cleanups***REMOVED***=***REMOVED***cleanupMap.get(owner);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!cleanups)***REMOVED***cleanupMap.set(owner,***REMOVED***cleanups***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***cleanups.push(cleanupFn);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!failSilently)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`onWatcherCleanup()***REMOVED***was***REMOVED***called***REMOVED***when***REMOVED***there***REMOVED***was***REMOVED***no***REMOVED***active***REMOVED***watcher***REMOVED***to***REMOVED***associate***REMOVED***with.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***watch$1(source,***REMOVED***cb,***REMOVED***options***REMOVED***=***REMOVED***EMPTY_OBJ)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***immediate,***REMOVED***deep,***REMOVED***once,***REMOVED***scheduler,***REMOVED***augmentJob,***REMOVED***call***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***warnInvalidSource***REMOVED***=***REMOVED***(s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***(options.onWarn***REMOVED***||***REMOVED***warn$2)(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Invalid***REMOVED***watch***REMOVED***source:***REMOVED***`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***s,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***watch***REMOVED***source***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***a***REMOVED***getter/effect***REMOVED***function,***REMOVED***a***REMOVED***ref,***REMOVED***a***REMOVED***reactive***REMOVED***object,***REMOVED***or***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***these***REMOVED***types.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***reactiveGetter***REMOVED***=***REMOVED***(source2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep)***REMOVED***return***REMOVED***source2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isShallow(source2)***REMOVED***||***REMOVED***deep***REMOVED***===***REMOVED***false***REMOVED***||***REMOVED***deep***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***traverse(source2,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***traverse(source2);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***let***REMOVED***effect;
***REMOVED******REMOVED***let***REMOVED***getter;
***REMOVED******REMOVED***let***REMOVED***cleanup;
***REMOVED******REMOVED***let***REMOVED***boundCleanup;
***REMOVED******REMOVED***let***REMOVED***forceTrigger***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***isMultiSource***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(isRef(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***source.value;
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***isShallow(source);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isReactive(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***reactiveGetter(source);
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isMultiSource***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***forceTrigger***REMOVED***=***REMOVED***source.some((s)***REMOVED***=>***REMOVED***isReactive(s)***REMOVED***||***REMOVED***isShallow(s));
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***source.map((s)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***s.value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isReactive(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***reactiveGetter(s);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(s))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***call***REMOVED***?***REMOVED***call(s,***REMOVED***2)***REMOVED***:***REMOVED***s();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnInvalidSource(s);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***call***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***call(source,***REMOVED***2)***REMOVED***:***REMOVED***source;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentEffect***REMOVED***=***REMOVED***activeWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***effect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***call***REMOVED***?***REMOVED***call(source,***REMOVED***3,***REMOVED***[boundCleanup])***REMOVED***:***REMOVED***source(boundCleanup);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***currentEffect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED***warnInvalidSource(source);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(cb***REMOVED***&&***REMOVED***deep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***baseGetter***REMOVED***=***REMOVED***getter;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***depth***REMOVED***=***REMOVED***deep***REMOVED***===***REMOVED***true***REMOVED***?***REMOVED***Infinity***REMOVED***:***REMOVED***deep;
***REMOVED******REMOVED******REMOVED******REMOVED***getter***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***traverse(baseGetter(),***REMOVED***depth);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***scope***REMOVED***=***REMOVED***getCurrentScope();
***REMOVED******REMOVED***const***REMOVED***watchHandle***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.stop();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scope***REMOVED***&&***REMOVED***scope.active)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove(scope.effects,***REMOVED***effect);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(once***REMOVED***&&***REMOVED***cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_cb***REMOVED***=***REMOVED***cb;
***REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_cb(...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchHandle();
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***oldValue***REMOVED***=***REMOVED***isMultiSource***REMOVED***?***REMOVED***new***REMOVED***Array(source.length).fill(INITIAL_WATCHER_VALUE)***REMOVED***:***REMOVED***INITIAL_WATCHER_VALUE;
***REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***(immediateFirstRun)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(effect.flags***REMOVED***&***REMOVED***1)***REMOVED***||***REMOVED***!effect.dirty***REMOVED***&&***REMOVED***!immediateFirstRun)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newValue***REMOVED***=***REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep***REMOVED***||***REMOVED***forceTrigger***REMOVED***||***REMOVED***(isMultiSource***REMOVED***?***REMOVED***newValue.some((v,***REMOVED***i)***REMOVED***=>***REMOVED***hasChanged(v,***REMOVED***oldValue[i]))***REMOVED***:***REMOVED***hasChanged(newValue,***REMOVED***oldValue)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanup();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***currentWatcher***REMOVED***=***REMOVED***activeWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***effect;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***args***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***pass***REMOVED***undefined***REMOVED***as***REMOVED***the***REMOVED***old***REMOVED***value***REMOVED***when***REMOVED***it's***REMOVED***changed***REMOVED***for***REMOVED***the***REMOVED***first***REMOVED***time
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***===***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***isMultiSource***REMOVED***&&***REMOVED***oldValue[0]***REMOVED***===***REMOVED***INITIAL_WATCHER_VALUE***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***oldValue,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***boundCleanup
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***newValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***call***REMOVED***?***REMOVED***call(cb,***REMOVED***3,***REMOVED***args)***REMOVED***:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***@ts-expect-error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb(...args)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activeWatcher***REMOVED***=***REMOVED***currentWatcher;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(augmentJob)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***augmentJob(job);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***effect***REMOVED***=***REMOVED***new***REMOVED***ReactiveEffect(getter);
***REMOVED******REMOVED***effect.scheduler***REMOVED***=***REMOVED***scheduler***REMOVED***?***REMOVED***()***REMOVED***=>***REMOVED***scheduler(job,***REMOVED***false)***REMOVED***:***REMOVED***job;
***REMOVED******REMOVED***boundCleanup***REMOVED***=***REMOVED***(fn)***REMOVED***=>***REMOVED***onWatcherCleanup(fn,***REMOVED***false,***REMOVED***effect);
***REMOVED******REMOVED***cleanup***REMOVED***=***REMOVED***effect.onStop***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cleanups***REMOVED***=***REMOVED***cleanupMap.get(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cleanups)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(call)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***call(cleanups,***REMOVED***4);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***cleanup2***REMOVED***of***REMOVED***cleanups)***REMOVED***cleanup2();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cleanupMap.delete(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrack***REMOVED***=***REMOVED***options.onTrack;
***REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrigger***REMOVED***=***REMOVED***options.onTrigger;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(immediate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job(true);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue***REMOVED***=***REMOVED***effect.run();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(scheduler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***scheduler(job.bind(null,***REMOVED***true),***REMOVED***true);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.run();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***watchHandle.pause***REMOVED***=***REMOVED***effect.pause.bind(effect);
***REMOVED******REMOVED***watchHandle.resume***REMOVED***=***REMOVED***effect.resume.bind(effect);
***REMOVED******REMOVED***watchHandle.stop***REMOVED***=***REMOVED***watchHandle;
***REMOVED******REMOVED***return***REMOVED***watchHandle;
}
function***REMOVED***traverse(value,***REMOVED***depth***REMOVED***=***REMOVED***Infinity,***REMOVED***seen)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(depth***REMOVED***<=***REMOVED***0***REMOVED***||***REMOVED***!isObject(value)***REMOVED***||***REMOVED***value["__v_skip"])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***seen***REMOVED***=***REMOVED***seen***REMOVED***||***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***if***REMOVED***((seen.get(value)***REMOVED***||***REMOVED***0)***REMOVED***>=***REMOVED***depth)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***seen.set(value,***REMOVED***depth);
***REMOVED******REMOVED***depth--;
***REMOVED******REMOVED***if***REMOVED***(isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***traverse(value.value,***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***value.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[i],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSet(value)***REMOVED***||***REMOVED***isMap(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value.forEach((v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(v,***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isPlainObject(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[key],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***of***REMOVED***Object.getOwnPropertySymbols(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Object.prototype.propertyIsEnumerable.call(value,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverse(value[key],***REMOVED***depth,***REMOVED***seen);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
}

const***REMOVED***stack***REMOVED***=***REMOVED***[];
function***REMOVED***pushWarningContext$1(vnode)***REMOVED***{
***REMOVED******REMOVED***stack.push(vnode);
}
function***REMOVED***popWarningContext$1()***REMOVED***{
***REMOVED******REMOVED***stack.pop();
}
let***REMOVED***isWarning***REMOVED***=***REMOVED***false;
function***REMOVED***warn$1(msg,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isWarning)***REMOVED***return;
***REMOVED******REMOVED***isWarning***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***stack.length***REMOVED***?***REMOVED***stack[stack.length***REMOVED***-***REMOVED***1].component***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***appWarnHandler***REMOVED***=***REMOVED***instance***REMOVED***&&***REMOVED***instance.appContext.config.warnHandler;
***REMOVED******REMOVED***const***REMOVED***trace***REMOVED***=***REMOVED***getComponentTrace();
***REMOVED******REMOVED***if***REMOVED***(appWarnHandler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callWithErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***appWarnHandler,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***11,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-restricted-syntax
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***msg***REMOVED***+***REMOVED***args.map((a)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***a.toString)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.call(a))***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_b***REMOVED***:***REMOVED***JSON.stringify(a);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).join(""),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance***REMOVED***&&***REMOVED***instance.proxy,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trace.map(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***({***REMOVED***vnode***REMOVED***})***REMOVED***=>***REMOVED***`at***REMOVED***<${formatComponentName(instance,***REMOVED***vnode.type)}>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***).join("\n"),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***warnArgs***REMOVED***=***REMOVED***[`[Vue***REMOVED***warn]:***REMOVED***${msg}`,***REMOVED***...args];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(trace.length***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***spamming***REMOVED***console***REMOVED***during***REMOVED***tests
***REMOVED******REMOVED******REMOVED******REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnArgs.push(`
`,***REMOVED***...formatTrace(trace));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***console.warn(...warnArgs);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED***isWarning***REMOVED***=***REMOVED***false;
}
function***REMOVED***getComponentTrace()***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***currentVNode***REMOVED***=***REMOVED***stack[stack.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***if***REMOVED***(!currentVNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***normalizedStack***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***while***REMOVED***(currentVNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***last***REMOVED***=***REMOVED***normalizedStack[0];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(last***REMOVED***&&***REMOVED***last.vnode***REMOVED***===***REMOVED***currentVNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***last.recurseCount++;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizedStack.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode:***REMOVED***currentVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***recurseCount:***REMOVED***0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentInstance***REMOVED***=***REMOVED***currentVNode.component***REMOVED***&&***REMOVED***currentVNode.component.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***currentVNode***REMOVED***=***REMOVED***parentInstance***REMOVED***&&***REMOVED***parentInstance.vnode;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***normalizedStack;
}
function***REMOVED***formatTrace(trace)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***logs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***trace.forEach((entry,***REMOVED***i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***logs.push(...i***REMOVED***===***REMOVED***0***REMOVED***?***REMOVED***[]***REMOVED***:***REMOVED***[`
`],***REMOVED***...formatTraceEntry(entry));
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***logs;
}
function***REMOVED***formatTraceEntry({***REMOVED***vnode,***REMOVED***recurseCount***REMOVED***})***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***postfix***REMOVED***=***REMOVED***recurseCount***REMOVED***>***REMOVED***0***REMOVED***?***REMOVED***`...***REMOVED***(${recurseCount}***REMOVED***recursive***REMOVED***calls)`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED***const***REMOVED***isRoot***REMOVED***=***REMOVED***vnode.component***REMOVED***?***REMOVED***vnode.component.parent***REMOVED***==***REMOVED***null***REMOVED***:***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***open***REMOVED***=***REMOVED***`***REMOVED***at***REMOVED***<${formatComponentName(
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.component,
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.type,
***REMOVED******REMOVED******REMOVED******REMOVED***isRoot
***REMOVED******REMOVED***)}`;
***REMOVED******REMOVED***const***REMOVED***close***REMOVED***=***REMOVED***`>`***REMOVED***+***REMOVED***postfix;
***REMOVED******REMOVED***return***REMOVED***vnode.props***REMOVED***?***REMOVED***[open,***REMOVED***...formatProps(vnode.props),***REMOVED***close]***REMOVED***:***REMOVED***[open***REMOVED***+***REMOVED***close];
}
function***REMOVED***formatProps(props)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(props);
***REMOVED******REMOVED***keys.slice(0,***REMOVED***3).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res.push(...formatProp(key,***REMOVED***props[key]));
***REMOVED******REMOVED***});
***REMOVED******REMOVED***if***REMOVED***(keys.length***REMOVED***>***REMOVED***3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***res.push(`***REMOVED***...`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***formatProp(key,***REMOVED***value,***REMOVED***raw)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isString(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***JSON.stringify(value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***[`${key}=${value}`];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***value***REMOVED***===***REMOVED***"number"***REMOVED***||***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"boolean"***REMOVED***||***REMOVED***value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***[`${key}=${value}`];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isRef(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***formatProp(key,***REMOVED***toRaw(value.value),***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***[`${key}=Ref<`,***REMOVED***value,***REMOVED***`>`];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[`${key}=fn${value.name***REMOVED***?***REMOVED***`<${value.name}>`***REMOVED***:***REMOVED***``}`];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***toRaw(value);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***raw***REMOVED***?***REMOVED***value***REMOVED***:***REMOVED***[`${key}=`,***REMOVED***value];
***REMOVED******REMOVED***}
}

const***REMOVED***ErrorTypeStrings***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***["sp"]:***REMOVED***"serverPrefetch***REMOVED***hook",
***REMOVED******REMOVED***["bc"]:***REMOVED***"beforeCreate***REMOVED***hook",
***REMOVED******REMOVED***["c"]:***REMOVED***"created***REMOVED***hook",
***REMOVED******REMOVED***["bm"]:***REMOVED***"beforeMount***REMOVED***hook",
***REMOVED******REMOVED***["m"]:***REMOVED***"mounted***REMOVED***hook",
***REMOVED******REMOVED***["bu"]:***REMOVED***"beforeUpdate***REMOVED***hook",
***REMOVED******REMOVED***["u"]:***REMOVED***"updated",
***REMOVED******REMOVED***["bum"]:***REMOVED***"beforeUnmount***REMOVED***hook",
***REMOVED******REMOVED***["um"]:***REMOVED***"unmounted***REMOVED***hook",
***REMOVED******REMOVED***["a"]:***REMOVED***"activated***REMOVED***hook",
***REMOVED******REMOVED***["da"]:***REMOVED***"deactivated***REMOVED***hook",
***REMOVED******REMOVED***["ec"]:***REMOVED***"errorCaptured***REMOVED***hook",
***REMOVED******REMOVED***["rtc"]:***REMOVED***"renderTracked***REMOVED***hook",
***REMOVED******REMOVED***["rtg"]:***REMOVED***"renderTriggered***REMOVED***hook",
***REMOVED******REMOVED***[0]:***REMOVED***"setup***REMOVED***function",
***REMOVED******REMOVED***[1]:***REMOVED***"render***REMOVED***function",
***REMOVED******REMOVED***[2]:***REMOVED***"watcher***REMOVED***getter",
***REMOVED******REMOVED***[3]:***REMOVED***"watcher***REMOVED***callback",
***REMOVED******REMOVED***[4]:***REMOVED***"watcher***REMOVED***cleanup***REMOVED***function",
***REMOVED******REMOVED***[5]:***REMOVED***"native***REMOVED***event***REMOVED***handler",
***REMOVED******REMOVED***[6]:***REMOVED***"component***REMOVED***event***REMOVED***handler",
***REMOVED******REMOVED***[7]:***REMOVED***"vnode***REMOVED***hook",
***REMOVED******REMOVED***[8]:***REMOVED***"directive***REMOVED***hook",
***REMOVED******REMOVED***[9]:***REMOVED***"transition***REMOVED***hook",
***REMOVED******REMOVED***[10]:***REMOVED***"app***REMOVED***errorHandler",
***REMOVED******REMOVED***[11]:***REMOVED***"app***REMOVED***warnHandler",
***REMOVED******REMOVED***[12]:***REMOVED***"ref***REMOVED***function",
***REMOVED******REMOVED***[13]:***REMOVED***"async***REMOVED***component***REMOVED***loader",
***REMOVED******REMOVED***[14]:***REMOVED***"scheduler***REMOVED***flush",
***REMOVED******REMOVED***[15]:***REMOVED***"component***REMOVED***update",
***REMOVED******REMOVED***[16]:***REMOVED***"app***REMOVED***unmount***REMOVED***cleanup***REMOVED***function"
};
function***REMOVED***callWithErrorHandling(fn,***REMOVED***instance,***REMOVED***type,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***args***REMOVED***?***REMOVED***fn(...args)***REMOVED***:***REMOVED***fn();
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handleError(err,***REMOVED***instance,***REMOVED***type);
***REMOVED******REMOVED***}
}
function***REMOVED***callWithAsyncErrorHandling(fn,***REMOVED***instance,***REMOVED***type,***REMOVED***args)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isFunction(fn))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***callWithErrorHandling(fn,***REMOVED***instance,***REMOVED***type,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(res***REMOVED***&&***REMOVED***isPromise(res))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res.catch((err)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleError(err,***REMOVED***instance,***REMOVED***type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isArray(fn))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***values***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***fn.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***values.push(callWithAsyncErrorHandling(fn[i],***REMOVED***instance,***REMOVED***type,***REMOVED***args));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***values;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Invalid***REMOVED***value***REMOVED***type***REMOVED***passed***REMOVED***to***REMOVED***callWithAsyncErrorHandling():***REMOVED***${typeof***REMOVED***fn}`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***handleError(err,***REMOVED***instance,***REMOVED***type,***REMOVED***throwInDev***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***contextVNode***REMOVED***=***REMOVED***instance***REMOVED***?***REMOVED***instance.vnode***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***errorHandler,***REMOVED***throwUnhandledErrorInProduction***REMOVED***}***REMOVED***=***REMOVED***instance***REMOVED***&&***REMOVED***instance.appContext.config***REMOVED***||***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED***if***REMOVED***(instance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cur***REMOVED***=***REMOVED***instance.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exposedInstance***REMOVED***=***REMOVED***instance.proxy;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errorInfo***REMOVED***=***REMOVED***ErrorTypeStrings[type]***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(cur)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***errorCapturedHooks***REMOVED***=***REMOVED***cur.ec;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errorCapturedHooks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***errorCapturedHooks.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errorCapturedHooks[i](err,***REMOVED***exposedInstance,***REMOVED***errorInfo)***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur***REMOVED***=***REMOVED***cur.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(errorHandler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callWithErrorHandling(errorHandler,***REMOVED***null,***REMOVED***10,***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***err,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposedInstance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorInfo
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***logError(err,***REMOVED***type,***REMOVED***contextVNode,***REMOVED***throwInDev,***REMOVED***throwUnhandledErrorInProduction);
}
function***REMOVED***logError(err,***REMOVED***type,***REMOVED***contextVNode,***REMOVED***throwInDev***REMOVED***=***REMOVED***true,***REMOVED***throwInProd***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***info***REMOVED***=***REMOVED***ErrorTypeStrings[type];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(contextVNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWarningContext$1(contextVNode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Unhandled***REMOVED***error${info***REMOVED***?***REMOVED***`***REMOVED***during***REMOVED***execution***REMOVED***of***REMOVED***${info}`***REMOVED***:***REMOVED***``}`);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(contextVNode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popWarningContext$1();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(throwInDev)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***err;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(err);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***queue***REMOVED***=***REMOVED***[];
let***REMOVED***flushIndex***REMOVED***=***REMOVED***-1;
const***REMOVED***pendingPostFlushCbs***REMOVED***=***REMOVED***[];
let***REMOVED***activePostFlushCbs***REMOVED***=***REMOVED***null;
let***REMOVED***postFlushIndex***REMOVED***=***REMOVED***0;
const***REMOVED***resolvedPromise***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Promise.resolve();
let***REMOVED***currentFlushPromise***REMOVED***=***REMOVED***null;
const***REMOVED***RECURSION_LIMIT***REMOVED***=***REMOVED***100;
function***REMOVED***nextTick(fn)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***currentFlushPromise***REMOVED***||***REMOVED***resolvedPromise;
***REMOVED******REMOVED***return***REMOVED***fn***REMOVED***?***REMOVED***p.then(this***REMOVED***?***REMOVED***fn.bind(this)***REMOVED***:***REMOVED***fn)***REMOVED***:***REMOVED***p;
}
function***REMOVED***findInsertionIndex(id)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***flushIndex***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED***let***REMOVED***end***REMOVED***=***REMOVED***queue.length;
***REMOVED******REMOVED***while***REMOVED***(start***REMOVED***<***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***middle***REMOVED***=***REMOVED***start***REMOVED***+***REMOVED***end***REMOVED***>>>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***middleJob***REMOVED***=***REMOVED***queue[middle];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***middleJobId***REMOVED***=***REMOVED***getId(middleJob);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(middleJobId***REMOVED***<***REMOVED***id***REMOVED***||***REMOVED***middleJobId***REMOVED***===***REMOVED***id***REMOVED***&&***REMOVED***middleJob.flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start***REMOVED***=***REMOVED***middle***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end***REMOVED***=***REMOVED***middle;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***start;
}
function***REMOVED***queueJob(job)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!(job.flags***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***jobId***REMOVED***=***REMOVED***getId(job);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastJob***REMOVED***=***REMOVED***queue[queue.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!lastJob***REMOVED***||***REMOVED***//***REMOVED***fast***REMOVED***path***REMOVED***when***REMOVED***the***REMOVED***job***REMOVED***id***REMOVED***is***REMOVED***larger***REMOVED***than***REMOVED***the***REMOVED***tail
***REMOVED******REMOVED******REMOVED******REMOVED***!(job.flags***REMOVED***&***REMOVED***2)***REMOVED***&&***REMOVED***jobId***REMOVED***>=***REMOVED***getId(lastJob))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue.push(job);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue.splice(findInsertionIndex(jobId),***REMOVED***0,***REMOVED***job);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***|=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***queueFlush();
***REMOVED******REMOVED***}
}
function***REMOVED***queueFlush()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!currentFlushPromise)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***currentFlushPromise***REMOVED***=***REMOVED***resolvedPromise.then(flushJobs);
***REMOVED******REMOVED***}
}
function***REMOVED***queuePostFlushCb(cb)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isArray(cb))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activePostFlushCbs***REMOVED***&&***REMOVED***cb.id***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activePostFlushCbs.splice(postFlushIndex***REMOVED***+***REMOVED***1,***REMOVED***0,***REMOVED***cb);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!(cb.flags***REMOVED***&***REMOVED***1))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pendingPostFlushCbs.push(cb);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb.flags***REMOVED***|=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pendingPostFlushCbs.push(...cb);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***queueFlush();
}
function***REMOVED***flushPreFlushCbs(instance,***REMOVED***seen,***REMOVED***i***REMOVED***=***REMOVED***flushIndex***REMOVED***+***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***seen***REMOVED***||***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(;***REMOVED***i***REMOVED***<***REMOVED***queue.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cb***REMOVED***=***REMOVED***queue[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb***REMOVED***&&***REMOVED***cb.flags***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance***REMOVED***&&***REMOVED***cb.id***REMOVED***!==***REMOVED***instance.uid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkRecursiveUpdates(seen,***REMOVED***cb))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queue.splice(i,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb.flags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(cb.flags***REMOVED***&***REMOVED***4))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***flushPostFlushCbs(seen)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(pendingPostFlushCbs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***deduped***REMOVED***=***REMOVED***[...new***REMOVED***Set(pendingPostFlushCbs)].sort(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(a,***REMOVED***b)***REMOVED***=>***REMOVED***getId(a)***REMOVED***-***REMOVED***getId(b)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***pendingPostFlushCbs.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(activePostFlushCbs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***activePostFlushCbs.push(...deduped);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***activePostFlushCbs***REMOVED***=***REMOVED***deduped;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***seen***REMOVED***||***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(postFlushIndex***REMOVED***=***REMOVED***0;***REMOVED***postFlushIndex***REMOVED***<***REMOVED***activePostFlushCbs.length;***REMOVED***postFlushIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cb***REMOVED***=***REMOVED***activePostFlushCbs[postFlushIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(checkRecursiveUpdates(seen,***REMOVED***cb))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb.flags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(cb.flags***REMOVED***&***REMOVED***8))***REMOVED***cb();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cb.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***activePostFlushCbs***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***postFlushIndex***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***}
}
const***REMOVED***getId***REMOVED***=***REMOVED***(job)***REMOVED***=>***REMOVED***job.id***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***job.flags***REMOVED***&***REMOVED***2***REMOVED***?***REMOVED***-1***REMOVED***:***REMOVED***Infinity***REMOVED***:***REMOVED***job.id;
function***REMOVED***flushJobs(seen)***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***seen***REMOVED***=***REMOVED***seen***REMOVED***||***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***check***REMOVED***=***REMOVED***(job)***REMOVED***=>***REMOVED***checkRecursiveUpdates(seen,***REMOVED***job)***REMOVED***;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(flushIndex***REMOVED***=***REMOVED***0;***REMOVED***flushIndex***REMOVED***<***REMOVED***queue.length;***REMOVED***flushIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***queue[flushIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(job***REMOVED***&&***REMOVED***!(job.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(check(job))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(job.flags***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***&=***REMOVED***~1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callWithErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.i,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.i***REMOVED***?***REMOVED***15***REMOVED***:***REMOVED***14
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(job.flags***REMOVED***&***REMOVED***4))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***&=***REMOVED***~1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(;***REMOVED***flushIndex***REMOVED***<***REMOVED***queue.length;***REMOVED***flushIndex++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***queue[flushIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(job)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***&=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***flushIndex***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED***queue.length***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***flushPostFlushCbs(seen);
***REMOVED******REMOVED******REMOVED******REMOVED***currentFlushPromise***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(queue.length***REMOVED***||***REMOVED***pendingPostFlushCbs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flushJobs(seen);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***checkRecursiveUpdates(seen,***REMOVED***fn)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***count***REMOVED***=***REMOVED***seen.get(fn)***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(count***REMOVED***>***REMOVED***RECURSION_LIMIT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***fn.i;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***componentName***REMOVED***=***REMOVED***instance***REMOVED***&&***REMOVED***getComponentName(instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***handleError(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Maximum***REMOVED***recursive***REMOVED***updates***REMOVED***exceeded${componentName***REMOVED***?***REMOVED***`***REMOVED***in***REMOVED***component***REMOVED***<${componentName}>`***REMOVED***:***REMOVED***``}.***REMOVED***This***REMOVED***means***REMOVED***you***REMOVED***have***REMOVED***a***REMOVED***reactive***REMOVED***effect***REMOVED***that***REMOVED***is***REMOVED***mutating***REMOVED***its***REMOVED***own***REMOVED***dependencies***REMOVED***and***REMOVED***thus***REMOVED***recursively***REMOVED***triggering***REMOVED***itself.***REMOVED***Possible***REMOVED***sources***REMOVED***include***REMOVED***component***REMOVED***template,***REMOVED***render***REMOVED***function,***REMOVED***updated***REMOVED***hook***REMOVED***or***REMOVED***watcher***REMOVED***source***REMOVED***function.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***10
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***seen.set(fn,***REMOVED***count***REMOVED***+***REMOVED***1);
***REMOVED******REMOVED***return***REMOVED***false;
}

let***REMOVED***isHmrUpdating***REMOVED***=***REMOVED***false;
const***REMOVED***hmrDirtyComponents***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
{
***REMOVED******REMOVED***const***REMOVED***g***REMOVED***=***REMOVED***getGlobalThis();
***REMOVED******REMOVED***if***REMOVED***(!g.__VUE_HMR_RUNTIME__)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***g.__VUE_HMR_RUNTIME__***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createRecord:***REMOVED***tryWrap(createRecord),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rerender:***REMOVED***tryWrap(rerender),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reload:***REMOVED***tryWrap(reload)
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
}
const***REMOVED***map***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
function***REMOVED***registerHMR(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***id***REMOVED***=***REMOVED***instance.type.__hmrId;
***REMOVED******REMOVED***let***REMOVED***record***REMOVED***=***REMOVED***map.get(id);
***REMOVED******REMOVED***if***REMOVED***(!record)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***createRecord(id,***REMOVED***instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***record***REMOVED***=***REMOVED***map.get(id);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***record.instances.add(instance);
}
function***REMOVED***unregisterHMR(instance)***REMOVED***{
***REMOVED******REMOVED***map.get(instance.type.__hmrId).instances.delete(instance);
}
function***REMOVED***createRecord(id,***REMOVED***initialDef)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(map.has(id))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***map.set(id,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***initialDef:***REMOVED***normalizeClassComponent(initialDef),
***REMOVED******REMOVED******REMOVED******REMOVED***instances:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set()
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***true;
}
function***REMOVED***normalizeClassComponent(component)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isClassComponent(component)***REMOVED***?***REMOVED***component.__vccOpts***REMOVED***:***REMOVED***component;
}
function***REMOVED***rerender(id,***REMOVED***newRender)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***record***REMOVED***=***REMOVED***map.get(id);
***REMOVED******REMOVED***if***REMOVED***(!record)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***record.initialDef.render***REMOVED***=***REMOVED***newRender;
***REMOVED******REMOVED***[...record.instances].forEach((instance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newRender)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.render***REMOVED***=***REMOVED***newRender;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeClassComponent(instance.type).render***REMOVED***=***REMOVED***newRender;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***instance.renderCache***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***isHmrUpdating***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(instance.job.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.update();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***isHmrUpdating***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***});
}
function***REMOVED***reload(id,***REMOVED***newComp)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***record***REMOVED***=***REMOVED***map.get(id);
***REMOVED******REMOVED***if***REMOVED***(!record)***REMOVED***return;
***REMOVED******REMOVED***newComp***REMOVED***=***REMOVED***normalizeClassComponent(newComp);
***REMOVED******REMOVED***updateComponentDef(record.initialDef,***REMOVED***newComp);
***REMOVED******REMOVED***const***REMOVED***instances***REMOVED***=***REMOVED***[...record.instances];
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***instances.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***instances[i];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldComp***REMOVED***=***REMOVED***normalizeClassComponent(instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***dirtyInstances***REMOVED***=***REMOVED***hmrDirtyComponents.get(oldComp);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!dirtyInstances)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldComp***REMOVED***!==***REMOVED***record.initialDef)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateComponentDef(oldComp,***REMOVED***newComp);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hmrDirtyComponents.set(oldComp,***REMOVED***dirtyInstances***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set());
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***dirtyInstances.add(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***instance.appContext.propsCache.delete(instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***instance.appContext.emitsCache.delete(instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***instance.appContext.optionsCache.delete(instance.type);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.ceReload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirtyInstances.add(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.ceReload(newComp.styles);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirtyInstances.delete(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(instance.parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queueJob(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(instance.job.flags***REMOVED***&***REMOVED***8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isHmrUpdating***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.parent.update();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isHmrUpdating***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirtyInstances.delete(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(instance.appContext.reload)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.appContext.reload();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***window.location.reload();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"[HMR]***REMOVED***Root***REMOVED***or***REMOVED***manually***REMOVED***mounted***REMOVED***instance***REMOVED***modified.***REMOVED***Full***REMOVED***reload***REMOVED***required."
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.root.ce***REMOVED***&&***REMOVED***instance***REMOVED***!==***REMOVED***instance.root)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.root.ce._removeChildStyle(oldComp);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***queuePostFlushCb(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hmrDirtyComponents.clear();
***REMOVED******REMOVED***});
}
function***REMOVED***updateComponentDef(oldComp,***REMOVED***newComp)***REMOVED***{
***REMOVED******REMOVED***extend(oldComp,***REMOVED***newComp);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***oldComp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"__file"***REMOVED***&&***REMOVED***!(key***REMOVED***in***REMOVED***newComp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***oldComp[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***tryWrap(fn)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(id,***REMOVED***arg)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn(id,***REMOVED***arg);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.error(e);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`[HMR]***REMOVED***Something***REMOVED***went***REMOVED***wrong***REMOVED***during***REMOVED***Vue***REMOVED***component***REMOVED***hot-reload.***REMOVED***Full***REMOVED***reload***REMOVED***required.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}

let***REMOVED***devtools;
let***REMOVED***buffer***REMOVED***=***REMOVED***[];
let***REMOVED***devtoolsNotInstalled***REMOVED***=***REMOVED***false;
function***REMOVED***emit$1(event,***REMOVED***...args)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(devtools)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtools.emit(event,***REMOVED***...args);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!devtoolsNotInstalled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***buffer.push({***REMOVED***event,***REMOVED***args***REMOVED***});
***REMOVED******REMOVED***}
}
function***REMOVED***setDevtoolsHook(hook,***REMOVED***target)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a,***REMOVED***_b;
***REMOVED******REMOVED***devtools***REMOVED***=***REMOVED***hook;
***REMOVED******REMOVED***if***REMOVED***(devtools)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtools.enabled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***buffer.forEach(({***REMOVED***event,***REMOVED***args***REMOVED***})***REMOVED***=>***REMOVED***devtools.emit(event,***REMOVED***...args));
***REMOVED******REMOVED******REMOVED******REMOVED***buffer***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***handle***REMOVED***late***REMOVED***devtools***REMOVED***injection***REMOVED***-***REMOVED***only***REMOVED***do***REMOVED***this***REMOVED***if***REMOVED***we***REMOVED***are***REMOVED***in***REMOVED***an***REMOVED***actual
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***browser***REMOVED***environment***REMOVED***to***REMOVED***avoid***REMOVED***the***REMOVED***timer***REMOVED***handle***REMOVED***stalling***REMOVED***test***REMOVED***runner***REMOVED***exit
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(#4815)
***REMOVED******REMOVED******REMOVED******REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***//***REMOVED***some***REMOVED***envs***REMOVED***mock***REMOVED***window***REMOVED***but***REMOVED***not***REMOVED***fully
***REMOVED******REMOVED******REMOVED******REMOVED***window.HTMLElement***REMOVED***&&***REMOVED***//***REMOVED***also***REMOVED***exclude***REMOVED***jsdom
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-restricted-syntax
***REMOVED******REMOVED******REMOVED******REMOVED***!((_b***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***window.navigator)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_a.userAgent)***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***_b.includes("jsdom"))
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***replay***REMOVED***=***REMOVED***target.__VUE_DEVTOOLS_HOOK_REPLAY__***REMOVED***=***REMOVED***target.__VUE_DEVTOOLS_HOOK_REPLAY__***REMOVED***||***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***replay.push((newHook)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setDevtoolsHook(newHook,***REMOVED***target);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***setTimeout(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!devtools)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target.__VUE_DEVTOOLS_HOOK_REPLAY__***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsNotInstalled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***3e3);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtoolsNotInstalled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***buffer***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***}
}
function***REMOVED***devtoolsInitApp(app,***REMOVED***version)***REMOVED***{
***REMOVED******REMOVED***emit$1("app:init"***REMOVED***/****REMOVED***APP_INIT***REMOVED****/,***REMOVED***app,***REMOVED***version,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Fragment,
***REMOVED******REMOVED******REMOVED******REMOVED***Text,
***REMOVED******REMOVED******REMOVED******REMOVED***Comment,
***REMOVED******REMOVED******REMOVED******REMOVED***Static
***REMOVED******REMOVED***});
}
function***REMOVED***devtoolsUnmountApp(app)***REMOVED***{
***REMOVED******REMOVED***emit$1("app:unmount"***REMOVED***/****REMOVED***APP_UNMOUNT***REMOVED****/,***REMOVED***app);
}
const***REMOVED***devtoolsComponentAdded***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createDevtoolsComponentHook("component:added"***REMOVED***/****REMOVED***COMPONENT_ADDED***REMOVED****/);
const***REMOVED***devtoolsComponentUpdated***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createDevtoolsComponentHook("component:updated"***REMOVED***/****REMOVED***COMPONENT_UPDATED***REMOVED****/);
const***REMOVED***_devtoolsComponentRemoved***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createDevtoolsComponentHook(
***REMOVED******REMOVED***"component:removed"***REMOVED***/****REMOVED***COMPONENT_REMOVED***REMOVED****/
);
const***REMOVED***devtoolsComponentRemoved***REMOVED***=***REMOVED***(component)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(devtools***REMOVED***&&***REMOVED***typeof***REMOVED***devtools.cleanupBuffer***REMOVED***===***REMOVED***"function"***REMOVED***&&***REMOVED***//***REMOVED***remove***REMOVED***the***REMOVED***component***REMOVED***if***REMOVED***it***REMOVED***wasn't***REMOVED***buffered
***REMOVED******REMOVED***!devtools.cleanupBuffer(component))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***_devtoolsComponentRemoved(component);
***REMOVED******REMOVED***}
};
//***REMOVED***@__NO_SIDE_EFFECTS__
function***REMOVED***createDevtoolsComponentHook(hook)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(component)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emit$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hook,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component.appContext.app,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component.uid,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component.parent***REMOVED***?***REMOVED***component.parent.uid***REMOVED***:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
}
const***REMOVED***devtoolsPerfStart***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createDevtoolsPerformanceHook("perf:start"***REMOVED***/****REMOVED***PERFORMANCE_START***REMOVED****/);
const***REMOVED***devtoolsPerfEnd***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***createDevtoolsPerformanceHook("perf:end"***REMOVED***/****REMOVED***PERFORMANCE_END***REMOVED****/);
function***REMOVED***createDevtoolsPerformanceHook(hook)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(component,***REMOVED***type,***REMOVED***time)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***emit$1(hook,***REMOVED***component.appContext.app,***REMOVED***component.uid,***REMOVED***component,***REMOVED***type,***REMOVED***time);
***REMOVED******REMOVED***};
}
function***REMOVED***devtoolsComponentEmit(component,***REMOVED***event,***REMOVED***params)***REMOVED***{
***REMOVED******REMOVED***emit$1(
***REMOVED******REMOVED******REMOVED******REMOVED***"component:emit"***REMOVED***/****REMOVED***COMPONENT_EMIT***REMOVED****/,
***REMOVED******REMOVED******REMOVED******REMOVED***component.appContext.app,
***REMOVED******REMOVED******REMOVED******REMOVED***component,
***REMOVED******REMOVED******REMOVED******REMOVED***event,
***REMOVED******REMOVED******REMOVED******REMOVED***params
***REMOVED******REMOVED***);
}

let***REMOVED***currentRenderingInstance***REMOVED***=***REMOVED***null;
let***REMOVED***currentScopeId***REMOVED***=***REMOVED***null;
function***REMOVED***setCurrentRenderingInstance$1(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***currentRenderingInstance;
***REMOVED******REMOVED***currentRenderingInstance***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***currentScopeId***REMOVED***=***REMOVED***instance***REMOVED***&&***REMOVED***instance.type.__scopeId***REMOVED***||***REMOVED***null;
***REMOVED******REMOVED***return***REMOVED***prev;
}
function***REMOVED***withCtx(fn,***REMOVED***ctx***REMOVED***=***REMOVED***currentRenderingInstance,***REMOVED***isNonScopedSlot)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!ctx)***REMOVED***return***REMOVED***fn;
***REMOVED******REMOVED***if***REMOVED***(fn._n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***renderFnWithContext***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderFnWithContext._d)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setBlockTracking(-1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevInstance***REMOVED***=***REMOVED***setCurrentRenderingInstance$1(ctx);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res***REMOVED***=***REMOVED***fn(...args);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCurrentRenderingInstance$1(prevInstance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(renderFnWithContext._d)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setBlockTracking(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsComponentUpdated(ctx);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***renderFnWithContext._n***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***renderFnWithContext._c***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***renderFnWithContext._d***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***return***REMOVED***renderFnWithContext;
}

function***REMOVED***validateDirectiveName(name)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isBuiltInDirective(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1("Do***REMOVED***not***REMOVED***use***REMOVED***built-in***REMOVED***directive***REMOVED***ids***REMOVED***as***REMOVED***custom***REMOVED***directive***REMOVED***id:***REMOVED***"***REMOVED***+***REMOVED***name);
***REMOVED******REMOVED***}
}
function***REMOVED***invokeDirectiveHook(vnode,***REMOVED***prevVNode,***REMOVED***instance,***REMOVED***name)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***bindings***REMOVED***=***REMOVED***vnode.dirs;
***REMOVED******REMOVED***const***REMOVED***oldBindings***REMOVED***=***REMOVED***prevVNode***REMOVED***&&***REMOVED***prevVNode.dirs;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***bindings.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***binding***REMOVED***=***REMOVED***bindings[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldBindings)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding.oldValue***REMOVED***=***REMOVED***oldBindings[i].value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hook***REMOVED***=***REMOVED***binding.dir[name];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callWithAsyncErrorHandling(hook,***REMOVED***instance,***REMOVED***8,***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***binding,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prevVNode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***TeleportEndKey***REMOVED***=***REMOVED***Symbol("_vte");
const***REMOVED***isTeleport***REMOVED***=***REMOVED***(type)***REMOVED***=>***REMOVED***type.__isTeleport;

const***REMOVED***leaveCbKey***REMOVED***=***REMOVED***Symbol("_leaveCb");
function***REMOVED***setTransitionHooks(vnode,***REMOVED***hooks)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***6***REMOVED***&&***REMOVED***vnode.component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.transition***REMOVED***=***REMOVED***hooks;
***REMOVED******REMOVED******REMOVED******REMOVED***setTransitionHooks(vnode.component.subTree,***REMOVED***hooks);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.ssContent.transition***REMOVED***=***REMOVED***hooks.clone(vnode.ssContent);
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.ssFallback.transition***REMOVED***=***REMOVED***hooks.clone(vnode.ssFallback);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.transition***REMOVED***=***REMOVED***hooks;
***REMOVED******REMOVED***}
}

function***REMOVED***markAsyncBoundary(instance)***REMOVED***{
***REMOVED******REMOVED***instance.ids***REMOVED***=***REMOVED***[instance.ids[0]***REMOVED***+***REMOVED***instance.ids[2]++***REMOVED***+***REMOVED***"-",***REMOVED***0,***REMOVED***0];
}

const***REMOVED***knownTemplateRefs***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();

const***REMOVED***pendingSetRefMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
function***REMOVED***setRef(rawRef,***REMOVED***oldRawRef,***REMOVED***parentSuspense,***REMOVED***vnode,***REMOVED***isUnmount***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(rawRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***rawRef.forEach(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(r,***REMOVED***i)***REMOVED***=>***REMOVED***setRef(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***r,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldRawRef***REMOVED***&&***REMOVED***(isArray(oldRawRef)***REMOVED***?***REMOVED***oldRawRef[i]***REMOVED***:***REMOVED***oldRawRef),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isUnmount
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isAsyncWrapper(vnode)***REMOVED***&&***REMOVED***!isUnmount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***512***REMOVED***&&***REMOVED***vnode.type.__asyncResolved***REMOVED***&&***REMOVED***vnode.component.subTree.component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setRef(rawRef,***REMOVED***oldRawRef,***REMOVED***parentSuspense,***REMOVED***vnode.component.subTree);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***refValue***REMOVED***=***REMOVED***vnode.shapeFlag***REMOVED***&***REMOVED***4***REMOVED***?***REMOVED***getComponentPublicInstance(vnode.component)***REMOVED***:***REMOVED***vnode.el;
***REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***isUnmount***REMOVED***?***REMOVED***null***REMOVED***:***REMOVED***refValue;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***i:***REMOVED***owner,***REMOVED***r:***REMOVED***ref***REMOVED***}***REMOVED***=***REMOVED***rawRef;
***REMOVED******REMOVED***if***REMOVED***(!owner)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Missing***REMOVED***ref***REMOVED***owner***REMOVED***context.***REMOVED***ref***REMOVED***cannot***REMOVED***be***REMOVED***used***REMOVED***on***REMOVED***hoisted***REMOVED***vnodes.***REMOVED***A***REMOVED***vnode***REMOVED***with***REMOVED***ref***REMOVED***must***REMOVED***be***REMOVED***created***REMOVED***inside***REMOVED***the***REMOVED***render***REMOVED***function.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***oldRef***REMOVED***=***REMOVED***oldRawRef***REMOVED***&&***REMOVED***oldRawRef.r;
***REMOVED******REMOVED***const***REMOVED***refs***REMOVED***=***REMOVED***owner.refs***REMOVED***===***REMOVED***EMPTY_OBJ***REMOVED***?***REMOVED***owner.refs***REMOVED***=***REMOVED***{}***REMOVED***:***REMOVED***owner.refs;
***REMOVED******REMOVED***const***REMOVED***setupState***REMOVED***=***REMOVED***owner.setupState;
***REMOVED******REMOVED***const***REMOVED***rawSetupState***REMOVED***=***REMOVED***toRaw(setupState);
***REMOVED******REMOVED***const***REMOVED***canSetSetupRef***REMOVED***=***REMOVED***setupState***REMOVED***===***REMOVED***EMPTY_OBJ***REMOVED***?***REMOVED***NO***REMOVED***:***REMOVED***(key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(rawSetupState,***REMOVED***key)***REMOVED***&&***REMOVED***!isRef(rawSetupState[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Template***REMOVED***ref***REMOVED***"${key}"***REMOVED***used***REMOVED***on***REMOVED***a***REMOVED***non-ref***REMOVED***value.***REMOVED***It***REMOVED***will***REMOVED***not***REMOVED***work***REMOVED***in***REMOVED***the***REMOVED***production***REMOVED***build.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(knownTemplateRefs.has(rawSetupState[key]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasOwn(rawSetupState,***REMOVED***key);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***canSetRef***REMOVED***=***REMOVED***(ref2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!knownTemplateRefs.has(ref2);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(oldRef***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***oldRef***REMOVED***!==***REMOVED***ref)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***invalidatePendingSetRef(oldRawRef);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(oldRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refs[oldRef]***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetSetupRef(oldRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupState[oldRef]***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isRef(oldRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetRef(oldRef))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldRef.value***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldRawRefAtom***REMOVED***=***REMOVED***oldRawRef;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldRawRefAtom.k)***REMOVED***refs[oldRawRefAtom.k]***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isFunction(ref))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callWithErrorHandling(ref,***REMOVED***owner,***REMOVED***12,***REMOVED***[value,***REMOVED***refs]);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_isString***REMOVED***=***REMOVED***isString(ref);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***_isRef***REMOVED***=***REMOVED***isRef(ref);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_isString***REMOVED***||***REMOVED***_isRef)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***doSet***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawRef.f)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existing***REMOVED***=***REMOVED***_isString***REMOVED***?***REMOVED***canSetSetupRef(ref)***REMOVED***?***REMOVED***setupState[ref]***REMOVED***:***REMOVED***refs[ref]***REMOVED***:***REMOVED***canSetRef(ref)***REMOVED***||***REMOVED***!rawRef.k***REMOVED***?***REMOVED***ref.value***REMOVED***:***REMOVED***refs[rawRef.k];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isUnmount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isArray(existing)***REMOVED***&&***REMOVED***remove(existing,***REMOVED***refValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isArray(existing))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(_isString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refs[ref]***REMOVED***=***REMOVED***[refValue];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetSetupRef(ref))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupState[ref]***REMOVED***=***REMOVED***refs[ref];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newVal***REMOVED***=***REMOVED***[refValue];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetRef(ref))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref.value***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawRef.k)***REMOVED***refs[rawRef.k]***REMOVED***=***REMOVED***newVal;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!existing.includes(refValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.push(refValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_isString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***refs[ref]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetSetupRef(ref))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupState[ref]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(_isRef)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(canSetRef(ref))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref.value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawRef.k)***REMOVED***refs[rawRef.k]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1("Invalid***REMOVED***template***REMOVED***ref***REMOVED***type:",***REMOVED***ref,***REMOVED***`(${typeof***REMOVED***ref})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doSet();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pendingSetRefMap.delete(rawRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.id***REMOVED***=***REMOVED***-1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pendingSetRefMap.set(rawRef,***REMOVED***job);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(job,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invalidatePendingSetRef(rawRef);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doSet();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1("Invalid***REMOVED***template***REMOVED***ref***REMOVED***type:",***REMOVED***ref,***REMOVED***`(${typeof***REMOVED***ref})`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***invalidatePendingSetRef(rawRef)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***pendingSetRef***REMOVED***=***REMOVED***pendingSetRefMap.get(rawRef);
***REMOVED******REMOVED***if***REMOVED***(pendingSetRef)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pendingSetRef.flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED***pendingSetRefMap.delete(rawRef);
***REMOVED******REMOVED***}
}

const***REMOVED***isAsyncWrapper***REMOVED***=***REMOVED***(i)***REMOVED***=>***REMOVED***!!i.type.__asyncLoader;

const***REMOVED***isKeepAlive***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***vnode.type.__isKeepAlive;
function***REMOVED***onActivated(hook,***REMOVED***target)***REMOVED***{
***REMOVED******REMOVED***registerKeepAliveHook(hook,***REMOVED***"a",***REMOVED***target);
}
function***REMOVED***onDeactivated(hook,***REMOVED***target)***REMOVED***{
***REMOVED******REMOVED***registerKeepAliveHook(hook,***REMOVED***"da",***REMOVED***target);
}
function***REMOVED***registerKeepAliveHook(hook,***REMOVED***type,***REMOVED***target***REMOVED***=***REMOVED***currentInstance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***wrappedHook***REMOVED***=***REMOVED***hook.__wdc***REMOVED***||***REMOVED***(hook.__wdc***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***current***REMOVED***=***REMOVED***target;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(current)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current.isDeactivated)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hook();
***REMOVED******REMOVED***});
***REMOVED******REMOVED***injectHook(type,***REMOVED***wrappedHook,***REMOVED***target);
***REMOVED******REMOVED***if***REMOVED***(target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***current***REMOVED***=***REMOVED***target.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(current***REMOVED***&&***REMOVED***current.parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isKeepAlive(current.parent.vnode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injectToKeepAliveRoot(wrappedHook,***REMOVED***type,***REMOVED***target,***REMOVED***current);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***current***REMOVED***=***REMOVED***current.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***injectToKeepAliveRoot(hook,***REMOVED***type,***REMOVED***target,***REMOVED***keepAliveRoot)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***injected***REMOVED***=***REMOVED***injectHook(
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***hook,
***REMOVED******REMOVED******REMOVED******REMOVED***keepAliveRoot,
***REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***prepend***REMOVED****/
***REMOVED******REMOVED***);
***REMOVED******REMOVED***onUnmounted(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***remove(keepAliveRoot[type],***REMOVED***injected);
***REMOVED******REMOVED***},***REMOVED***target);
}

function***REMOVED***injectHook(type,***REMOVED***hook,***REMOVED***target***REMOVED***=***REMOVED***currentInstance,***REMOVED***prepend***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hooks***REMOVED***=***REMOVED***target[type]***REMOVED***||***REMOVED***(target[type]***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrappedHook***REMOVED***=***REMOVED***hook.__weh***REMOVED***||***REMOVED***(hook.__weh***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reset***REMOVED***=***REMOVED***setCurrentInstance(target);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***callWithAsyncErrorHandling(hook,***REMOVED***target,***REMOVED***type,***REMOVED***args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prepend)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hooks.unshift(wrappedHook);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hooks.push(wrappedHook);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrappedHook;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***apiName***REMOVED***=***REMOVED***toHandlerKey(ErrorTypeStrings[type].replace(/***REMOVED***hook$/,***REMOVED***""));
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`${apiName}***REMOVED***is***REMOVED***called***REMOVED***when***REMOVED***there***REMOVED***is***REMOVED***no***REMOVED***active***REMOVED***component***REMOVED***instance***REMOVED***to***REMOVED***be***REMOVED***associated***REMOVED***with.***REMOVED***Lifecycle***REMOVED***injection***REMOVED***APIs***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***during***REMOVED***execution***REMOVED***of***REMOVED***setup().`***REMOVED***+***REMOVED***(`***REMOVED***If***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***async***REMOVED***setup(),***REMOVED***make***REMOVED***sure***REMOVED***to***REMOVED***register***REMOVED***lifecycle***REMOVED***hooks***REMOVED***before***REMOVED***the***REMOVED***first***REMOVED***await***REMOVED***statement.`***REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
const***REMOVED***createHook***REMOVED***=***REMOVED***(lifecycle)***REMOVED***=>***REMOVED***(hook,***REMOVED***target***REMOVED***=***REMOVED***currentInstance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isInSSRComponentSetup***REMOVED***||***REMOVED***lifecycle***REMOVED***===***REMOVED***"sp")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***injectHook(lifecycle,***REMOVED***(...args)***REMOVED***=>***REMOVED***hook(...args),***REMOVED***target);
***REMOVED******REMOVED***}
};
const***REMOVED***onBeforeMount***REMOVED***=***REMOVED***createHook("bm");
const***REMOVED***onMounted***REMOVED***=***REMOVED***createHook("m");
const***REMOVED***onBeforeUpdate***REMOVED***=***REMOVED***createHook(
***REMOVED******REMOVED***"bu"
);
const***REMOVED***onUpdated***REMOVED***=***REMOVED***createHook("u");
const***REMOVED***onBeforeUnmount***REMOVED***=***REMOVED***createHook(
***REMOVED******REMOVED***"bum"
);
const***REMOVED***onUnmounted***REMOVED***=***REMOVED***createHook("um");
const***REMOVED***onServerPrefetch***REMOVED***=***REMOVED***createHook(
***REMOVED******REMOVED***"sp"
);
const***REMOVED***onRenderTriggered***REMOVED***=***REMOVED***createHook("rtg");
const***REMOVED***onRenderTracked***REMOVED***=***REMOVED***createHook("rtc");
function***REMOVED***onErrorCaptured(hook,***REMOVED***target***REMOVED***=***REMOVED***currentInstance)***REMOVED***{
***REMOVED******REMOVED***injectHook("ec",***REMOVED***hook,***REMOVED***target);
}

const***REMOVED***NULL_DYNAMIC_COMPONENT***REMOVED***=***REMOVED***Symbol.for("v-ndc");

function***REMOVED***ensureValidVNode$1(vnodes)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***vnodes.some((child)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isVNode$2(child))***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***===***REMOVED***Comment)***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***===***REMOVED***Fragment***REMOVED***&&***REMOVED***!ensureValidVNode$1(child.children))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***})***REMOVED***?***REMOVED***vnodes***REMOVED***:***REMOVED***null;
}

const***REMOVED***getPublicInstance***REMOVED***=***REMOVED***(i)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!i)***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED***if***REMOVED***(isStatefulComponent(i))***REMOVED***return***REMOVED***getComponentPublicInstance(i);
***REMOVED******REMOVED***return***REMOVED***getPublicInstance(i.parent);
};
const***REMOVED***publicPropertiesMap***REMOVED***=***REMOVED***(
***REMOVED******REMOVED***//***REMOVED***Move***REMOVED***PURE***REMOVED***marker***REMOVED***to***REMOVED***new***REMOVED***line***REMOVED***to***REMOVED***workaround***REMOVED***compiler***REMOVED***discarding***REMOVED***it
***REMOVED******REMOVED***//***REMOVED***due***REMOVED***to***REMOVED***type***REMOVED***annotation
***REMOVED******REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***extend(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***$:***REMOVED***(i)***REMOVED***=>***REMOVED***i,
***REMOVED******REMOVED******REMOVED******REMOVED***$el:***REMOVED***(i)***REMOVED***=>***REMOVED***i.vnode.el,
***REMOVED******REMOVED******REMOVED******REMOVED***$data:***REMOVED***(i)***REMOVED***=>***REMOVED***i.data,
***REMOVED******REMOVED******REMOVED******REMOVED***$props:***REMOVED***(i)***REMOVED***=>***REMOVED***shallowReadonly(i.props)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED***$attrs:***REMOVED***(i)***REMOVED***=>***REMOVED***shallowReadonly(i.attrs)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED***$slots:***REMOVED***(i)***REMOVED***=>***REMOVED***shallowReadonly(i.slots)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED***$refs:***REMOVED***(i)***REMOVED***=>***REMOVED***shallowReadonly(i.refs)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED***$parent:***REMOVED***(i)***REMOVED***=>***REMOVED***getPublicInstance(i.parent),
***REMOVED******REMOVED******REMOVED******REMOVED***$root:***REMOVED***(i)***REMOVED***=>***REMOVED***getPublicInstance(i.root),
***REMOVED******REMOVED******REMOVED******REMOVED***$host:***REMOVED***(i)***REMOVED***=>***REMOVED***i.ce,
***REMOVED******REMOVED******REMOVED******REMOVED***$emit:***REMOVED***(i)***REMOVED***=>***REMOVED***i.emit,
***REMOVED******REMOVED******REMOVED******REMOVED***$options:***REMOVED***(i)***REMOVED***=>***REMOVED***resolveMergedOptions(i)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED***$forceUpdate:***REMOVED***(i)***REMOVED***=>***REMOVED***i.f***REMOVED***||***REMOVED***(i.f***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queueJob(i.update);
***REMOVED******REMOVED******REMOVED******REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED***$nextTick:***REMOVED***(i)***REMOVED***=>***REMOVED***i.n***REMOVED***||***REMOVED***(i.n***REMOVED***=***REMOVED***nextTick.bind(i.proxy)),
***REMOVED******REMOVED******REMOVED******REMOVED***$watch:***REMOVED***(i)***REMOVED***=>***REMOVED***instanceWatch.bind(i)***REMOVED***
***REMOVED******REMOVED***})
);
const***REMOVED***isReservedPrefix***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key***REMOVED***===***REMOVED***"_"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"$";
const***REMOVED***hasSetupBinding***REMOVED***=***REMOVED***(state,***REMOVED***key)***REMOVED***=>***REMOVED***state***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***!state.__isScriptSetup***REMOVED***&&***REMOVED***hasOwn(state,***REMOVED***key);
const***REMOVED***PublicInstanceProxyHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get({***REMOVED***_:***REMOVED***instance***REMOVED***},***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__v_skip")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***ctx,***REMOVED***setupState,***REMOVED***data,***REMOVED***props,***REMOVED***accessCache,***REMOVED***type,***REMOVED***appContext***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"__isVue")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***normalizedProps;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key[0]***REMOVED***!==***REMOVED***"$")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n***REMOVED***=***REMOVED***accessCache[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***1***REMOVED***/****REMOVED***SETUP***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***setupState[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***2***REMOVED***/****REMOVED***DATA***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***data[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***4***REMOVED***/****REMOVED***CONTEXT***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***3***REMOVED***/****REMOVED***PROPS***REMOVED****/:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasSetupBinding(setupState,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***1***REMOVED***/****REMOVED***SETUP***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***setupState[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(data***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***hasOwn(data,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***2***REMOVED***/****REMOVED***DATA***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***data[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***only***REMOVED***cache***REMOVED***other***REMOVED***properties***REMOVED***when***REMOVED***instance***REMOVED***has***REMOVED***declared***REMOVED***(thus***REMOVED***stable)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***props
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(normalizedProps***REMOVED***=***REMOVED***instance.propsOptions[0])***REMOVED***&&***REMOVED***hasOwn(normalizedProps,***REMOVED***key)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***3***REMOVED***/****REMOVED***PROPS***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***hasOwn(ctx,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***4***REMOVED***/****REMOVED***CONTEXT***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shouldCacheAccess)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***0***REMOVED***/****REMOVED***OTHER***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***publicGetter***REMOVED***=***REMOVED***publicPropertiesMap[key];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cssModule,***REMOVED***globalProperties;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(publicGetter)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"$attrs")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(instance.attrs,***REMOVED***"get",***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markAttrsAccessed();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"$slots")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(instance,***REMOVED***"get",***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***publicGetter(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***css***REMOVED***module***REMOVED***(injected***REMOVED***by***REMOVED***vue-loader)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(cssModule***REMOVED***=***REMOVED***type.__cssModules)***REMOVED***&&***REMOVED***(cssModule***REMOVED***=***REMOVED***cssModule[key])
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cssModule;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ctx***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***hasOwn(ctx,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***accessCache[key]***REMOVED***=***REMOVED***4***REMOVED***/****REMOVED***CONTEXT***REMOVED****/;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***global***REMOVED***properties
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalProperties***REMOVED***=***REMOVED***appContext.config.globalProperties,***REMOVED***hasOwn(globalProperties,***REMOVED***key)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***globalProperties[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(currentRenderingInstance***REMOVED***&&***REMOVED***(!isString(key)***REMOVED***||***REMOVED***//***REMOVED***#1091***REMOVED***avoid***REMOVED***internal***REMOVED***isRef/isVNode***REMOVED***checks***REMOVED***on***REMOVED***component***REMOVED***instance***REMOVED***leading
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***infinite***REMOVED***warning***REMOVED***loop
***REMOVED******REMOVED******REMOVED******REMOVED***key.indexOf("__v")***REMOVED***!==***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(data***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***isReservedPrefix(key[0])***REMOVED***&&***REMOVED***hasOwn(data,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${JSON.stringify(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***must***REMOVED***be***REMOVED***accessed***REMOVED***via***REMOVED***$data***REMOVED***because***REMOVED***it***REMOVED***starts***REMOVED***with***REMOVED***a***REMOVED***reserved***REMOVED***character***REMOVED***("$"***REMOVED***or***REMOVED***"_")***REMOVED***and***REMOVED***is***REMOVED***not***REMOVED***proxied***REMOVED***on***REMOVED***the***REMOVED***render***REMOVED***context.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(instance***REMOVED***===***REMOVED***currentRenderingInstance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***${JSON.stringify(key)}***REMOVED***was***REMOVED***accessed***REMOVED***during***REMOVED***render***REMOVED***but***REMOVED***is***REMOVED***not***REMOVED***defined***REMOVED***on***REMOVED***instance.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***set({***REMOVED***_:***REMOVED***instance***REMOVED***},***REMOVED***key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***data,***REMOVED***setupState,***REMOVED***ctx***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasSetupBinding(setupState,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupState[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(setupState.__isScriptSetup***REMOVED***&&***REMOVED***hasOwn(setupState,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Cannot***REMOVED***mutate***REMOVED***<script***REMOVED***setup>***REMOVED***binding***REMOVED***"${key}"***REMOVED***from***REMOVED***Options***REMOVED***API.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(data***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***hasOwn(data,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwn(instance.props,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Attempting***REMOVED***to***REMOVED***mutate***REMOVED***prop***REMOVED***"${key}".***REMOVED***Props***REMOVED***are***REMOVED***readonly.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key[0]***REMOVED***===***REMOVED***"$"***REMOVED***&&***REMOVED***key.slice(1)***REMOVED***in***REMOVED***instance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Attempting***REMOVED***to***REMOVED***mutate***REMOVED***public***REMOVED***property***REMOVED***"${key}".***REMOVED***Properties***REMOVED***starting***REMOVED***with***REMOVED***$***REMOVED***are***REMOVED***reserved***REMOVED***and***REMOVED***readonly.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***instance.appContext.config.globalProperties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***has({
***REMOVED******REMOVED******REMOVED******REMOVED***_:***REMOVED***{***REMOVED***data,***REMOVED***setupState,***REMOVED***accessCache,***REMOVED***ctx,***REMOVED***appContext,***REMOVED***propsOptions,***REMOVED***type***REMOVED***}
***REMOVED******REMOVED***},***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***normalizedProps,***REMOVED***cssModules;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!(accessCache[key]***REMOVED***||***REMOVED***data***REMOVED***!==***REMOVED***EMPTY_OBJ***REMOVED***&&***REMOVED***key[0]***REMOVED***!==***REMOVED***"$"***REMOVED***&&***REMOVED***hasOwn(data,***REMOVED***key)***REMOVED***||***REMOVED***hasSetupBinding(setupState,***REMOVED***key)***REMOVED***||***REMOVED***(normalizedProps***REMOVED***=***REMOVED***propsOptions[0])***REMOVED***&&***REMOVED***hasOwn(normalizedProps,***REMOVED***key)***REMOVED***||***REMOVED***hasOwn(ctx,***REMOVED***key)***REMOVED***||***REMOVED***hasOwn(publicPropertiesMap,***REMOVED***key)***REMOVED***||***REMOVED***hasOwn(appContext.config.globalProperties,***REMOVED***key)***REMOVED***||***REMOVED***(cssModules***REMOVED***=***REMOVED***type.__cssModules)***REMOVED***&&***REMOVED***cssModules[key]);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***defineProperty(target,***REMOVED***key,***REMOVED***descriptor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(descriptor.get***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***target._.accessCache[key]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hasOwn(descriptor,***REMOVED***"value"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***this.set(target,***REMOVED***key,***REMOVED***descriptor.value,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.defineProperty(target,***REMOVED***key,***REMOVED***descriptor);
***REMOVED******REMOVED***}
};
{
***REMOVED******REMOVED***PublicInstanceProxyHandlers.ownKeys***REMOVED***=***REMOVED***(target)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Avoid***REMOVED***app***REMOVED***logic***REMOVED***that***REMOVED***relies***REMOVED***on***REMOVED***enumerating***REMOVED***keys***REMOVED***on***REMOVED***a***REMOVED***component***REMOVED***instance.***REMOVED***The***REMOVED***keys***REMOVED***will***REMOVED***be***REMOVED***empty***REMOVED***in***REMOVED***production***REMOVED***mode***REMOVED***to***REMOVED***avoid***REMOVED***performance***REMOVED***overhead.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.ownKeys(target);
***REMOVED******REMOVED***};
}
function***REMOVED***createDevRenderContext(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***Object.defineProperty(target,***REMOVED***`_`,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***instance
***REMOVED******REMOVED***});
***REMOVED******REMOVED***Object.keys(publicPropertiesMap).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(target,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***publicPropertiesMap[key](instance),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***intercepted***REMOVED***by***REMOVED***the***REMOVED***proxy***REMOVED***so***REMOVED***no***REMOVED***need***REMOVED***for***REMOVED***implementation,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***needed***REMOVED***to***REMOVED***prevent***REMOVED***set***REMOVED***errors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***NOOP
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***target;
}
function***REMOVED***exposePropsOnRenderContext(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***propsOptions:***REMOVED***[propsOptions]
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***if***REMOVED***(propsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***Object.keys(propsOptions).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***instance.props[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***NOOP
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
}
function***REMOVED***exposeSetupStateOnRenderContext(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***ctx,***REMOVED***setupState***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***Object.keys(toRaw(setupState)).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!setupState.__isScriptSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isReservedPrefix(key[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`setup()***REMOVED***return***REMOVED***property***REMOVED***${JSON.stringify(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***should***REMOVED***not***REMOVED***start***REMOVED***with***REMOVED***"$"***REMOVED***or***REMOVED***"_"***REMOVED***which***REMOVED***are***REMOVED***reserved***REMOVED***prefixes***REMOVED***for***REMOVED***Vue***REMOVED***internals.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***setupState[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***NOOP
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}

function***REMOVED***normalizePropsOrEmits(props)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isArray(props)***REMOVED***?***REMOVED***props.reduce(
***REMOVED******REMOVED******REMOVED******REMOVED***(normalized,***REMOVED***p)***REMOVED***=>***REMOVED***(normalized[p]***REMOVED***=***REMOVED***null,***REMOVED***normalized),
***REMOVED******REMOVED******REMOVED******REMOVED***{}
***REMOVED******REMOVED***)***REMOVED***:***REMOVED***props;
}

function***REMOVED***createDuplicateChecker()***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***return***REMOVED***(type,***REMOVED***key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cache[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`${type}***REMOVED***property***REMOVED***"${key}"***REMOVED***is***REMOVED***already***REMOVED***defined***REMOVED***in***REMOVED***${cache[key]}.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache[key]***REMOVED***=***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}
let***REMOVED***shouldCacheAccess***REMOVED***=***REMOVED***true;
function***REMOVED***applyOptions(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***resolveMergedOptions(instance);
***REMOVED******REMOVED***const***REMOVED***publicThis***REMOVED***=***REMOVED***instance.proxy;
***REMOVED******REMOVED***const***REMOVED***ctx***REMOVED***=***REMOVED***instance.ctx;
***REMOVED******REMOVED***shouldCacheAccess***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(options.beforeCreate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callHook(options.beforeCreate,***REMOVED***instance,***REMOVED***"bc");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***state
***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***dataOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***computed:***REMOVED***computedOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***methods,
***REMOVED******REMOVED******REMOVED******REMOVED***watch:***REMOVED***watchOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***provide:***REMOVED***provideOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***inject:***REMOVED***injectOptions,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***lifecycle
***REMOVED******REMOVED******REMOVED******REMOVED***created,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeMount,
***REMOVED******REMOVED******REMOVED******REMOVED***mounted,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeUpdate,
***REMOVED******REMOVED******REMOVED******REMOVED***updated,
***REMOVED******REMOVED******REMOVED******REMOVED***activated,
***REMOVED******REMOVED******REMOVED******REMOVED***deactivated,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeDestroy,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeUnmount,
***REMOVED******REMOVED******REMOVED******REMOVED***destroyed,
***REMOVED******REMOVED******REMOVED******REMOVED***unmounted,
***REMOVED******REMOVED******REMOVED******REMOVED***render,
***REMOVED******REMOVED******REMOVED******REMOVED***renderTracked,
***REMOVED******REMOVED******REMOVED******REMOVED***renderTriggered,
***REMOVED******REMOVED******REMOVED******REMOVED***errorCaptured,
***REMOVED******REMOVED******REMOVED******REMOVED***serverPrefetch,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***public***REMOVED***API
***REMOVED******REMOVED******REMOVED******REMOVED***expose,
***REMOVED******REMOVED******REMOVED******REMOVED***inheritAttrs,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***assets
***REMOVED******REMOVED******REMOVED******REMOVED***components,
***REMOVED******REMOVED******REMOVED******REMOVED***directives,
***REMOVED******REMOVED******REMOVED******REMOVED***filters
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***checkDuplicateProperties***REMOVED***=***REMOVED***createDuplicateChecker()***REMOVED***;
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[propsOptions]***REMOVED***=***REMOVED***instance.propsOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***propsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDuplicateProperties("Props"***REMOVED***/****REMOVED***PROPS***REMOVED****/,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(injectOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***resolveInjections(injectOptions,***REMOVED***ctx,***REMOVED***checkDuplicateProperties);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(methods)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***methods)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***methodHandler***REMOVED***=***REMOVED***methods[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(methodHandler))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***methodHandler.bind(publicThis),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDuplicateProperties("Methods"***REMOVED***/****REMOVED***METHODS***REMOVED****/,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Method***REMOVED***"${key}"***REMOVED***has***REMOVED***type***REMOVED***"${typeof***REMOVED***methodHandler}"***REMOVED***in***REMOVED***the***REMOVED***component***REMOVED***definition.***REMOVED***Did***REMOVED***you***REMOVED***reference***REMOVED***the***REMOVED***function***REMOVED***correctly?`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(dataOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFunction(dataOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`The***REMOVED***data***REMOVED***option***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***function.***REMOVED***Plain***REMOVED***object***REMOVED***usage***REMOVED***is***REMOVED***no***REMOVED***longer***REMOVED***supported.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***data***REMOVED***=***REMOVED***dataOptions.call(publicThis,***REMOVED***publicThis);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPromise(data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`data()***REMOVED***returned***REMOVED***a***REMOVED***Promise***REMOVED***-***REMOVED***note***REMOVED***data()***REMOVED***cannot***REMOVED***be***REMOVED***async;***REMOVED***If***REMOVED***you***REMOVED***intend***REMOVED***to***REMOVED***perform***REMOVED***data***REMOVED***fetching***REMOVED***before***REMOVED***component***REMOVED***renders,***REMOVED***use***REMOVED***async***REMOVED***setup()***REMOVED***+***REMOVED***<Suspense>.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isObject(data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`data()***REMOVED***should***REMOVED***return***REMOVED***an***REMOVED***object.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.data***REMOVED***=***REMOVED***reactive(data);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDuplicateProperties("Data"***REMOVED***/****REMOVED***DATA***REMOVED****/,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReservedPrefix(key[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***data[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***NOOP
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***shouldCacheAccess***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***if***REMOVED***(computedOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***computedOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opt***REMOVED***=***REMOVED***computedOptions[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***get***REMOVED***=***REMOVED***isFunction(opt)***REMOVED***?***REMOVED***opt.bind(publicThis,***REMOVED***publicThis)***REMOVED***:***REMOVED***isFunction(opt.get)***REMOVED***?***REMOVED***opt.get.bind(publicThis,***REMOVED***publicThis)***REMOVED***:***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(get***REMOVED***===***REMOVED***NOOP)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Computed***REMOVED***property***REMOVED***"${key}"***REMOVED***has***REMOVED***no***REMOVED***getter.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***set***REMOVED***=***REMOVED***!isFunction(opt)***REMOVED***&&***REMOVED***isFunction(opt.set)***REMOVED***?***REMOVED***opt.set.bind(publicThis)***REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Write***REMOVED***operation***REMOVED***failed:***REMOVED***computed***REMOVED***property***REMOVED***"${key}"***REMOVED***is***REMOVED***readonly.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***computed({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***c.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***(v)***REMOVED***=>***REMOVED***c.value***REMOVED***=***REMOVED***v
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDuplicateProperties("Computed"***REMOVED***/****REMOVED***COMPUTED***REMOVED****/,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(watchOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***watchOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createWatcher(watchOptions[key],***REMOVED***ctx,***REMOVED***publicThis,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(provideOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***provides***REMOVED***=***REMOVED***isFunction(provideOptions)***REMOVED***?***REMOVED***provideOptions.call(publicThis)***REMOVED***:***REMOVED***provideOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***Reflect.ownKeys(provides).forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***provide(key,***REMOVED***provides[key]);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(created)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callHook(created,***REMOVED***instance,***REMOVED***"c");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***function***REMOVED***registerLifecycleHook(register,***REMOVED***hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(hook))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hook.forEach((_hook)***REMOVED***=>***REMOVED***register(_hook.bind(publicThis)));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(hook)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***register(hook.bind(publicThis));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***registerLifecycleHook(onBeforeMount,***REMOVED***beforeMount);
***REMOVED******REMOVED***registerLifecycleHook(onMounted,***REMOVED***mounted);
***REMOVED******REMOVED***registerLifecycleHook(onBeforeUpdate,***REMOVED***beforeUpdate);
***REMOVED******REMOVED***registerLifecycleHook(onUpdated,***REMOVED***updated);
***REMOVED******REMOVED***registerLifecycleHook(onActivated,***REMOVED***activated);
***REMOVED******REMOVED***registerLifecycleHook(onDeactivated,***REMOVED***deactivated);
***REMOVED******REMOVED***registerLifecycleHook(onErrorCaptured,***REMOVED***errorCaptured);
***REMOVED******REMOVED***registerLifecycleHook(onRenderTracked,***REMOVED***renderTracked);
***REMOVED******REMOVED***registerLifecycleHook(onRenderTriggered,***REMOVED***renderTriggered);
***REMOVED******REMOVED***registerLifecycleHook(onBeforeUnmount,***REMOVED***beforeUnmount);
***REMOVED******REMOVED***registerLifecycleHook(onUnmounted,***REMOVED***unmounted);
***REMOVED******REMOVED***registerLifecycleHook(onServerPrefetch,***REMOVED***serverPrefetch);
***REMOVED******REMOVED***if***REMOVED***(isArray(expose))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(expose.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***exposed***REMOVED***=***REMOVED***instance.exposed***REMOVED***||***REMOVED***(instance.exposed***REMOVED***=***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expose.forEach((key)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(exposed,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***publicThis[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***(val)***REMOVED***=>***REMOVED***publicThis[key]***REMOVED***=***REMOVED***val,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!instance.exposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.exposed***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(render***REMOVED***&&***REMOVED***instance.render***REMOVED***===***REMOVED***NOOP)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.render***REMOVED***=***REMOVED***render;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(inheritAttrs***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.inheritAttrs***REMOVED***=***REMOVED***inheritAttrs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(components)***REMOVED***instance.components***REMOVED***=***REMOVED***components;
***REMOVED******REMOVED***if***REMOVED***(directives)***REMOVED***instance.directives***REMOVED***=***REMOVED***directives;
***REMOVED******REMOVED***if***REMOVED***(serverPrefetch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***markAsyncBoundary(instance);
***REMOVED******REMOVED***}
}
function***REMOVED***resolveInjections(injectOptions,***REMOVED***ctx,***REMOVED***checkDuplicateProperties***REMOVED***=***REMOVED***NOOP)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(injectOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***injectOptions***REMOVED***=***REMOVED***normalizeInject(injectOptions);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***injectOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opt***REMOVED***=***REMOVED***injectOptions[key];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***injected;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(opt))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("default"***REMOVED***in***REMOVED***opt)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injected***REMOVED***=***REMOVED***inject(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opt.from***REMOVED***||***REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opt.default,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injected***REMOVED***=***REMOVED***inject(opt.from***REMOVED***||***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***injected***REMOVED***=***REMOVED***inject(opt);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isRef(injected))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(ctx,***REMOVED***key,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***configurable:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***()***REMOVED***=>***REMOVED***injected.value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set:***REMOVED***(v)***REMOVED***=>***REMOVED***injected.value***REMOVED***=***REMOVED***v
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx[key]***REMOVED***=***REMOVED***injected;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***checkDuplicateProperties("Inject"***REMOVED***/****REMOVED***INJECT***REMOVED****/,***REMOVED***key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***callHook(hook,***REMOVED***instance,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***callWithAsyncErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED***isArray(hook)***REMOVED***?***REMOVED***hook.map((h)***REMOVED***=>***REMOVED***h.bind(instance.proxy))***REMOVED***:***REMOVED***hook.bind(instance.proxy),
***REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED***);
}
function***REMOVED***createWatcher(raw,***REMOVED***ctx,***REMOVED***publicThis,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***getter***REMOVED***=***REMOVED***key.includes(".")***REMOVED***?***REMOVED***createPathGetter(publicThis,***REMOVED***key)***REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***publicThis[key];
***REMOVED******REMOVED***if***REMOVED***(isString(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***ctx[raw];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(handler))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watch(getter,***REMOVED***handler);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Invalid***REMOVED***watch***REMOVED***handler***REMOVED***specified***REMOVED***by***REMOVED***key***REMOVED***"${raw}"`,***REMOVED***handler);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watch(getter,***REMOVED***raw.bind(publicThis));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***raw.forEach((r)***REMOVED***=>***REMOVED***createWatcher(r,***REMOVED***ctx,***REMOVED***publicThis,***REMOVED***key));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***handler***REMOVED***=***REMOVED***isFunction(raw.handler)***REMOVED***?***REMOVED***raw.handler.bind(publicThis)***REMOVED***:***REMOVED***ctx[raw.handler];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(handler))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watch(getter,***REMOVED***handler,***REMOVED***raw);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Invalid***REMOVED***watch***REMOVED***handler***REMOVED***specified***REMOVED***by***REMOVED***key***REMOVED***"${raw.handler}"`,***REMOVED***handler);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Invalid***REMOVED***watch***REMOVED***option:***REMOVED***"${key}"`,***REMOVED***raw);
***REMOVED******REMOVED***}
}
function***REMOVED***resolveMergedOptions(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***base***REMOVED***=***REMOVED***instance.type;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***mixins,***REMOVED***extends:***REMOVED***extendsOptions***REMOVED***}***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***globalMixins,
***REMOVED******REMOVED******REMOVED******REMOVED***optionsCache:***REMOVED***cache,
***REMOVED******REMOVED******REMOVED******REMOVED***config:***REMOVED***{***REMOVED***optionMergeStrategies***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***instance.appContext;
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***cache.get(base);
***REMOVED******REMOVED***let***REMOVED***resolved;
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***cached;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!globalMixins.length***REMOVED***&&***REMOVED***!mixins***REMOVED***&&***REMOVED***!extendsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***base;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***resolved***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(globalMixins.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalMixins.forEach(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(m)***REMOVED***=>***REMOVED***mergeOptions(resolved,***REMOVED***m,***REMOVED***optionMergeStrategies,***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***mergeOptions(resolved,***REMOVED***base,***REMOVED***optionMergeStrategies);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isObject(base))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cache.set(base,***REMOVED***resolved);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***resolved;
}
function***REMOVED***mergeOptions(to,***REMOVED***from,***REMOVED***strats,***REMOVED***asMixin***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***mixins,***REMOVED***extends:***REMOVED***extendsOptions***REMOVED***}***REMOVED***=***REMOVED***from;
***REMOVED******REMOVED***if***REMOVED***(extendsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mergeOptions(to,***REMOVED***extendsOptions,***REMOVED***strats,***REMOVED***true);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(mixins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***mixins.forEach(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(m)***REMOVED***=>***REMOVED***mergeOptions(to,***REMOVED***m,***REMOVED***strats,***REMOVED***true)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(asMixin***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"expose")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"expose"***REMOVED***option***REMOVED***is***REMOVED***ignored***REMOVED***when***REMOVED***declared***REMOVED***in***REMOVED***mixins***REMOVED***or***REMOVED***extends.***REMOVED***It***REMOVED***should***REMOVED***only***REMOVED***be***REMOVED***declared***REMOVED***in***REMOVED***the***REMOVED***base***REMOVED***component***REMOVED***itself.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***strat***REMOVED***=***REMOVED***internalOptionMergeStrats[key]***REMOVED***||***REMOVED***strats***REMOVED***&&***REMOVED***strats[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***to[key]***REMOVED***=***REMOVED***strat***REMOVED***?***REMOVED***strat(to[key],***REMOVED***from[key])***REMOVED***:***REMOVED***from[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***to;
}
const***REMOVED***internalOptionMergeStrats***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***data:***REMOVED***mergeDataFn,
***REMOVED******REMOVED***props:***REMOVED***mergeEmitsOrPropsOptions,
***REMOVED******REMOVED***emits:***REMOVED***mergeEmitsOrPropsOptions,
***REMOVED******REMOVED***//***REMOVED***objects
***REMOVED******REMOVED***methods:***REMOVED***mergeObjectOptions,
***REMOVED******REMOVED***computed:***REMOVED***mergeObjectOptions,
***REMOVED******REMOVED***//***REMOVED***lifecycle
***REMOVED******REMOVED***beforeCreate:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***created:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***beforeMount:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***mounted:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***beforeUpdate:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***updated:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***beforeDestroy:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***beforeUnmount:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***destroyed:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***unmounted:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***activated:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***deactivated:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***errorCaptured:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***serverPrefetch:***REMOVED***mergeAsArray,
***REMOVED******REMOVED***//***REMOVED***assets
***REMOVED******REMOVED***components:***REMOVED***mergeObjectOptions,
***REMOVED******REMOVED***directives:***REMOVED***mergeObjectOptions,
***REMOVED******REMOVED***//***REMOVED***watch
***REMOVED******REMOVED***watch:***REMOVED***mergeWatchOptions,
***REMOVED******REMOVED***//***REMOVED***provide***REMOVED***/***REMOVED***inject
***REMOVED******REMOVED***provide:***REMOVED***mergeDataFn,
***REMOVED******REMOVED***inject:***REMOVED***mergeInject
};
function***REMOVED***mergeDataFn(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***to;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***from;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***function***REMOVED***mergedDataFn()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(extend)(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFunction(to)***REMOVED***?***REMOVED***to.call(this,***REMOVED***this)***REMOVED***:***REMOVED***to,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFunction(from)***REMOVED***?***REMOVED***from.call(this,***REMOVED***this)***REMOVED***:***REMOVED***from
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
}
function***REMOVED***mergeInject(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***mergeObjectOptions(normalizeInject(to),***REMOVED***normalizeInject(from));
}
function***REMOVED***normalizeInject(raw)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***raw.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[raw[i]]***REMOVED***=***REMOVED***raw[i];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***raw;
}
function***REMOVED***mergeAsArray(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***to***REMOVED***?***REMOVED***[...new***REMOVED***Set([].concat(to,***REMOVED***from))]***REMOVED***:***REMOVED***from;
}
function***REMOVED***mergeObjectOptions(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***to***REMOVED***?***REMOVED***extend(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),***REMOVED***to,***REMOVED***from)***REMOVED***:***REMOVED***from;
}
function***REMOVED***mergeEmitsOrPropsOptions(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(to)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(to)***REMOVED***&&***REMOVED***isArray(from))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[.../****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Set([...to,***REMOVED***...from])];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***extend(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizePropsOrEmits(to),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizePropsOrEmits(from***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***from***REMOVED***:***REMOVED***{})
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***from;
***REMOVED******REMOVED***}
}
function***REMOVED***mergeWatchOptions(to,***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!to)***REMOVED***return***REMOVED***from;
***REMOVED******REMOVED***if***REMOVED***(!from)***REMOVED***return***REMOVED***to;
***REMOVED******REMOVED***const***REMOVED***merged***REMOVED***=***REMOVED***extend(/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),***REMOVED***to);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***from)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***merged[key]***REMOVED***=***REMOVED***mergeAsArray(to[key],***REMOVED***from[key]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***merged;
}

function***REMOVED***createAppContext()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***app:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***config:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isNativeTag:***REMOVED***NO,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***performance:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***globalProperties:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optionMergeStrategies:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***errorHandler:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warnHandler:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***compilerOptions:***REMOVED***{}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***mixins:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***{},
***REMOVED******REMOVED******REMOVED******REMOVED***provides:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null),
***REMOVED******REMOVED******REMOVED******REMOVED***optionsCache:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap(),
***REMOVED******REMOVED******REMOVED******REMOVED***propsCache:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap(),
***REMOVED******REMOVED******REMOVED******REMOVED***emitsCache:***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap()
***REMOVED******REMOVED***};
}
let***REMOVED***uid$1***REMOVED***=***REMOVED***0;
function***REMOVED***createAppAPI(render,***REMOVED***hydrate)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***function***REMOVED***createApp(rootComponent,***REMOVED***rootProps***REMOVED***=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFunction(rootComponent))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rootComponent***REMOVED***=***REMOVED***extend({},***REMOVED***rootComponent);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rootProps***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***!isObject(rootProps))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`root***REMOVED***props***REMOVED***passed***REMOVED***to***REMOVED***app.mount()***REMOVED***must***REMOVED***be***REMOVED***an***REMOVED***object.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rootProps***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***createAppContext();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***installedPlugins***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakSet();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***pluginCleanupFns***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isMounted***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***app***REMOVED***=***REMOVED***context.app***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_uid:***REMOVED***uid$1++,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_component:***REMOVED***rootComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_props:***REMOVED***rootProps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_container:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_context:***REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***_instance:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***version,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***config()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***context.config;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set***REMOVED***config(v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`app.config***REMOVED***cannot***REMOVED***be***REMOVED***replaced.***REMOVED***Modify***REMOVED***individual***REMOVED***options***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***use(plugin,***REMOVED***...options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(installedPlugins.has(plugin))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Plugin***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***applied***REMOVED***to***REMOVED***target***REMOVED***app.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(plugin***REMOVED***&&***REMOVED***isFunction(plugin.install))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***installedPlugins.add(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin.install(app,***REMOVED***...options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(plugin))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***installedPlugins.add(plugin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***plugin(app,***REMOVED***...options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`A***REMOVED***plugin***REMOVED***must***REMOVED***either***REMOVED***be***REMOVED***a***REMOVED***function***REMOVED***or***REMOVED***an***REMOVED***object***REMOVED***with***REMOVED***an***REMOVED***"install"***REMOVED***function.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mixin(mixin)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!context.mixins.includes(mixin))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.mixins.push(mixin);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Mixin***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***applied***REMOVED***to***REMOVED***target***REMOVED***app"***REMOVED***+***REMOVED***(mixin.name***REMOVED***?***REMOVED***`:***REMOVED***${mixin.name}`***REMOVED***:***REMOVED***"")
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component(name,***REMOVED***component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateComponentName(name,***REMOVED***context.config);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***context.components[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.components[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Component***REMOVED***"${name}"***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***registered***REMOVED***in***REMOVED***target***REMOVED***app.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.components[name]***REMOVED***=***REMOVED***component;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***directive(name,***REMOVED***directive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateDirectiveName(name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!directive)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***context.directives[name];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.directives[name])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Directive***REMOVED***"${name}"***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***registered***REMOVED***in***REMOVED***target***REMOVED***app.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.directives[name]***REMOVED***=***REMOVED***directive;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mount(rootContainer,***REMOVED***isHydrate,***REMOVED***namespace)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isMounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rootContainer.__vue_app__)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`There***REMOVED***is***REMOVED***already***REMOVED***an***REMOVED***app***REMOVED***instance***REMOVED***mounted***REMOVED***on***REMOVED***the***REMOVED***host***REMOVED***container.
***REMOVED***If***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***mount***REMOVED***another***REMOVED***app***REMOVED***on***REMOVED***the***REMOVED***same***REMOVED***host***REMOVED***container,***REMOVED***you***REMOVED***need***REMOVED***to***REMOVED***unmount***REMOVED***the***REMOVED***previous***REMOVED***app***REMOVED***by***REMOVED***calling***REMOVED***\`app.unmount()\`***REMOVED***first.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***vnode***REMOVED***=***REMOVED***app._ceVNode***REMOVED***||***REMOVED***createVNode(rootComponent,***REMOVED***rootProps);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.appContext***REMOVED***=***REMOVED***context;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***"svg";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.reload***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***cloneVNode(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned.el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***render(cloned,***REMOVED***rootContainer,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***render(vnode,***REMOVED***rootContainer,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isMounted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app._container***REMOVED***=***REMOVED***rootContainer;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rootContainer.__vue_app__***REMOVED***=***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app._instance***REMOVED***=***REMOVED***vnode.component;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsInitApp(app,***REMOVED***version);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getComponentPublicInstance(vnode.component);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`App***REMOVED***has***REMOVED***already***REMOVED***been***REMOVED***mounted.
If***REMOVED***you***REMOVED***want***REMOVED***to***REMOVED***remount***REMOVED***the***REMOVED***same***REMOVED***app,***REMOVED***move***REMOVED***your***REMOVED***app***REMOVED***creation***REMOVED***logic***REMOVED***into***REMOVED***a***REMOVED***factory***REMOVED***function***REMOVED***and***REMOVED***create***REMOVED***fresh***REMOVED***app***REMOVED***instances***REMOVED***for***REMOVED***each***REMOVED***mount***REMOVED***-***REMOVED***e.g.***REMOVED***\`const***REMOVED***createMyApp***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***createApp(App)\``
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onUnmount(cleanupFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***cleanupFn***REMOVED***!==***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Expected***REMOVED***function***REMOVED***as***REMOVED***first***REMOVED***argument***REMOVED***to***REMOVED***app.onUnmount(),***REMOVED***but***REMOVED***got***REMOVED***${typeof***REMOVED***cleanupFn}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginCleanupFns.push(cleanupFn);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isMounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callWithAsyncErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pluginCleanupFns,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app._instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***16
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***render(null,***REMOVED***app._container);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***app._instance***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsUnmountApp(app);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***app._container.__vue_app__;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Cannot***REMOVED***unmount***REMOVED***an***REMOVED***app***REMOVED***that***REMOVED***is***REMOVED***not***REMOVED***mounted.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***provide(key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***context.provides)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(context.provides,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`App***REMOVED***already***REMOVED***provides***REMOVED***property***REMOVED***with***REMOVED***key***REMOVED***"${String(key)}".***REMOVED***It***REMOVED***will***REMOVED***be***REMOVED***overwritten***REMOVED***with***REMOVED***the***REMOVED***new***REMOVED***value.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`App***REMOVED***already***REMOVED***provides***REMOVED***property***REMOVED***with***REMOVED***key***REMOVED***"${String(key)}"***REMOVED***inherited***REMOVED***from***REMOVED***its***REMOVED***parent***REMOVED***element.***REMOVED***It***REMOVED***will***REMOVED***be***REMOVED***overwritten***REMOVED***with***REMOVED***the***REMOVED***new***REMOVED***value.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.provides[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***runWithContext(fn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastApp***REMOVED***=***REMOVED***currentApp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentApp***REMOVED***=***REMOVED***app;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***fn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentApp***REMOVED***=***REMOVED***lastApp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***app;
***REMOVED******REMOVED***};
}
let***REMOVED***currentApp***REMOVED***=***REMOVED***null;

function***REMOVED***provide(key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!currentInstance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`provide()***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***inside***REMOVED***setup().`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***provides***REMOVED***=***REMOVED***currentInstance.provides;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentProvides***REMOVED***=***REMOVED***currentInstance.parent***REMOVED***&&***REMOVED***currentInstance.parent.provides;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentProvides***REMOVED***===***REMOVED***provides)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***provides***REMOVED***=***REMOVED***currentInstance.provides***REMOVED***=***REMOVED***Object.create(parentProvides);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***provides[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}
}
function***REMOVED***inject(key,***REMOVED***defaultValue,***REMOVED***treatDefaultAsFactory***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***getCurrentInstance();
***REMOVED******REMOVED***if***REMOVED***(instance***REMOVED***||***REMOVED***currentApp)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***provides***REMOVED***=***REMOVED***currentApp***REMOVED***?***REMOVED***currentApp._context.provides***REMOVED***:***REMOVED***instance***REMOVED***?***REMOVED***instance.parent***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***instance.ce***REMOVED***?***REMOVED***instance.vnode.appContext***REMOVED***&&***REMOVED***instance.vnode.appContext.provides***REMOVED***:***REMOVED***instance.parent.provides***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(provides***REMOVED***&&***REMOVED***key***REMOVED***in***REMOVED***provides)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***provides[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(arguments.length***REMOVED***>***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***treatDefaultAsFactory***REMOVED***&&***REMOVED***isFunction(defaultValue)***REMOVED***?***REMOVED***defaultValue.call(instance***REMOVED***&&***REMOVED***instance.proxy)***REMOVED***:***REMOVED***defaultValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`injection***REMOVED***"${String(key)}"***REMOVED***not***REMOVED***found.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`inject()***REMOVED***can***REMOVED***only***REMOVED***be***REMOVED***used***REMOVED***inside***REMOVED***setup()***REMOVED***or***REMOVED***functional***REMOVED***components.`);
***REMOVED******REMOVED***}
}

const***REMOVED***internalObjectProto***REMOVED***=***REMOVED***{};
const***REMOVED***createInternalObject***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***Object.create(internalObjectProto);
const***REMOVED***isInternalObject***REMOVED***=***REMOVED***(obj)***REMOVED***=>***REMOVED***Object.getPrototypeOf(obj)***REMOVED***===***REMOVED***internalObjectProto;

function***REMOVED***initProps(instance,***REMOVED***rawProps,***REMOVED***isStateful,***REMOVED***isSSR***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***attrs***REMOVED***=***REMOVED***createInternalObject();
***REMOVED******REMOVED***instance.propsDefaults***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***setFullProps(instance,***REMOVED***rawProps,***REMOVED***props,***REMOVED***attrs);
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***instance.propsOptions[0])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(key***REMOVED***in***REMOVED***props))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props[key]***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validateProps(rawProps***REMOVED***||***REMOVED***{},***REMOVED***props,***REMOVED***instance);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isStateful)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.props***REMOVED***=***REMOVED***isSSR***REMOVED***?***REMOVED***props***REMOVED***:***REMOVED***shallowReactive(props);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!instance.type.props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.props***REMOVED***=***REMOVED***attrs;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.props***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***instance.attrs***REMOVED***=***REMOVED***attrs;
}
function***REMOVED***isInHmrContext(instance)***REMOVED***{
***REMOVED******REMOVED***while***REMOVED***(instance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.type.__hmrId)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***instance***REMOVED***=***REMOVED***instance.parent;
***REMOVED******REMOVED***}
}
function***REMOVED***updateProps(instance,***REMOVED***rawProps,***REMOVED***rawPrevProps,***REMOVED***optimized)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED***attrs,
***REMOVED******REMOVED******REMOVED******REMOVED***vnode:***REMOVED***{***REMOVED***patchFlag***REMOVED***}
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***const***REMOVED***rawCurrentProps***REMOVED***=***REMOVED***toRaw(props);
***REMOVED******REMOVED***const***REMOVED***[options]***REMOVED***=***REMOVED***instance.propsOptions;
***REMOVED******REMOVED***let***REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***always***REMOVED***force***REMOVED***full***REMOVED***diff***REMOVED***in***REMOVED***dev
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***#1942***REMOVED***if***REMOVED***hmr***REMOVED***is***REMOVED***enabled***REMOVED***with***REMOVED***sfc***REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***-***REMOVED***vite#872***REMOVED***non-sfc***REMOVED***component***REMOVED***used***REMOVED***by***REMOVED***sfc***REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED***!isInHmrContext(instance)***REMOVED***&&***REMOVED***(optimized***REMOVED***||***REMOVED***patchFlag***REMOVED***>***REMOVED***0)***REMOVED***&&***REMOVED***!(patchFlag***REMOVED***&***REMOVED***16)
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propsToUpdate***REMOVED***=***REMOVED***instance.vnode.dynamicProps;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***propsToUpdate.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***key***REMOVED***=***REMOVED***propsToUpdate[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isEmitListener(instance.emitsOptions,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***rawProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasOwn(attrs,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***attrs[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***camelizedKey***REMOVED***=***REMOVED***camelize(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props[camelizedKey]***REMOVED***=***REMOVED***resolvePropValue(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawCurrentProps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***camelizedKey,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!==***REMOVED***attrs[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(setFullProps(instance,***REMOVED***rawProps,***REMOVED***props,***REMOVED***attrs))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***kebabKey;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***rawCurrentProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rawProps***REMOVED***||***REMOVED***//***REMOVED***for***REMOVED***camelCase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!hasOwn(rawProps,***REMOVED***key)***REMOVED***&&***REMOVED***//***REMOVED***it's***REMOVED***possible***REMOVED***the***REMOVED***original***REMOVED***props***REMOVED***was***REMOVED***passed***REMOVED***in***REMOVED***as***REMOVED***kebab-case
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***and***REMOVED***converted***REMOVED***to***REMOVED***camelCase***REMOVED***(#955)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***((kebabKey***REMOVED***=***REMOVED***hyphenate(key))***REMOVED***===***REMOVED***key***REMOVED***||***REMOVED***!hasOwn(rawProps,***REMOVED***kebabKey)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(rawPrevProps***REMOVED***&&***REMOVED***//***REMOVED***for***REMOVED***camelCase
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(rawPrevProps[key]***REMOVED***!==***REMOVED***void***REMOVED***0***REMOVED***||***REMOVED***//***REMOVED***for***REMOVED***kebab-case
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawPrevProps[kebabKey]***REMOVED***!==***REMOVED***void***REMOVED***0))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props[key]***REMOVED***=***REMOVED***resolvePropValue(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawCurrentProps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrs***REMOVED***!==***REMOVED***rawCurrentProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***attrs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rawProps***REMOVED***||***REMOVED***!hasOwn(rawProps,***REMOVED***key)***REMOVED***&&***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***attrs[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(hasAttrsChanged)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***trigger(instance.attrs,***REMOVED***"set",***REMOVED***"");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***validateProps(rawProps***REMOVED***||***REMOVED***{},***REMOVED***props,***REMOVED***instance);
***REMOVED******REMOVED***}
}
function***REMOVED***setFullProps(instance,***REMOVED***rawProps,***REMOVED***props,***REMOVED***attrs)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***[options,***REMOVED***needCastKeys]***REMOVED***=***REMOVED***instance.propsOptions;
***REMOVED******REMOVED***let***REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***let***REMOVED***rawCastValues;
***REMOVED******REMOVED***if***REMOVED***(rawProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***key***REMOVED***in***REMOVED***rawProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isReservedProp(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***rawProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***camelKey;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(options***REMOVED***&&***REMOVED***hasOwn(options,***REMOVED***camelKey***REMOVED***=***REMOVED***camelize(key)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!needCastKeys***REMOVED***||***REMOVED***!needCastKeys.includes(camelKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props[camelKey]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(rawCastValues***REMOVED***||***REMOVED***(rawCastValues***REMOVED***=***REMOVED***{}))[camelKey]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!isEmitListener(instance.emitsOptions,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(key***REMOVED***in***REMOVED***attrs)***REMOVED***||***REMOVED***value***REMOVED***!==***REMOVED***attrs[key])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasAttrsChanged***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(needCastKeys)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***rawCurrentProps***REMOVED***=***REMOVED***toRaw(props);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***castValues***REMOVED***=***REMOVED***rawCastValues***REMOVED***||***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***needCastKeys.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***needCastKeys[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props[key]***REMOVED***=***REMOVED***resolvePropValue(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawCurrentProps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***castValues[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!hasOwn(castValues,***REMOVED***key)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***hasAttrsChanged;
}
function***REMOVED***resolvePropValue(options,***REMOVED***props,***REMOVED***key,***REMOVED***value,***REMOVED***instance,***REMOVED***isAbsent)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***opt***REMOVED***=***REMOVED***options[key];
***REMOVED******REMOVED***if***REMOVED***(opt***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***hasDefault***REMOVED***=***REMOVED***hasOwn(opt,***REMOVED***"default");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasDefault***REMOVED***&&***REMOVED***value***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***defaultValue***REMOVED***=***REMOVED***opt.default;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opt.type***REMOVED***!==***REMOVED***Function***REMOVED***&&***REMOVED***!opt.skipFactory***REMOVED***&&***REMOVED***isFunction(defaultValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***propsDefaults***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***propsDefaults)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***propsDefaults[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reset***REMOVED***=***REMOVED***setCurrentInstance(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***propsDefaults[key]***REMOVED***=***REMOVED***defaultValue.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***defaultValue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.ce)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.ce._setProp(key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opt[0***REMOVED***/****REMOVED***shouldCast***REMOVED****/])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAbsent***REMOVED***&&***REMOVED***!hasDefault)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(opt[1***REMOVED***/****REMOVED***shouldCastTrue***REMOVED****/]***REMOVED***&&***REMOVED***(value***REMOVED***===***REMOVED***""***REMOVED***||***REMOVED***value***REMOVED***===***REMOVED***hyphenate(key)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***value;
}
const***REMOVED***mixinPropsCache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
function***REMOVED***normalizePropsOptions(comp,***REMOVED***appContext,***REMOVED***asMixin***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***asMixin***REMOVED***?***REMOVED***mixinPropsCache***REMOVED***:***REMOVED***appContext.propsCache;
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***cache.get(comp);
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***comp.props;
***REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***needCastKeys***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***let***REMOVED***hasExtends***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(!isFunction(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extendProps***REMOVED***=***REMOVED***(raw2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasExtends***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[props,***REMOVED***keys]***REMOVED***=***REMOVED***normalizePropsOptions(raw2,***REMOVED***appContext,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(normalized,***REMOVED***props);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keys)***REMOVED***needCastKeys.push(...keys);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!asMixin***REMOVED***&&***REMOVED***appContext.mixins.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***appContext.mixins.forEach(extendProps);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp.extends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extendProps(comp.extends);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp.mixins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comp.mixins.forEach(extendProps);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!raw***REMOVED***&&***REMOVED***!hasExtends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache.set(comp,***REMOVED***EMPTY_ARR);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***EMPTY_ARR;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isArray(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***raw.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isString(raw[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`props***REMOVED***must***REMOVED***be***REMOVED***strings***REMOVED***when***REMOVED***using***REMOVED***array***REMOVED***syntax.`,***REMOVED***raw[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedKey***REMOVED***=***REMOVED***camelize(raw[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validatePropName(normalizedKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalized[normalizedKey]***REMOVED***=***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(raw)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isObject(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`invalid***REMOVED***props***REMOVED***options`,***REMOVED***raw);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***raw)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedKey***REMOVED***=***REMOVED***camelize(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validatePropName(normalizedKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***opt***REMOVED***=***REMOVED***raw[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prop***REMOVED***=***REMOVED***normalized[normalizedKey]***REMOVED***=***REMOVED***isArray(opt)***REMOVED***||***REMOVED***isFunction(opt)***REMOVED***?***REMOVED***{***REMOVED***type:***REMOVED***opt***REMOVED***}***REMOVED***:***REMOVED***extend({},***REMOVED***opt);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propType***REMOVED***=***REMOVED***prop.type;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shouldCast***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***shouldCastTrue***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(propType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***propType.length;***REMOVED***++index)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***propType[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***typeName***REMOVED***=***REMOVED***isFunction(type)***REMOVED***&&***REMOVED***type.name;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(typeName***REMOVED***===***REMOVED***"Boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldCast***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeName***REMOVED***===***REMOVED***"String")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldCastTrue***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldCast***REMOVED***=***REMOVED***isFunction(propType)***REMOVED***&&***REMOVED***propType.name***REMOVED***===***REMOVED***"Boolean";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop[0***REMOVED***/****REMOVED***shouldCast***REMOVED****/]***REMOVED***=***REMOVED***shouldCast;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prop[1***REMOVED***/****REMOVED***shouldCastTrue***REMOVED****/]***REMOVED***=***REMOVED***shouldCastTrue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldCast***REMOVED***||***REMOVED***hasOwn(prop,***REMOVED***"default"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needCastKeys.push(normalizedKey);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***[normalized,***REMOVED***needCastKeys];
***REMOVED******REMOVED***if***REMOVED***(isObject(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cache.set(comp,***REMOVED***res);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***validatePropName(key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(key[0]***REMOVED***!==***REMOVED***"$"***REMOVED***&&***REMOVED***!isReservedProp(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Invalid***REMOVED***prop***REMOVED***name:***REMOVED***"${key}"***REMOVED***is***REMOVED***a***REMOVED***reserved***REMOVED***property.`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***getType(ctor)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(ctor***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"null";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***ctor***REMOVED***===***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctor.name***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***ctor***REMOVED***===***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***ctor.constructor***REMOVED***&&***REMOVED***ctor.constructor.name;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***name***REMOVED***||***REMOVED***"";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***"";
}
function***REMOVED***validateProps(rawProps,***REMOVED***props,***REMOVED***instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***resolvedValues***REMOVED***=***REMOVED***toRaw(props);
***REMOVED******REMOVED***const***REMOVED***options***REMOVED***=***REMOVED***instance.propsOptions[0];
***REMOVED******REMOVED***const***REMOVED***camelizePropsKey***REMOVED***=***REMOVED***Object.keys(rawProps).map((key)***REMOVED***=>***REMOVED***camelize(key));
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***opt***REMOVED***=***REMOVED***options[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(opt***REMOVED***==***REMOVED***null)***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***validateProp(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolvedValues[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***opt,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonly(resolvedValues)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!camelizePropsKey.includes(key)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***validateProp(name,***REMOVED***value,***REMOVED***prop,***REMOVED***props,***REMOVED***isAbsent)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***required,***REMOVED***validator,***REMOVED***skipCheck***REMOVED***}***REMOVED***=***REMOVED***prop;
***REMOVED******REMOVED***if***REMOVED***(required***REMOVED***&&***REMOVED***isAbsent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1('Missing***REMOVED***required***REMOVED***prop:***REMOVED***"'***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***'"');
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***!required)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***type***REMOVED***!==***REMOVED***true***REMOVED***&&***REMOVED***!skipCheck)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isValid***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***types***REMOVED***=***REMOVED***isArray(type)***REMOVED***?***REMOVED***type***REMOVED***:***REMOVED***[type];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***expectedTypes***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***types.length***REMOVED***&&***REMOVED***!isValid;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***valid,***REMOVED***expectedType***REMOVED***}***REMOVED***=***REMOVED***assertType(value,***REMOVED***types[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expectedTypes.push(expectedType***REMOVED***||***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isValid***REMOVED***=***REMOVED***valid;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isValid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(getInvalidTypeMessage(name,***REMOVED***value,***REMOVED***expectedTypes));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(validator***REMOVED***&&***REMOVED***!validator(value,***REMOVED***props))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1('Invalid***REMOVED***prop:***REMOVED***custom***REMOVED***validator***REMOVED***check***REMOVED***failed***REMOVED***for***REMOVED***prop***REMOVED***"'***REMOVED***+***REMOVED***name***REMOVED***+***REMOVED***'".');
***REMOVED******REMOVED***}
}
const***REMOVED***isSimpleType***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***"String,Number,Boolean,Function,Symbol,BigInt"
);
function***REMOVED***assertType(value,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***valid;
***REMOVED******REMOVED***const***REMOVED***expectedType***REMOVED***=***REMOVED***getType(type);
***REMOVED******REMOVED***if***REMOVED***(expectedType***REMOVED***===***REMOVED***"null")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***value***REMOVED***===***REMOVED***null;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSimpleType(expectedType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***t***REMOVED***=***REMOVED***typeof***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***t***REMOVED***===***REMOVED***expectedType.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!valid***REMOVED***&&***REMOVED***t***REMOVED***===***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***value***REMOVED***instanceof***REMOVED***type;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(expectedType***REMOVED***===***REMOVED***"Object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***isObject(value);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(expectedType***REMOVED***===***REMOVED***"Array")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***isArray(value);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***valid***REMOVED***=***REMOVED***value***REMOVED***instanceof***REMOVED***type;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***valid,
***REMOVED******REMOVED******REMOVED******REMOVED***expectedType
***REMOVED******REMOVED***};
}
function***REMOVED***getInvalidTypeMessage(name,***REMOVED***value,***REMOVED***expectedTypes)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(expectedTypes.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`Prop***REMOVED***type***REMOVED***[]***REMOVED***for***REMOVED***prop***REMOVED***"${name}"***REMOVED***won't***REMOVED***match***REMOVED***anything.***REMOVED***Did***REMOVED***you***REMOVED***mean***REMOVED***to***REMOVED***use***REMOVED***type***REMOVED***Array***REMOVED***instead?`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***message***REMOVED***=***REMOVED***`Invalid***REMOVED***prop:***REMOVED***type***REMOVED***check***REMOVED***failed***REMOVED***for***REMOVED***prop***REMOVED***"${name}".***REMOVED***Expected***REMOVED***${expectedTypes.map(capitalize).join("***REMOVED***|***REMOVED***")}`;
***REMOVED******REMOVED***const***REMOVED***expectedType***REMOVED***=***REMOVED***expectedTypes[0];
***REMOVED******REMOVED***const***REMOVED***receivedType***REMOVED***=***REMOVED***toRawType(value);
***REMOVED******REMOVED***const***REMOVED***expectedValue***REMOVED***=***REMOVED***styleValue(value,***REMOVED***expectedType);
***REMOVED******REMOVED***const***REMOVED***receivedValue***REMOVED***=***REMOVED***styleValue(value,***REMOVED***receivedType);
***REMOVED******REMOVED***if***REMOVED***(expectedTypes.length***REMOVED***===***REMOVED***1***REMOVED***&&***REMOVED***isExplicable(expectedType)***REMOVED***&&***REMOVED***!isBoolean(expectedType,***REMOVED***receivedType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***`***REMOVED***with***REMOVED***value***REMOVED***${expectedValue}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***message***REMOVED***+=***REMOVED***`,***REMOVED***got***REMOVED***${receivedType}***REMOVED***`;
***REMOVED******REMOVED***if***REMOVED***(isExplicable(receivedType))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***message***REMOVED***+=***REMOVED***`with***REMOVED***value***REMOVED***${receivedValue}.`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***message;
}
function***REMOVED***styleValue(value,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"String")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`"${value}"`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"Number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${Number(value)}`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***`${value}`;
***REMOVED******REMOVED***}
}
function***REMOVED***isExplicable(type)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***explicitTypes***REMOVED***=***REMOVED***["string",***REMOVED***"number",***REMOVED***"boolean"];
***REMOVED******REMOVED***return***REMOVED***explicitTypes.some((elem)***REMOVED***=>***REMOVED***type.toLowerCase()***REMOVED***===***REMOVED***elem);
}
function***REMOVED***isBoolean(...args)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***args.some((elem)***REMOVED***=>***REMOVED***elem.toLowerCase()***REMOVED***===***REMOVED***"boolean");
}

const***REMOVED***isInternalKey***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key***REMOVED***===***REMOVED***"_"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"_ctx"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"$stable";
const***REMOVED***normalizeSlotValue***REMOVED***=***REMOVED***(value)***REMOVED***=>***REMOVED***isArray(value)***REMOVED***?***REMOVED***value.map(normalizeVNode$1)***REMOVED***:***REMOVED***[normalizeVNode$1(value)];
const***REMOVED***normalizeSlot***REMOVED***=***REMOVED***(key,***REMOVED***rawSlot,***REMOVED***ctx)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(rawSlot._n)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***rawSlot;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***withCtx((...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentInstance***REMOVED***&&***REMOVED***!(ctx***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***currentRenderingInstance)***REMOVED***&&***REMOVED***!(ctx***REMOVED***&&***REMOVED***ctx.root***REMOVED***!==***REMOVED***currentInstance.root))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Slot***REMOVED***"${key}"***REMOVED***invoked***REMOVED***outside***REMOVED***of***REMOVED***the***REMOVED***render***REMOVED***function:***REMOVED***this***REMOVED***will***REMOVED***not***REMOVED***track***REMOVED***dependencies***REMOVED***used***REMOVED***in***REMOVED***the***REMOVED***slot.***REMOVED***Invoke***REMOVED***the***REMOVED***slot***REMOVED***function***REMOVED***inside***REMOVED***the***REMOVED***render***REMOVED***function***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***normalizeSlotValue(rawSlot(...args));
***REMOVED******REMOVED***},***REMOVED***ctx);
***REMOVED******REMOVED***normalized._c***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***return***REMOVED***normalized;
};
const***REMOVED***normalizeObjectSlots***REMOVED***=***REMOVED***(rawSlots,***REMOVED***slots,***REMOVED***instance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ctx***REMOVED***=***REMOVED***rawSlots._ctx;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***rawSlots)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isInternalKey(key))***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***rawSlots[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slots[key]***REMOVED***=***REMOVED***normalizeSlot(key,***REMOVED***value,***REMOVED***ctx);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Non-function***REMOVED***value***REMOVED***encountered***REMOVED***for***REMOVED***slot***REMOVED***"${key}".***REMOVED***Prefer***REMOVED***function***REMOVED***slots***REMOVED***for***REMOVED***better***REMOVED***performance.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***normalizeSlotValue(value);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slots[key]***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***normalized;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
const***REMOVED***normalizeVNodeSlots***REMOVED***=***REMOVED***(instance,***REMOVED***children)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isKeepAlive(instance.vnode)***REMOVED***&&***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Non-function***REMOVED***value***REMOVED***encountered***REMOVED***for***REMOVED***default***REMOVED***slot.***REMOVED***Prefer***REMOVED***function***REMOVED***slots***REMOVED***for***REMOVED***better***REMOVED***performance.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***normalized***REMOVED***=***REMOVED***normalizeSlotValue(children);
***REMOVED******REMOVED***instance.slots.default***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***normalized;
};
const***REMOVED***assignSlots***REMOVED***=***REMOVED***(slots,***REMOVED***children,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optimized***REMOVED***||***REMOVED***!isInternalKey(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slots[key]***REMOVED***=***REMOVED***children[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};
const***REMOVED***initSlots***REMOVED***=***REMOVED***(instance,***REMOVED***children,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***slots***REMOVED***=***REMOVED***instance.slots***REMOVED***=***REMOVED***createInternalObject();
***REMOVED******REMOVED***if***REMOVED***(instance.vnode.shapeFlag***REMOVED***&***REMOVED***32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***children._;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignSlots(slots,***REMOVED***children,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(optimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***def(slots,***REMOVED***"_",***REMOVED***type,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeObjectSlots(children,***REMOVED***slots);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***normalizeVNodeSlots(instance,***REMOVED***children);
***REMOVED******REMOVED***}
};
const***REMOVED***updateSlots***REMOVED***=***REMOVED***(instance,***REMOVED***children,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***vnode,***REMOVED***slots***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***let***REMOVED***needDeletionCheck***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***let***REMOVED***deletionComparisonTarget***REMOVED***=***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***children._;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isHmrUpdating)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignSlots(slots,***REMOVED***children,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***trigger(instance,***REMOVED***"set",***REMOVED***"$slots");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(optimized***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needDeletionCheck***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assignSlots(slots,***REMOVED***children,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needDeletionCheck***REMOVED***=***REMOVED***!children.$stable;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeObjectSlots(children,***REMOVED***slots);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***deletionComparisonTarget***REMOVED***=***REMOVED***children;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***normalizeVNodeSlots(instance,***REMOVED***children);
***REMOVED******REMOVED******REMOVED******REMOVED***deletionComparisonTarget***REMOVED***=***REMOVED***{***REMOVED***default:***REMOVED***1***REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(needDeletionCheck)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***slots)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isInternalKey(key)***REMOVED***&&***REMOVED***deletionComparisonTarget[key]***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***slots[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};

let***REMOVED***supported;
let***REMOVED***perf;
function***REMOVED***startMeasure(instance,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(instance.appContext.config.performance***REMOVED***&&***REMOVED***isSupported())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***perf.mark(`vue-${type}-${instance.uid}`);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtoolsPerfStart(instance,***REMOVED***type,***REMOVED***isSupported()***REMOVED***?***REMOVED***perf.now()***REMOVED***:***REMOVED***Date.now());
***REMOVED******REMOVED***}
}
function***REMOVED***endMeasure(instance,***REMOVED***type)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(instance.appContext.config.performance***REMOVED***&&***REMOVED***isSupported())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***startTag***REMOVED***=***REMOVED***`vue-${type}-${instance.uid}`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***endTag***REMOVED***=***REMOVED***startTag***REMOVED***+***REMOVED***`:end`;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***measureName***REMOVED***=***REMOVED***`<${formatComponentName(instance,***REMOVED***instance.type)}>***REMOVED***${type}`;
***REMOVED******REMOVED******REMOVED******REMOVED***perf.mark(endTag);
***REMOVED******REMOVED******REMOVED******REMOVED***perf.measure(measureName,***REMOVED***startTag,***REMOVED***endTag);
***REMOVED******REMOVED******REMOVED******REMOVED***perf.clearMeasures(measureName);
***REMOVED******REMOVED******REMOVED******REMOVED***perf.clearMarks(startTag);
***REMOVED******REMOVED******REMOVED******REMOVED***perf.clearMarks(endTag);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtoolsPerfEnd(instance,***REMOVED***type,***REMOVED***isSupported()***REMOVED***?***REMOVED***perf.now()***REMOVED***:***REMOVED***Date.now());
***REMOVED******REMOVED***}
}
function***REMOVED***isSupported()***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(supported***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***supported;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***window.performance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***supported***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***perf***REMOVED***=***REMOVED***window.performance;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***supported***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***supported;
}

const***REMOVED***queuePostRenderEffect***REMOVED***=***REMOVED***queueEffectWithSuspense***REMOVED***;
function***REMOVED***createRenderer(options)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***baseCreateRenderer(options);
}
function***REMOVED***baseCreateRenderer(options,***REMOVED***createHydrationFns)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***getGlobalThis();
***REMOVED******REMOVED***target.__VUE__***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__,***REMOVED***target);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***insert:***REMOVED***hostInsert,
***REMOVED******REMOVED******REMOVED******REMOVED***remove:***REMOVED***hostRemove,
***REMOVED******REMOVED******REMOVED******REMOVED***patchProp:***REMOVED***hostPatchProp,
***REMOVED******REMOVED******REMOVED******REMOVED***createElement:***REMOVED***hostCreateElement,
***REMOVED******REMOVED******REMOVED******REMOVED***createText:***REMOVED***hostCreateText,
***REMOVED******REMOVED******REMOVED******REMOVED***createComment:***REMOVED***hostCreateComment,
***REMOVED******REMOVED******REMOVED******REMOVED***setText:***REMOVED***hostSetText,
***REMOVED******REMOVED******REMOVED******REMOVED***setElementText:***REMOVED***hostSetElementText,
***REMOVED******REMOVED******REMOVED******REMOVED***parentNode:***REMOVED***hostParentNode,
***REMOVED******REMOVED******REMOVED******REMOVED***nextSibling:***REMOVED***hostNextSibling,
***REMOVED******REMOVED******REMOVED******REMOVED***setScopeId:***REMOVED***hostSetScopeId***REMOVED***=***REMOVED***NOOP,
***REMOVED******REMOVED******REMOVED******REMOVED***insertStaticContent:***REMOVED***hostInsertStaticContent
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***const***REMOVED***patch***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor***REMOVED***=***REMOVED***null,***REMOVED***parentComponent***REMOVED***=***REMOVED***null,***REMOVED***parentSuspense***REMOVED***=***REMOVED***null,***REMOVED***namespace***REMOVED***=***REMOVED***void***REMOVED***0,***REMOVED***slotScopeIds***REMOVED***=***REMOVED***null,***REMOVED***optimized***REMOVED***=***REMOVED***isHmrUpdating***REMOVED***?***REMOVED***false***REMOVED***:***REMOVED***!!n2.dynamicChildren)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***===***REMOVED***n2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***&&***REMOVED***!isSameVNodeType(n1,***REMOVED***n2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor***REMOVED***=***REMOVED***getNextHostNode(n1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(n1,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n2.patchFlag***REMOVED***===***REMOVED***-2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.dynamicChildren***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***ref,***REMOVED***shapeFlag***REMOVED***}***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Text:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processText(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Comment:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processCommentNode(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Static:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountStaticNode(n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchStaticNode(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Fragment:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processFragment(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processElement(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processComponent(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type.process(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***internals
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type.process(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***internals
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1("Invalid***REMOVED***VNode***REMOVED***type:",***REMOVED***type,***REMOVED***`(${typeof***REMOVED***type})`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ref***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***parentComponent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setRef(ref,***REMOVED***n1***REMOVED***&&***REMOVED***n1.ref,***REMOVED***parentSuspense,***REMOVED***n2***REMOVED***||***REMOVED***n1,***REMOVED***!n2);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(ref***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***n1***REMOVED***&&***REMOVED***n1.ref***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setRef(n1.ref,***REMOVED***null,***REMOVED***parentSuspense,***REMOVED***n1,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***processText***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el***REMOVED***=***REMOVED***hostCreateText(n2.children),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***n2.el***REMOVED***=***REMOVED***n1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n2.children***REMOVED***!==***REMOVED***n1.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetText(el,***REMOVED***n2.children);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***processCommentNode***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el***REMOVED***=***REMOVED***hostCreateComment(n2.children***REMOVED***||***REMOVED***""),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el***REMOVED***=***REMOVED***n1.el;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***mountStaticNode***REMOVED***=***REMOVED***(n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***namespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[n2.el,***REMOVED***n2.anchor]***REMOVED***=***REMOVED***hostInsertStaticContent(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.anchor
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchStaticNode***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***namespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n2.children***REMOVED***!==***REMOVED***n1.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***anchor***REMOVED***=***REMOVED***hostNextSibling(n1.anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeStaticNode(n1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[n2.el,***REMOVED***n2.anchor]***REMOVED***=***REMOVED***hostInsertStaticContent(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el***REMOVED***=***REMOVED***n1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.anchor***REMOVED***=***REMOVED***n1.anchor;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***moveStaticNode***REMOVED***=***REMOVED***({***REMOVED***el,***REMOVED***anchor***REMOVED***},***REMOVED***container,***REMOVED***nextSibling)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(el***REMOVED***&&***REMOVED***el***REMOVED***!==***REMOVED***anchor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***hostNextSibling(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***nextSibling);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(anchor,***REMOVED***container,***REMOVED***nextSibling);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***removeStaticNode***REMOVED***=***REMOVED***({***REMOVED***el,***REMOVED***anchor***REMOVED***})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(el***REMOVED***&&***REMOVED***el***REMOVED***!==***REMOVED***anchor)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***hostNextSibling(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(anchor);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***processElement***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n2.type***REMOVED***===***REMOVED***"svg")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***"svg";
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(n2.type***REMOVED***===***REMOVED***"math")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***=***REMOVED***"mathml";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountElement(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchElement(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***mountElement***REMOVED***=***REMOVED***(vnode,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***el;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vnodeHook;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***props,***REMOVED***shapeFlag,***REMOVED***transition,***REMOVED***dirs***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***el***REMOVED***=***REMOVED***vnode.el***REMOVED***=***REMOVED***hostCreateElement(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props***REMOVED***&&***REMOVED***props.is,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetElementText(el,***REMOVED***vnode.children);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolveChildrenNamespace(vnode,***REMOVED***namespace),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeDirectiveHook(vnode,***REMOVED***null,***REMOVED***parentComponent,***REMOVED***"created");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setScopeId(el,***REMOVED***vnode,***REMOVED***vnode.scopeId,***REMOVED***slotScopeIds,***REMOVED***parentComponent);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"value"***REMOVED***&&***REMOVED***!isReservedProp(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***key,***REMOVED***null,***REMOVED***props[key],***REMOVED***namespace,***REMOVED***parentComponent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***"value",***REMOVED***null,***REMOVED***props.value,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnodeHook***REMOVED***=***REMOVED***props.onVnodeBeforeMount)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***def(el,***REMOVED***"__vnode",***REMOVED***vnode,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***def(el,***REMOVED***"__vueParentComponent",***REMOVED***parentComponent,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeDirectiveHook(vnode,***REMOVED***null,***REMOVED***parentComponent,***REMOVED***"beforeMount");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needCallTransitionHooks***REMOVED***=***REMOVED***needTransition(parentSuspense,***REMOVED***transition);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needCallTransitionHooks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transition.beforeEnter(el);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((vnodeHook***REMOVED***=***REMOVED***props***REMOVED***&&***REMOVED***props.onVnodeMounted)***REMOVED***||***REMOVED***needCallTransitionHooks***REMOVED***||***REMOVED***dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnodeHook***REMOVED***&&***REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needCallTransitionHooks***REMOVED***&&***REMOVED***transition.enter(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirs***REMOVED***&&***REMOVED***invokeDirectiveHook(vnode,***REMOVED***null,***REMOVED***parentComponent,***REMOVED***"mounted");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***setScopeId***REMOVED***=***REMOVED***(el,***REMOVED***vnode,***REMOVED***scopeId,***REMOVED***slotScopeIds,***REMOVED***parentComponent)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetScopeId(el,***REMOVED***scopeId);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(slotScopeIds)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***slotScopeIds.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetScopeId(el,***REMOVED***slotScopeIds[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parentComponent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***subTree***REMOVED***=***REMOVED***parentComponent.subTree;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subTree.patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***subTree.patchFlag***REMOVED***&***REMOVED***2048)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subTree***REMOVED***=***REMOVED***filterSingleRoot(subTree.children)***REMOVED***||***REMOVED***subTree;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode***REMOVED***===***REMOVED***subTree***REMOVED***||***REMOVED***isSuspense(subTree.type)***REMOVED***&&***REMOVED***(subTree.ssContent***REMOVED***===***REMOVED***vnode***REMOVED***||***REMOVED***subTree.ssFallback***REMOVED***===***REMOVED***vnode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parentVNode***REMOVED***=***REMOVED***parentComponent.vnode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setScopeId(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentVNode.scopeId,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentVNode.slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent.parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***mountChildren***REMOVED***=***REMOVED***(children,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized,***REMOVED***start***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***children[i]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(children[i])***REMOVED***:***REMOVED***normalizeVNode$1(children[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchElement***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***n2.el***REMOVED***=***REMOVED***n1.el;
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.__vnode***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***patchFlag,***REMOVED***dynamicChildren,***REMOVED***dirs***REMOVED***}***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag***REMOVED***|=***REMOVED***n1.patchFlag***REMOVED***&***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldProps***REMOVED***=***REMOVED***n1.props***REMOVED***||***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newProps***REMOVED***=***REMOVED***n2.props***REMOVED***||***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vnodeHook;
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent***REMOVED***&&***REMOVED***toggleRecurse(parentComponent,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnodeHook***REMOVED***=***REMOVED***newProps.onVnodeBeforeUpdate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***n2,***REMOVED***n1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeDirectiveHook(n2,***REMOVED***n1,***REMOVED***parentComponent,***REMOVED***"beforeUpdate");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent***REMOVED***&&***REMOVED***toggleRecurse(parentComponent,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isHmrUpdating)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchFlag***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldProps.innerHTML***REMOVED***&&***REMOVED***newProps.innerHTML***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***oldProps.textContent***REMOVED***&&***REMOVED***newProps.textContent***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetElementText(el,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicChildren)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchBlockChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1.dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolveChildrenNamespace(n2,***REMOVED***namespace),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseStaticChildren(n1,***REMOVED***n2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!optimized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resolveChildrenNamespace(n2,***REMOVED***namespace),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchProps(el,***REMOVED***oldProps,***REMOVED***newProps,***REMOVED***parentComponent,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldProps.class***REMOVED***!==***REMOVED***newProps.class)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***"class",***REMOVED***null,***REMOVED***newProps.class,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***"style",***REMOVED***oldProps.style,***REMOVED***newProps.style,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***propsToUpdate***REMOVED***=***REMOVED***n2.dynamicProps;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***propsToUpdate.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***propsToUpdate[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***oldProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***newProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***!==***REMOVED***prev***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***key,***REMOVED***prev,***REMOVED***next,***REMOVED***namespace,***REMOVED***parentComponent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1.children***REMOVED***!==***REMOVED***n2.children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetElementText(el,***REMOVED***n2.children);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!optimized***REMOVED***&&***REMOVED***dynamicChildren***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchProps(el,***REMOVED***oldProps,***REMOVED***newProps,***REMOVED***parentComponent,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((vnodeHook***REMOVED***=***REMOVED***newProps.onVnodeUpdated)***REMOVED***||***REMOVED***dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnodeHook***REMOVED***&&***REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***n2,***REMOVED***n1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirs***REMOVED***&&***REMOVED***invokeDirectiveHook(n2,***REMOVED***n1,***REMOVED***parentComponent,***REMOVED***"updated");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchBlockChildren***REMOVED***=***REMOVED***(oldChildren,***REMOVED***newChildren,***REMOVED***fallbackContainer,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***newChildren.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldVNode***REMOVED***=***REMOVED***oldChildren[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newVNode***REMOVED***=***REMOVED***newChildren[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***container***REMOVED***=***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***oldVNode***REMOVED***may***REMOVED***be***REMOVED***an***REMOVED***errored***REMOVED***async***REMOVED***setup()***REMOVED***component***REMOVED***inside***REMOVED***Suspense
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***which***REMOVED***will***REMOVED***not***REMOVED***have***REMOVED***a***REMOVED***mounted***REMOVED***element
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldVNode.el***REMOVED***&&***REMOVED***//***REMOVED***-***REMOVED***In***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***Fragment,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***provide***REMOVED***the***REMOVED***actual***REMOVED***parent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***the***REMOVED***Fragment***REMOVED***itself***REMOVED***so***REMOVED***it***REMOVED***can***REMOVED***move***REMOVED***its***REMOVED***children.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(oldVNode.type***REMOVED***===***REMOVED***Fragment***REMOVED***||***REMOVED***//***REMOVED***-***REMOVED***In***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***different***REMOVED***nodes,***REMOVED***there***REMOVED***is***REMOVED***going***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***replacement
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***which***REMOVED***also***REMOVED***requires***REMOVED***the***REMOVED***correct***REMOVED***parent***REMOVED***container
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isSameVNodeType(oldVNode,***REMOVED***newVNode)***REMOVED***||***REMOVED***//***REMOVED***-***REMOVED***In***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***a***REMOVED***component,***REMOVED***it***REMOVED***could***REMOVED***contain***REMOVED***anything.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldVNode.shapeFlag***REMOVED***&***REMOVED***(6***REMOVED***|***REMOVED***64***REMOVED***|***REMOVED***128))***REMOVED***?***REMOVED***hostParentNode(oldVNode.el)***REMOVED***:***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***other***REMOVED***cases,***REMOVED***the***REMOVED***parent***REMOVED***container***REMOVED***is***REMOVED***not***REMOVED***actually***REMOVED***used***REMOVED***so***REMOVED***we
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***just***REMOVED***pass***REMOVED***the***REMOVED***block***REMOVED***element***REMOVED***here***REMOVED***to***REMOVED***avoid***REMOVED***a***REMOVED***DOM***REMOVED***parentNode***REMOVED***call.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackContainer
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchProps***REMOVED***=***REMOVED***(el,***REMOVED***oldProps,***REMOVED***newProps,***REMOVED***parentComponent,***REMOVED***namespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldProps***REMOVED***!==***REMOVED***newProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldProps***REMOVED***!==***REMOVED***EMPTY_OBJ)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***oldProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isReservedProp(key)***REMOVED***&&***REMOVED***!(key***REMOVED***in***REMOVED***newProps))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldProps[key],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***newProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isReservedProp(key))***REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***next***REMOVED***=***REMOVED***newProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***oldProps[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next***REMOVED***!==***REMOVED***prev***REMOVED***&&***REMOVED***key***REMOVED***!==***REMOVED***"value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***key,***REMOVED***prev,***REMOVED***next,***REMOVED***namespace,***REMOVED***parentComponent);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***("value"***REMOVED***in***REMOVED***newProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostPatchProp(el,***REMOVED***"value",***REMOVED***oldProps.value,***REMOVED***newProps.value,***REMOVED***namespace);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***processFragment***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fragmentStartAnchor***REMOVED***=***REMOVED***n2.el***REMOVED***=***REMOVED***n1***REMOVED***?***REMOVED***n1.el***REMOVED***:***REMOVED***hostCreateText("");
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***fragmentEndAnchor***REMOVED***=***REMOVED***n2.anchor***REMOVED***=***REMOVED***n1***REMOVED***?***REMOVED***n1.anchor***REMOVED***:***REMOVED***hostCreateText("");
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***patchFlag,***REMOVED***dynamicChildren,***REMOVED***slotScopeIds:***REMOVED***fragmentSlotScopeIds***REMOVED***}***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#5523***REMOVED***dev***REMOVED***root***REMOVED***fragment***REMOVED***may***REMOVED***inherit***REMOVED***directives
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isHmrUpdating***REMOVED***||***REMOVED***patchFlag***REMOVED***&***REMOVED***2048
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchFlag***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fragmentSlotScopeIds)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds***REMOVED***=***REMOVED***slotScopeIds***REMOVED***?***REMOVED***slotScopeIds.concat(fragmentSlotScopeIds)***REMOVED***:***REMOVED***fragmentSlotScopeIds;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(fragmentStartAnchor,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(fragmentEndAnchor,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#10007
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***such***REMOVED***fragment***REMOVED***like***REMOVED***`<></>`***REMOVED***will***REMOVED***be***REMOVED***compiled***REMOVED***into
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***fragment***REMOVED***which***REMOVED***doesn't***REMOVED***have***REMOVED***a***REMOVED***children.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***In***REMOVED***this***REMOVED***case***REMOVED***fallback***REMOVED***to***REMOVED***an***REMOVED***empty***REMOVED***array
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.children***REMOVED***||***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fragmentEndAnchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***patchFlag***REMOVED***&***REMOVED***64***REMOVED***&&***REMOVED***dynamicChildren***REMOVED***&&***REMOVED***//***REMOVED***#2715***REMOVED***the***REMOVED***previous***REMOVED***fragment***REMOVED***could've***REMOVED***been***REMOVED***a***REMOVED***BAILed***REMOVED***one***REMOVED***as***REMOVED***a***REMOVED***result
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***of***REMOVED***renderSlot()***REMOVED***with***REMOVED***no***REMOVED***valid***REMOVED***children
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1.dynamicChildren)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchBlockChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1.dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseStaticChildren(n1,***REMOVED***n2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fragmentEndAnchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***processComponent***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***n2.slotScopeIds***REMOVED***=***REMOVED***slotScopeIds;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n1***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(n2.shapeFlag***REMOVED***&***REMOVED***512)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent.ctx.activate(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountComponent(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateComponent(n1,***REMOVED***n2,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***mountComponent***REMOVED***=***REMOVED***(initialVNode,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***(initialVNode.component***REMOVED***=***REMOVED***createComponentInstance$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense
***REMOVED******REMOVED******REMOVED******REMOVED***));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.type.__hmrId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***registerHMR(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWarningContext$1(initialVNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`mount`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isKeepAlive(initialVNode))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.ctx.renderer***REMOVED***=***REMOVED***internals;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`init`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupComponent$1(instance,***REMOVED***false,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`init`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isHmrUpdating)***REMOVED***initialVNode.el***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.asyncDep)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense***REMOVED***&&***REMOVED***parentSuspense.registerDep(instance,***REMOVED***setupRenderEffect,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!initialVNode.el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***placeholder***REMOVED***=***REMOVED***instance.subTree***REMOVED***=***REMOVED***createVNode(Comment);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***processCommentNode(null,***REMOVED***placeholder,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialVNode.placeholder***REMOVED***=***REMOVED***placeholder.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupRenderEffect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialVNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popWarningContext$1();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`mount`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***updateComponent***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***n2.component***REMOVED***=***REMOVED***n1.component;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldUpdateComponent(n1,***REMOVED***n2,***REMOVED***optimized))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.asyncDep***REMOVED***&&***REMOVED***!instance.asyncResolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWarningContext$1(n2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateComponentPreRender(instance,***REMOVED***n2,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popWarningContext$1();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.next***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.update();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.el***REMOVED***=***REMOVED***n1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.vnode***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***setupRenderEffect***REMOVED***=***REMOVED***(instance,***REMOVED***initialVNode,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***componentUpdateFn***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!instance.isMounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vnodeHook;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***el,***REMOVED***props***REMOVED***}***REMOVED***=***REMOVED***initialVNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***bm,***REMOVED***m,***REMOVED***parent,***REMOVED***root,***REMOVED***type***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAsyncWrapperVNode***REMOVED***=***REMOVED***isAsyncWrapper(initialVNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleRecurse(instance,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bm)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeArrayFns(bm);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isAsyncWrapperVNode***REMOVED***&&***REMOVED***(vnodeHook***REMOVED***=***REMOVED***props***REMOVED***&&***REMOVED***props.onVnodeBeforeMount))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parent,***REMOVED***initialVNode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleRecurse(instance,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(root.ce***REMOVED***&&***REMOVED***//***REMOVED***@ts-expect-error***REMOVED***_def***REMOVED***is***REMOVED***private
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.ce._def.shadowRoot***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.ce._injectChildStyle(type);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`render`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***subTree***REMOVED***=***REMOVED***instance.subTree***REMOVED***=***REMOVED***renderComponentRoot$1(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`render`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`patch`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subTree,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`patch`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialVNode.el***REMOVED***=***REMOVED***subTree.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(m)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(m,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isAsyncWrapperVNode***REMOVED***&&***REMOVED***(vnodeHook***REMOVED***=***REMOVED***props***REMOVED***&&***REMOVED***props.onVnodeMounted))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scopedInitialVNode***REMOVED***=***REMOVED***initialVNode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***()***REMOVED***=>***REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parent,***REMOVED***scopedInitialVNode),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(initialVNode.shapeFlag***REMOVED***&***REMOVED***256***REMOVED***||***REMOVED***parent***REMOVED***&&***REMOVED***isAsyncWrapper(parent.vnode)***REMOVED***&&***REMOVED***parent.vnode.shapeFlag***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.a***REMOVED***&&***REMOVED***queuePostRenderEffect(instance.a,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.isMounted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsComponentAdded(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***initialVNode***REMOVED***=***REMOVED***container***REMOVED***=***REMOVED***anchor***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***next,***REMOVED***bu,***REMOVED***u,***REMOVED***parent,***REMOVED***vnode***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nonHydratedAsyncRoot***REMOVED***=***REMOVED***locateNonHydratedAsyncRoot(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nonHydratedAsyncRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.el***REMOVED***=***REMOVED***vnode.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateComponentPreRender(instance,***REMOVED***next,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nonHydratedAsyncRoot.asyncDep.then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!instance.isUnmounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***componentUpdateFn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***originNext***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vnodeHook;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pushWarningContext$1(next***REMOVED***||***REMOVED***instance.vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleRecurse(instance,***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.el***REMOVED***=***REMOVED***vnode.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateComponentPreRender(instance,***REMOVED***next,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bu)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeArrayFns(bu);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnodeHook***REMOVED***=***REMOVED***next.props***REMOVED***&&***REMOVED***next.props.onVnodeBeforeUpdate)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parent,***REMOVED***next,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***toggleRecurse(instance,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`render`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextTree***REMOVED***=***REMOVED***renderComponentRoot$1(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`render`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevTree***REMOVED***=***REMOVED***instance.subTree;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.subTree***REMOVED***=***REMOVED***nextTree;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***startMeasure(instance,***REMOVED***`patch`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prevTree,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextTree,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***parent***REMOVED***may***REMOVED***have***REMOVED***changed***REMOVED***if***REMOVED***it's***REMOVED***in***REMOVED***a***REMOVED***teleport
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostParentNode(prevTree.el),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***anchor***REMOVED***may***REMOVED***have***REMOVED***changed***REMOVED***if***REMOVED***it's***REMOVED***in***REMOVED***a***REMOVED***fragment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***getNextHostNode(prevTree),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***endMeasure(instance,***REMOVED***`patch`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next.el***REMOVED***=***REMOVED***nextTree.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(originNext***REMOVED***===***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***updateHOCHostEl(instance,***REMOVED***nextTree.el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(u)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(u,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnodeHook***REMOVED***=***REMOVED***next.props***REMOVED***&&***REMOVED***next.props.onVnodeUpdated)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***()***REMOVED***=>***REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parent,***REMOVED***next,***REMOVED***vnode),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsComponentUpdated(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***popWarningContext$1();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***instance.scope.on();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***effect***REMOVED***=***REMOVED***instance.effect***REMOVED***=***REMOVED***new***REMOVED***ReactiveEffect(componentUpdateFn);
***REMOVED******REMOVED******REMOVED******REMOVED***instance.scope.off();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***update***REMOVED***=***REMOVED***instance.update***REMOVED***=***REMOVED***effect.run.bind(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***job***REMOVED***=***REMOVED***instance.job***REMOVED***=***REMOVED***effect.runIfDirty.bind(effect);
***REMOVED******REMOVED******REMOVED******REMOVED***job.i***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***job.id***REMOVED***=***REMOVED***instance.uid;
***REMOVED******REMOVED******REMOVED******REMOVED***effect.scheduler***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***queueJob(job);
***REMOVED******REMOVED******REMOVED******REMOVED***toggleRecurse(instance,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrack***REMOVED***=***REMOVED***instance.rtc***REMOVED***?***REMOVED***(e)***REMOVED***=>***REMOVED***invokeArrayFns(instance.rtc,***REMOVED***e)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***effect.onTrigger***REMOVED***=***REMOVED***instance.rtg***REMOVED***?***REMOVED***(e)***REMOVED***=>***REMOVED***invokeArrayFns(instance.rtg,***REMOVED***e)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***update();
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***updateComponentPreRender***REMOVED***=***REMOVED***(instance,***REMOVED***nextVNode,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***nextVNode.component***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevProps***REMOVED***=***REMOVED***instance.vnode.props;
***REMOVED******REMOVED******REMOVED******REMOVED***instance.vnode***REMOVED***=***REMOVED***nextVNode;
***REMOVED******REMOVED******REMOVED******REMOVED***instance.next***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***updateProps(instance,***REMOVED***nextVNode.props,***REMOVED***prevProps,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED***updateSlots(instance,***REMOVED***nextVNode.children,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***flushPreFlushCbs(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchChildren***REMOVED***=***REMOVED***(n1,***REMOVED***n2,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c1***REMOVED***=***REMOVED***n1***REMOVED***&&***REMOVED***n1.children;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevShapeFlag***REMOVED***=***REMOVED***n1***REMOVED***?***REMOVED***n1.shapeFlag***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c2***REMOVED***=***REMOVED***n2.children;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***patchFlag,***REMOVED***shapeFlag***REMOVED***}***REMOVED***=***REMOVED***n2;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchKeyedChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchUnkeyedChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevShapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountChildren(c1,***REMOVED***parentComponent,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c2***REMOVED***!==***REMOVED***c1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetElementText(container,***REMOVED***c2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevShapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchKeyedChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountChildren(c1,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevShapeFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostSetElementText(container,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchUnkeyedChildren***REMOVED***=***REMOVED***(c1,***REMOVED***c2,***REMOVED***container,***REMOVED***anchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***c1***REMOVED***=***REMOVED***c1***REMOVED***||***REMOVED***EMPTY_ARR;
***REMOVED******REMOVED******REMOVED******REMOVED***c2***REMOVED***=***REMOVED***c2***REMOVED***||***REMOVED***EMPTY_ARR;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldLength***REMOVED***=***REMOVED***c1.length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newLength***REMOVED***=***REMOVED***c2.length;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***commonLength***REMOVED***=***REMOVED***Math.min(oldLength,***REMOVED***newLength);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***commonLength;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextChild***REMOVED***=***REMOVED***c2[i]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(c2[i])***REMOVED***:***REMOVED***normalizeVNode$1(c2[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c1[i],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextChild,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldLength***REMOVED***>***REMOVED***newLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commonLength
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***commonLength
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***patchKeyedChildren***REMOVED***=***REMOVED***(c1,***REMOVED***c2,***REMOVED***container,***REMOVED***parentAnchor,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***namespace,***REMOVED***slotScopeIds,***REMOVED***optimized)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***l2***REMOVED***=***REMOVED***c2.length;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e1***REMOVED***=***REMOVED***c1.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***e2***REMOVED***=***REMOVED***l2***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<=***REMOVED***e1***REMOVED***&&***REMOVED***i***REMOVED***<=***REMOVED***e2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n1***REMOVED***=***REMOVED***c1[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n2***REMOVED***=***REMOVED***c2[i]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(c2[i])***REMOVED***:***REMOVED***normalizeVNode$1(c2[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSameVNodeType(n1,***REMOVED***n2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<=***REMOVED***e1***REMOVED***&&***REMOVED***i***REMOVED***<=***REMOVED***e2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n1***REMOVED***=***REMOVED***c1[e1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***n2***REMOVED***=***REMOVED***c2[e2]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(c2[e2])***REMOVED***:***REMOVED***normalizeVNode$1(c2[e2]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSameVNodeType(n1,***REMOVED***n2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e1--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e2--;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***e1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***<=***REMOVED***e2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextPos***REMOVED***=***REMOVED***e2***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***anchor***REMOVED***=***REMOVED***nextPos***REMOVED***<***REMOVED***l2***REMOVED***?***REMOVED***c2[nextPos].el***REMOVED***:***REMOVED***parentAnchor;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<=***REMOVED***e2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2[i]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(c2[i])***REMOVED***:***REMOVED***normalizeVNode$1(c2[i]),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(i***REMOVED***>***REMOVED***e2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(i***REMOVED***<=***REMOVED***e1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(c1[i],***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***i++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s1***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***s2***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keyToNewIndexMap***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***Map();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***s2;***REMOVED***i***REMOVED***<=***REMOVED***e2;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextChild***REMOVED***=***REMOVED***c2[i]***REMOVED***=***REMOVED***optimized***REMOVED***?***REMOVED***cloneIfMounted(c2[i])***REMOVED***:***REMOVED***normalizeVNode$1(c2[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextChild.key***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keyToNewIndexMap.has(nextChild.key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Duplicate***REMOVED***keys***REMOVED***found***REMOVED***during***REMOVED***update:`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***JSON.stringify(nextChild.key),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Make***REMOVED***sure***REMOVED***keys***REMOVED***are***REMOVED***unique.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***keyToNewIndexMap.set(nextChild.key,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***j;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***patched***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toBePatched***REMOVED***=***REMOVED***e2***REMOVED***-***REMOVED***s2***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***moved***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***maxNewIndexSoFar***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newIndexToOldIndexMap***REMOVED***=***REMOVED***new***REMOVED***Array(toBePatched);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***toBePatched;***REMOVED***i++)***REMOVED***newIndexToOldIndexMap[i]***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***s1;***REMOVED***i***REMOVED***<=***REMOVED***e1;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prevChild***REMOVED***=***REMOVED***c1[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patched***REMOVED***>=***REMOVED***toBePatched)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(prevChild,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***newIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevChild.key***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newIndex***REMOVED***=***REMOVED***keyToNewIndexMap.get(prevChild.key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(j***REMOVED***=***REMOVED***s2;***REMOVED***j***REMOVED***<=***REMOVED***e2;***REMOVED***j++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newIndexToOldIndexMap[j***REMOVED***-***REMOVED***s2]***REMOVED***===***REMOVED***0***REMOVED***&&***REMOVED***isSameVNodeType(prevChild,***REMOVED***c2[j]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newIndex***REMOVED***=***REMOVED***j;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newIndex***REMOVED***===***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(prevChild,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***newIndexToOldIndexMap[newIndex***REMOVED***-***REMOVED***s2]***REMOVED***=***REMOVED***i***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newIndex***REMOVED***>=***REMOVED***maxNewIndexSoFar)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxNewIndexSoFar***REMOVED***=***REMOVED***newIndex;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moved***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prevChild,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2[newIndex],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patched++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***increasingNewIndexSequence***REMOVED***=***REMOVED***moved***REMOVED***?***REMOVED***getSequence(newIndexToOldIndexMap)***REMOVED***:***REMOVED***EMPTY_ARR;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***j***REMOVED***=***REMOVED***increasingNewIndexSequence.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***toBePatched***REMOVED***-***REMOVED***1;***REMOVED***i***REMOVED***>=***REMOVED***0;***REMOVED***i--)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextIndex***REMOVED***=***REMOVED***s2***REMOVED***+***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***nextChild***REMOVED***=***REMOVED***c2[nextIndex];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***anchorVNode***REMOVED***=***REMOVED***c2[nextIndex***REMOVED***+***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***anchor***REMOVED***=***REMOVED***nextIndex***REMOVED***+***REMOVED***1***REMOVED***<***REMOVED***l2***REMOVED***?***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#13559,***REMOVED***fallback***REMOVED***to***REMOVED***el***REMOVED***placeholder***REMOVED***for***REMOVED***unresolved***REMOVED***async***REMOVED***component
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchorVNode.el***REMOVED***||***REMOVED***anchorVNode.placeholder
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***parentAnchor;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(newIndexToOldIndexMap[i]***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextChild,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(moved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(j***REMOVED***<***REMOVED***0***REMOVED***||***REMOVED***i***REMOVED***!==***REMOVED***increasingNewIndexSequence[j])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***move(nextChild,***REMOVED***container,***REMOVED***anchor,***REMOVED***2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***j--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***move***REMOVED***=***REMOVED***(vnode,***REMOVED***container,***REMOVED***anchor,***REMOVED***moveType,***REMOVED***parentSuspense***REMOVED***=***REMOVED***null)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***el,***REMOVED***type,***REMOVED***transition,***REMOVED***children,***REMOVED***shapeFlag***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***move(vnode.component.subTree,***REMOVED***container,***REMOVED***anchor,***REMOVED***moveType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.suspense.move(container,***REMOVED***anchor,***REMOVED***moveType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type.move(vnode,***REMOVED***container,***REMOVED***anchor,***REMOVED***internals);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***Fragment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***move(children[i],***REMOVED***container,***REMOVED***anchor,***REMOVED***moveType);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(vnode.anchor,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***Static)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***moveStaticNode(vnode,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***needTransition2***REMOVED***=***REMOVED***moveType***REMOVED***!==***REMOVED***2***REMOVED***&&***REMOVED***shapeFlag***REMOVED***&***REMOVED***1***REMOVED***&&***REMOVED***transition;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(needTransition2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(moveType***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transition.beforeEnter(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(()***REMOVED***=>***REMOVED***transition.enter(el),***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***leave,***REMOVED***delayLeave,***REMOVED***afterLeave***REMOVED***}***REMOVED***=***REMOVED***transition;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***remove2***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.ctx.isUnmounted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***performLeave***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(el._isLeaving)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el[leaveCbKey](
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***cancelled***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***leave(el,***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove2();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***afterLeave***REMOVED***&&***REMOVED***afterLeave();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(delayLeave)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delayLeave(el,***REMOVED***remove2,***REMOVED***performLeave);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***performLeave();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostInsert(el,***REMOVED***container,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***unmount***REMOVED***=***REMOVED***(vnode,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***doRemove***REMOVED***=***REMOVED***false,***REMOVED***optimized***REMOVED***=***REMOVED***false)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ref,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shapeFlag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchFlag,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dirs,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cacheIndex
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***===***REMOVED***-2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***optimized***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ref***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setRef(ref,***REMOVED***null,***REMOVED***parentSuspense,***REMOVED***vnode,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cacheIndex***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent.renderCache[cacheIndex]***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***256)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent.ctx.deactivate(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldInvokeDirs***REMOVED***=***REMOVED***shapeFlag***REMOVED***&***REMOVED***1***REMOVED***&&***REMOVED***dirs;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***shouldInvokeVnodeHook***REMOVED***=***REMOVED***!isAsyncWrapper(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***vnodeHook;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldInvokeVnodeHook***REMOVED***&&***REMOVED***(vnodeHook***REMOVED***=***REMOVED***props***REMOVED***&&***REMOVED***props.onVnodeBeforeUnmount))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountComponent(vnode.component,***REMOVED***parentSuspense,***REMOVED***doRemove);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.suspense.unmount(parentSuspense,***REMOVED***doRemove);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldInvokeDirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeDirectiveHook(vnode,***REMOVED***null,***REMOVED***parentComponent,***REMOVED***"beforeUnmount");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.type.remove(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***internals,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***doRemove
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(dynamicChildren***REMOVED***&&***REMOVED***//***REMOVED***#5154
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***when***REMOVED***v-once***REMOVED***is***REMOVED***used***REMOVED***inside***REMOVED***a***REMOVED***block,***REMOVED***setBlockTracking(-1)***REMOVED***marks***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***parent***REMOVED***block***REMOVED***with***REMOVED***hasOnce:***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***so***REMOVED***that***REMOVED***it***REMOVED***doesn't***REMOVED***take***REMOVED***the***REMOVED***fast***REMOVED***path***REMOVED***during***REMOVED***unmount***REMOVED***-***REMOVED***otherwise
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***components***REMOVED***nested***REMOVED***in***REMOVED***v-once***REMOVED***are***REMOVED***never***REMOVED***unmounted.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!dynamicChildren.hasOnce***REMOVED***&&***REMOVED***//***REMOVED***#1153:***REMOVED***fast***REMOVED***path***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***taken***REMOVED***for***REMOVED***non-stable***REMOVED***(v-for)***REMOVED***fragments
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(type***REMOVED***!==***REMOVED***Fragment***REMOVED***||***REMOVED***patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***patchFlag***REMOVED***&***REMOVED***64))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentSuspense,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***Fragment***REMOVED***&&***REMOVED***patchFlag***REMOVED***&***REMOVED***(128***REMOVED***|***REMOVED***256)***REMOVED***||***REMOVED***!optimized***REMOVED***&&***REMOVED***shapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmountChildren(children,***REMOVED***parentComponent,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(doRemove)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldInvokeVnodeHook***REMOVED***&&***REMOVED***(vnodeHook***REMOVED***=***REMOVED***props***REMOVED***&&***REMOVED***props.onVnodeUnmounted)***REMOVED***||***REMOVED***shouldInvokeDirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnodeHook***REMOVED***&&***REMOVED***invokeVNodeHook(vnodeHook,***REMOVED***parentComponent,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shouldInvokeDirs***REMOVED***&&***REMOVED***invokeDirectiveHook(vnode,***REMOVED***null,***REMOVED***parentComponent,***REMOVED***"unmounted");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***remove***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***el,***REMOVED***anchor,***REMOVED***transition***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***Fragment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***vnode.patchFlag***REMOVED***&***REMOVED***2048***REMOVED***&&***REMOVED***transition***REMOVED***&&***REMOVED***!transition.persisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.children.forEach((child)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***===***REMOVED***Comment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(child.el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***remove(child);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeFragment(el,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***Static)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeStaticNode(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***performRemove***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(el);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transition***REMOVED***&&***REMOVED***!transition.persisted***REMOVED***&&***REMOVED***transition.afterLeave)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transition.afterLeave();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***1***REMOVED***&&***REMOVED***transition***REMOVED***&&***REMOVED***!transition.persisted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***leave,***REMOVED***delayLeave***REMOVED***}***REMOVED***=***REMOVED***transition;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***performLeave***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***leave(el,***REMOVED***performRemove);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(delayLeave)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delayLeave(vnode.el,***REMOVED***performRemove,***REMOVED***performLeave);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***performLeave();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***performRemove();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***removeFragment***REMOVED***=***REMOVED***(cur,***REMOVED***end)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(cur***REMOVED***!==***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***=***REMOVED***hostNextSibling(cur);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(cur);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***hostRemove(end);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***unmountComponent***REMOVED***=***REMOVED***(instance,***REMOVED***parentSuspense,***REMOVED***doRemove)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.type.__hmrId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unregisterHMR(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***bum,***REMOVED***scope,***REMOVED***job,***REMOVED***subTree,***REMOVED***um,***REMOVED***m,***REMOVED***a***REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***invalidateMount(m);
***REMOVED******REMOVED******REMOVED******REMOVED***invalidateMount(a);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(bum)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokeArrayFns(bum);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***scope.stop();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(job)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(subTree,***REMOVED***instance,***REMOVED***parentSuspense,***REMOVED***doRemove);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(um)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(um,***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.isUnmounted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***parentSuspense);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***devtoolsComponentRemoved(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***unmountChildren***REMOVED***=***REMOVED***(children,***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***doRemove***REMOVED***=***REMOVED***false,***REMOVED***optimized***REMOVED***=***REMOVED***false,***REMOVED***start***REMOVED***=***REMOVED***0)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(children[i],***REMOVED***parentComponent,***REMOVED***parentSuspense,***REMOVED***doRemove,***REMOVED***optimized);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***getNextHostNode***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getNextHostNode(vnode.component.subTree);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***vnode.suspense.next();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***hostNextSibling(vnode.anchor***REMOVED***||***REMOVED***vnode.el);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***teleportEnd***REMOVED***=***REMOVED***el***REMOVED***&&***REMOVED***el[TeleportEndKey];
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***teleportEnd***REMOVED***?***REMOVED***hostNextSibling(teleportEnd)***REMOVED***:***REMOVED***el;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***let***REMOVED***isFlushing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***render***REMOVED***=***REMOVED***(vnode,***REMOVED***container,***REMOVED***namespace)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(container._vnode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unmount(container._vnode,***REMOVED***null,***REMOVED***null,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patch(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container._vnode***REMOVED***||***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***container._vnode***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFlushing)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFlushing***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flushPreFlushCbs();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***flushPostFlushCbs();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isFlushing***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***internals***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***p:***REMOVED***patch,
***REMOVED******REMOVED******REMOVED******REMOVED***um:***REMOVED***unmount,
***REMOVED******REMOVED******REMOVED******REMOVED***m:***REMOVED***move,
***REMOVED******REMOVED******REMOVED******REMOVED***r:***REMOVED***remove,
***REMOVED******REMOVED******REMOVED******REMOVED***mt:***REMOVED***mountComponent,
***REMOVED******REMOVED******REMOVED******REMOVED***mc:***REMOVED***mountChildren,
***REMOVED******REMOVED******REMOVED******REMOVED***pc:***REMOVED***patchChildren,
***REMOVED******REMOVED******REMOVED******REMOVED***pbc:***REMOVED***patchBlockChildren,
***REMOVED******REMOVED******REMOVED******REMOVED***n:***REMOVED***getNextHostNode,
***REMOVED******REMOVED******REMOVED******REMOVED***o:***REMOVED***options
***REMOVED******REMOVED***};
***REMOVED******REMOVED***let***REMOVED***hydrate;
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***render,
***REMOVED******REMOVED******REMOVED******REMOVED***hydrate,
***REMOVED******REMOVED******REMOVED******REMOVED***createApp:***REMOVED***createAppAPI(render)
***REMOVED******REMOVED***};
}
function***REMOVED***resolveChildrenNamespace({***REMOVED***type,***REMOVED***props***REMOVED***},***REMOVED***currentNamespace)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***currentNamespace***REMOVED***===***REMOVED***"svg"***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***"foreignObject"***REMOVED***||***REMOVED***currentNamespace***REMOVED***===***REMOVED***"mathml"***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***"annotation-xml"***REMOVED***&&***REMOVED***props***REMOVED***&&***REMOVED***props.encoding***REMOVED***&&***REMOVED***props.encoding.includes("html")***REMOVED***?***REMOVED***void***REMOVED***0***REMOVED***:***REMOVED***currentNamespace;
}
function***REMOVED***toggleRecurse({***REMOVED***effect,***REMOVED***job***REMOVED***},***REMOVED***allowed)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(allowed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.flags***REMOVED***|=***REMOVED***32;
***REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***|=***REMOVED***4;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***effect.flags***REMOVED***&=***REMOVED***-33;
***REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***&=***REMOVED***-5;
***REMOVED******REMOVED***}
}
function***REMOVED***needTransition(parentSuspense,***REMOVED***transition)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***(!parentSuspense***REMOVED***||***REMOVED***parentSuspense***REMOVED***&&***REMOVED***!parentSuspense.pendingBranch)***REMOVED***&&***REMOVED***transition***REMOVED***&&***REMOVED***!transition.persisted;
}
function***REMOVED***traverseStaticChildren(n1,***REMOVED***n2,***REMOVED***shallow***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ch1***REMOVED***=***REMOVED***n1.children;
***REMOVED******REMOVED***const***REMOVED***ch2***REMOVED***=***REMOVED***n2.children;
***REMOVED******REMOVED***if***REMOVED***(isArray(ch1)***REMOVED***&&***REMOVED***isArray(ch2))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***ch1.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***c1***REMOVED***=***REMOVED***ch1[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***c2***REMOVED***=***REMOVED***ch2[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c2.shapeFlag***REMOVED***&***REMOVED***1***REMOVED***&&***REMOVED***!c2.dynamicChildren)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c2.patchFlag***REMOVED***<=***REMOVED***0***REMOVED***||***REMOVED***c2.patchFlag***REMOVED***===***REMOVED***32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2***REMOVED***=***REMOVED***ch2[i]***REMOVED***=***REMOVED***cloneIfMounted(ch2[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2.el***REMOVED***=***REMOVED***c1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!shallow***REMOVED***&&***REMOVED***c2.patchFlag***REMOVED***!==***REMOVED***-2)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***traverseStaticChildren(c1,***REMOVED***c2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c2.type***REMOVED***===***REMOVED***Text***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***cached***REMOVED***text***REMOVED***nodes***REMOVED***retaining***REMOVED***detached***REMOVED***dom***REMOVED***nodes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2.patchFlag***REMOVED***!==***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2.el***REMOVED***=***REMOVED***c1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(c2.type***REMOVED***===***REMOVED***Comment***REMOVED***&&***REMOVED***!c2.el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2.el***REMOVED***=***REMOVED***c1.el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c2.el***REMOVED***&&***REMOVED***(c2.el.__vnode***REMOVED***=***REMOVED***c2);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***getSequence(arr)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***arr.slice();
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***[0];
***REMOVED******REMOVED***let***REMOVED***i,***REMOVED***j,***REMOVED***u,***REMOVED***v,***REMOVED***c;
***REMOVED******REMOVED***const***REMOVED***len***REMOVED***=***REMOVED***arr.length;
***REMOVED******REMOVED***for***REMOVED***(i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***len;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arrI***REMOVED***=***REMOVED***arr[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrI***REMOVED***!==***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***j***REMOVED***=***REMOVED***result[result.length***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arr[j]***REMOVED***<***REMOVED***arrI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p[i]***REMOVED***=***REMOVED***j;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result.push(i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***u***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v***REMOVED***=***REMOVED***result.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(u***REMOVED***<***REMOVED***v)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c***REMOVED***=***REMOVED***u***REMOVED***+***REMOVED***v***REMOVED***>>***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arr[result[c]]***REMOVED***<***REMOVED***arrI)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***u***REMOVED***=***REMOVED***c***REMOVED***+***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***v***REMOVED***=***REMOVED***c;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(arrI***REMOVED***<***REMOVED***arr[result[u]])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(u***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***p[i]***REMOVED***=***REMOVED***result[u***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result[u]***REMOVED***=***REMOVED***i;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***u***REMOVED***=***REMOVED***result.length;
***REMOVED******REMOVED***v***REMOVED***=***REMOVED***result[u***REMOVED***-***REMOVED***1];
***REMOVED******REMOVED***while***REMOVED***(u--***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result[u]***REMOVED***=***REMOVED***v;
***REMOVED******REMOVED******REMOVED******REMOVED***v***REMOVED***=***REMOVED***p[v];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}
function***REMOVED***locateNonHydratedAsyncRoot(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***subComponent***REMOVED***=***REMOVED***instance.subTree.component;
***REMOVED******REMOVED***if***REMOVED***(subComponent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(subComponent.asyncDep***REMOVED***&&***REMOVED***!subComponent.asyncResolved)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***subComponent;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***locateNonHydratedAsyncRoot(subComponent);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***invalidateMount(hooks)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(hooks)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***hooks.length;***REMOVED***i++)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hooks[i].flags***REMOVED***|=***REMOVED***8;
***REMOVED******REMOVED***}
}

const***REMOVED***ssrContextKey***REMOVED***=***REMOVED***Symbol.for("v-scx");
const***REMOVED***useSSRContext***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ctx***REMOVED***=***REMOVED***inject(ssrContextKey);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!ctx)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Server***REMOVED***rendering***REMOVED***context***REMOVED***not***REMOVED***provided.***REMOVED***Make***REMOVED***sure***REMOVED***to***REMOVED***only***REMOVED***call***REMOVED***useSSRContext()***REMOVED***conditionally***REMOVED***in***REMOVED***the***REMOVED***server***REMOVED***build.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ctx;
***REMOVED******REMOVED***}
};

function***REMOVED***watch(source,***REMOVED***cb,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isFunction(cb))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`\`watch(fn,***REMOVED***options?)\`***REMOVED***signature***REMOVED***has***REMOVED***been***REMOVED***moved***REMOVED***to***REMOVED***a***REMOVED***separate***REMOVED***API.***REMOVED***Use***REMOVED***\`watchEffect(fn,***REMOVED***options?)\`***REMOVED***instead.***REMOVED***\`watch\`***REMOVED***now***REMOVED***only***REMOVED***supports***REMOVED***\`watch(source,***REMOVED***cb,***REMOVED***options?)***REMOVED***signature.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***doWatch(source,***REMOVED***cb,***REMOVED***options);
}
function***REMOVED***doWatch(source,***REMOVED***cb,***REMOVED***options***REMOVED***=***REMOVED***EMPTY_OBJ)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***immediate,***REMOVED***deep,***REMOVED***flush,***REMOVED***once***REMOVED***}***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***if***REMOVED***(!cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(immediate***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`watch()***REMOVED***"immediate"***REMOVED***option***REMOVED***is***REMOVED***only***REMOVED***respected***REMOVED***when***REMOVED***using***REMOVED***the***REMOVED***watch(source,***REMOVED***callback,***REMOVED***options?)***REMOVED***signature.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(deep***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`watch()***REMOVED***"deep"***REMOVED***option***REMOVED***is***REMOVED***only***REMOVED***respected***REMOVED***when***REMOVED***using***REMOVED***the***REMOVED***watch(source,***REMOVED***callback,***REMOVED***options?)***REMOVED***signature.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(once***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`watch()***REMOVED***"once"***REMOVED***option***REMOVED***is***REMOVED***only***REMOVED***respected***REMOVED***when***REMOVED***using***REMOVED***the***REMOVED***watch(source,***REMOVED***callback,***REMOVED***options?)***REMOVED***signature.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***baseWatchOptions***REMOVED***=***REMOVED***extend({},***REMOVED***options);
***REMOVED******REMOVED***baseWatchOptions.onWarn***REMOVED***=***REMOVED***warn$1;
***REMOVED******REMOVED***const***REMOVED***runsImmediately***REMOVED***=***REMOVED***cb***REMOVED***&&***REMOVED***immediate***REMOVED***||***REMOVED***!cb***REMOVED***&&***REMOVED***flush***REMOVED***!==***REMOVED***"post";
***REMOVED******REMOVED***let***REMOVED***ssrCleanup;
***REMOVED******REMOVED***if***REMOVED***(isInSSRComponentSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(flush***REMOVED***===***REMOVED***"sync")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ctx***REMOVED***=***REMOVED***useSSRContext();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ssrCleanup***REMOVED***=***REMOVED***ctx.__watcherHandles***REMOVED***||***REMOVED***(ctx.__watcherHandles***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!runsImmediately)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***watchStopHandle***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchStopHandle.stop***REMOVED***=***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchStopHandle.resume***REMOVED***=***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchStopHandle.pause***REMOVED***=***REMOVED***NOOP;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***watchStopHandle;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***currentInstance;
***REMOVED******REMOVED***baseWatchOptions.call***REMOVED***=***REMOVED***(fn,***REMOVED***type,***REMOVED***args)***REMOVED***=>***REMOVED***callWithAsyncErrorHandling(fn,***REMOVED***instance,***REMOVED***type,***REMOVED***args);
***REMOVED******REMOVED***let***REMOVED***isPre***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(flush***REMOVED***===***REMOVED***"post")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***baseWatchOptions.scheduler***REMOVED***=***REMOVED***(job)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queuePostRenderEffect(job,***REMOVED***instance***REMOVED***&&***REMOVED***instance.suspense);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(flush***REMOVED***!==***REMOVED***"sync")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isPre***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***baseWatchOptions.scheduler***REMOVED***=***REMOVED***(job,***REMOVED***isFirstRun)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFirstRun)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***queueJob(job);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***baseWatchOptions.augmentJob***REMOVED***=***REMOVED***(job)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cb)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***|=***REMOVED***4;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPre)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.flags***REMOVED***|=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.id***REMOVED***=***REMOVED***instance.uid;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***job.i***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***const***REMOVED***watchHandle***REMOVED***=***REMOVED***watch$1(source,***REMOVED***cb,***REMOVED***baseWatchOptions);
***REMOVED******REMOVED***if***REMOVED***(isInSSRComponentSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ssrCleanup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ssrCleanup.push(watchHandle);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(runsImmediately)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***watchHandle();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***watchHandle;
}
function***REMOVED***instanceWatch(source,***REMOVED***value,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***publicThis***REMOVED***=***REMOVED***this.proxy;
***REMOVED******REMOVED***const***REMOVED***getter***REMOVED***=***REMOVED***isString(source)***REMOVED***?***REMOVED***source.includes(".")***REMOVED***?***REMOVED***createPathGetter(publicThis,***REMOVED***source)***REMOVED***:***REMOVED***()***REMOVED***=>***REMOVED***publicThis[source]***REMOVED***:***REMOVED***source.bind(publicThis,***REMOVED***publicThis);
***REMOVED******REMOVED***let***REMOVED***cb;
***REMOVED******REMOVED***if***REMOVED***(isFunction(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cb***REMOVED***=***REMOVED***value.handler;
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***reset***REMOVED***=***REMOVED***setCurrentInstance(this);
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***doWatch(getter,***REMOVED***cb.bind(publicThis),***REMOVED***options);
***REMOVED******REMOVED***reset();
***REMOVED******REMOVED***return***REMOVED***res;
}
function***REMOVED***createPathGetter(ctx,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***segments***REMOVED***=***REMOVED***path.split(".");
***REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cur***REMOVED***=***REMOVED***ctx;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***segments.length***REMOVED***&&***REMOVED***cur;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur***REMOVED***=***REMOVED***cur[segments[i]];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cur;
***REMOVED******REMOVED***};
}

const***REMOVED***getModelModifiers***REMOVED***=***REMOVED***(props,***REMOVED***modelName)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***modelName***REMOVED***===***REMOVED***"modelValue"***REMOVED***||***REMOVED***modelName***REMOVED***===***REMOVED***"model-value"***REMOVED***?***REMOVED***props.modelModifiers***REMOVED***:***REMOVED***props[`${modelName}Modifiers`]***REMOVED***||***REMOVED***props[`${camelize(modelName)}Modifiers`]***REMOVED***||***REMOVED***props[`${hyphenate(modelName)}Modifiers`];
};

function***REMOVED***emit(instance,***REMOVED***event,***REMOVED***...rawArgs)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(instance.isUnmounted)***REMOVED***return;
***REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***instance.vnode.props***REMOVED***||***REMOVED***EMPTY_OBJ;
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emitsOptions,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsOptions:***REMOVED***[propsOptions]
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(emitsOptions)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(event***REMOVED***in***REMOVED***emitsOptions)***REMOVED***&&***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!propsOptions***REMOVED***||***REMOVED***!(toHandlerKey(camelize(event))***REMOVED***in***REMOVED***propsOptions))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***emitted***REMOVED***event***REMOVED***"${event}"***REMOVED***but***REMOVED***it***REMOVED***is***REMOVED***neither***REMOVED***declared***REMOVED***in***REMOVED***the***REMOVED***emits***REMOVED***option***REMOVED***nor***REMOVED***as***REMOVED***an***REMOVED***"${toHandlerKey(camelize(event))}"***REMOVED***prop.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validator***REMOVED***=***REMOVED***emitsOptions[event];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(validator))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isValid***REMOVED***=***REMOVED***validator(...rawArgs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isValid)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Invalid***REMOVED***event***REMOVED***arguments:***REMOVED***event***REMOVED***validation***REMOVED***failed***REMOVED***for***REMOVED***event***REMOVED***"${event}".`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***args***REMOVED***=***REMOVED***rawArgs;
***REMOVED******REMOVED***const***REMOVED***isModelListener***REMOVED***=***REMOVED***event.startsWith("update:");
***REMOVED******REMOVED***const***REMOVED***modifiers***REMOVED***=***REMOVED***isModelListener***REMOVED***&&***REMOVED***getModelModifiers(props,***REMOVED***event.slice(7));
***REMOVED******REMOVED***if***REMOVED***(modifiers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modifiers.trim)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args***REMOVED***=***REMOVED***rawArgs.map((a)***REMOVED***=>***REMOVED***isString(a)***REMOVED***?***REMOVED***a.trim()***REMOVED***:***REMOVED***a);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(modifiers.number)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args***REMOVED***=***REMOVED***rawArgs.map(looseToNumber);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***devtoolsComponentEmit(instance,***REMOVED***event,***REMOVED***args);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lowerCaseEvent***REMOVED***=***REMOVED***event.toLowerCase();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(lowerCaseEvent***REMOVED***!==***REMOVED***event***REMOVED***&&***REMOVED***props[toHandlerKey(lowerCaseEvent)])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Event***REMOVED***"${lowerCaseEvent}"***REMOVED***is***REMOVED***emitted***REMOVED***in***REMOVED***component***REMOVED***${formatComponentName(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.type
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}***REMOVED***but***REMOVED***the***REMOVED***handler***REMOVED***is***REMOVED***registered***REMOVED***for***REMOVED***"${event}".***REMOVED***Note***REMOVED***that***REMOVED***HTML***REMOVED***attributes***REMOVED***are***REMOVED***case-insensitive***REMOVED***and***REMOVED***you***REMOVED***cannot***REMOVED***use***REMOVED***v-on***REMOVED***to***REMOVED***listen***REMOVED***to***REMOVED***camelCase***REMOVED***events***REMOVED***when***REMOVED***using***REMOVED***in-DOM***REMOVED***templates.***REMOVED***You***REMOVED***should***REMOVED***probably***REMOVED***use***REMOVED***"${hyphenate(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***event
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}"***REMOVED***instead***REMOVED***of***REMOVED***"${event}".`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***handlerName;
***REMOVED******REMOVED***let***REMOVED***handler***REMOVED***=***REMOVED***props[handlerName***REMOVED***=***REMOVED***toHandlerKey(event)]***REMOVED***||***REMOVED***//***REMOVED***also***REMOVED***try***REMOVED***camelCase***REMOVED***event***REMOVED***handler***REMOVED***(#2249)
***REMOVED******REMOVED***props[handlerName***REMOVED***=***REMOVED***toHandlerKey(camelize(event))];
***REMOVED******REMOVED***if***REMOVED***(!handler***REMOVED***&&***REMOVED***isModelListener)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handler***REMOVED***=***REMOVED***props[handlerName***REMOVED***=***REMOVED***toHandlerKey(hyphenate(event))];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(handler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callWithAsyncErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handler,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***6,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***onceHandler***REMOVED***=***REMOVED***props[handlerName***REMOVED***+***REMOVED***`Once`];
***REMOVED******REMOVED***if***REMOVED***(onceHandler)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!instance.emitted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.emitted***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(instance.emitted[handlerName])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***instance.emitted[handlerName]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***callWithAsyncErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onceHandler,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***6,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***args
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
const***REMOVED***mixinEmitsCache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***new***REMOVED***WeakMap();
function***REMOVED***normalizeEmitsOptions(comp,***REMOVED***appContext,***REMOVED***asMixin***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cache***REMOVED***=***REMOVED***asMixin***REMOVED***?***REMOVED***mixinEmitsCache***REMOVED***:***REMOVED***appContext.emitsCache;
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***cache.get(comp);
***REMOVED******REMOVED***if***REMOVED***(cached***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***raw***REMOVED***=***REMOVED***comp.emits;
***REMOVED******REMOVED***let***REMOVED***normalized***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***let***REMOVED***hasExtends***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(!isFunction(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extendEmits***REMOVED***=***REMOVED***(raw2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedFromExtend***REMOVED***=***REMOVED***normalizeEmitsOptions(raw2,***REMOVED***appContext,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(normalizedFromExtend)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasExtends***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extend(normalized,***REMOVED***normalizedFromExtend);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!asMixin***REMOVED***&&***REMOVED***appContext.mixins.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***appContext.mixins.forEach(extendEmits);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp.extends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extendEmits(comp.extends);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(comp.mixins)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comp.mixins.forEach(extendEmits);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!raw***REMOVED***&&***REMOVED***!hasExtends)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cache.set(comp,***REMOVED***null);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isArray(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***raw.forEach((key)***REMOVED***=>***REMOVED***normalized[key]***REMOVED***=***REMOVED***null);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***extend(normalized,***REMOVED***raw);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isObject(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cache.set(comp,***REMOVED***normalized);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***normalized;
}
function***REMOVED***isEmitListener(options,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!options***REMOVED***||***REMOVED***!isOn(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***key***REMOVED***=***REMOVED***key.slice(2).replace(/Once$/,***REMOVED***"");
***REMOVED******REMOVED***return***REMOVED***hasOwn(options,***REMOVED***key[0].toLowerCase()***REMOVED***+***REMOVED***key.slice(1))***REMOVED***||***REMOVED***hasOwn(options,***REMOVED***hyphenate(key))***REMOVED***||***REMOVED***hasOwn(options,***REMOVED***key);
}

let***REMOVED***accessedAttrs***REMOVED***=***REMOVED***false;
function***REMOVED***markAttrsAccessed()***REMOVED***{
***REMOVED******REMOVED***accessedAttrs***REMOVED***=***REMOVED***true;
}
function***REMOVED***renderComponentRoot$1(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***Component,
***REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED***proxy,
***REMOVED******REMOVED******REMOVED******REMOVED***withProxy,
***REMOVED******REMOVED******REMOVED******REMOVED***propsOptions:***REMOVED***[propsOptions],
***REMOVED******REMOVED******REMOVED******REMOVED***slots,
***REMOVED******REMOVED******REMOVED******REMOVED***attrs,
***REMOVED******REMOVED******REMOVED******REMOVED***emit,
***REMOVED******REMOVED******REMOVED******REMOVED***render,
***REMOVED******REMOVED******REMOVED******REMOVED***renderCache,
***REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED***setupState,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***inheritAttrs
***REMOVED******REMOVED***}***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***setCurrentRenderingInstance$1(instance);
***REMOVED******REMOVED***let***REMOVED***result;
***REMOVED******REMOVED***let***REMOVED***fallthroughAttrs;
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***accessedAttrs***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.shapeFlag***REMOVED***&***REMOVED***4)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proxyToUse***REMOVED***=***REMOVED***withProxy***REMOVED***||***REMOVED***proxy;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***thisProxy***REMOVED***=***REMOVED***setupState.__isScriptSetup***REMOVED***?***REMOVED***new***REMOVED***Proxy(proxyToUse,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get(target,***REMOVED***key,***REMOVED***receiver)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Property***REMOVED***'${String(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)}'***REMOVED***was***REMOVED***accessed***REMOVED***via***REMOVED***'this'.***REMOVED***Avoid***REMOVED***using***REMOVED***'this'***REMOVED***in***REMOVED***templates.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Reflect.get(target,***REMOVED***key,***REMOVED***receiver);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***})***REMOVED***:***REMOVED***proxyToUse;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***normalizeVNode$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***render.call(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***thisProxy,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***proxyToUse,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderCache,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true***REMOVED***?***REMOVED***shallowReadonly(props)***REMOVED***:***REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupState,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ctx
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallthroughAttrs***REMOVED***=***REMOVED***attrs;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***render2***REMOVED***=***REMOVED***Component;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(attrs***REMOVED***===***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markAttrsAccessed();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***normalizeVNode$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***render2.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***render2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true***REMOVED***?***REMOVED***shallowReadonly(props)***REMOVED***:***REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true***REMOVED***?***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***attrs()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markAttrsAccessed();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***shallowReadonly(attrs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slots,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***emit
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***:***REMOVED***{***REMOVED***attrs,***REMOVED***slots,***REMOVED***emit***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***render2(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true***REMOVED***?***REMOVED***shallowReadonly(props)***REMOVED***:***REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallthroughAttrs***REMOVED***=***REMOVED***Component.props***REMOVED***?***REMOVED***attrs***REMOVED***:***REMOVED***getFunctionalFallthrough(attrs);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***handleError(err,***REMOVED***instance,***REMOVED***1);
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***createVNode(Comment);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***root***REMOVED***=***REMOVED***result;
***REMOVED******REMOVED***let***REMOVED***setRoot***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(result.patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***result.patchFlag***REMOVED***&***REMOVED***2048)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[root,***REMOVED***setRoot]***REMOVED***=***REMOVED***getChildRoot(result);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(fallthroughAttrs***REMOVED***&&***REMOVED***inheritAttrs***REMOVED***!==***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(fallthroughAttrs);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***shapeFlag***REMOVED***}***REMOVED***=***REMOVED***root;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(keys.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***(1***REMOVED***|***REMOVED***6))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(propsOptions***REMOVED***&&***REMOVED***keys.some(isModelListener))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallthroughAttrs***REMOVED***=***REMOVED***filterModelListeners(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallthroughAttrs,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***propsOptions
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***=***REMOVED***cloneVNode(root,***REMOVED***fallthroughAttrs,***REMOVED***false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!accessedAttrs***REMOVED***&&***REMOVED***root.type***REMOVED***!==***REMOVED***Comment)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allAttrs***REMOVED***=***REMOVED***Object.keys(attrs);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***eventAttrs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***extraAttrs***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***allAttrs.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***allAttrs[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isOn(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isModelListener(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***eventAttrs.push(key[2].toLowerCase()***REMOVED***+***REMOVED***key.slice(3));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***extraAttrs.push(key);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(extraAttrs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Extraneous***REMOVED***non-props***REMOVED***attributes***REMOVED***(${extraAttrs.join(",***REMOVED***")})***REMOVED***were***REMOVED***passed***REMOVED***to***REMOVED***component***REMOVED***but***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***automatically***REMOVED***inherited***REMOVED***because***REMOVED***component***REMOVED***renders***REMOVED***fragment***REMOVED***or***REMOVED***text***REMOVED***or***REMOVED***teleport***REMOVED***root***REMOVED***nodes.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(eventAttrs.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Extraneous***REMOVED***non-emits***REMOVED***event***REMOVED***listeners***REMOVED***(${eventAttrs.join(",***REMOVED***")})***REMOVED***were***REMOVED***passed***REMOVED***to***REMOVED***component***REMOVED***but***REMOVED***could***REMOVED***not***REMOVED***be***REMOVED***automatically***REMOVED***inherited***REMOVED***because***REMOVED***component***REMOVED***renders***REMOVED***fragment***REMOVED***or***REMOVED***text***REMOVED***root***REMOVED***nodes.***REMOVED***If***REMOVED***the***REMOVED***listener***REMOVED***is***REMOVED***intended***REMOVED***to***REMOVED***be***REMOVED***a***REMOVED***component***REMOVED***custom***REMOVED***event***REMOVED***listener***REMOVED***only,***REMOVED***declare***REMOVED***it***REMOVED***using***REMOVED***the***REMOVED***"emits"***REMOVED***option.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(vnode.dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isElementRoot(root))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Runtime***REMOVED***directive***REMOVED***used***REMOVED***on***REMOVED***component***REMOVED***with***REMOVED***non-element***REMOVED***root***REMOVED***node.***REMOVED***The***REMOVED***directives***REMOVED***will***REMOVED***not***REMOVED***function***REMOVED***as***REMOVED***intended.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***root***REMOVED***=***REMOVED***cloneVNode(root,***REMOVED***null,***REMOVED***false,***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED***root.dirs***REMOVED***=***REMOVED***root.dirs***REMOVED***?***REMOVED***root.dirs.concat(vnode.dirs)***REMOVED***:***REMOVED***vnode.dirs;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(vnode.transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isElementRoot(root))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***inside***REMOVED***<Transition>***REMOVED***renders***REMOVED***non-element***REMOVED***root***REMOVED***node***REMOVED***that***REMOVED***cannot***REMOVED***be***REMOVED***animated.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***setTransitionHooks(root,***REMOVED***vnode.transition);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(setRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setRoot(root);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***root;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***setCurrentRenderingInstance$1(prev);
***REMOVED******REMOVED***return***REMOVED***result;
}
const***REMOVED***getChildRoot***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***rawChildren***REMOVED***=***REMOVED***vnode.children;
***REMOVED******REMOVED***const***REMOVED***dynamicChildren***REMOVED***=***REMOVED***vnode.dynamicChildren;
***REMOVED******REMOVED***const***REMOVED***childRoot***REMOVED***=***REMOVED***filterSingleRoot(rawChildren,***REMOVED***false);
***REMOVED******REMOVED***if***REMOVED***(!childRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[vnode,***REMOVED***void***REMOVED***0];
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(childRoot.patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***childRoot.patchFlag***REMOVED***&***REMOVED***2048)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getChildRoot(childRoot);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***index***REMOVED***=***REMOVED***rawChildren.indexOf(childRoot);
***REMOVED******REMOVED***const***REMOVED***dynamicIndex***REMOVED***=***REMOVED***dynamicChildren***REMOVED***?***REMOVED***dynamicChildren.indexOf(childRoot)***REMOVED***:***REMOVED***-1;
***REMOVED******REMOVED***const***REMOVED***setRoot***REMOVED***=***REMOVED***(updatedRoot)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***rawChildren[index]***REMOVED***=***REMOVED***updatedRoot;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicChildren)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dynamicIndex***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren[dynamicIndex]***REMOVED***=***REMOVED***updatedRoot;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(updatedRoot.patchFlag***REMOVED***>***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.dynamicChildren***REMOVED***=***REMOVED***[...dynamicChildren,***REMOVED***updatedRoot];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***[normalizeVNode$1(childRoot),***REMOVED***setRoot];
};
function***REMOVED***filterSingleRoot(children,***REMOVED***recurse***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***singleRoot;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***child***REMOVED***=***REMOVED***children[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isVNode$2(child))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(child.type***REMOVED***!==***REMOVED***Comment***REMOVED***||***REMOVED***child.children***REMOVED***===***REMOVED***"v-if")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(singleRoot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***singleRoot***REMOVED***=***REMOVED***child;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(recurse***REMOVED***&&***REMOVED***singleRoot.patchFlag***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***singleRoot.patchFlag***REMOVED***&***REMOVED***2048)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***filterSingleRoot(singleRoot.children);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***singleRoot;
}
const***REMOVED***getFunctionalFallthrough***REMOVED***=***REMOVED***(attrs)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***res;
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***attrs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"class"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"style"***REMOVED***||***REMOVED***isOn(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(res***REMOVED***||***REMOVED***(res***REMOVED***=***REMOVED***{}))[key]***REMOVED***=***REMOVED***attrs[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
};
const***REMOVED***filterModelListeners***REMOVED***=***REMOVED***(attrs,***REMOVED***props)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***attrs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isModelListener(key)***REMOVED***||***REMOVED***!(key.slice(9)***REMOVED***in***REMOVED***props))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[key]***REMOVED***=***REMOVED***attrs[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***res;
};
const***REMOVED***isElementRoot***REMOVED***=***REMOVED***(vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***vnode.shapeFlag***REMOVED***&***REMOVED***(6***REMOVED***|***REMOVED***1)***REMOVED***||***REMOVED***vnode.type***REMOVED***===***REMOVED***Comment;
};
function***REMOVED***shouldUpdateComponent(prevVNode,***REMOVED***nextVNode,***REMOVED***optimized)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props:***REMOVED***prevProps,***REMOVED***children:***REMOVED***prevChildren,***REMOVED***component***REMOVED***}***REMOVED***=***REMOVED***prevVNode;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props:***REMOVED***nextProps,***REMOVED***children:***REMOVED***nextChildren,***REMOVED***patchFlag***REMOVED***}***REMOVED***=***REMOVED***nextVNode;
***REMOVED******REMOVED***const***REMOVED***emits***REMOVED***=***REMOVED***component.emitsOptions;
***REMOVED******REMOVED***if***REMOVED***((prevChildren***REMOVED***||***REMOVED***nextChildren)***REMOVED***&&***REMOVED***isHmrUpdating)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(nextVNode.dirs***REMOVED***||***REMOVED***nextVNode.transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(optimized***REMOVED***&&***REMOVED***patchFlag***REMOVED***>=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***1024)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!nextProps;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasPropsChanged(prevProps,***REMOVED***nextProps,***REMOVED***emits);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(patchFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dynamicProps***REMOVED***=***REMOVED***nextVNode.dynamicProps;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***dynamicProps.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***dynamicProps[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextProps[key]***REMOVED***!==***REMOVED***prevProps[key]***REMOVED***&&***REMOVED***!isEmitListener(emits,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevChildren***REMOVED***||***REMOVED***nextChildren)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nextChildren***REMOVED***||***REMOVED***!nextChildren.$stable)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prevProps***REMOVED***===***REMOVED***nextProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!prevProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!!nextProps;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!nextProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hasPropsChanged(prevProps,***REMOVED***nextProps,***REMOVED***emits);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***hasPropsChanged(prevProps,***REMOVED***nextProps,***REMOVED***emitsOptions)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***nextKeys***REMOVED***=***REMOVED***Object.keys(nextProps);
***REMOVED******REMOVED***if***REMOVED***(nextKeys.length***REMOVED***!==***REMOVED***Object.keys(prevProps).length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***nextKeys.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***nextKeys[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextProps[key]***REMOVED***!==***REMOVED***prevProps[key]***REMOVED***&&***REMOVED***!isEmitListener(emitsOptions,***REMOVED***key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***false;
}
function***REMOVED***updateHOCHostEl({***REMOVED***vnode,***REMOVED***parent***REMOVED***},***REMOVED***el)***REMOVED***{
***REMOVED******REMOVED***while***REMOVED***(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***root***REMOVED***=***REMOVED***parent.subTree;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(root.suspense***REMOVED***&&***REMOVED***root.suspense.activeBranch***REMOVED***===***REMOVED***vnode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***root.el***REMOVED***=***REMOVED***vnode.el;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(root***REMOVED***===***REMOVED***vnode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(vnode***REMOVED***=***REMOVED***parent.vnode).el***REMOVED***=***REMOVED***el;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent***REMOVED***=***REMOVED***parent.parent;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***isSuspense***REMOVED***=***REMOVED***(type)***REMOVED***=>***REMOVED***type.__isSuspense;
function***REMOVED***queueEffectWithSuspense(fn,***REMOVED***suspense)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(suspense***REMOVED***&&***REMOVED***suspense.pendingBranch)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(fn))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***suspense.effects.push(...fn);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***suspense.effects.push(fn);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***queuePostFlushCb(fn);
***REMOVED******REMOVED***}
}

const***REMOVED***Fragment***REMOVED***=***REMOVED***Symbol.for("v-fgt");
const***REMOVED***Text***REMOVED***=***REMOVED***Symbol.for("v-txt");
const***REMOVED***Comment***REMOVED***=***REMOVED***Symbol.for("v-cmt");
const***REMOVED***Static***REMOVED***=***REMOVED***Symbol.for("v-stc");
let***REMOVED***currentBlock***REMOVED***=***REMOVED***null;
let***REMOVED***isBlockTreeEnabled***REMOVED***=***REMOVED***1;
function***REMOVED***setBlockTracking(value,***REMOVED***inVOnce***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***isBlockTreeEnabled***REMOVED***+=***REMOVED***value;
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***<***REMOVED***0***REMOVED***&&***REMOVED***currentBlock***REMOVED***&&***REMOVED***inVOnce)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***currentBlock.hasOnce***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
}
function***REMOVED***isVNode$2(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***value***REMOVED***?***REMOVED***value.__v_isVNode***REMOVED***===***REMOVED***true***REMOVED***:***REMOVED***false;
}
function***REMOVED***isSameVNodeType(n1,***REMOVED***n2)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(n2.shapeFlag***REMOVED***&***REMOVED***6***REMOVED***&&***REMOVED***n1.component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***dirtyInstances***REMOVED***=***REMOVED***hmrDirtyComponents.get(n2.type);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(dirtyInstances***REMOVED***&&***REMOVED***dirtyInstances.has(n1.component))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n1.shapeFlag***REMOVED***&=***REMOVED***-257;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***n2.shapeFlag***REMOVED***&=***REMOVED***-513;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***n1.type***REMOVED***===***REMOVED***n2.type***REMOVED***&&***REMOVED***n1.key***REMOVED***===***REMOVED***n2.key;
}
const***REMOVED***createVNodeWithArgsTransform***REMOVED***=***REMOVED***(...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***_createVNode(
***REMOVED******REMOVED******REMOVED******REMOVED***...args
***REMOVED******REMOVED***);
};
const***REMOVED***normalizeKey***REMOVED***=***REMOVED***({***REMOVED***key***REMOVED***})***REMOVED***=>***REMOVED***key***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***null;
const***REMOVED***normalizeRef***REMOVED***=***REMOVED***({
***REMOVED******REMOVED***ref,
***REMOVED******REMOVED***ref_key,
***REMOVED******REMOVED***ref_for
})***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***ref***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ref***REMOVED***=***REMOVED***""***REMOVED***+***REMOVED***ref;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ref***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***isString(ref)***REMOVED***||***REMOVED***isRef(ref)***REMOVED***||***REMOVED***isFunction(ref)***REMOVED***?***REMOVED***{***REMOVED***i:***REMOVED***currentRenderingInstance,***REMOVED***r:***REMOVED***ref,***REMOVED***k:***REMOVED***ref_key,***REMOVED***f:***REMOVED***!!ref_for***REMOVED***}***REMOVED***:***REMOVED***ref***REMOVED***:***REMOVED***null;
};
function***REMOVED***createBaseVNode(type,***REMOVED***props***REMOVED***=***REMOVED***null,***REMOVED***children***REMOVED***=***REMOVED***null,***REMOVED***patchFlag***REMOVED***=***REMOVED***0,***REMOVED***dynamicProps***REMOVED***=***REMOVED***null,***REMOVED***shapeFlag***REMOVED***=***REMOVED***type***REMOVED***===***REMOVED***Fragment***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***1,***REMOVED***isBlockNode***REMOVED***=***REMOVED***false,***REMOVED***needFullChildrenNormalization***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***vnode***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__v_isVNode:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***__v_skip:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***props***REMOVED***&&***REMOVED***normalizeKey(props),
***REMOVED******REMOVED******REMOVED******REMOVED***ref:***REMOVED***props***REMOVED***&&***REMOVED***normalizeRef(props),
***REMOVED******REMOVED******REMOVED******REMOVED***scopeId:***REMOVED***currentScopeId,
***REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED***component:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***suspense:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***ssContent:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***ssFallback:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***dirs:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***transition:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***el:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***anchor:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***targetStart:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***targetAnchor:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***staticCount:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***shapeFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicProps,
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***appContext:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx:***REMOVED***currentRenderingInstance
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(needFullChildrenNormalization)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***normalizeChildren(vnode,***REMOVED***children);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type.normalize(vnode);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.shapeFlag***REMOVED***|=***REMOVED***isString(children)***REMOVED***?***REMOVED***8***REMOVED***:***REMOVED***16;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(vnode.key***REMOVED***!==***REMOVED***vnode.key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`VNode***REMOVED***created***REMOVED***with***REMOVED***invalid***REMOVED***key***REMOVED***(NaN).***REMOVED***VNode***REMOVED***type:`,***REMOVED***vnode.type);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isBlockTreeEnabled***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***//***REMOVED***avoid***REMOVED***a***REMOVED***block***REMOVED***node***REMOVED***from***REMOVED***tracking***REMOVED***itself
***REMOVED******REMOVED***!isBlockNode***REMOVED***&&***REMOVED***//***REMOVED***has***REMOVED***current***REMOVED***parent***REMOVED***block
***REMOVED******REMOVED***currentBlock***REMOVED***&&***REMOVED***//***REMOVED***presence***REMOVED***of***REMOVED***a***REMOVED***patch***REMOVED***flag***REMOVED***indicates***REMOVED***this***REMOVED***node***REMOVED***needs***REMOVED***patching***REMOVED***on***REMOVED***updates.
***REMOVED******REMOVED***//***REMOVED***component***REMOVED***nodes***REMOVED***also***REMOVED***should***REMOVED***always***REMOVED***be***REMOVED***patched,***REMOVED***because***REMOVED***even***REMOVED***if***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***component***REMOVED***doesn't***REMOVED***need***REMOVED***to***REMOVED***update,***REMOVED***it***REMOVED***needs***REMOVED***to***REMOVED***persist***REMOVED***the***REMOVED***instance***REMOVED***on***REMOVED***to
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***next***REMOVED***vnode***REMOVED***so***REMOVED***that***REMOVED***it***REMOVED***can***REMOVED***be***REMOVED***properly***REMOVED***unmounted***REMOVED***later.
***REMOVED******REMOVED***(vnode.patchFlag***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***&&***REMOVED***//***REMOVED***the***REMOVED***EVENTS***REMOVED***flag***REMOVED***is***REMOVED***only***REMOVED***for***REMOVED***hydration***REMOVED***and***REMOVED***if***REMOVED***it***REMOVED***is***REMOVED***the***REMOVED***only***REMOVED***flag,***REMOVED***the
***REMOVED******REMOVED***//***REMOVED***vnode***REMOVED***should***REMOVED***not***REMOVED***be***REMOVED***considered***REMOVED***dynamic***REMOVED***due***REMOVED***to***REMOVED***handler***REMOVED***caching.
***REMOVED******REMOVED***vnode.patchFlag***REMOVED***!==***REMOVED***32)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***currentBlock.push(vnode);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***vnode;
}
const***REMOVED***createVNode***REMOVED***=***REMOVED***createVNodeWithArgsTransform***REMOVED***;
function***REMOVED***_createVNode(type,***REMOVED***props***REMOVED***=***REMOVED***null,***REMOVED***children***REMOVED***=***REMOVED***null,***REMOVED***patchFlag***REMOVED***=***REMOVED***0,***REMOVED***dynamicProps***REMOVED***=***REMOVED***null,***REMOVED***isBlockNode***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!type***REMOVED***||***REMOVED***type***REMOVED***===***REMOVED***NULL_DYNAMIC_COMPONENT)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Invalid***REMOVED***vnode***REMOVED***type***REMOVED***when***REMOVED***creating***REMOVED***vnode:***REMOVED***${type}.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***Comment;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isVNode$2(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***cloneVNode(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***mergeRef:***REMOVED***true***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(children)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeChildren(cloned,***REMOVED***children);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isBlockTreeEnabled***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***!isBlockNode***REMOVED***&&***REMOVED***currentBlock)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cloned.shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentBlock[currentBlock.indexOf(type)]***REMOVED***=***REMOVED***cloned;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentBlock.push(cloned);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.patchFlag***REMOVED***=***REMOVED***-2;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloned;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isClassComponent(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***type.__vccOpts;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props***REMOVED***=***REMOVED***guardReactiveProps(props);
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***{***REMOVED***class:***REMOVED***klass,***REMOVED***style***REMOVED***}***REMOVED***=***REMOVED***props;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(klass***REMOVED***&&***REMOVED***!isString(klass))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props.class***REMOVED***=***REMOVED***normalizeClass(klass);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isObject(style))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isProxy(style)***REMOVED***&&***REMOVED***!isArray(style))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style***REMOVED***=***REMOVED***extend({},***REMOVED***style);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***props.style***REMOVED***=***REMOVED***normalizeStyle(style);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***shapeFlag***REMOVED***=***REMOVED***isString(type)***REMOVED***?***REMOVED***1***REMOVED***:***REMOVED***isSuspense(type)***REMOVED***?***REMOVED***128***REMOVED***:***REMOVED***isTeleport(type)***REMOVED***?***REMOVED***64***REMOVED***:***REMOVED***isObject(type)***REMOVED***?***REMOVED***4***REMOVED***:***REMOVED***isFunction(type)***REMOVED***?***REMOVED***2***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***4***REMOVED***&&***REMOVED***isProxy(type))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***toRaw(type);
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Vue***REMOVED***received***REMOVED***a***REMOVED***Component***REMOVED***that***REMOVED***was***REMOVED***made***REMOVED***a***REMOVED***reactive***REMOVED***object.***REMOVED***This***REMOVED***can***REMOVED***lead***REMOVED***to***REMOVED***unnecessary***REMOVED***performance***REMOVED***overhead***REMOVED***and***REMOVED***should***REMOVED***be***REMOVED***avoided***REMOVED***by***REMOVED***marking***REMOVED***the***REMOVED***component***REMOVED***with***REMOVED***\`markRaw\`***REMOVED***or***REMOVED***using***REMOVED***\`shallowRef\`***REMOVED***instead***REMOVED***of***REMOVED***\`ref\`.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`
Component***REMOVED***that***REMOVED***was***REMOVED***made***REMOVED***reactive:***REMOVED***`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***createBaseVNode(
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***props,
***REMOVED******REMOVED******REMOVED******REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicProps,
***REMOVED******REMOVED******REMOVED******REMOVED***shapeFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***isBlockNode,
***REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED***);
}
function***REMOVED***guardReactiveProps(props)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!props)***REMOVED***return***REMOVED***null;
***REMOVED******REMOVED***return***REMOVED***isProxy(props)***REMOVED***||***REMOVED***isInternalObject(props)***REMOVED***?***REMOVED***extend({},***REMOVED***props)***REMOVED***:***REMOVED***props;
}
function***REMOVED***cloneVNode(vnode,***REMOVED***extraProps,***REMOVED***mergeRef***REMOVED***=***REMOVED***false,***REMOVED***cloneTransition***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props,***REMOVED***ref,***REMOVED***patchFlag,***REMOVED***children,***REMOVED***transition***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED***const***REMOVED***mergedProps***REMOVED***=***REMOVED***extraProps***REMOVED***?***REMOVED***mergeProps(props***REMOVED***||***REMOVED***{},***REMOVED***extraProps)***REMOVED***:***REMOVED***props;
***REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__v_isVNode:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***__v_skip:***REMOVED***true,
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***vnode.type,
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***mergedProps,
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***mergedProps***REMOVED***&&***REMOVED***normalizeKey(mergedProps),
***REMOVED******REMOVED******REMOVED******REMOVED***ref:***REMOVED***extraProps***REMOVED***&&***REMOVED***extraProps.ref***REMOVED***?***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#2078***REMOVED***in***REMOVED***the***REMOVED***case***REMOVED***of***REMOVED***<component***REMOVED***:is="vnode"***REMOVED***ref="extra"/>
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***vnode***REMOVED***itself***REMOVED***already***REMOVED***has***REMOVED***a***REMOVED***ref,***REMOVED***cloneVNode***REMOVED***will***REMOVED***need***REMOVED***to***REMOVED***merge
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***refs***REMOVED***so***REMOVED***the***REMOVED***single***REMOVED***vnode***REMOVED***can***REMOVED***be***REMOVED***set***REMOVED***on***REMOVED***multiple***REMOVED***refs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***mergeRef***REMOVED***&&***REMOVED***ref***REMOVED***?***REMOVED***isArray(ref)***REMOVED***?***REMOVED***ref.concat(normalizeRef(extraProps))***REMOVED***:***REMOVED***[ref,***REMOVED***normalizeRef(extraProps)]***REMOVED***:***REMOVED***normalizeRef(extraProps)
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***ref,
***REMOVED******REMOVED******REMOVED******REMOVED***scopeId:***REMOVED***vnode.scopeId,
***REMOVED******REMOVED******REMOVED******REMOVED***slotScopeIds:***REMOVED***vnode.slotScopeIds,
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***patchFlag***REMOVED***===***REMOVED***-1***REMOVED***&&***REMOVED***isArray(children)***REMOVED***?***REMOVED***children.map(deepCloneVNode)***REMOVED***:***REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED***target:***REMOVED***vnode.target,
***REMOVED******REMOVED******REMOVED******REMOVED***targetStart:***REMOVED***vnode.targetStart,
***REMOVED******REMOVED******REMOVED******REMOVED***targetAnchor:***REMOVED***vnode.targetAnchor,
***REMOVED******REMOVED******REMOVED******REMOVED***staticCount:***REMOVED***vnode.staticCount,
***REMOVED******REMOVED******REMOVED******REMOVED***shapeFlag:***REMOVED***vnode.shapeFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***if***REMOVED***the***REMOVED***vnode***REMOVED***is***REMOVED***cloned***REMOVED***with***REMOVED***extra***REMOVED***props,***REMOVED***we***REMOVED***can***REMOVED***no***REMOVED***longer***REMOVED***assume***REMOVED***its
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***existing***REMOVED***patch***REMOVED***flag***REMOVED***to***REMOVED***be***REMOVED***reliable***REMOVED***and***REMOVED***need***REMOVED***to***REMOVED***add***REMOVED***the***REMOVED***FULL_PROPS***REMOVED***flag.
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***note:***REMOVED***preserve***REMOVED***flag***REMOVED***for***REMOVED***fragments***REMOVED***since***REMOVED***they***REMOVED***use***REMOVED***the***REMOVED***flag***REMOVED***for***REMOVED***children
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***fast***REMOVED***paths***REMOVED***only.
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag:***REMOVED***extraProps***REMOVED***&&***REMOVED***vnode.type***REMOVED***!==***REMOVED***Fragment***REMOVED***?***REMOVED***patchFlag***REMOVED***===***REMOVED***-1***REMOVED***?***REMOVED***16***REMOVED***:***REMOVED***patchFlag***REMOVED***|***REMOVED***16***REMOVED***:***REMOVED***patchFlag,
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicProps:***REMOVED***vnode.dynamicProps,
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicChildren:***REMOVED***vnode.dynamicChildren,
***REMOVED******REMOVED******REMOVED******REMOVED***appContext:***REMOVED***vnode.appContext,
***REMOVED******REMOVED******REMOVED******REMOVED***dirs:***REMOVED***vnode.dirs,
***REMOVED******REMOVED******REMOVED******REMOVED***transition,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***These***REMOVED***should***REMOVED***technically***REMOVED***only***REMOVED***be***REMOVED***non-null***REMOVED***on***REMOVED***mounted***REMOVED***VNodes.***REMOVED***However,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***they***REMOVED****should****REMOVED***be***REMOVED***copied***REMOVED***for***REMOVED***kept-alive***REMOVED***vnodes.***REMOVED***So***REMOVED***we***REMOVED***just***REMOVED***always***REMOVED***copy
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***them***REMOVED***since***REMOVED***them***REMOVED***being***REMOVED***non-null***REMOVED***during***REMOVED***a***REMOVED***mount***REMOVED***doesn't***REMOVED***affect***REMOVED***the***REMOVED***logic***REMOVED***as
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***they***REMOVED***will***REMOVED***simply***REMOVED***be***REMOVED***overwritten.
***REMOVED******REMOVED******REMOVED******REMOVED***component:***REMOVED***vnode.component,
***REMOVED******REMOVED******REMOVED******REMOVED***suspense:***REMOVED***vnode.suspense,
***REMOVED******REMOVED******REMOVED******REMOVED***ssContent:***REMOVED***vnode.ssContent***REMOVED***&&***REMOVED***cloneVNode(vnode.ssContent),
***REMOVED******REMOVED******REMOVED******REMOVED***ssFallback:***REMOVED***vnode.ssFallback***REMOVED***&&***REMOVED***cloneVNode(vnode.ssFallback),
***REMOVED******REMOVED******REMOVED******REMOVED***placeholder:***REMOVED***vnode.placeholder,
***REMOVED******REMOVED******REMOVED******REMOVED***el:***REMOVED***vnode.el,
***REMOVED******REMOVED******REMOVED******REMOVED***anchor:***REMOVED***vnode.anchor,
***REMOVED******REMOVED******REMOVED******REMOVED***ctx:***REMOVED***vnode.ctx,
***REMOVED******REMOVED******REMOVED******REMOVED***ce:***REMOVED***vnode.ce
***REMOVED******REMOVED***};
***REMOVED******REMOVED***if***REMOVED***(transition***REMOVED***&&***REMOVED***cloneTransition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setTransitionHooks(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cloned,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***transition.clone(cloned)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cloned;
}
function***REMOVED***deepCloneVNode(vnode)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cloned***REMOVED***=***REMOVED***cloneVNode(vnode);
***REMOVED******REMOVED***if***REMOVED***(isArray(vnode.children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***cloned.children***REMOVED***=***REMOVED***vnode.children.map(deepCloneVNode);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***cloned;
}
function***REMOVED***createTextVNode(text***REMOVED***=***REMOVED***"***REMOVED***",***REMOVED***flag***REMOVED***=***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***createVNode(Text,***REMOVED***null,***REMOVED***text,***REMOVED***flag);
}
function***REMOVED***normalizeVNode$1(child)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(child***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***child***REMOVED***===***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createVNode(Comment);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(child))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createVNode(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Fragment,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#3666,***REMOVED***avoid***REMOVED***reference***REMOVED***pollution***REMOVED***when***REMOVED***reusing***REMOVED***vnode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***child.slice()
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isVNode$2(child))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cloneIfMounted(child);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***createVNode(Text,***REMOVED***null,***REMOVED***String(child));
***REMOVED******REMOVED***}
}
function***REMOVED***cloneIfMounted(child)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***child.el***REMOVED***===***REMOVED***null***REMOVED***&&***REMOVED***child.patchFlag***REMOVED***!==***REMOVED***-1***REMOVED***||***REMOVED***child.memo***REMOVED***?***REMOVED***child***REMOVED***:***REMOVED***cloneVNode(child);
}
function***REMOVED***normalizeChildren(vnode,***REMOVED***children)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***type***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***shapeFlag***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED***if***REMOVED***(children***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***children***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isArray(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***16;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***children***REMOVED***===***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***(1***REMOVED***|***REMOVED***64))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***slot***REMOVED***=***REMOVED***children.default;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(slot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slot._c***REMOVED***&&***REMOVED***(slot._d***REMOVED***=***REMOVED***false);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***normalizeChildren(vnode,***REMOVED***slot());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slot._c***REMOVED***&&***REMOVED***(slot._d***REMOVED***=***REMOVED***true);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***32;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***slotFlag***REMOVED***=***REMOVED***children._;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!slotFlag***REMOVED***&&***REMOVED***!isInternalObject(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children._ctx***REMOVED***=***REMOVED***currentRenderingInstance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(slotFlag***REMOVED***===***REMOVED***3***REMOVED***&&***REMOVED***currentRenderingInstance)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(currentRenderingInstance.slots._***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children._***REMOVED***=***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children._***REMOVED***=***REMOVED***2;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.patchFlag***REMOVED***|=***REMOVED***1024;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isFunction(children))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***children***REMOVED***=***REMOVED***{***REMOVED***default:***REMOVED***children,***REMOVED***_ctx:***REMOVED***currentRenderingInstance***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***32;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***children***REMOVED***=***REMOVED***String(children);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***16;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children***REMOVED***=***REMOVED***[createTextVNode(children)];
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type***REMOVED***=***REMOVED***8;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***vnode.children***REMOVED***=***REMOVED***children;
***REMOVED******REMOVED***vnode.shapeFlag***REMOVED***|=***REMOVED***type;
}
function***REMOVED***mergeProps(...args)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***args.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***toMerge***REMOVED***=***REMOVED***args[i];
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***toMerge)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"class")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ret.class***REMOVED***!==***REMOVED***toMerge.class)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.class***REMOVED***=***REMOVED***normalizeClass([ret.class,***REMOVED***toMerge.class]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"style")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret.style***REMOVED***=***REMOVED***normalizeStyle([ret.style,***REMOVED***toMerge.style]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isOn(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***existing***REMOVED***=***REMOVED***ret[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***incoming***REMOVED***=***REMOVED***toMerge[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(incoming***REMOVED***&&***REMOVED***existing***REMOVED***!==***REMOVED***incoming***REMOVED***&&***REMOVED***!(isArray(existing)***REMOVED***&&***REMOVED***existing.includes(incoming)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret[key]***REMOVED***=***REMOVED***existing***REMOVED***?***REMOVED***[].concat(existing,***REMOVED***incoming)***REMOVED***:***REMOVED***incoming;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***!==***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret[key]***REMOVED***=***REMOVED***toMerge[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***invokeVNodeHook(hook,***REMOVED***instance,***REMOVED***vnode,***REMOVED***prevVNode***REMOVED***=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED***callWithAsyncErrorHandling(hook,***REMOVED***instance,***REMOVED***7,***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED***prevVNode
***REMOVED******REMOVED***]);
}

const***REMOVED***emptyAppContext***REMOVED***=***REMOVED***createAppContext();
let***REMOVED***uid***REMOVED***=***REMOVED***0;
function***REMOVED***createComponentInstance$1(vnode,***REMOVED***parent,***REMOVED***suspense)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***vnode.type;
***REMOVED******REMOVED***const***REMOVED***appContext***REMOVED***=***REMOVED***(parent***REMOVED***?***REMOVED***parent.appContext***REMOVED***:***REMOVED***vnode.appContext)***REMOVED***||***REMOVED***emptyAppContext;
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***uid:***REMOVED***uid++,
***REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED***parent,
***REMOVED******REMOVED******REMOVED******REMOVED***appContext,
***REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***be***REMOVED***immediately***REMOVED***set
***REMOVED******REMOVED******REMOVED******REMOVED***next:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***subTree:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***will***REMOVED***be***REMOVED***set***REMOVED***synchronously***REMOVED***right***REMOVED***after***REMOVED***creation
***REMOVED******REMOVED******REMOVED******REMOVED***effect:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***update:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***will***REMOVED***be***REMOVED***set***REMOVED***synchronously***REMOVED***right***REMOVED***after***REMOVED***creation
***REMOVED******REMOVED******REMOVED******REMOVED***job:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***scope:***REMOVED***new***REMOVED***EffectScope(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***detached***REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***),
***REMOVED******REMOVED******REMOVED******REMOVED***render:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***proxy:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***exposed:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***exposeProxy:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***withProxy:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***provides:***REMOVED***parent***REMOVED***?***REMOVED***parent.provides***REMOVED***:***REMOVED***Object.create(appContext.provides),
***REMOVED******REMOVED******REMOVED******REMOVED***ids:***REMOVED***parent***REMOVED***?***REMOVED***parent.ids***REMOVED***:***REMOVED***["",***REMOVED***0,***REMOVED***0],
***REMOVED******REMOVED******REMOVED******REMOVED***accessCache:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***renderCache:***REMOVED***[],
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***local***REMOVED***resolved***REMOVED***assets
***REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***resolved***REMOVED***props***REMOVED***and***REMOVED***emits***REMOVED***options
***REMOVED******REMOVED******REMOVED******REMOVED***propsOptions:***REMOVED***normalizePropsOptions(type,***REMOVED***appContext),
***REMOVED******REMOVED******REMOVED******REMOVED***emitsOptions:***REMOVED***normalizeEmitsOptions(type,***REMOVED***appContext),
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***emit
***REMOVED******REMOVED******REMOVED******REMOVED***emit:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***to***REMOVED***be***REMOVED***set***REMOVED***immediately
***REMOVED******REMOVED******REMOVED******REMOVED***emitted:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***props***REMOVED***default***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED***propsDefaults:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***inheritAttrs
***REMOVED******REMOVED******REMOVED******REMOVED***inheritAttrs:***REMOVED***type.inheritAttrs,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***state
***REMOVED******REMOVED******REMOVED******REMOVED***ctx:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***attrs:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***slots:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***refs:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***setupState:***REMOVED***EMPTY_OBJ,
***REMOVED******REMOVED******REMOVED******REMOVED***setupContext:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***suspense***REMOVED***related
***REMOVED******REMOVED******REMOVED******REMOVED***suspense,
***REMOVED******REMOVED******REMOVED******REMOVED***suspenseId:***REMOVED***suspense***REMOVED***?***REMOVED***suspense.pendingId***REMOVED***:***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***asyncDep:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***asyncResolved:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***lifecycle***REMOVED***hooks
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***not***REMOVED***using***REMOVED***enums***REMOVED***here***REMOVED***because***REMOVED***it***REMOVED***results***REMOVED***in***REMOVED***computed***REMOVED***properties
***REMOVED******REMOVED******REMOVED******REMOVED***isMounted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***isUnmounted:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***isDeactivated:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***bc:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***c:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***bm:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***m:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***bu:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***u:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***um:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***bum:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***da:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***a:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***rtg:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***rtc:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***ec:***REMOVED***null,
***REMOVED******REMOVED******REMOVED******REMOVED***sp:***REMOVED***null
***REMOVED******REMOVED***};
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.ctx***REMOVED***=***REMOVED***createDevRenderContext(instance);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***instance.root***REMOVED***=***REMOVED***parent***REMOVED***?***REMOVED***parent.root***REMOVED***:***REMOVED***instance;
***REMOVED******REMOVED***instance.emit***REMOVED***=***REMOVED***emit.bind(null,***REMOVED***instance);
***REMOVED******REMOVED***if***REMOVED***(vnode.ce)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.ce(instance);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***instance;
}
let***REMOVED***currentInstance***REMOVED***=***REMOVED***null;
const***REMOVED***getCurrentInstance***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***currentInstance***REMOVED***||***REMOVED***currentRenderingInstance;
let***REMOVED***internalSetCurrentInstance;
let***REMOVED***setInSSRSetupState;
{
***REMOVED******REMOVED***const***REMOVED***g***REMOVED***=***REMOVED***getGlobalThis();
***REMOVED******REMOVED***const***REMOVED***registerGlobalSetter***REMOVED***=***REMOVED***(key,***REMOVED***setter)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***setters;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(setters***REMOVED***=***REMOVED***g[key]))***REMOVED***setters***REMOVED***=***REMOVED***g[key]***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***setters.push(setter);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(v)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(setters.length***REMOVED***>***REMOVED***1)***REMOVED***setters.forEach((set)***REMOVED***=>***REMOVED***set(v));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***setters[0](v);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED***};
***REMOVED******REMOVED***internalSetCurrentInstance***REMOVED***=***REMOVED***registerGlobalSetter(
***REMOVED******REMOVED******REMOVED******REMOVED***`__VUE_INSTANCE_SETTERS__`,
***REMOVED******REMOVED******REMOVED******REMOVED***(v)***REMOVED***=>***REMOVED***currentInstance***REMOVED***=***REMOVED***v
***REMOVED******REMOVED***);
***REMOVED******REMOVED***setInSSRSetupState***REMOVED***=***REMOVED***registerGlobalSetter(
***REMOVED******REMOVED******REMOVED******REMOVED***`__VUE_SSR_SETTERS__`,
***REMOVED******REMOVED******REMOVED******REMOVED***(v)***REMOVED***=>***REMOVED***isInSSRComponentSetup***REMOVED***=***REMOVED***v
***REMOVED******REMOVED***);
}
const***REMOVED***setCurrentInstance***REMOVED***=***REMOVED***(instance)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***currentInstance;
***REMOVED******REMOVED***internalSetCurrentInstance(instance);
***REMOVED******REMOVED***instance.scope.on();
***REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.scope.off();
***REMOVED******REMOVED******REMOVED******REMOVED***internalSetCurrentInstance(prev);
***REMOVED******REMOVED***};
};
const***REMOVED***unsetCurrentInstance***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***currentInstance***REMOVED***&&***REMOVED***currentInstance.scope.off();
***REMOVED******REMOVED***internalSetCurrentInstance(null);
};
const***REMOVED***isBuiltInTag***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap("slot,component");
function***REMOVED***validateComponentName(name,***REMOVED***{***REMOVED***isNativeTag***REMOVED***})***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isBuiltInTag(name)***REMOVED***||***REMOVED***isNativeTag(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"Do***REMOVED***not***REMOVED***use***REMOVED***built-in***REMOVED***or***REMOVED***reserved***REMOVED***HTML***REMOVED***elements***REMOVED***as***REMOVED***component***REMOVED***id:***REMOVED***"***REMOVED***+***REMOVED***name
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***isStatefulComponent(instance)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***instance.vnode.shapeFlag***REMOVED***&***REMOVED***4;
}
let***REMOVED***isInSSRComponentSetup***REMOVED***=***REMOVED***false;
function***REMOVED***setupComponent$1(instance,***REMOVED***isSSR***REMOVED***=***REMOVED***false,***REMOVED***optimized***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***isSSR***REMOVED***&&***REMOVED***setInSSRSetupState(isSSR);
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***props,***REMOVED***children***REMOVED***}***REMOVED***=***REMOVED***instance.vnode;
***REMOVED******REMOVED***const***REMOVED***isStateful***REMOVED***=***REMOVED***isStatefulComponent(instance);
***REMOVED******REMOVED***initProps(instance,***REMOVED***props,***REMOVED***isStateful,***REMOVED***isSSR);
***REMOVED******REMOVED***initSlots(instance,***REMOVED***children,***REMOVED***optimized***REMOVED***||***REMOVED***isSSR);
***REMOVED******REMOVED***const***REMOVED***setupResult***REMOVED***=***REMOVED***isStateful***REMOVED***?***REMOVED***setupStatefulComponent(instance,***REMOVED***isSSR)***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED***isSSR***REMOVED***&&***REMOVED***setInSSRSetupState(false);
***REMOVED******REMOVED***return***REMOVED***setupResult;
}
function***REMOVED***setupStatefulComponent(instance,***REMOVED***isSSR)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***_a;
***REMOVED******REMOVED***const***REMOVED***Component***REMOVED***=***REMOVED***instance.type;
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Component.name)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateComponentName(Component.name,***REMOVED***instance.appContext.config);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Component.components)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***names***REMOVED***=***REMOVED***Object.keys(Component.components);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***names.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateComponentName(names[i],***REMOVED***instance.appContext.config);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Component.directives)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***names***REMOVED***=***REMOVED***Object.keys(Component.directives);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***names.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validateDirectiveName(names[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Component.compilerOptions***REMOVED***&&***REMOVED***isRuntimeOnly())***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`"compilerOptions"***REMOVED***is***REMOVED***only***REMOVED***supported***REMOVED***when***REMOVED***using***REMOVED***a***REMOVED***build***REMOVED***of***REMOVED***Vue***REMOVED***that***REMOVED***includes***REMOVED***the***REMOVED***runtime***REMOVED***compiler.***REMOVED***Since***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***a***REMOVED***runtime-only***REMOVED***build,***REMOVED***the***REMOVED***options***REMOVED***should***REMOVED***be***REMOVED***passed***REMOVED***via***REMOVED***your***REMOVED***build***REMOVED***tool***REMOVED***config***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***instance.accessCache***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Object.create(null);
***REMOVED******REMOVED***instance.proxy***REMOVED***=***REMOVED***new***REMOVED***Proxy(instance.ctx,***REMOVED***PublicInstanceProxyHandlers);
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***exposePropsOnRenderContext(instance);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***setup***REMOVED***}***REMOVED***=***REMOVED***Component;
***REMOVED******REMOVED***if***REMOVED***(setup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setupContext***REMOVED***=***REMOVED***instance.setupContext***REMOVED***=***REMOVED***setup.length***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***createSetupContext(instance)***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reset***REMOVED***=***REMOVED***setCurrentInstance(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***setupResult***REMOVED***=***REMOVED***callWithErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setup,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***shallowReadonly(instance.props)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupContext
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***]
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isAsyncSetup***REMOVED***=***REMOVED***isPromise(setupResult);
***REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***reset();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((isAsyncSetup***REMOVED***||***REMOVED***instance.sp)***REMOVED***&&***REMOVED***!isAsyncWrapper(instance))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***markAsyncBoundary(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAsyncSetup)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setupResult.then(unsetCurrentInstance,***REMOVED***unsetCurrentInstance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isSSR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***setupResult.then((resolvedResult)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleSetupResult(instance,***REMOVED***resolvedResult,***REMOVED***isSSR);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}).catch((e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleError(e,***REMOVED***instance,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.asyncDep***REMOVED***=***REMOVED***setupResult;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!instance.suspense)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***(_a***REMOVED***=***REMOVED***Component.name)***REMOVED***!=***REMOVED***null***REMOVED***?***REMOVED***_a***REMOVED***:***REMOVED***"Anonymous";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***<${name}>:***REMOVED***setup***REMOVED***function***REMOVED***returned***REMOVED***a***REMOVED***promise,***REMOVED***but***REMOVED***no***REMOVED***<Suspense>***REMOVED***boundary***REMOVED***was***REMOVED***found***REMOVED***in***REMOVED***the***REMOVED***parent***REMOVED***component***REMOVED***tree.***REMOVED***A***REMOVED***component***REMOVED***with***REMOVED***async***REMOVED***setup()***REMOVED***must***REMOVED***be***REMOVED***nested***REMOVED***in***REMOVED***a***REMOVED***<Suspense>***REMOVED***in***REMOVED***order***REMOVED***to***REMOVED***be***REMOVED***rendered.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***handleSetupResult(instance,***REMOVED***setupResult,***REMOVED***isSSR);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***finishComponentSetup(instance,***REMOVED***isSSR);
***REMOVED******REMOVED***}
}
function***REMOVED***handleSetupResult(instance,***REMOVED***setupResult,***REMOVED***isSSR)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isFunction(setupResult))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.type.__ssrInlineRender)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.ssrRender***REMOVED***=***REMOVED***setupResult;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.render***REMOVED***=***REMOVED***setupResult;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(setupResult))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isVNode$2(setupResult))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`setup()***REMOVED***should***REMOVED***not***REMOVED***return***REMOVED***VNodes***REMOVED***directly***REMOVED***-***REMOVED***return***REMOVED***a***REMOVED***render***REMOVED***function***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.devtoolsRawSetupState***REMOVED***=***REMOVED***setupResult;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***instance.setupState***REMOVED***=***REMOVED***proxyRefs(setupResult);
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposeSetupStateOnRenderContext(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(setupResult***REMOVED***!==***REMOVED***void***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`setup()***REMOVED***should***REMOVED***return***REMOVED***an***REMOVED***object.***REMOVED***Received:***REMOVED***${setupResult***REMOVED***===***REMOVED***null***REMOVED***?***REMOVED***"null"***REMOVED***:***REMOVED***typeof***REMOVED***setupResult}`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***finishComponentSetup(instance,***REMOVED***isSSR);
}
const***REMOVED***isRuntimeOnly***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***true;
function***REMOVED***finishComponentSetup(instance,***REMOVED***isSSR,***REMOVED***skipOptions)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***Component***REMOVED***=***REMOVED***instance.type;
***REMOVED******REMOVED***if***REMOVED***(!instance.render)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***instance.render***REMOVED***=***REMOVED***Component.render***REMOVED***||***REMOVED***NOOP;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***reset***REMOVED***=***REMOVED***setCurrentInstance(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***pauseTracking();
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***applyOptions(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***resetTracking();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***reset();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!Component.render***REMOVED***&&***REMOVED***instance.render***REMOVED***===***REMOVED***NOOP***REMOVED***&&***REMOVED***!isSSR)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(Component.template)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Component***REMOVED***provided***REMOVED***template***REMOVED***option***REMOVED***but***REMOVED***runtime***REMOVED***compilation***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***in***REMOVED***this***REMOVED***build***REMOVED***of***REMOVED***Vue.`***REMOVED***+***REMOVED***(`***REMOVED***Use***REMOVED***"vue.esm-browser.js"***REMOVED***instead.`***REMOVED***)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`Component***REMOVED***is***REMOVED***missing***REMOVED***template***REMOVED***or***REMOVED***render***REMOVED***function:***REMOVED***`,***REMOVED***Component);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***attrsProxyHandlers***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***get(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***markAttrsAccessed();
***REMOVED******REMOVED******REMOVED******REMOVED***track(target,***REMOVED***"get",***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target[key];
***REMOVED******REMOVED***},
***REMOVED******REMOVED***set()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`setupContext.attrs***REMOVED***is***REMOVED***readonly.`);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***deleteProperty()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`setupContext.attrs***REMOVED***is***REMOVED***readonly.`);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
}***REMOVED***;
function***REMOVED***getSlotsProxy(instance)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***Proxy(instance.slots,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***get(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***track(instance,***REMOVED***"get",***REMOVED***"$slots");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
function***REMOVED***createSetupContext(instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***expose***REMOVED***=***REMOVED***(exposed)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(instance.exposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(`expose()***REMOVED***should***REMOVED***be***REMOVED***called***REMOVED***only***REMOVED***once***REMOVED***per***REMOVED***setup().`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exposed***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***exposedType***REMOVED***=***REMOVED***typeof***REMOVED***exposed;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exposedType***REMOVED***===***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(exposed))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposedType***REMOVED***=***REMOVED***"array";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isRef(exposed))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***exposedType***REMOVED***=***REMOVED***"ref";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(exposedType***REMOVED***!==***REMOVED***"object")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`expose()***REMOVED***should***REMOVED***be***REMOVED***passed***REMOVED***a***REMOVED***plain***REMOVED***object,***REMOVED***received***REMOVED***${exposedType}.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***instance.exposed***REMOVED***=***REMOVED***exposed***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***};
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***attrsProxy;
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***slotsProxy;
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Object.freeze({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***attrs()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***attrsProxy***REMOVED***||***REMOVED***(attrsProxy***REMOVED***=***REMOVED***new***REMOVED***Proxy(instance.attrs,***REMOVED***attrsProxyHandlers));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***slots()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***slotsProxy***REMOVED***||***REMOVED***(slotsProxy***REMOVED***=***REMOVED***getSlotsProxy(instance));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get***REMOVED***emit()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(event,***REMOVED***...args)***REMOVED***=>***REMOVED***instance.emit(event,***REMOVED***...args);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***expose
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
}
function***REMOVED***getComponentPublicInstance(instance)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(instance.exposed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***instance.exposeProxy***REMOVED***||***REMOVED***(instance.exposeProxy***REMOVED***=***REMOVED***new***REMOVED***Proxy(proxyRefs(markRaw(instance.exposed)),***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***target[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***publicPropertiesMap)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***publicPropertiesMap[key](instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***has(target,***REMOVED***key)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key***REMOVED***in***REMOVED***target***REMOVED***||***REMOVED***key***REMOVED***in***REMOVED***publicPropertiesMap;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***instance.proxy;
***REMOVED******REMOVED***}
}
const***REMOVED***classifyRE***REMOVED***=***REMOVED***/(?:^|[-_])\w/g;
const***REMOVED***classify***REMOVED***=***REMOVED***(str)***REMOVED***=>***REMOVED***str.replace(classifyRE,***REMOVED***(c)***REMOVED***=>***REMOVED***c.toUpperCase()).replace(/[-_]/g,***REMOVED***"");
function***REMOVED***getComponentName(Component,***REMOVED***includeInferred***REMOVED***=***REMOVED***true)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isFunction(Component)***REMOVED***?***REMOVED***Component.displayName***REMOVED***||***REMOVED***Component.name***REMOVED***:***REMOVED***Component.name***REMOVED***||***REMOVED***includeInferred***REMOVED***&&***REMOVED***Component.__name;
}
function***REMOVED***formatComponentName(instance,***REMOVED***Component,***REMOVED***isRoot***REMOVED***=***REMOVED***false)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***name***REMOVED***=***REMOVED***getComponentName(Component);
***REMOVED******REMOVED***if***REMOVED***(!name***REMOVED***&&***REMOVED***Component.__file)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***match***REMOVED***=***REMOVED***Component.__file.match(/([^/\\]+)\.\w+$/);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(match)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***match[1];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!name***REMOVED***&&***REMOVED***instance***REMOVED***&&***REMOVED***instance.parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inferFromRegistry***REMOVED***=***REMOVED***(registry)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***registry)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(registry[key]***REMOVED***===***REMOVED***Component)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***key;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***inferFromRegistry(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.components***REMOVED***||***REMOVED***instance.parent.type.components
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***||***REMOVED***inferFromRegistry(instance.appContext.components);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***name***REMOVED***?***REMOVED***classify(name)***REMOVED***:***REMOVED***isRoot***REMOVED***?***REMOVED***`App`***REMOVED***:***REMOVED***`Anonymous`;
}
function***REMOVED***isClassComponent(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isFunction(value)***REMOVED***&&***REMOVED***"__vccOpts"***REMOVED***in***REMOVED***value;
}

const***REMOVED***computed***REMOVED***=***REMOVED***(getterOrOptions,***REMOVED***debugOptions)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***c***REMOVED***=***REMOVED***computed$1(getterOrOptions,***REMOVED***debugOptions,***REMOVED***isInSSRComponentSetup);
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***i***REMOVED***=***REMOVED***getCurrentInstance();
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(i***REMOVED***&&***REMOVED***i.appContext.config.warnRecursiveComputed)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***c._warnRecursive***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***c;
};

const***REMOVED***version***REMOVED***=***REMOVED***"3.5.21";
const***REMOVED***warn***REMOVED***=***REMOVED***warn$1***REMOVED***;
const***REMOVED***_ssrUtils***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***createComponentInstance:***REMOVED***createComponentInstance$1,
***REMOVED******REMOVED***setupComponent:***REMOVED***setupComponent$1,
***REMOVED******REMOVED***renderComponentRoot:***REMOVED***renderComponentRoot$1,
***REMOVED******REMOVED***setCurrentRenderingInstance:***REMOVED***setCurrentRenderingInstance$1,
***REMOVED******REMOVED***isVNode:***REMOVED***isVNode$2,
***REMOVED******REMOVED***normalizeVNode:***REMOVED***normalizeVNode$1,
***REMOVED******REMOVED***getComponentPublicInstance,
***REMOVED******REMOVED***ensureValidVNode:***REMOVED***ensureValidVNode$1,
***REMOVED******REMOVED***pushWarningContext:***REMOVED***pushWarningContext$1,
***REMOVED******REMOVED***popWarningContext:***REMOVED***popWarningContext$1
};
const***REMOVED***ssrUtils***REMOVED***=***REMOVED***_ssrUtils***REMOVED***;

let***REMOVED***policy***REMOVED***=***REMOVED***void***REMOVED***0;
const***REMOVED***tt***REMOVED***=***REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***window.trustedTypes;
if***REMOVED***(tt)***REMOVED***{
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***policy***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***tt.createPolicy("vue",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createHTML:***REMOVED***(val)***REMOVED***=>***REMOVED***val
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(`Error***REMOVED***creating***REMOVED***trusted***REMOVED***types***REMOVED***policy:***REMOVED***${e}`);
***REMOVED******REMOVED***}
}
const***REMOVED***unsafeToTrustedHTML***REMOVED***=***REMOVED***policy***REMOVED***?***REMOVED***(val)***REMOVED***=>***REMOVED***policy.createHTML(val)***REMOVED***:***REMOVED***(val)***REMOVED***=>***REMOVED***val;
const***REMOVED***svgNS***REMOVED***=***REMOVED***"http://www.w3.org/2000/svg";
const***REMOVED***mathmlNS***REMOVED***=***REMOVED***"http://www.w3.org/1998/Math/MathML";
const***REMOVED***doc***REMOVED***=***REMOVED***typeof***REMOVED***document***REMOVED***!==***REMOVED***"undefined"***REMOVED***?***REMOVED***document***REMOVED***:***REMOVED***null;
const***REMOVED***templateContainer***REMOVED***=***REMOVED***doc***REMOVED***&&***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***doc.createElement("template");
const***REMOVED***nodeOps***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***insert:***REMOVED***(child,***REMOVED***parent,***REMOVED***anchor)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parent.insertBefore(child,***REMOVED***anchor***REMOVED***||***REMOVED***null);
***REMOVED******REMOVED***},
***REMOVED******REMOVED***remove:***REMOVED***(child)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parent***REMOVED***=***REMOVED***child.parentNode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.removeChild(child);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***},
***REMOVED******REMOVED***createElement:***REMOVED***(tag,***REMOVED***namespace,***REMOVED***is,***REMOVED***props)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***el***REMOVED***=***REMOVED***namespace***REMOVED***===***REMOVED***"svg"***REMOVED***?***REMOVED***doc.createElementNS(svgNS,***REMOVED***tag)***REMOVED***:***REMOVED***namespace***REMOVED***===***REMOVED***"mathml"***REMOVED***?***REMOVED***doc.createElementNS(mathmlNS,***REMOVED***tag)***REMOVED***:***REMOVED***is***REMOVED***?***REMOVED***doc.createElement(tag,***REMOVED***{***REMOVED***is***REMOVED***})***REMOVED***:***REMOVED***doc.createElement(tag);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tag***REMOVED***===***REMOVED***"select"***REMOVED***&&***REMOVED***props***REMOVED***&&***REMOVED***props.multiple***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.setAttribute("multiple",***REMOVED***props.multiple);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***el;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***createText:***REMOVED***(text)***REMOVED***=>***REMOVED***doc.createTextNode(text),
***REMOVED******REMOVED***createComment:***REMOVED***(text)***REMOVED***=>***REMOVED***doc.createComment(text),
***REMOVED******REMOVED***setText:***REMOVED***(node,***REMOVED***text)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***node.nodeValue***REMOVED***=***REMOVED***text;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***setElementText:***REMOVED***(el,***REMOVED***text)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el.textContent***REMOVED***=***REMOVED***text;
***REMOVED******REMOVED***},
***REMOVED******REMOVED***parentNode:***REMOVED***(node)***REMOVED***=>***REMOVED***node.parentNode,
***REMOVED******REMOVED***nextSibling:***REMOVED***(node)***REMOVED***=>***REMOVED***node.nextSibling,
***REMOVED******REMOVED***querySelector:***REMOVED***(selector)***REMOVED***=>***REMOVED***doc.querySelector(selector),
***REMOVED******REMOVED***setScopeId(el,***REMOVED***id)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el.setAttribute(id,***REMOVED***"");
***REMOVED******REMOVED***},
***REMOVED******REMOVED***//***REMOVED***__UNSAFE__
***REMOVED******REMOVED***//***REMOVED***Reason:***REMOVED***innerHTML.
***REMOVED******REMOVED***//***REMOVED***Static***REMOVED***content***REMOVED***here***REMOVED***can***REMOVED***only***REMOVED***come***REMOVED***from***REMOVED***compiled***REMOVED***templates.
***REMOVED******REMOVED***//***REMOVED***As***REMOVED***long***REMOVED***as***REMOVED***the***REMOVED***user***REMOVED***only***REMOVED***uses***REMOVED***trusted***REMOVED***templates,***REMOVED***this***REMOVED***is***REMOVED***safe.
***REMOVED******REMOVED***insertStaticContent(content,***REMOVED***parent,***REMOVED***anchor,***REMOVED***namespace,***REMOVED***start,***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***before***REMOVED***=***REMOVED***anchor***REMOVED***?***REMOVED***anchor.previousSibling***REMOVED***:***REMOVED***parent.lastChild;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***&&***REMOVED***(start***REMOVED***===***REMOVED***end***REMOVED***||***REMOVED***start.nextSibling))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.insertBefore(start.cloneNode(true),***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***===***REMOVED***end***REMOVED***||***REMOVED***!(start***REMOVED***=***REMOVED***start.nextSibling))***REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***templateContainer.innerHTML***REMOVED***=***REMOVED***unsafeToTrustedHTML(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***namespace***REMOVED***===***REMOVED***"svg"***REMOVED***?***REMOVED***`<svg>${content}</svg>`***REMOVED***:***REMOVED***namespace***REMOVED***===***REMOVED***"mathml"***REMOVED***?***REMOVED***`<math>${content}</math>`***REMOVED***:***REMOVED***content
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***template***REMOVED***=***REMOVED***templateContainer.content;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(namespace***REMOVED***===***REMOVED***"svg"***REMOVED***||***REMOVED***namespace***REMOVED***===***REMOVED***"mathml")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***wrapper***REMOVED***=***REMOVED***template.firstChild;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(wrapper.firstChild)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***template.appendChild(wrapper.firstChild);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***template.removeChild(wrapper);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parent.insertBefore(template,***REMOVED***anchor);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***first
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***before***REMOVED***?***REMOVED***before.nextSibling***REMOVED***:***REMOVED***parent.firstChild,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***last
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***anchor***REMOVED***?***REMOVED***anchor.previousSibling***REMOVED***:***REMOVED***parent.lastChild
***REMOVED******REMOVED******REMOVED******REMOVED***];
***REMOVED******REMOVED***}
};

const***REMOVED***vtcKey***REMOVED***=***REMOVED***Symbol("_vtc");

function***REMOVED***patchClass(el,***REMOVED***value,***REMOVED***isSVG)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***transitionClasses***REMOVED***=***REMOVED***el[vtcKey];
***REMOVED******REMOVED***if***REMOVED***(transitionClasses)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***(value***REMOVED***?***REMOVED***[value,***REMOVED***...transitionClasses]***REMOVED***:***REMOVED***[...transitionClasses]).join("***REMOVED***");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el.removeAttribute("class");
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSVG)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el.setAttribute("class",***REMOVED***value);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el.className***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}
}

const***REMOVED***vShowOriginalDisplay***REMOVED***=***REMOVED***Symbol("_vod");
const***REMOVED***vShowHidden***REMOVED***=***REMOVED***Symbol("_vsh");

const***REMOVED***CSS_VAR_TEXT***REMOVED***=***REMOVED***Symbol("CSS_VAR_TEXT"***REMOVED***);

const***REMOVED***displayRE***REMOVED***=***REMOVED***/(?:^|;)\s*display\s*:/;
function***REMOVED***patchStyle(el,***REMOVED***prev,***REMOVED***next)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***style***REMOVED***=***REMOVED***el.style;
***REMOVED******REMOVED***const***REMOVED***isCssString***REMOVED***=***REMOVED***isString(next);
***REMOVED******REMOVED***let***REMOVED***hasControlledDisplay***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(next***REMOVED***&&***REMOVED***!isCssString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isString(prev))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***prev)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[key]***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setStyle(style,***REMOVED***key,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***prevStyle***REMOVED***of***REMOVED***prev.split(";"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***prevStyle.slice(0,***REMOVED***prevStyle.indexOf(":")).trim();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(next[key]***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setStyle(style,***REMOVED***key,***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"display")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasControlledDisplay***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setStyle(style,***REMOVED***key,***REMOVED***next[key]);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isCssString)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prev***REMOVED***!==***REMOVED***next)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***cssVarText***REMOVED***=***REMOVED***style[CSS_VAR_TEXT];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cssVarText)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***next***REMOVED***+=***REMOVED***";"***REMOVED***+***REMOVED***cssVarText;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.cssText***REMOVED***=***REMOVED***next;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasControlledDisplay***REMOVED***=***REMOVED***displayRE.test(next);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prev)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.removeAttribute("style");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(vShowOriginalDisplay***REMOVED***in***REMOVED***el)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el[vShowOriginalDisplay]***REMOVED***=***REMOVED***hasControlledDisplay***REMOVED***?***REMOVED***style.display***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(el[vShowHidden])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.display***REMOVED***=***REMOVED***"none";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***semicolonRE***REMOVED***=***REMOVED***/[^\\];\s*$/;
const***REMOVED***importantRE***REMOVED***=***REMOVED***/\s*!important$/;
function***REMOVED***setStyle(style,***REMOVED***name,***REMOVED***val)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***val.forEach((v)***REMOVED***=>***REMOVED***setStyle(style,***REMOVED***name,***REMOVED***v));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(val***REMOVED***==***REMOVED***null)***REMOVED***val***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(semicolonRE.test(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Unexpected***REMOVED***semicolon***REMOVED***at***REMOVED***the***REMOVED***end***REMOVED***of***REMOVED***'${name}'***REMOVED***style***REMOVED***value:***REMOVED***'${val}'`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(name.startsWith("--"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.setProperty(name,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prefixed***REMOVED***=***REMOVED***autoPrefix(style,***REMOVED***name);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(importantRE.test(val))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style.setProperty(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hyphenate(prefixed),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***val.replace(importantRE,***REMOVED***""),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"important"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***style[prefixed]***REMOVED***=***REMOVED***val;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***prefixes***REMOVED***=***REMOVED***["Webkit",***REMOVED***"Moz",***REMOVED***"ms"];
const***REMOVED***prefixCache***REMOVED***=***REMOVED***{};
function***REMOVED***autoPrefix(style,***REMOVED***rawName)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***cached***REMOVED***=***REMOVED***prefixCache[rawName];
***REMOVED******REMOVED***if***REMOVED***(cached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***cached;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***name***REMOVED***=***REMOVED***camelize(rawName);
***REMOVED******REMOVED***if***REMOVED***(name***REMOVED***!==***REMOVED***"filter"***REMOVED***&&***REMOVED***name***REMOVED***in***REMOVED***style)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prefixCache[rawName]***REMOVED***=***REMOVED***name;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***name***REMOVED***=***REMOVED***capitalize(name);
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***prefixes.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prefixed***REMOVED***=***REMOVED***prefixes[i]***REMOVED***+***REMOVED***name;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prefixed***REMOVED***in***REMOVED***style)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***prefixCache[rawName]***REMOVED***=***REMOVED***prefixed;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***rawName;
}

const***REMOVED***xlinkNS***REMOVED***=***REMOVED***"http://www.w3.org/1999/xlink";
function***REMOVED***patchAttr(el,***REMOVED***key,***REMOVED***value,***REMOVED***isSVG,***REMOVED***instance,***REMOVED***isBoolean***REMOVED***=***REMOVED***isSpecialBooleanAttr(key))***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isSVG***REMOVED***&&***REMOVED***key.startsWith("xlink:"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.removeAttributeNS(xlinkNS,***REMOVED***key.slice(6,***REMOVED***key.length));
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.setAttributeNS(xlinkNS,***REMOVED***key,***REMOVED***value);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null***REMOVED***||***REMOVED***isBoolean***REMOVED***&&***REMOVED***!includeBooleanAttr(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.removeAttribute(key);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.setAttribute(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***key,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isBoolean***REMOVED***?***REMOVED***""***REMOVED***:***REMOVED***isSymbol(value)***REMOVED***?***REMOVED***String(value)***REMOVED***:***REMOVED***value
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

function***REMOVED***patchDOMProp(el,***REMOVED***key,***REMOVED***value,***REMOVED***parentComponent,***REMOVED***attrName)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"innerHTML"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"textContent")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el[key]***REMOVED***=***REMOVED***key***REMOVED***===***REMOVED***"innerHTML"***REMOVED***?***REMOVED***unsafeToTrustedHTML(value)***REMOVED***:***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***tag***REMOVED***=***REMOVED***el.tagName;
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"value"***REMOVED***&&***REMOVED***tag***REMOVED***!==***REMOVED***"PROGRESS"***REMOVED***&&***REMOVED***//***REMOVED***custom***REMOVED***elements***REMOVED***may***REMOVED***use***REMOVED***_value***REMOVED***internally
***REMOVED******REMOVED***!tag.includes("-"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***oldValue***REMOVED***=***REMOVED***tag***REMOVED***===***REMOVED***"OPTION"***REMOVED***?***REMOVED***el.getAttribute("value")***REMOVED***||***REMOVED***""***REMOVED***:***REMOVED***el.value;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***newValue***REMOVED***=***REMOVED***value***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#11647:***REMOVED***value***REMOVED***should***REMOVED***be***REMOVED***set***REMOVED***as***REMOVED***empty***REMOVED***string***REMOVED***for***REMOVED***null***REMOVED***and***REMOVED***undefined,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***but***REMOVED***<input***REMOVED***type="checkbox">***REMOVED***should***REMOVED***be***REMOVED***set***REMOVED***as***REMOVED***'on'.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.type***REMOVED***===***REMOVED***"checkbox"***REMOVED***?***REMOVED***"on"***REMOVED***:***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***:***REMOVED***String(value);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(oldValue***REMOVED***!==***REMOVED***newValue***REMOVED***||***REMOVED***!("_value"***REMOVED***in***REMOVED***el))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.value***REMOVED***=***REMOVED***newValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el.removeAttribute(key);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***el._value***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***needRemove***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(value***REMOVED***===***REMOVED***""***REMOVED***||***REMOVED***value***REMOVED***==***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***type***REMOVED***=***REMOVED***typeof***REMOVED***el[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"boolean")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***includeBooleanAttr(value);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value***REMOVED***==***REMOVED***null***REMOVED***&&***REMOVED***type***REMOVED***===***REMOVED***"string")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needRemove***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(type***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***needRemove***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***el[key]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!needRemove)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Failed***REMOVED***setting***REMOVED***prop***REMOVED***"${key}"***REMOVED***on***REMOVED***<${tag.toLowerCase()}>:***REMOVED***value***REMOVED***${value}***REMOVED***is***REMOVED***invalid.`,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***needRemove***REMOVED***&&***REMOVED***el.removeAttribute(attrName***REMOVED***||***REMOVED***key);
}

function***REMOVED***addEventListener(el,***REMOVED***event,***REMOVED***handler,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***el.addEventListener(event,***REMOVED***handler,***REMOVED***options);
}
function***REMOVED***removeEventListener(el,***REMOVED***event,***REMOVED***handler,***REMOVED***options)***REMOVED***{
***REMOVED******REMOVED***el.removeEventListener(event,***REMOVED***handler,***REMOVED***options);
}
const***REMOVED***veiKey***REMOVED***=***REMOVED***Symbol("_vei");
function***REMOVED***patchEvent(el,***REMOVED***rawName,***REMOVED***prevValue,***REMOVED***nextValue,***REMOVED***instance***REMOVED***=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***invokers***REMOVED***=***REMOVED***el[veiKey]***REMOVED***||***REMOVED***(el[veiKey]***REMOVED***=***REMOVED***{});
***REMOVED******REMOVED***const***REMOVED***existingInvoker***REMOVED***=***REMOVED***invokers[rawName];
***REMOVED******REMOVED***if***REMOVED***(nextValue***REMOVED***&&***REMOVED***existingInvoker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***existingInvoker.value***REMOVED***=***REMOVED***sanitizeEventValue(nextValue,***REMOVED***rawName)***REMOVED***;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[name,***REMOVED***options]***REMOVED***=***REMOVED***parseName(rawName);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(nextValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***invoker***REMOVED***=***REMOVED***invokers[rawName]***REMOVED***=***REMOVED***createInvoker(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***sanitizeEventValue(nextValue,***REMOVED***rawName)***REMOVED***,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***addEventListener(el,***REMOVED***name,***REMOVED***invoker,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(existingInvoker)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***removeEventListener(el,***REMOVED***name,***REMOVED***existingInvoker,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***invokers[rawName]***REMOVED***=***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
const***REMOVED***optionsModifierRE***REMOVED***=***REMOVED***/(?:Once|Passive|Capture)$/;
function***REMOVED***parseName(name)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***options;
***REMOVED******REMOVED***if***REMOVED***(optionsModifierRE.test(name))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***m;
***REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(m***REMOVED***=***REMOVED***name.match(optionsModifierRE))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***name***REMOVED***=***REMOVED***name.slice(0,***REMOVED***name.length***REMOVED***-***REMOVED***m[0].length);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options[m[0].toLowerCase()]***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***event***REMOVED***=***REMOVED***name[2]***REMOVED***===***REMOVED***":"***REMOVED***?***REMOVED***name.slice(3)***REMOVED***:***REMOVED***hyphenate(name.slice(2));
***REMOVED******REMOVED***return***REMOVED***[event,***REMOVED***options];
}
let***REMOVED***cachedNow***REMOVED***=***REMOVED***0;
const***REMOVED***p***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***Promise.resolve();
const***REMOVED***getNow***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***cachedNow***REMOVED***||***REMOVED***(p.then(()***REMOVED***=>***REMOVED***cachedNow***REMOVED***=***REMOVED***0),***REMOVED***cachedNow***REMOVED***=***REMOVED***Date.now());
function***REMOVED***createInvoker(initialValue,***REMOVED***instance)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***invoker***REMOVED***=***REMOVED***(e)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!e._vts)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e._vts***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(e._vts***REMOVED***<=***REMOVED***invoker.attached)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***callWithAsyncErrorHandling(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchStopImmediatePropagation(e,***REMOVED***invoker.value),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***5,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[e]
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***};
***REMOVED******REMOVED***invoker.value***REMOVED***=***REMOVED***initialValue;
***REMOVED******REMOVED***invoker.attached***REMOVED***=***REMOVED***getNow();
***REMOVED******REMOVED***return***REMOVED***invoker;
}
function***REMOVED***sanitizeEventValue(value,***REMOVED***propName)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isFunction(value)***REMOVED***||***REMOVED***isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED***`Wrong***REMOVED***type***REMOVED***passed***REMOVED***as***REMOVED***event***REMOVED***handler***REMOVED***to***REMOVED***${propName}***REMOVED***-***REMOVED***did***REMOVED***you***REMOVED***forget***REMOVED***@***REMOVED***or***REMOVED***:***REMOVED***in***REMOVED***front***REMOVED***of***REMOVED***your***REMOVED***prop?
Expected***REMOVED***function***REMOVED***or***REMOVED***array***REMOVED***of***REMOVED***functions,***REMOVED***received***REMOVED***type***REMOVED***${typeof***REMOVED***value}.`
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***NOOP;
}
function***REMOVED***patchStopImmediatePropagation(e,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***originalStop***REMOVED***=***REMOVED***e.stopImmediatePropagation;
***REMOVED******REMOVED******REMOVED******REMOVED***e.stopImmediatePropagation***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***originalStop.call(e);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***e._stopped***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.map(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(fn)***REMOVED***=>***REMOVED***(e2)***REMOVED***=>***REMOVED***!e2._stopped***REMOVED***&&***REMOVED***fn***REMOVED***&&***REMOVED***fn(e2)
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
}

const***REMOVED***isNativeOn***REMOVED***=***REMOVED***(key)***REMOVED***=>***REMOVED***key.charCodeAt(0)***REMOVED***===***REMOVED***111***REMOVED***&&***REMOVED***key.charCodeAt(1)***REMOVED***===***REMOVED***110***REMOVED***&&***REMOVED***//***REMOVED***lowercase***REMOVED***letter
key.charCodeAt(2)***REMOVED***>***REMOVED***96***REMOVED***&&***REMOVED***key.charCodeAt(2)***REMOVED***<***REMOVED***123;
const***REMOVED***patchProp***REMOVED***=***REMOVED***(el,***REMOVED***key,***REMOVED***prevValue,***REMOVED***nextValue,***REMOVED***namespace,***REMOVED***parentComponent)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***isSVG***REMOVED***=***REMOVED***namespace***REMOVED***===***REMOVED***"svg";
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"class")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***patchClass(el,***REMOVED***nextValue,***REMOVED***isSVG);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"style")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***patchStyle(el,***REMOVED***prevValue,***REMOVED***nextValue);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isOn(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isModelListener(key))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchEvent(el,***REMOVED***key,***REMOVED***prevValue,***REMOVED***nextValue,***REMOVED***parentComponent);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key[0]***REMOVED***===***REMOVED***"."***REMOVED***?***REMOVED***(key***REMOVED***=***REMOVED***key.slice(1),***REMOVED***true)***REMOVED***:***REMOVED***key[0]***REMOVED***===***REMOVED***"^"***REMOVED***?***REMOVED***(key***REMOVED***=***REMOVED***key.slice(1),***REMOVED***false)***REMOVED***:***REMOVED***shouldSetAsProp(el,***REMOVED***key,***REMOVED***nextValue,***REMOVED***isSVG))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***patchDOMProp(el,***REMOVED***key,***REMOVED***nextValue);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!el.tagName.includes("-")***REMOVED***&&***REMOVED***(key***REMOVED***===***REMOVED***"value"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"checked"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"selected"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***patchAttr(el,***REMOVED***key,***REMOVED***nextValue,***REMOVED***isSVG,***REMOVED***parentComponent,***REMOVED***key***REMOVED***!==***REMOVED***"value");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***#11081***REMOVED***force***REMOVED***set***REMOVED***props***REMOVED***for***REMOVED***possible***REMOVED***async***REMOVED***custom***REMOVED***element
***REMOVED******REMOVED******REMOVED******REMOVED***el._isVueCE***REMOVED***&&***REMOVED***(/[A-Z]/.test(key)***REMOVED***||***REMOVED***!isString(nextValue))
***REMOVED******REMOVED***)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***patchDOMProp(el,***REMOVED***camelize(key),***REMOVED***nextValue,***REMOVED***parentComponent,***REMOVED***key);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"true-value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el._trueValue***REMOVED***=***REMOVED***nextValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"false-value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***el._falseValue***REMOVED***=***REMOVED***nextValue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***patchAttr(el,***REMOVED***key,***REMOVED***nextValue,***REMOVED***isSVG);
***REMOVED******REMOVED***}
};
function***REMOVED***shouldSetAsProp(el,***REMOVED***key,***REMOVED***value,***REMOVED***isSVG)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isSVG)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"innerHTML"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"textContent")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***in***REMOVED***el***REMOVED***&&***REMOVED***isNativeOn(key)***REMOVED***&&***REMOVED***isFunction(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"spellcheck"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"draggable"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"translate"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"autocorrect")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"form")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"list"***REMOVED***&&***REMOVED***el.tagName***REMOVED***===***REMOVED***"INPUT")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"type"***REMOVED***&&***REMOVED***el.tagName***REMOVED***===***REMOVED***"TEXTAREA")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"width"***REMOVED***||***REMOVED***key***REMOVED***===***REMOVED***"height")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***tag***REMOVED***=***REMOVED***el.tagName;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(tag***REMOVED***===***REMOVED***"IMG"***REMOVED***||***REMOVED***tag***REMOVED***===***REMOVED***"VIDEO"***REMOVED***||***REMOVED***tag***REMOVED***===***REMOVED***"CANVAS"***REMOVED***||***REMOVED***tag***REMOVED***===***REMOVED***"SOURCE")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isNativeOn(key)***REMOVED***&&***REMOVED***isString(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***key***REMOVED***in***REMOVED***el;
}

const***REMOVED***vModelText***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***};
const***REMOVED***vModelCheckbox***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***};
const***REMOVED***vModelRadio***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***};
function***REMOVED***initVModelForSSR()***REMOVED***{
***REMOVED******REMOVED***vModelText.getSSRProps***REMOVED***=***REMOVED***({***REMOVED***value***REMOVED***})***REMOVED***=>***REMOVED***({***REMOVED***value***REMOVED***});
***REMOVED******REMOVED***vModelRadio.getSSRProps***REMOVED***=***REMOVED***({***REMOVED***value***REMOVED***},***REMOVED***vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.props***REMOVED***&&***REMOVED***looseEqual(vnode.props.value,***REMOVED***value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
***REMOVED******REMOVED***vModelCheckbox.getSSRProps***REMOVED***=***REMOVED***({***REMOVED***value***REMOVED***},***REMOVED***vnode)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.props***REMOVED***&&***REMOVED***looseIndexOf(value,***REMOVED***vnode.props.value)***REMOVED***>***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSet(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.props***REMOVED***&&***REMOVED***value.has(vnode.props.value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}

const***REMOVED***rendererOptions***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***extend({***REMOVED***patchProp***REMOVED***},***REMOVED***nodeOps);
let***REMOVED***renderer;
function***REMOVED***ensureRenderer()***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***renderer***REMOVED***||***REMOVED***(renderer***REMOVED***=***REMOVED***createRenderer(rendererOptions));
}
const***REMOVED***createApp***REMOVED***=***REMOVED***((...args)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***app***REMOVED***=***REMOVED***ensureRenderer().createApp(...args);
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***injectNativeTagCheck(app);
***REMOVED******REMOVED******REMOVED******REMOVED***injectCompilerOptionsCheck(app);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***mount***REMOVED***}***REMOVED***=***REMOVED***app;
***REMOVED******REMOVED***app.mount***REMOVED***=***REMOVED***(containerOrSelector)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***container***REMOVED***=***REMOVED***normalizeContainer(containerOrSelector);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!container)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***component***REMOVED***=***REMOVED***app._component;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isFunction(component)***REMOVED***&&***REMOVED***!component.render***REMOVED***&&***REMOVED***!component.template)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***component.template***REMOVED***=***REMOVED***container.innerHTML;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(container.nodeType***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container.textContent***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***proxy***REMOVED***=***REMOVED***mount(container,***REMOVED***false,***REMOVED***resolveRootNamespace(container));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(container***REMOVED***instanceof***REMOVED***Element)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container.removeAttribute("v-cloak");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***container.setAttribute("data-v-app",***REMOVED***"");
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***proxy;
***REMOVED******REMOVED***};
***REMOVED******REMOVED***return***REMOVED***app;
});
function***REMOVED***resolveRootNamespace(container)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(container***REMOVED***instanceof***REMOVED***SVGElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"svg";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***MathMLElement***REMOVED***===***REMOVED***"function"***REMOVED***&&***REMOVED***container***REMOVED***instanceof***REMOVED***MathMLElement)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"mathml";
***REMOVED******REMOVED***}
}
function***REMOVED***injectNativeTagCheck(app)***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(app.config,***REMOVED***"isNativeTag",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***(tag)***REMOVED***=>***REMOVED***isHTMLTag(tag)***REMOVED***||***REMOVED***isSVGTag(tag)***REMOVED***||***REMOVED***isMathMLTag(tag),
***REMOVED******REMOVED******REMOVED******REMOVED***writable:***REMOVED***false
***REMOVED******REMOVED***});
}
function***REMOVED***injectCompilerOptionsCheck(app)***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isCustomElement***REMOVED***=***REMOVED***app.config.isCustomElement;
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(app.config,***REMOVED***"isCustomElement",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***isCustomElement;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`The***REMOVED***\`isCustomElement\`***REMOVED***config***REMOVED***option***REMOVED***is***REMOVED***deprecated.***REMOVED***Use***REMOVED***\`compilerOptions.isCustomElement\`***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***compilerOptions***REMOVED***=***REMOVED***app.config.compilerOptions;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***msg***REMOVED***=***REMOVED***`The***REMOVED***\`compilerOptions\`***REMOVED***config***REMOVED***option***REMOVED***is***REMOVED***only***REMOVED***respected***REMOVED***when***REMOVED***using***REMOVED***a***REMOVED***build***REMOVED***of***REMOVED***Vue.js***REMOVED***that***REMOVED***includes***REMOVED***the***REMOVED***runtime***REMOVED***compiler***REMOVED***(aka***REMOVED***"full***REMOVED***build").***REMOVED***Since***REMOVED***you***REMOVED***are***REMOVED***using***REMOVED***the***REMOVED***runtime-only***REMOVED***build,***REMOVED***\`compilerOptions\`***REMOVED***must***REMOVED***be***REMOVED***passed***REMOVED***to***REMOVED***\`@vue/compiler-dom\`***REMOVED***in***REMOVED***the***REMOVED***build***REMOVED***setup***REMOVED***instead.
-***REMOVED***For***REMOVED***vue-loader:***REMOVED***pass***REMOVED***it***REMOVED***via***REMOVED***vue-loader's***REMOVED***\`compilerOptions\`***REMOVED***loader***REMOVED***option.
-***REMOVED***For***REMOVED***vue-cli:***REMOVED***see***REMOVED***https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader
-***REMOVED***For***REMOVED***vite:***REMOVED***pass***REMOVED***it***REMOVED***via***REMOVED***@vitejs/plugin-vue***REMOVED***options.***REMOVED***See***REMOVED***https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperty(app.config,***REMOVED***"compilerOptions",***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(msg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***compilerOptions;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***set()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(msg);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}
}
function***REMOVED***normalizeContainer(container)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isString(container))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***document.querySelector(container);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!res)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`Failed***REMOVED***to***REMOVED***mount***REMOVED***app:***REMOVED***mount***REMOVED***target***REMOVED***selector***REMOVED***"${container}"***REMOVED***returned***REMOVED***null.`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(window.ShadowRoot***REMOVED***&&***REMOVED***container***REMOVED***instanceof***REMOVED***window.ShadowRoot***REMOVED***&&***REMOVED***container.mode***REMOVED***===***REMOVED***"closed")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`mounting***REMOVED***on***REMOVED***a***REMOVED***ShadowRoot***REMOVED***with***REMOVED***\`{mode:***REMOVED***"closed"}\`***REMOVED***may***REMOVED***lead***REMOVED***to***REMOVED***unpredictable***REMOVED***bugs`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***container;
}
let***REMOVED***ssrDirectiveInitialized***REMOVED***=***REMOVED***false;
const***REMOVED***initDirectivesForSSR***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!ssrDirectiveInitialized)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ssrDirectiveInitialized***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***initVModelForSSR();
***REMOVED******REMOVED***}
}***REMOVED***;

const***REMOVED***shouldIgnoreProp***REMOVED***=***REMOVED***/****REMOVED***@__PURE__***REMOVED****/***REMOVED***makeMap(
***REMOVED******REMOVED***`,key,ref,innerHTML,textContent,ref_key,ref_for`
);
function***REMOVED***ssrRenderAttrs(props,***REMOVED***tag)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shouldIgnoreProp(key)***REMOVED***||***REMOVED***isOn(key)***REMOVED***||***REMOVED***tag***REMOVED***===***REMOVED***"textarea"***REMOVED***&&***REMOVED***key***REMOVED***===***REMOVED***"value")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***value***REMOVED***=***REMOVED***props[key];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"class")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***`***REMOVED***class="${ssrRenderClass(value)}"`;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"style")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***`***REMOVED***style="${ssrRenderStyle(value)}"`;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(key***REMOVED***===***REMOVED***"className")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***`***REMOVED***class="${String(value)}"`;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***ssrRenderDynamicAttr(key,***REMOVED***value,***REMOVED***tag);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***ssrRenderDynamicAttr(key,***REMOVED***value,***REMOVED***tag)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isRenderableAttrValue(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***``;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***attrKey***REMOVED***=***REMOVED***tag***REMOVED***&&***REMOVED***(tag.indexOf("-")***REMOVED***>***REMOVED***0***REMOVED***||***REMOVED***isSVGTag(tag))***REMOVED***?***REMOVED***key***REMOVED***:***REMOVED***propsToAttrMap[key]***REMOVED***||***REMOVED***key.toLowerCase();
***REMOVED******REMOVED***if***REMOVED***(isBooleanAttr(attrKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***includeBooleanAttr(value)***REMOVED***?***REMOVED***`***REMOVED***${attrKey}`***REMOVED***:***REMOVED***``;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isSSRSafeAttrName(attrKey))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***===***REMOVED***""***REMOVED***?***REMOVED***`***REMOVED***${attrKey}`***REMOVED***:***REMOVED***`***REMOVED***${attrKey}="${escapeHtml(value)}"`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`[@vue/server-renderer]***REMOVED***Skipped***REMOVED***rendering***REMOVED***unsafe***REMOVED***attribute***REMOVED***name:***REMOVED***${attrKey}`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***``;
***REMOVED******REMOVED***}
}
function***REMOVED***ssrRenderAttr(key,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isRenderableAttrValue(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***``;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***`***REMOVED***${key}="${escapeHtml(value)}"`;
}
function***REMOVED***ssrRenderClass(raw)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***escapeHtml(normalizeClass(raw));
}
function***REMOVED***ssrRenderStyle(raw)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!raw)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***"";
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isString(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***escapeHtml(raw);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***styles***REMOVED***=***REMOVED***normalizeStyle(ssrResetCssVars(raw));
***REMOVED******REMOVED***return***REMOVED***escapeHtml(stringifyStyle(styles));
}
function***REMOVED***ssrResetCssVars(raw)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!isArray(raw)***REMOVED***&&***REMOVED***isObject(raw))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***raw)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key.startsWith(":--"))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[key.slice(1)]***REMOVED***=***REMOVED***normalizeCssVarValue(raw[key]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***res[key]***REMOVED***=***REMOVED***raw[key];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***res;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***raw;
}

function***REMOVED***ssrRenderComponent(comp,***REMOVED***props***REMOVED***=***REMOVED***null,***REMOVED***children***REMOVED***=***REMOVED***null,***REMOVED***parentComponent***REMOVED***=***REMOVED***null,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***renderComponentVNode(
***REMOVED******REMOVED******REMOVED******REMOVED***createVNode(comp,***REMOVED***props,***REMOVED***children),
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED***);
}

const***REMOVED***{***REMOVED***ensureValidVNode***REMOVED***}***REMOVED***=***REMOVED***ssrUtils;
function***REMOVED***ssrRenderSlot(slots,***REMOVED***slotName,***REMOVED***slotProps,***REMOVED***fallbackRenderFn,***REMOVED***push,***REMOVED***parentComponent,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***push(`<!--[-->`);
***REMOVED******REMOVED***ssrRenderSlotInner(
***REMOVED******REMOVED******REMOVED******REMOVED***slots,
***REMOVED******REMOVED******REMOVED******REMOVED***slotName,
***REMOVED******REMOVED******REMOVED******REMOVED***slotProps,
***REMOVED******REMOVED******REMOVED******REMOVED***fallbackRenderFn,
***REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED***);
***REMOVED******REMOVED***push(`<!--]-->`);
}
function***REMOVED***ssrRenderSlotInner(slots,***REMOVED***slotName,***REMOVED***slotProps,***REMOVED***fallbackRenderFn,***REMOVED***push,***REMOVED***parentComponent,***REMOVED***slotScopeId,***REMOVED***transition)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***slotFn***REMOVED***=***REMOVED***slots[slotName];
***REMOVED******REMOVED***if***REMOVED***(slotFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***slotBuffer***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***bufferedPush***REMOVED***=***REMOVED***(item)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotBuffer.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ret***REMOVED***=***REMOVED***slotFn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotProps,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bufferedPush,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId***REMOVED***?***REMOVED***"***REMOVED***"***REMOVED***+***REMOVED***slotScopeId***REMOVED***:***REMOVED***""
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isArray(ret))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***validSlotContent***REMOVED***=***REMOVED***ensureValidVNode(ret);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(validSlotContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNodeChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validSlotContent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fallbackRenderFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackRenderFn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(`<!---->`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***isEmptySlot***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEmptySlot***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***slotBuffer.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isComment(slotBuffer[i]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***isEmptySlot***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isEmptySlot)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(fallbackRenderFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***fallbackRenderFn();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***start***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***end***REMOVED***=***REMOVED***slotBuffer.length;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(transition***REMOVED***&&***REMOVED***slotBuffer[0]***REMOVED***===***REMOVED***"<!--[-->"***REMOVED***&&***REMOVED***slotBuffer[end***REMOVED***-***REMOVED***1]***REMOVED***===***REMOVED***"<!--]-->")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***start++;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***end--;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(start***REMOVED***<***REMOVED***end)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***start;***REMOVED***i***REMOVED***<***REMOVED***end;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(slotBuffer[i]);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(`<!---->`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(fallbackRenderFn)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***fallbackRenderFn();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(transition)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***push(`<!---->`);
***REMOVED******REMOVED***}
}
const***REMOVED***commentTestRE***REMOVED***=***REMOVED***/^<!--[\s\S]*-->$/;
const***REMOVED***commentRE***REMOVED***=***REMOVED***/<!--[^]*?-->/gm;
function***REMOVED***isComment(item)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***item***REMOVED***!==***REMOVED***"string"***REMOVED***||***REMOVED***!commentTestRE.test(item))***REMOVED***return***REMOVED***false;
***REMOVED******REMOVED***if***REMOVED***(item.length***REMOVED***<=***REMOVED***8)***REMOVED***return***REMOVED***true;
***REMOVED******REMOVED***return***REMOVED***!item.replace(commentRE,***REMOVED***"").trim();
}

function***REMOVED***ssrRenderTeleport(parentPush,***REMOVED***contentRenderFn,***REMOVED***target,***REMOVED***disabled,***REMOVED***parentComponent)***REMOVED***{
***REMOVED******REMOVED***parentPush("<!--teleport***REMOVED***start-->");
***REMOVED******REMOVED***const***REMOVED***context***REMOVED***=***REMOVED***parentComponent.appContext.provides[ssrContextKey];
***REMOVED******REMOVED***const***REMOVED***teleportBuffers***REMOVED***=***REMOVED***context.__teleportBuffers***REMOVED***||***REMOVED***(context.__teleportBuffers***REMOVED***=***REMOVED***{});
***REMOVED******REMOVED***const***REMOVED***targetBuffer***REMOVED***=***REMOVED***teleportBuffers[target]***REMOVED***||***REMOVED***(teleportBuffers[target]***REMOVED***=***REMOVED***[]);
***REMOVED******REMOVED***const***REMOVED***bufferIndex***REMOVED***=***REMOVED***targetBuffer.length;
***REMOVED******REMOVED***let***REMOVED***teleportContent;
***REMOVED******REMOVED***if***REMOVED***(disabled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***contentRenderFn(parentPush);
***REMOVED******REMOVED******REMOVED******REMOVED***teleportContent***REMOVED***=***REMOVED***`<!--teleport***REMOVED***start***REMOVED***anchor--><!--teleport***REMOVED***anchor-->`;
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{***REMOVED***getBuffer,***REMOVED***push***REMOVED***}***REMOVED***=***REMOVED***createBuffer();
***REMOVED******REMOVED******REMOVED******REMOVED***push(`<!--teleport***REMOVED***start***REMOVED***anchor-->`);
***REMOVED******REMOVED******REMOVED******REMOVED***contentRenderFn(push);
***REMOVED******REMOVED******REMOVED******REMOVED***push(`<!--teleport***REMOVED***anchor-->`);
***REMOVED******REMOVED******REMOVED******REMOVED***teleportContent***REMOVED***=***REMOVED***getBuffer();
***REMOVED******REMOVED***}
***REMOVED******REMOVED***targetBuffer.splice(bufferIndex,***REMOVED***0,***REMOVED***teleportContent);
***REMOVED******REMOVED***parentPush("<!--teleport***REMOVED***end-->");
}

function***REMOVED***ssrInterpolate(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***escapeHtml(toDisplayString(value));
}

function***REMOVED***ssrRenderList(source,***REMOVED***renderItem)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(source)***REMOVED***||***REMOVED***isString(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***source.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderItem(source[i],***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(typeof***REMOVED***source***REMOVED***===***REMOVED***"number")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!Number.isInteger(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`The***REMOVED***v-for***REMOVED***range***REMOVED***expect***REMOVED***an***REMOVED***integer***REMOVED***value***REMOVED***but***REMOVED***got***REMOVED***${source}.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***source;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderItem(i***REMOVED***+***REMOVED***1,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(isObject(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(source[Symbol.iterator])***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***arr***REMOVED***=***REMOVED***Array.from(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***arr.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderItem(arr[i],***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***keys***REMOVED***=***REMOVED***Object.keys(source);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0,***REMOVED***l***REMOVED***=***REMOVED***keys.length;***REMOVED***i***REMOVED***<***REMOVED***l;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***key***REMOVED***=***REMOVED***keys[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderItem(source[key],***REMOVED***key,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

async***REMOVED***function***REMOVED***ssrRenderSuspense(push,***REMOVED***{***REMOVED***default:***REMOVED***renderContent***REMOVED***})***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(renderContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***renderContent();
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***push(`<!---->`);
***REMOVED******REMOVED***}
}

function***REMOVED***ssrGetDirectiveProps(instance,***REMOVED***dir,***REMOVED***value,***REMOVED***arg,***REMOVED***modifiers***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***dir***REMOVED***!==***REMOVED***"function"***REMOVED***&&***REMOVED***dir.getSSRProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***dir.getSSRProps(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dir,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance:***REMOVED***ssrUtils.getComponentPublicInstance(instance.$),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oldValue:***REMOVED***void***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arg,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***modifiers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED***)***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***{};
}

const***REMOVED***ssrLooseEqual***REMOVED***=***REMOVED***looseEqual;
function***REMOVED***ssrLooseContain(arr,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***looseIndexOf(arr,***REMOVED***value)***REMOVED***>***REMOVED***-1;
}
function***REMOVED***ssrRenderDynamicModel(type,***REMOVED***model,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"radio":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***looseEqual(model,***REMOVED***value)***REMOVED***?***REMOVED***"***REMOVED***checked"***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"checkbox":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(isArray(model)***REMOVED***?***REMOVED***ssrLooseContain(model,***REMOVED***value)***REMOVED***:***REMOVED***model)***REMOVED***?***REMOVED***"***REMOVED***checked"***REMOVED***:***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***ssrRenderAttr("value",***REMOVED***model);
***REMOVED******REMOVED***}
}
function***REMOVED***ssrGetDynamicModelProps(existingProps***REMOVED***=***REMOVED***{},***REMOVED***model)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***value***REMOVED***}***REMOVED***=***REMOVED***existingProps;
***REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"radio":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***looseEqual(model,***REMOVED***value)***REMOVED***?***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***}***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***"checkbox":
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(isArray(model)***REMOVED***?***REMOVED***ssrLooseContain(model,***REMOVED***value)***REMOVED***:***REMOVED***model)***REMOVED***?***REMOVED***{***REMOVED***checked:***REMOVED***true***REMOVED***}***REMOVED***:***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***value:***REMOVED***model***REMOVED***};
***REMOVED******REMOVED***}
}

function***REMOVED***ssrCompile(template,***REMOVED***instance)***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`On-the-fly***REMOVED***template***REMOVED***compilation***REMOVED***is***REMOVED***not***REMOVED***supported***REMOVED***in***REMOVED***the***REMOVED***ESM***REMOVED***build***REMOVED***of***REMOVED***@vue/server-renderer.***REMOVED***All***REMOVED***templates***REMOVED***must***REMOVED***be***REMOVED***pre-compiled***REMOVED***into***REMOVED***render***REMOVED***functions.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}

const***REMOVED***{
***REMOVED******REMOVED***createComponentInstance,
***REMOVED******REMOVED***setCurrentRenderingInstance,
***REMOVED******REMOVED***setupComponent,
***REMOVED******REMOVED***renderComponentRoot,
***REMOVED******REMOVED***normalizeVNode,
***REMOVED******REMOVED***pushWarningContext,
***REMOVED******REMOVED***popWarningContext
}***REMOVED***=***REMOVED***ssrUtils;
function***REMOVED***createBuffer()***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***appendable***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***const***REMOVED***buffer***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***return***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***getBuffer()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***buffer;
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***push(item)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isStringItem***REMOVED***=***REMOVED***isString(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(appendable***REMOVED***&&***REMOVED***isStringItem)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer[buffer.length***REMOVED***-***REMOVED***1]***REMOVED***+=***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***appendable***REMOVED***=***REMOVED***isStringItem;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPromise(item)***REMOVED***||***REMOVED***isArray(item)***REMOVED***&&***REMOVED***item.hasAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer.hasAsync***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};
}
function***REMOVED***renderComponentVNode(vnode,***REMOVED***parentComponent***REMOVED***=***REMOVED***null,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***instance***REMOVED***=***REMOVED***vnode.component***REMOVED***=***REMOVED***createComponentInstance(
***REMOVED******REMOVED******REMOVED******REMOVED***vnode,
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED***null
***REMOVED******REMOVED***);
***REMOVED******REMOVED***pushWarningContext(vnode);
***REMOVED******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***setupComponent(
***REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED***/****REMOVED***isSSR***REMOVED****/
***REMOVED******REMOVED***);
***REMOVED******REMOVED***popWarningContext();
***REMOVED******REMOVED***const***REMOVED***hasAsyncSetup***REMOVED***=***REMOVED***isPromise(res);
***REMOVED******REMOVED***let***REMOVED***prefetches***REMOVED***=***REMOVED***instance.sp;
***REMOVED******REMOVED***if***REMOVED***(hasAsyncSetup***REMOVED***||***REMOVED***prefetches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***p***REMOVED***=***REMOVED***Promise.resolve(res).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasAsyncSetup)***REMOVED***prefetches***REMOVED***=***REMOVED***instance.sp;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prefetches)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***Promise.all(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***prefetches.map((prefetch)***REMOVED***=>***REMOVED***prefetch.call(instance.proxy))
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}).catch(NOOP);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***p.then(()***REMOVED***=>***REMOVED***renderComponentSubTree(instance,***REMOVED***slotScopeId));
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***renderComponentSubTree(instance,***REMOVED***slotScopeId);
***REMOVED******REMOVED***}
}
function***REMOVED***renderComponentSubTree(instance,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***pushWarningContext(instance.vnode);
***REMOVED******REMOVED***const***REMOVED***comp***REMOVED***=***REMOVED***instance.type;
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***getBuffer,***REMOVED***push***REMOVED***}***REMOVED***=***REMOVED***createBuffer();
***REMOVED******REMOVED***if***REMOVED***(isFunction(comp))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***root***REMOVED***=***REMOVED***renderComponentRoot(instance);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!comp.props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***instance.attrs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(key.startsWith(`data-v-`))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(root.props***REMOVED***||***REMOVED***(root.props***REMOVED***=***REMOVED***{}))[key]***REMOVED***=***REMOVED***``;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***renderVNode(push,***REMOVED***instance.subTree***REMOVED***=***REMOVED***root,***REMOVED***instance,***REMOVED***slotScopeId);
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***((!instance.render***REMOVED***||***REMOVED***instance.render***REMOVED***===***REMOVED***NOOP)***REMOVED***&&***REMOVED***!instance.ssrRender***REMOVED***&&***REMOVED***!comp.ssrRender***REMOVED***&&***REMOVED***isString(comp.template))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***comp.ssrRender***REMOVED***=***REMOVED***ssrCompile(comp.template);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***ssrRender***REMOVED***=***REMOVED***instance.ssrRender***REMOVED***||***REMOVED***comp.ssrRender;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(ssrRender)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***attrs***REMOVED***=***REMOVED***instance.inheritAttrs***REMOVED***!==***REMOVED***false***REMOVED***?***REMOVED***instance.attrs***REMOVED***:***REMOVED***void***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasCloned***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***cur***REMOVED***=***REMOVED***instance;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***while***REMOVED***(true)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scopeId***REMOVED***=***REMOVED***cur.vnode.scopeId;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(scopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasCloned)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs***REMOVED***=***REMOVED***{***REMOVED***...attrs***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasCloned***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[scopeId]***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***parent***REMOVED***=***REMOVED***cur.parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parent***REMOVED***&&***REMOVED***parent.subTree***REMOVED***&&***REMOVED***parent.subTree***REMOVED***===***REMOVED***cur.vnode)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cur***REMOVED***=***REMOVED***parent;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(slotScopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasCloned)***REMOVED***attrs***REMOVED***=***REMOVED***{***REMOVED***...attrs***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***slotScopeIdList***REMOVED***=***REMOVED***slotScopeId.trim().split("***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***slotScopeIdList.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs[slotScopeIdList[i]]***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***prev***REMOVED***=***REMOVED***setCurrentRenderingInstance(instance);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ssrRender(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.proxy,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***attrs,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***compiler-optimized***REMOVED***bindings
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.props,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.setupState,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.data,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.ctx
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***finally***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***setCurrentRenderingInstance(prev);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(instance.render***REMOVED***&&***REMOVED***instance.render***REMOVED***!==***REMOVED***NOOP)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNode(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance.subTree***REMOVED***=***REMOVED***renderComponentRoot(instance),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***instance,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***componentName***REMOVED***=***REMOVED***comp.name***REMOVED***||***REMOVED***comp.__file***REMOVED***||***REMOVED***`<Anonymous>`;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`Component***REMOVED***${componentName}***REMOVED***is***REMOVED***missing***REMOVED***template***REMOVED***or***REMOVED***render***REMOVED***function.`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(`<!---->`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***popWarningContext();
***REMOVED******REMOVED***return***REMOVED***getBuffer();
}
function***REMOVED***renderVNode(push,***REMOVED***vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{***REMOVED***type,***REMOVED***shapeFlag,***REMOVED***children,***REMOVED***dirs,***REMOVED***props***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED***if***REMOVED***(dirs)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***vnode.props***REMOVED***=***REMOVED***applySSRDirectives(vnode,***REMOVED***props,***REMOVED***dirs);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***switch***REMOVED***(type)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Text:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(escapeHtml(children));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Comment:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children***REMOVED***?***REMOVED***`<!--${escapeHtmlComment(children)}-->`***REMOVED***:***REMOVED***`<!---->`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Static:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(children);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***case***REMOVED***Fragment:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(vnode.slotScopeIds)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId***REMOVED***=***REMOVED***(slotScopeId***REMOVED***?***REMOVED***slotScopeId***REMOVED***+***REMOVED***"***REMOVED***"***REMOVED***:***REMOVED***"")***REMOVED***+***REMOVED***vnode.slotScopeIds.join("***REMOVED***");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(`<!--[-->`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNodeChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(`<!--]-->`);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED***default:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderElementVNode(push,***REMOVED***vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***6)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(renderComponentVNode(vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***64)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderTeleportVNode(push,***REMOVED***vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***128)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNode(push,***REMOVED***vnode.ssContent,***REMOVED***parentComponent,***REMOVED***slotScopeId);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***"[@vue/server-renderer]***REMOVED***Invalid***REMOVED***VNode***REMOVED***type:",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***type,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`(${typeof***REMOVED***type})`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***renderVNodeChildren(push,***REMOVED***children,***REMOVED***parentComponent,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***children.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***renderVNode(push,***REMOVED***normalizeVNode(children[i]),***REMOVED***parentComponent,***REMOVED***slotScopeId);
***REMOVED******REMOVED***}
}
function***REMOVED***renderElementVNode(push,***REMOVED***vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***tag***REMOVED***=***REMOVED***vnode.type;
***REMOVED******REMOVED***let***REMOVED***{***REMOVED***props,***REMOVED***children,***REMOVED***shapeFlag,***REMOVED***scopeId***REMOVED***}***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED***let***REMOVED***openTag***REMOVED***=***REMOVED***`<${tag}`;
***REMOVED******REMOVED***if***REMOVED***(props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***openTag***REMOVED***+=***REMOVED***ssrRenderAttrs(props,***REMOVED***tag);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(scopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***openTag***REMOVED***+=***REMOVED***`***REMOVED***${scopeId}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***curParent***REMOVED***=***REMOVED***parentComponent;
***REMOVED******REMOVED***let***REMOVED***curVnode***REMOVED***=***REMOVED***vnode;
***REMOVED******REMOVED***while***REMOVED***(curParent***REMOVED***&&***REMOVED***curVnode***REMOVED***===***REMOVED***curParent.subTree)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***curVnode***REMOVED***=***REMOVED***curParent.vnode;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(curVnode.scopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***openTag***REMOVED***+=***REMOVED***`***REMOVED***${curVnode.scopeId}`;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***curParent***REMOVED***=***REMOVED***curParent.parent;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(slotScopeId)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***openTag***REMOVED***+=***REMOVED***`***REMOVED***${slotScopeId}`;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***push(openTag***REMOVED***+***REMOVED***`>`);
***REMOVED******REMOVED***if***REMOVED***(!isVoidTag(tag))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***hasChildrenOverride***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props.innerHTML)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChildrenOverride***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(props.innerHTML);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(props.textContent)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChildrenOverride***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(escapeHtml(props.textContent));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(tag***REMOVED***===***REMOVED***"textarea"***REMOVED***&&***REMOVED***props.value)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***hasChildrenOverride***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(escapeHtml(props.value));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!hasChildrenOverride)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***8)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(escapeHtml(children));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(shapeFlag***REMOVED***&***REMOVED***16)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNodeChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***push(`</${tag}>`);
***REMOVED******REMOVED***}
}
function***REMOVED***applySSRDirectives(vnode,***REMOVED***rawProps,***REMOVED***dirs)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***toMerge***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***dirs.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***binding***REMOVED***=***REMOVED***dirs[i];
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***dir:***REMOVED***{***REMOVED***getSSRProps***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***=***REMOVED***binding;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(getSSRProps)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***props***REMOVED***=***REMOVED***getSSRProps(binding,***REMOVED***vnode);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(props)***REMOVED***toMerge.push(props);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***mergeProps(rawProps***REMOVED***||***REMOVED***{},***REMOVED***...toMerge);
}
function***REMOVED***renderTeleportVNode(push,***REMOVED***vnode,***REMOVED***parentComponent,***REMOVED***slotScopeId)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***target***REMOVED***=***REMOVED***vnode.props***REMOVED***&&***REMOVED***vnode.props.to;
***REMOVED******REMOVED***const***REMOVED***disabled***REMOVED***=***REMOVED***vnode.props***REMOVED***&&***REMOVED***vnode.props.disabled;
***REMOVED******REMOVED***if***REMOVED***(!target)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!disabled)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***warn(`[@vue/server-renderer]***REMOVED***Teleport***REMOVED***is***REMOVED***missing***REMOVED***target***REMOVED***prop.`);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(!isString(target))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***warn(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`[@vue/server-renderer]***REMOVED***Teleport***REMOVED***target***REMOVED***must***REMOVED***be***REMOVED***a***REMOVED***query***REMOVED***selector***REMOVED***string.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***ssrRenderTeleport(
***REMOVED******REMOVED******REMOVED******REMOVED***push,
***REMOVED******REMOVED******REMOVED******REMOVED***(push2)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderVNodeChildren(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push2,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vnode.children,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parentComponent,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***slotScopeId
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***target,
***REMOVED******REMOVED******REMOVED******REMOVED***disabled***REMOVED***||***REMOVED***disabled***REMOVED***===***REMOVED***"",
***REMOVED******REMOVED******REMOVED******REMOVED***parentComponent
***REMOVED******REMOVED***);
}

const***REMOVED***{***REMOVED***isVNode:***REMOVED***isVNode$1***REMOVED***}***REMOVED***=***REMOVED***ssrUtils;
function***REMOVED***nestedUnrollBuffer(buffer,***REMOVED***parentRet,***REMOVED***startIndex)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(!buffer.hasAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***parentRet***REMOVED***+***REMOVED***unrollBufferSync$1(buffer);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***parentRet;
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***startIndex;***REMOVED***i***REMOVED***<***REMOVED***buffer.length;***REMOVED***i***REMOVED***+=***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***item***REMOVED***=***REMOVED***buffer[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPromise(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***item.then((nestedItem)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer[i]***REMOVED***=***REMOVED***nestedItem;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nestedUnrollBuffer(buffer,***REMOVED***ret,***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***nestedUnrollBuffer(item,***REMOVED***ret,***REMOVED***0);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPromise(result))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***result.then((nestedItem)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***buffer[i]***REMOVED***=***REMOVED***nestedItem;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***nestedUnrollBuffer(buffer,***REMOVED***"",***REMOVED***i);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***=***REMOVED***result;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
function***REMOVED***unrollBuffer$1(buffer)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***nestedUnrollBuffer(buffer,***REMOVED***"",***REMOVED***0);
}
function***REMOVED***unrollBufferSync$1(buffer)***REMOVED***{
***REMOVED******REMOVED***let***REMOVED***ret***REMOVED***=***REMOVED***"";
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***buffer.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***item***REMOVED***=***REMOVED***buffer[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***ret***REMOVED***+=***REMOVED***unrollBufferSync$1(item);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***ret;
}
async***REMOVED***function***REMOVED***renderToString(input,***REMOVED***context***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isVNode$1(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***renderToString(createApp({***REMOVED***render:***REMOVED***()***REMOVED***=>***REMOVED***input***REMOVED***}),***REMOVED***context);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***vnode***REMOVED***=***REMOVED***createVNode(input._component,***REMOVED***input._props);
***REMOVED******REMOVED***vnode.appContext***REMOVED***=***REMOVED***input._context;
***REMOVED******REMOVED***input.provide(ssrContextKey,***REMOVED***context);
***REMOVED******REMOVED***const***REMOVED***buffer***REMOVED***=***REMOVED***await***REMOVED***renderComponentVNode(vnode);
***REMOVED******REMOVED***const***REMOVED***result***REMOVED***=***REMOVED***await***REMOVED***unrollBuffer$1(buffer);
***REMOVED******REMOVED***await***REMOVED***resolveTeleports(context);
***REMOVED******REMOVED***if***REMOVED***(context.__watcherHandles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***unwatch***REMOVED***of***REMOVED***context.__watcherHandles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unwatch();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}
async***REMOVED***function***REMOVED***resolveTeleports(context)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(context.__teleportBuffers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***context.teleports***REMOVED***=***REMOVED***context.teleports***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***key***REMOVED***in***REMOVED***context.__teleportBuffers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context.teleports[key]***REMOVED***=***REMOVED***await***REMOVED***unrollBuffer$1(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***Promise.all([context.__teleportBuffers[key]])
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}

const***REMOVED***{***REMOVED***isVNode***REMOVED***}***REMOVED***=***REMOVED***ssrUtils;
async***REMOVED***function***REMOVED***unrollBuffer(buffer,***REMOVED***stream)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(buffer.hasAsync)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***buffer.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***item***REMOVED***=***REMOVED***buffer[i];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isPromise(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***item***REMOVED***=***REMOVED***await***REMOVED***item;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***unrollBuffer(item,***REMOVED***stream);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***unrollBufferSync(buffer,***REMOVED***stream);
***REMOVED******REMOVED***}
}
function***REMOVED***unrollBufferSync(buffer,***REMOVED***stream)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***buffer.length;***REMOVED***i++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***item***REMOVED***=***REMOVED***buffer[i];
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isString(item))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream.push(item);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unrollBufferSync(item,***REMOVED***stream);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
}
function***REMOVED***renderToSimpleStream(input,***REMOVED***context,***REMOVED***stream)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isVNode(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***renderToSimpleStream(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***createApp({***REMOVED***render:***REMOVED***()***REMOVED***=>***REMOVED***input***REMOVED***}),
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***context,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***stream
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***vnode***REMOVED***=***REMOVED***createVNode(input._component,***REMOVED***input._props);
***REMOVED******REMOVED***vnode.appContext***REMOVED***=***REMOVED***input._context;
***REMOVED******REMOVED***input.provide(ssrContextKey,***REMOVED***context);
***REMOVED******REMOVED***Promise.resolve(renderComponentVNode(vnode)).then((buffer)***REMOVED***=>***REMOVED***unrollBuffer(buffer,***REMOVED***stream)).then(()***REMOVED***=>***REMOVED***resolveTeleports(context)).then(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(context.__watcherHandles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***unwatch***REMOVED***of***REMOVED***context.__watcherHandles)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unwatch();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}).then(()***REMOVED***=>***REMOVED***stream.push(null)).catch((error)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***stream.destroy(error);
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***stream;
}
function***REMOVED***renderToStream(input,***REMOVED***context***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***console.warn(
***REMOVED******REMOVED******REMOVED******REMOVED***`[@vue/server-renderer]***REMOVED***renderToStream***REMOVED***is***REMOVED***deprecated***REMOVED***-***REMOVED***use***REMOVED***renderToNodeStream***REMOVED***instead.`
***REMOVED******REMOVED***);
***REMOVED******REMOVED***return***REMOVED***renderToNodeStream(input,***REMOVED***context);
}
function***REMOVED***renderToNodeStream(input,***REMOVED***context***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`ESM***REMOVED***build***REMOVED***of***REMOVED***renderToStream()***REMOVED***does***REMOVED***not***REMOVED***support***REMOVED***renderToNodeStream().***REMOVED***Use***REMOVED***pipeToNodeWritable()***REMOVED***with***REMOVED***an***REMOVED***existing***REMOVED***Node.js***REMOVED***Writable***REMOVED***stream***REMOVED***instance***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
}
function***REMOVED***pipeToNodeWritable(input,***REMOVED***context***REMOVED***=***REMOVED***{},***REMOVED***writable)***REMOVED***{
***REMOVED******REMOVED***renderToSimpleStream(input,***REMOVED***context,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***push(content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable.write(content);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable.end();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***destroy(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writable.destroy(err);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
function***REMOVED***renderToWebStream(input,***REMOVED***context***REMOVED***=***REMOVED***{})***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***ReadableStream***REMOVED***!==***REMOVED***"function")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***Error(
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***`ReadableStream***REMOVED***constructor***REMOVED***is***REMOVED***not***REMOVED***available***REMOVED***in***REMOVED***the***REMOVED***global***REMOVED***scope.***REMOVED***If***REMOVED***the***REMOVED***target***REMOVED***environment***REMOVED***does***REMOVED***support***REMOVED***web***REMOVED***streams,***REMOVED***consider***REMOVED***using***REMOVED***pipeToWebWritable()***REMOVED***with***REMOVED***an***REMOVED***existing***REMOVED***WritableStream***REMOVED***instance***REMOVED***instead.`
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***const***REMOVED***encoder***REMOVED***=***REMOVED***new***REMOVED***TextEncoder();
***REMOVED******REMOVED***let***REMOVED***cancelled***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***return***REMOVED***new***REMOVED***ReadableStream({
***REMOVED******REMOVED******REMOVED******REMOVED***start(controller)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***renderToSimpleStream(input,***REMOVED***context,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***push(content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(cancelled)***REMOVED***return;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***controller.enqueue(encoder.encode(content));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***controller.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***destroy(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***controller.error(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***cancel()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cancelled***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}
function***REMOVED***pipeToWebWritable(input,***REMOVED***context***REMOVED***=***REMOVED***{},***REMOVED***writable)***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***writer***REMOVED***=***REMOVED***writable.getWriter();
***REMOVED******REMOVED***const***REMOVED***encoder***REMOVED***=***REMOVED***new***REMOVED***TextEncoder();
***REMOVED******REMOVED***let***REMOVED***hasReady***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***hasReady***REMOVED***=***REMOVED***isPromise(writer.ready);
***REMOVED******REMOVED***}***REMOVED***catch***REMOVED***(e)***REMOVED***{
***REMOVED******REMOVED***}
***REMOVED******REMOVED***renderToSimpleStream(input,***REMOVED***context,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***async***REMOVED***push(content)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(hasReady)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***await***REMOVED***writer.ready;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(content***REMOVED***!=***REMOVED***null)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***writer.write(encoder.encode(content));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***writer.close();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***destroy(err)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***console.log(err);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***writer.close();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***});
}

initDirectivesForSSR();

export***REMOVED***{***REMOVED***pipeToNodeWritable,***REMOVED***pipeToWebWritable,***REMOVED***renderToNodeStream,***REMOVED***renderToSimpleStream,***REMOVED***renderToStream,***REMOVED***renderToString,***REMOVED***renderToWebStream,***REMOVED***ssrGetDirectiveProps,***REMOVED***ssrGetDynamicModelProps,***REMOVED***includeBooleanAttr***REMOVED***as***REMOVED***ssrIncludeBooleanAttr,***REMOVED***ssrInterpolate,***REMOVED***ssrLooseContain,***REMOVED***ssrLooseEqual,***REMOVED***ssrRenderAttr,***REMOVED***ssrRenderAttrs,***REMOVED***ssrRenderClass,***REMOVED***ssrRenderComponent,***REMOVED***ssrRenderDynamicAttr,***REMOVED***ssrRenderDynamicModel,***REMOVED***ssrRenderList,***REMOVED***ssrRenderSlot,***REMOVED***ssrRenderSlotInner,***REMOVED***ssrRenderStyle,***REMOVED***ssrRenderSuspense,***REMOVED***ssrRenderTeleport,***REMOVED***renderVNode***REMOVED***as***REMOVED***ssrRenderVNode***REMOVED***};
