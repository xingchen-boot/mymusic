{"version":3,"names":["_utils","require","defineType","visitor","aliases","fields","process","env","BABEL_TYPES_8_BREAKING","object","validate","Object","assign","oneOfNodeTypes","callee","assertNodeType","expression","builder","body","async","assertValueType","default","exported","properties","validateArrayOfType","elements","arrayOfType","value"],"sources":["../../src/definitions/experimental.ts"],"sourcesContent":["import***REMOVED***defineType,***REMOVED***{\n***REMOVED******REMOVED***arrayOfType,\n***REMOVED******REMOVED***assertNodeType,\n***REMOVED******REMOVED***assertValueType,\n***REMOVED******REMOVED***validateArrayOfType,\n}***REMOVED***from***REMOVED***\"./utils.ts\";\n\ndefineType(\"ArgumentPlaceholder\",***REMOVED***{});\n\ndefineType(\"BindExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"object\",***REMOVED***\"callee\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:\n***REMOVED******REMOVED******REMOVED******REMOVED***!process.env.BABEL_8_BREAKING***REMOVED***&&***REMOVED***!process.env.BABEL_TYPES_8_BREAKING\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***Object.assign(()***REMOVED***=>***REMOVED***{},***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***oneOfNodeTypes:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***object:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n});\n\ndefineType(\"Decorator\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"DoExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"body\"],\n***REMOVED******REMOVED***builder:***REMOVED***[\"body\",***REMOVED***\"async\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"BlockStatement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***async:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"boolean\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***false,\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"ExportDefaultSpecifier\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"exported\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"ModuleSpecifier\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***exported:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Identifier\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"RecordExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"properties\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***validateArrayOfType(\"ObjectProperty\",***REMOVED***\"SpreadElement\"),\n***REMOVED******REMOVED***},\n});\n\ndefineType(\"TupleExpression\",***REMOVED***{\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***arrayOfType(\"Expression\",***REMOVED***\"SpreadElement\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***default:***REMOVED***[],\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***visitor:***REMOVED***[\"elements\"],\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\nif***REMOVED***(!process.env.BABEL_8_BREAKING)***REMOVED***{\n***REMOVED******REMOVED***defineType(\"DecimalLiteral\",***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***builder:***REMOVED***[\"value\"],\n***REMOVED******REMOVED******REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertValueType(\"string\"),\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED******REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\",***REMOVED***\"Pureish\",***REMOVED***\"Literal\",***REMOVED***\"Immutable\"],\n***REMOVED******REMOVED***});\n}\n\n//***REMOVED***https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\",***REMOVED***{\n***REMOVED******REMOVED***visitor:***REMOVED***[\"body\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Program\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\n//***REMOVED***https://github.com/tc39/proposal-pipeline-operator\n//***REMOVED***https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\n//***REMOVED***https://github.com/tc39/proposal-pipeline-operator\n//***REMOVED***https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"expression\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"expression\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***expression:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\",***REMOVED***{\n***REMOVED******REMOVED***builder:***REMOVED***[\"callee\"],\n***REMOVED******REMOVED***visitor:***REMOVED***[\"callee\"],\n***REMOVED******REMOVED***fields:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***validate:***REMOVED***assertNodeType(\"Expression\"),\n***REMOVED******REMOVED******REMOVED******REMOVED***},\n***REMOVED******REMOVED***},\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Expression\"],\n});\n\n//***REMOVED***https://github.com/tc39/proposal-discard-binding\ndefineType(\"VoidPattern\",***REMOVED***{\n***REMOVED******REMOVED***aliases:***REMOVED***[\"Pattern\",***REMOVED***\"PatternLike\",***REMOVED***\"FunctionParameter\"],\n});\n"],"mappings":"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","ignoreList":[]}