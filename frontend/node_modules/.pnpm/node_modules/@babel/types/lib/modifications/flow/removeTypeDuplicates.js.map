{"version":3,"names":["_index","require","getQualifiedName","node","isIdentifier","name","id","qualification","removeTypeDuplicates","nodesIn","nodes","Array","from","generics","Map","bases","typeGroups","Set","types","i","length","includes","isAnyTypeAnnotation","isFlowBaseAnnotation","set","type","isUnionTypeAnnotation","has","push","add","isGenericTypeAnnotation","existing","get","typeParameters","params","baseType","genericName"],"sources":["../../../src/modifications/flow/removeTypeDuplicates.ts"],"sourcesContent":["import***REMOVED***{\n***REMOVED******REMOVED***isAnyTypeAnnotation,\n***REMOVED******REMOVED***isGenericTypeAnnotation,\n***REMOVED******REMOVED***isUnionTypeAnnotation,\n***REMOVED******REMOVED***isFlowBaseAnnotation,\n***REMOVED******REMOVED***isIdentifier,\n}***REMOVED***from***REMOVED***\"../../validators/generated/index.ts\";\nimport***REMOVED***type***REMOVED*******REMOVED***as***REMOVED***t***REMOVED***from***REMOVED***\"../../index.ts\";\n\nfunction***REMOVED***getQualifiedName(node:***REMOVED***t.GenericTypeAnnotation[\"id\"]):***REMOVED***string***REMOVED***{\n***REMOVED******REMOVED***return***REMOVED***isIdentifier(node)\n***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***node.name\n***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***`${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n***REMOVED*******REMOVED***Dedupe***REMOVED***type***REMOVED***annotations.\n***REMOVED****/\nexport***REMOVED***default***REMOVED***function***REMOVED***removeTypeDuplicates(\n***REMOVED******REMOVED***nodesIn:***REMOVED***ReadonlyArray<t.FlowType***REMOVED***|***REMOVED***false***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***undefined>,\n):***REMOVED***t.FlowType[]***REMOVED***{\n***REMOVED******REMOVED***const***REMOVED***nodes***REMOVED***=***REMOVED***Array.from(nodesIn);\n\n***REMOVED******REMOVED***const***REMOVED***generics***REMOVED***=***REMOVED***new***REMOVED***Map<string,***REMOVED***t.GenericTypeAnnotation>();\n***REMOVED******REMOVED***const***REMOVED***bases***REMOVED***=***REMOVED***new***REMOVED***Map<t.FlowBaseAnnotation[\"type\"],***REMOVED***t.FlowBaseAnnotation>();\n\n***REMOVED******REMOVED***//***REMOVED***store***REMOVED***union***REMOVED***type***REMOVED***groups***REMOVED***to***REMOVED***circular***REMOVED***references\n***REMOVED******REMOVED***const***REMOVED***typeGroups***REMOVED***=***REMOVED***new***REMOVED***Set<t.FlowType[]>();\n\n***REMOVED******REMOVED***const***REMOVED***types:***REMOVED***t.FlowType[]***REMOVED***=***REMOVED***[];\n\n***REMOVED******REMOVED***for***REMOVED***(let***REMOVED***i***REMOVED***=***REMOVED***0;***REMOVED***i***REMOVED***<***REMOVED***nodes.length;***REMOVED***i++)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***node***REMOVED***=***REMOVED***nodes[i];\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!node)***REMOVED***continue;\n\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***detect***REMOVED***duplicates\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(types.includes(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***this***REMOVED***type***REMOVED***matches***REMOVED***anything\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isAnyTypeAnnotation(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***[node];\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFlowBaseAnnotation(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***bases.set(node.type,***REMOVED***node);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isUnionTypeAnnotation(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!typeGroups.has(node.types))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nodes.push(...node.types);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***typeGroups.add(node.types);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***find***REMOVED***a***REMOVED***matching***REMOVED***generic***REMOVED***type***REMOVED***and***REMOVED***merge***REMOVED***and***REMOVED***deduplicate***REMOVED***the***REMOVED***type***REMOVED***parameters\n***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isGenericTypeAnnotation(node))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***name***REMOVED***=***REMOVED***getQualifiedName(node.id);\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(generics.has(name))***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***existing:***REMOVED***t.Flow***REMOVED***=***REMOVED***generics.get(name);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(existing.typeParameters)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(node.typeParameters)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.typeParameters.params.push(...node.typeParameters.params);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.typeParameters.params***REMOVED***=***REMOVED***removeTypeDuplicates(\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing.typeParameters.params,\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***existing***REMOVED***=***REMOVED***node.typeParameters;\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***generics.set(name,***REMOVED***node);\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue;\n***REMOVED******REMOVED******REMOVED******REMOVED***}\n\n***REMOVED******REMOVED******REMOVED******REMOVED***types.push(node);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***add***REMOVED***back***REMOVED***in***REMOVED***bases\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[,***REMOVED***baseType]***REMOVED***of***REMOVED***bases)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***types.push(baseType);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***//***REMOVED***add***REMOVED***back***REMOVED***in***REMOVED***generics\n***REMOVED******REMOVED***for***REMOVED***(const***REMOVED***[,***REMOVED***genericName]***REMOVED***of***REMOVED***generics)***REMOVED***{\n***REMOVED******REMOVED******REMOVED******REMOVED***types.push(genericName);\n***REMOVED******REMOVED***}\n\n***REMOVED******REMOVED***return***REMOVED***types;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AASA,SAASC,gBAAgBA,CAACC,IAAmC,EAAU;EACrE,OAAO,IAAAC,mBAAY,EAACD,IAAI,CAAC,GACrBA,IAAI,CAACE,IAAI,GACT,GAAGF,IAAI,CAACG,EAAE,CAACD,IAAI,IAAIH,gBAAgB,CAACC,IAAI,CAACI,aAAa,CAAC,EAAE;AAC/D;AAKe,SAASC,oBAAoBA,CAC1CC,OAA6D,EAC/C;EACd,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC;EAEjC,MAAMI,QAAQ,GAAG,IAAIC,GAAG,CAAkC,CAAC;EAC3D,MAAMC,KAAK,GAAG,IAAID,GAAG,CAAqD,CAAC;EAG3E,MAAME,UAAU,GAAG,IAAIC,GAAG,CAAe,CAAC;EAE1C,MAAMC,KAAmB,GAAG,EAAE;EAE9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAMhB,IAAI,GAAGO,KAAK,CAACS,CAAC,CAAC;IACrB,IAAI,CAAChB,IAAI,EAAE;IAGX,IAAIe,KAAK,CAACG,QAAQ,CAAClB,IAAI,CAAC,EAAE;MACxB;IACF;IAGA,IAAI,IAAAmB,0BAAmB,EAACnB,IAAI,CAAC,EAAE;MAC7B,OAAO,CAACA,IAAI,CAAC;IACf;IAEA,IAAI,IAAAoB,2BAAoB,EAACpB,IAAI,CAAC,EAAE;MAC9BY,KAAK,CAACS,GAAG,CAACrB,IAAI,CAACsB,IAAI,EAAEtB,IAAI,CAAC;MAC1B;IACF;IAEA,IAAI,IAAAuB,4BAAqB,EAACvB,IAAI,CAAC,EAAE;MAC/B,IAAI,CAACa,UAAU,CAACW,GAAG,CAACxB,IAAI,CAACe,KAAK,CAAC,EAAE;QAC/BR,KAAK,CAACkB,IAAI,CAAC,GAAGzB,IAAI,CAACe,KAAK,CAAC;QACzBF,UAAU,CAACa,GAAG,CAAC1B,IAAI,CAACe,KAAK,CAAC;MAC5B;MACA;IACF;IAGA,IAAI,IAAAY,8BAAuB,EAAC3B,IAAI,CAAC,EAAE;MACjC,MAAME,IAAI,GAAGH,gBAAgB,CAACC,IAAI,CAACG,EAAE,CAAC;MAEtC,IAAIO,QAAQ,CAACc,GAAG,CAACtB,IAAI,CAAC,EAAE;QACtB,IAAI0B,QAAgB,GAAGlB,QAAQ,CAACmB,GAAG,CAAC3B,IAAI,CAAC;QACzC,IAAI0B,QAAQ,CAACE,cAAc,EAAE;UAC3B,IAAI9B,IAAI,CAAC8B,cAAc,EAAE;YACvBF,QAAQ,CAACE,cAAc,CAACC,MAAM,CAACN,IAAI,CAAC,GAAGzB,IAAI,CAAC8B,cAAc,CAACC,MAAM,CAAC;YAClEH,QAAQ,CAACE,cAAc,CAACC,MAAM,GAAG1B,oBAAoB,CACnDuB,QAAQ,CAACE,cAAc,CAACC,MAC1B,CAAC;UACH;QACF,CAAC,MAAM;UACLH,QAAQ,GAAG5B,IAAI,CAAC8B,cAAc;QAChC;MACF,CAAC,MAAM;QACLpB,QAAQ,CAACW,GAAG,CAACnB,IAAI,EAAEF,IAAI,CAAC;MAC1B;MAEA;IACF;IAEAe,KAAK,CAACU,IAAI,CAACzB,IAAI,CAAC;EAClB;EAGA,KAAK,MAAM,GAAGgC,QAAQ,CAAC,IAAIpB,KAAK,EAAE;IAChCG,KAAK,CAACU,IAAI,CAACO,QAAQ,CAAC;EACtB;EAGA,KAAK,MAAM,GAAGC,WAAW,CAAC,IAAIvB,QAAQ,EAAE;IACtCK,KAAK,CAACU,IAAI,CAACQ,WAAW,CAAC;EACzB;EAEA,OAAOlB,KAAK;AACd","ignoreList":[]}