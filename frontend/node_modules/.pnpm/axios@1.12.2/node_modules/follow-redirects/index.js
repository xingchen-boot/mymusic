var***REMOVED***url***REMOVED***=***REMOVED***require("url");
var***REMOVED***URL***REMOVED***=***REMOVED***url.URL;
var***REMOVED***http***REMOVED***=***REMOVED***require("http");
var***REMOVED***https***REMOVED***=***REMOVED***require("https");
var***REMOVED***Writable***REMOVED***=***REMOVED***require("stream").Writable;
var***REMOVED***assert***REMOVED***=***REMOVED***require("assert");
var***REMOVED***debug***REMOVED***=***REMOVED***require("./debug");

//***REMOVED***Preventive***REMOVED***platform***REMOVED***detection
//***REMOVED***istanbul***REMOVED***ignore***REMOVED***next
(function***REMOVED***detectUnsupportedEnvironment()***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***looksLikeNode***REMOVED***=***REMOVED***typeof***REMOVED***process***REMOVED***!==***REMOVED***"undefined";
***REMOVED******REMOVED***var***REMOVED***looksLikeBrowser***REMOVED***=***REMOVED***typeof***REMOVED***window***REMOVED***!==***REMOVED***"undefined"***REMOVED***&&***REMOVED***typeof***REMOVED***document***REMOVED***!==***REMOVED***"undefined";
***REMOVED******REMOVED***var***REMOVED***looksLikeV8***REMOVED***=***REMOVED***isFunction(Error.captureStackTrace);
***REMOVED******REMOVED***if***REMOVED***(!looksLikeNode***REMOVED***&&***REMOVED***(looksLikeBrowser***REMOVED***||***REMOVED***!looksLikeV8))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***console.warn("The***REMOVED***follow-redirects***REMOVED***package***REMOVED***should***REMOVED***be***REMOVED***excluded***REMOVED***from***REMOVED***browser***REMOVED***builds.");
***REMOVED******REMOVED***}
}());

//***REMOVED***Whether***REMOVED***to***REMOVED***use***REMOVED***the***REMOVED***native***REMOVED***URL***REMOVED***object***REMOVED***or***REMOVED***the***REMOVED***legacy***REMOVED***url***REMOVED***module
var***REMOVED***useNativeURL***REMOVED***=***REMOVED***false;
try***REMOVED***{
***REMOVED******REMOVED***assert(new***REMOVED***URL(""));
}
catch***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED***useNativeURL***REMOVED***=***REMOVED***error.code***REMOVED***===***REMOVED***"ERR_INVALID_URL";
}

//***REMOVED***URL***REMOVED***fields***REMOVED***to***REMOVED***preserve***REMOVED***in***REMOVED***copy***REMOVED***operations
var***REMOVED***preservedUrlFields***REMOVED***=***REMOVED***[
***REMOVED******REMOVED***"auth",
***REMOVED******REMOVED***"host",
***REMOVED******REMOVED***"hostname",
***REMOVED******REMOVED***"href",
***REMOVED******REMOVED***"path",
***REMOVED******REMOVED***"pathname",
***REMOVED******REMOVED***"port",
***REMOVED******REMOVED***"protocol",
***REMOVED******REMOVED***"query",
***REMOVED******REMOVED***"search",
***REMOVED******REMOVED***"hash",
];

//***REMOVED***Create***REMOVED***handlers***REMOVED***that***REMOVED***pass***REMOVED***events***REMOVED***from***REMOVED***native***REMOVED***requests
var***REMOVED***events***REMOVED***=***REMOVED***["abort",***REMOVED***"aborted",***REMOVED***"connect",***REMOVED***"error",***REMOVED***"socket",***REMOVED***"timeout"];
var***REMOVED***eventHandlers***REMOVED***=***REMOVED***Object.create(null);
events.forEach(function***REMOVED***(event)***REMOVED***{
***REMOVED******REMOVED***eventHandlers[event]***REMOVED***=***REMOVED***function***REMOVED***(arg1,***REMOVED***arg2,***REMOVED***arg3)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._redirectable.emit(event,***REMOVED***arg1,***REMOVED***arg2,***REMOVED***arg3);
***REMOVED******REMOVED***};
});

//***REMOVED***Error***REMOVED***types***REMOVED***with***REMOVED***codes
var***REMOVED***InvalidUrlError***REMOVED***=***REMOVED***createErrorType(
***REMOVED******REMOVED***"ERR_INVALID_URL",
***REMOVED******REMOVED***"Invalid***REMOVED***URL",
***REMOVED******REMOVED***TypeError
);
var***REMOVED***RedirectionError***REMOVED***=***REMOVED***createErrorType(
***REMOVED******REMOVED***"ERR_FR_REDIRECTION_FAILURE",
***REMOVED******REMOVED***"Redirected***REMOVED***request***REMOVED***failed"
);
var***REMOVED***TooManyRedirectsError***REMOVED***=***REMOVED***createErrorType(
***REMOVED******REMOVED***"ERR_FR_TOO_MANY_REDIRECTS",
***REMOVED******REMOVED***"Maximum***REMOVED***number***REMOVED***of***REMOVED***redirects***REMOVED***exceeded",
***REMOVED******REMOVED***RedirectionError
);
var***REMOVED***MaxBodyLengthExceededError***REMOVED***=***REMOVED***createErrorType(
***REMOVED******REMOVED***"ERR_FR_MAX_BODY_LENGTH_EXCEEDED",
***REMOVED******REMOVED***"Request***REMOVED***body***REMOVED***larger***REMOVED***than***REMOVED***maxBodyLength***REMOVED***limit"
);
var***REMOVED***WriteAfterEndError***REMOVED***=***REMOVED***createErrorType(
***REMOVED******REMOVED***"ERR_STREAM_WRITE_AFTER_END",
***REMOVED******REMOVED***"write***REMOVED***after***REMOVED***end"
);

//***REMOVED***istanbul***REMOVED***ignore***REMOVED***next
var***REMOVED***destroy***REMOVED***=***REMOVED***Writable.prototype.destroy***REMOVED***||***REMOVED***noop;

//***REMOVED***An***REMOVED***HTTP(S)***REMOVED***request***REMOVED***that***REMOVED***can***REMOVED***be***REMOVED***redirected
function***REMOVED***RedirectableRequest(options,***REMOVED***responseCallback)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Initialize***REMOVED***the***REMOVED***request
***REMOVED******REMOVED***Writable.call(this);
***REMOVED******REMOVED***this._sanitizeOptions(options);
***REMOVED******REMOVED***this._options***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED***this._ended***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this._ending***REMOVED***=***REMOVED***false;
***REMOVED******REMOVED***this._redirectCount***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this._redirects***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED***this._requestBodyLength***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED***this._requestBodyBuffers***REMOVED***=***REMOVED***[];

***REMOVED******REMOVED***//***REMOVED***Attach***REMOVED***a***REMOVED***callback***REMOVED***if***REMOVED***passed
***REMOVED******REMOVED***if***REMOVED***(responseCallback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.on("response",***REMOVED***responseCallback);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***React***REMOVED***to***REMOVED***responses***REMOVED***of***REMOVED***native***REMOVED***requests
***REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED***this._onNativeResponse***REMOVED***=***REMOVED***function***REMOVED***(response)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***try***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self._processResponse(response);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***catch***REMOVED***(cause)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self.emit("error",***REMOVED***cause***REMOVED***instanceof***REMOVED***RedirectionError***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***cause***REMOVED***:***REMOVED***new***REMOVED***RedirectionError({***REMOVED***cause:***REMOVED***cause***REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***};

***REMOVED******REMOVED***//***REMOVED***Perform***REMOVED***the***REMOVED***first***REMOVED***request
***REMOVED******REMOVED***this._performRequest();
}
RedirectableRequest.prototype***REMOVED***=***REMOVED***Object.create(Writable.prototype);

RedirectableRequest.prototype.abort***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***destroyRequest(this._currentRequest);
***REMOVED******REMOVED***this._currentRequest.abort();
***REMOVED******REMOVED***this.emit("abort");
};

RedirectableRequest.prototype.destroy***REMOVED***=***REMOVED***function***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED***destroyRequest(this._currentRequest,***REMOVED***error);
***REMOVED******REMOVED***destroy.call(this,***REMOVED***error);
***REMOVED******REMOVED***return***REMOVED***this;
};

//***REMOVED***Writes***REMOVED***buffered***REMOVED***data***REMOVED***to***REMOVED***the***REMOVED***current***REMOVED***native***REMOVED***request
RedirectableRequest.prototype.write***REMOVED***=***REMOVED***function***REMOVED***(data,***REMOVED***encoding,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Writing***REMOVED***is***REMOVED***not***REMOVED***allowed***REMOVED***if***REMOVED***end***REMOVED***has***REMOVED***been***REMOVED***called
***REMOVED******REMOVED***if***REMOVED***(this._ending)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***WriteAfterEndError();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Validate***REMOVED***input***REMOVED***and***REMOVED***shift***REMOVED***parameters***REMOVED***if***REMOVED***necessary
***REMOVED******REMOVED***if***REMOVED***(!isString(data)***REMOVED***&&***REMOVED***!isBuffer(data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("data***REMOVED***should***REMOVED***be***REMOVED***a***REMOVED***string,***REMOVED***Buffer***REMOVED***or***REMOVED***Uint8Array");
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(isFunction(encoding))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callback***REMOVED***=***REMOVED***encoding;
***REMOVED******REMOVED******REMOVED******REMOVED***encoding***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Ignore***REMOVED***empty***REMOVED***buffers,***REMOVED***since***REMOVED***writing***REMOVED***them***REMOVED***doesn't***REMOVED***invoke***REMOVED***the***REMOVED***callback
***REMOVED******REMOVED***//***REMOVED***https://github.com/nodejs/node/issues/22066
***REMOVED******REMOVED***if***REMOVED***(data.length***REMOVED***===***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***Only***REMOVED***write***REMOVED***when***REMOVED***we***REMOVED***don't***REMOVED***exceed***REMOVED***the***REMOVED***maximum***REMOVED***body***REMOVED***length
***REMOVED******REMOVED***if***REMOVED***(this._requestBodyLength***REMOVED***+***REMOVED***data.length***REMOVED***<=***REMOVED***this._options.maxBodyLength)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._requestBodyLength***REMOVED***+=***REMOVED***data.length;
***REMOVED******REMOVED******REMOVED******REMOVED***this._requestBodyBuffers.push({***REMOVED***data:***REMOVED***data,***REMOVED***encoding:***REMOVED***encoding***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this._currentRequest.write(data,***REMOVED***encoding,***REMOVED***callback);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***Error***REMOVED***when***REMOVED***we***REMOVED***exceed***REMOVED***the***REMOVED***maximum***REMOVED***body***REMOVED***length
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.emit("error",***REMOVED***new***REMOVED***MaxBodyLengthExceededError());
***REMOVED******REMOVED******REMOVED******REMOVED***this.abort();
***REMOVED******REMOVED***}
};

//***REMOVED***Ends***REMOVED***the***REMOVED***current***REMOVED***native***REMOVED***request
RedirectableRequest.prototype.end***REMOVED***=***REMOVED***function***REMOVED***(data,***REMOVED***encoding,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Shift***REMOVED***parameters***REMOVED***if***REMOVED***necessary
***REMOVED******REMOVED***if***REMOVED***(isFunction(data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callback***REMOVED***=***REMOVED***data;
***REMOVED******REMOVED******REMOVED******REMOVED***data***REMOVED***=***REMOVED***encoding***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***if***REMOVED***(isFunction(encoding))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callback***REMOVED***=***REMOVED***encoding;
***REMOVED******REMOVED******REMOVED******REMOVED***encoding***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Write***REMOVED***data***REMOVED***if***REMOVED***needed***REMOVED***and***REMOVED***end
***REMOVED******REMOVED***if***REMOVED***(!data)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._ended***REMOVED***=***REMOVED***this._ending***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***this._currentRequest.end(null,***REMOVED***null,***REMOVED***callback);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***currentRequest***REMOVED***=***REMOVED***this._currentRequest;
***REMOVED******REMOVED******REMOVED******REMOVED***this.write(data,***REMOVED***encoding,***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self._ended***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***currentRequest.end(null,***REMOVED***null,***REMOVED***callback);
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***this._ending***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***}
};

//***REMOVED***Sets***REMOVED***a***REMOVED***header***REMOVED***value***REMOVED***on***REMOVED***the***REMOVED***current***REMOVED***native***REMOVED***request
RedirectableRequest.prototype.setHeader***REMOVED***=***REMOVED***function***REMOVED***(name,***REMOVED***value)***REMOVED***{
***REMOVED******REMOVED***this._options.headers[name]***REMOVED***=***REMOVED***value;
***REMOVED******REMOVED***this._currentRequest.setHeader(name,***REMOVED***value);
};

//***REMOVED***Clears***REMOVED***a***REMOVED***header***REMOVED***value***REMOVED***on***REMOVED***the***REMOVED***current***REMOVED***native***REMOVED***request
RedirectableRequest.prototype.removeHeader***REMOVED***=***REMOVED***function***REMOVED***(name)***REMOVED***{
***REMOVED******REMOVED***delete***REMOVED***this._options.headers[name];
***REMOVED******REMOVED***this._currentRequest.removeHeader(name);
};

//***REMOVED***Global***REMOVED***timeout***REMOVED***for***REMOVED***all***REMOVED***underlying***REMOVED***requests
RedirectableRequest.prototype.setTimeout***REMOVED***=***REMOVED***function***REMOVED***(msecs,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;

***REMOVED******REMOVED***//***REMOVED***Destroys***REMOVED***the***REMOVED***socket***REMOVED***on***REMOVED***timeout
***REMOVED******REMOVED***function***REMOVED***destroyOnTimeout(socket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***socket.setTimeout(msecs);
***REMOVED******REMOVED******REMOVED******REMOVED***socket.removeListener("timeout",***REMOVED***socket.destroy);
***REMOVED******REMOVED******REMOVED******REMOVED***socket.addListener("timeout",***REMOVED***socket.destroy);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Sets***REMOVED***up***REMOVED***a***REMOVED***timer***REMOVED***to***REMOVED***trigger***REMOVED***a***REMOVED***timeout***REMOVED***event
***REMOVED******REMOVED***function***REMOVED***startTimer(socket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(self._timeout)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearTimeout(self._timeout);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***self._timeout***REMOVED***=***REMOVED***setTimeout(function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self.emit("timeout");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearTimer();
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***msecs);
***REMOVED******REMOVED******REMOVED******REMOVED***destroyOnTimeout(socket);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Stops***REMOVED***a***REMOVED***timeout***REMOVED***from***REMOVED***triggering
***REMOVED******REMOVED***function***REMOVED***clearTimer()***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Clear***REMOVED***the***REMOVED***timeout
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(self._timeout)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***clearTimeout(self._timeout);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self._timeout***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Clean***REMOVED***up***REMOVED***all***REMOVED***attached***REMOVED***listeners
***REMOVED******REMOVED******REMOVED******REMOVED***self.removeListener("abort",***REMOVED***clearTimer);
***REMOVED******REMOVED******REMOVED******REMOVED***self.removeListener("error",***REMOVED***clearTimer);
***REMOVED******REMOVED******REMOVED******REMOVED***self.removeListener("response",***REMOVED***clearTimer);
***REMOVED******REMOVED******REMOVED******REMOVED***self.removeListener("close",***REMOVED***clearTimer);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self.removeListener("timeout",***REMOVED***callback);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!self.socket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self._currentRequest.removeListener("socket",***REMOVED***startTimer);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Attach***REMOVED***callback***REMOVED***if***REMOVED***passed
***REMOVED******REMOVED***if***REMOVED***(callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this.on("timeout",***REMOVED***callback);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Start***REMOVED***the***REMOVED***timer***REMOVED***if***REMOVED***or***REMOVED***when***REMOVED***the***REMOVED***socket***REMOVED***is***REMOVED***opened
***REMOVED******REMOVED***if***REMOVED***(this.socket)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***startTimer(this.socket);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._currentRequest.once("socket",***REMOVED***startTimer);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Clean***REMOVED***up***REMOVED***on***REMOVED***events
***REMOVED******REMOVED***this.on("socket",***REMOVED***destroyOnTimeout);
***REMOVED******REMOVED***this.on("abort",***REMOVED***clearTimer);
***REMOVED******REMOVED***this.on("error",***REMOVED***clearTimer);
***REMOVED******REMOVED***this.on("response",***REMOVED***clearTimer);
***REMOVED******REMOVED***this.on("close",***REMOVED***clearTimer);

***REMOVED******REMOVED***return***REMOVED***this;
};

//***REMOVED***Proxy***REMOVED***all***REMOVED***other***REMOVED***public***REMOVED***ClientRequest***REMOVED***methods
[
***REMOVED******REMOVED***"flushHeaders",***REMOVED***"getHeader",
***REMOVED******REMOVED***"setNoDelay",***REMOVED***"setSocketKeepAlive",
].forEach(function***REMOVED***(method)***REMOVED***{
***REMOVED******REMOVED***RedirectableRequest.prototype[method]***REMOVED***=***REMOVED***function***REMOVED***(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***this._currentRequest[method](a,***REMOVED***b);
***REMOVED******REMOVED***};
});

//***REMOVED***Proxy***REMOVED***all***REMOVED***public***REMOVED***ClientRequest***REMOVED***properties
["aborted",***REMOVED***"connection",***REMOVED***"socket"].forEach(function***REMOVED***(property)***REMOVED***{
***REMOVED******REMOVED***Object.defineProperty(RedirectableRequest.prototype,***REMOVED***property,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***function***REMOVED***()***REMOVED***{***REMOVED***return***REMOVED***this._currentRequest[property];***REMOVED***},
***REMOVED******REMOVED***});
});

RedirectableRequest.prototype._sanitizeOptions***REMOVED***=***REMOVED***function***REMOVED***(options)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***headers***REMOVED***are***REMOVED***always***REMOVED***present
***REMOVED******REMOVED***if***REMOVED***(!options.headers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***options.headers***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Since***REMOVED***http.request***REMOVED***treats***REMOVED***host***REMOVED***as***REMOVED***an***REMOVED***alias***REMOVED***of***REMOVED***hostname,
***REMOVED******REMOVED***//***REMOVED***but***REMOVED***the***REMOVED***url***REMOVED***module***REMOVED***interprets***REMOVED***host***REMOVED***as***REMOVED***hostname***REMOVED***plus***REMOVED***port,
***REMOVED******REMOVED***//***REMOVED***eliminate***REMOVED***the***REMOVED***host***REMOVED***property***REMOVED***to***REMOVED***avoid***REMOVED***confusion.
***REMOVED******REMOVED***if***REMOVED***(options.host)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Use***REMOVED***hostname***REMOVED***if***REMOVED***set,***REMOVED***because***REMOVED***it***REMOVED***has***REMOVED***precedence
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!options.hostname)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.hostname***REMOVED***=***REMOVED***options.host;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***options.host;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Complete***REMOVED***the***REMOVED***URL***REMOVED***object***REMOVED***when***REMOVED***necessary
***REMOVED******REMOVED***if***REMOVED***(!options.pathname***REMOVED***&&***REMOVED***options.path)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***searchPos***REMOVED***=***REMOVED***options.path.indexOf("?");
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(searchPos***REMOVED***<***REMOVED***0)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.pathname***REMOVED***=***REMOVED***options.path;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.pathname***REMOVED***=***REMOVED***options.path.substring(0,***REMOVED***searchPos);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.search***REMOVED***=***REMOVED***options.path.substring(searchPos);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
};


//***REMOVED***Executes***REMOVED***the***REMOVED***next***REMOVED***native***REMOVED***request***REMOVED***(initial***REMOVED***or***REMOVED***redirect)
RedirectableRequest.prototype._performRequest***REMOVED***=***REMOVED***function***REMOVED***()***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Load***REMOVED***the***REMOVED***native***REMOVED***protocol
***REMOVED******REMOVED***var***REMOVED***protocol***REMOVED***=***REMOVED***this._options.protocol;
***REMOVED******REMOVED***var***REMOVED***nativeProtocol***REMOVED***=***REMOVED***this._options.nativeProtocols[protocol];
***REMOVED******REMOVED***if***REMOVED***(!nativeProtocol)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError("Unsupported***REMOVED***protocol***REMOVED***"***REMOVED***+***REMOVED***protocol);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***If***REMOVED***specified,***REMOVED***use***REMOVED***the***REMOVED***agent***REMOVED***corresponding***REMOVED***to***REMOVED***the***REMOVED***protocol
***REMOVED******REMOVED***//***REMOVED***(HTTP***REMOVED***and***REMOVED***HTTPS***REMOVED***use***REMOVED***different***REMOVED***types***REMOVED***of***REMOVED***agents)
***REMOVED******REMOVED***if***REMOVED***(this._options.agents)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***scheme***REMOVED***=***REMOVED***protocol.slice(0,***REMOVED***-1);
***REMOVED******REMOVED******REMOVED******REMOVED***this._options.agent***REMOVED***=***REMOVED***this._options.agents[scheme];
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Create***REMOVED***the***REMOVED***native***REMOVED***request***REMOVED***and***REMOVED***set***REMOVED***up***REMOVED***its***REMOVED***event***REMOVED***handlers
***REMOVED******REMOVED***var***REMOVED***request***REMOVED***=***REMOVED***this._currentRequest***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nativeProtocol.request(this._options,***REMOVED***this._onNativeResponse);
***REMOVED******REMOVED***request._redirectable***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***event***REMOVED***of***REMOVED***events)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***request.on(event,***REMOVED***eventHandlers[event]);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***RFC7230§5.3.1:***REMOVED***When***REMOVED***making***REMOVED***a***REMOVED***request***REMOVED***directly***REMOVED***to***REMOVED***an***REMOVED***origin***REMOVED***server,***REMOVED***[…]
***REMOVED******REMOVED***//***REMOVED***a***REMOVED***client***REMOVED***MUST***REMOVED***send***REMOVED***only***REMOVED***the***REMOVED***absolute***REMOVED***path***REMOVED***[…]***REMOVED***as***REMOVED***the***REMOVED***request-target.
***REMOVED******REMOVED***this._currentUrl***REMOVED***=***REMOVED***/^\//.test(this._options.path)***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED***url.format(this._options)***REMOVED***:
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***When***REMOVED***making***REMOVED***a***REMOVED***request***REMOVED***to***REMOVED***a***REMOVED***proxy,***REMOVED***[…]
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***a***REMOVED***client***REMOVED***MUST***REMOVED***send***REMOVED***the***REMOVED***target***REMOVED***URI***REMOVED***in***REMOVED***absolute-form***REMOVED***[…].
***REMOVED******REMOVED******REMOVED******REMOVED***this._options.path;

***REMOVED******REMOVED***//***REMOVED***End***REMOVED***a***REMOVED***redirected***REMOVED***request
***REMOVED******REMOVED***//***REMOVED***(The***REMOVED***first***REMOVED***request***REMOVED***must***REMOVED***be***REMOVED***ended***REMOVED***explicitly***REMOVED***with***REMOVED***RedirectableRequest#end)
***REMOVED******REMOVED***if***REMOVED***(this._isRedirect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Write***REMOVED***the***REMOVED***request***REMOVED***entity***REMOVED***and***REMOVED***end
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***i***REMOVED***=***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***self***REMOVED***=***REMOVED***this;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***buffers***REMOVED***=***REMOVED***this._requestBodyBuffers;
***REMOVED******REMOVED******REMOVED******REMOVED***(function***REMOVED***writeNext(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***write***REMOVED***if***REMOVED***this***REMOVED***request***REMOVED***has***REMOVED***not***REMOVED***been***REMOVED***redirected***REMOVED***yet
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(request***REMOVED***===***REMOVED***self._currentRequest)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Report***REMOVED***any***REMOVED***write***REMOVED***errors
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***if
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(error)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***self.emit("error",***REMOVED***error);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Write***REMOVED***the***REMOVED***next***REMOVED***buffer***REMOVED***if***REMOVED***there***REMOVED***are***REMOVED***still***REMOVED***left
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(i***REMOVED***<***REMOVED***buffers.length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***buffer***REMOVED***=***REMOVED***buffers[i++];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!request.finished)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***request.write(buffer.data,***REMOVED***buffer.encoding,***REMOVED***writeNext);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***End***REMOVED***the***REMOVED***request***REMOVED***if***REMOVED***`end`***REMOVED***has***REMOVED***been***REMOVED***called***REMOVED***on***REMOVED***us
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(self._ended)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***request.end();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}());
***REMOVED******REMOVED***}
};

//***REMOVED***Processes***REMOVED***a***REMOVED***response***REMOVED***from***REMOVED***the***REMOVED***current***REMOVED***native***REMOVED***request
RedirectableRequest.prototype._processResponse***REMOVED***=***REMOVED***function***REMOVED***(response)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Store***REMOVED***the***REMOVED***redirected***REMOVED***response
***REMOVED******REMOVED***var***REMOVED***statusCode***REMOVED***=***REMOVED***response.statusCode;
***REMOVED******REMOVED***if***REMOVED***(this._options.trackRedirects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._redirects.push({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***this._currentUrl,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***response.headers,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statusCode:***REMOVED***statusCode,
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***RFC7231§6.4:***REMOVED***The***REMOVED***3xx***REMOVED***(Redirection)***REMOVED***class***REMOVED***of***REMOVED***status***REMOVED***code***REMOVED***indicates
***REMOVED******REMOVED***//***REMOVED***that***REMOVED***further***REMOVED***action***REMOVED***needs***REMOVED***to***REMOVED***be***REMOVED***taken***REMOVED***by***REMOVED***the***REMOVED***user***REMOVED***agent***REMOVED***in***REMOVED***order***REMOVED***to
***REMOVED******REMOVED***//***REMOVED***fulfill***REMOVED***the***REMOVED***request.***REMOVED***If***REMOVED***a***REMOVED***Location***REMOVED***header***REMOVED***field***REMOVED***is***REMOVED***provided,
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***user***REMOVED***agent***REMOVED***MAY***REMOVED***automatically***REMOVED***redirect***REMOVED***its***REMOVED***request***REMOVED***to***REMOVED***the***REMOVED***URI
***REMOVED******REMOVED***//***REMOVED***referenced***REMOVED***by***REMOVED***the***REMOVED***Location***REMOVED***field***REMOVED***value,
***REMOVED******REMOVED***//***REMOVED***even***REMOVED***if***REMOVED***the***REMOVED***specific***REMOVED***status***REMOVED***code***REMOVED***is***REMOVED***not***REMOVED***understood.

***REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***response***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***redirect;***REMOVED***return***REMOVED***it***REMOVED***as-is
***REMOVED******REMOVED***var***REMOVED***location***REMOVED***=***REMOVED***response.headers.location;
***REMOVED******REMOVED***if***REMOVED***(!location***REMOVED***||***REMOVED***this._options.followRedirects***REMOVED***===***REMOVED***false***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statusCode***REMOVED***<***REMOVED***300***REMOVED***||***REMOVED***statusCode***REMOVED***>=***REMOVED***400)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***response.responseUrl***REMOVED***=***REMOVED***this._currentUrl;
***REMOVED******REMOVED******REMOVED******REMOVED***response.redirects***REMOVED***=***REMOVED***this._redirects;
***REMOVED******REMOVED******REMOVED******REMOVED***this.emit("response",***REMOVED***response);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Clean***REMOVED***up
***REMOVED******REMOVED******REMOVED******REMOVED***this._requestBodyBuffers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***return;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***The***REMOVED***response***REMOVED***is***REMOVED***a***REMOVED***redirect,***REMOVED***so***REMOVED***abort***REMOVED***the***REMOVED***current***REMOVED***request
***REMOVED******REMOVED***destroyRequest(this._currentRequest);
***REMOVED******REMOVED***//***REMOVED***Discard***REMOVED***the***REMOVED***remainder***REMOVED***of***REMOVED***the***REMOVED***response***REMOVED***to***REMOVED***avoid***REMOVED***waiting***REMOVED***for***REMOVED***data
***REMOVED******REMOVED***response.destroy();

***REMOVED******REMOVED***//***REMOVED***RFC7231§6.4:***REMOVED***A***REMOVED***client***REMOVED***SHOULD***REMOVED***detect***REMOVED***and***REMOVED***intervene
***REMOVED******REMOVED***//***REMOVED***in***REMOVED***cyclical***REMOVED***redirections***REMOVED***(i.e.,***REMOVED***"infinite"***REMOVED***redirection***REMOVED***loops).
***REMOVED******REMOVED***if***REMOVED***(++this._redirectCount***REMOVED***>***REMOVED***this._options.maxRedirects)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TooManyRedirectsError();
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Store***REMOVED***the***REMOVED***request***REMOVED***headers***REMOVED***if***REMOVED***applicable
***REMOVED******REMOVED***var***REMOVED***requestHeaders;
***REMOVED******REMOVED***var***REMOVED***beforeRedirect***REMOVED***=***REMOVED***this._options.beforeRedirect;
***REMOVED******REMOVED***if***REMOVED***(beforeRedirect)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***requestHeaders***REMOVED***=***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***The***REMOVED***Host***REMOVED***header***REMOVED***was***REMOVED***set***REMOVED***by***REMOVED***nativeProtocol.request
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Host:***REMOVED***response.req.getHeader("host"),
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***this._options.headers);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***RFC7231§6.4:***REMOVED***Automatic***REMOVED***redirection***REMOVED***needs***REMOVED***to***REMOVED***done***REMOVED***with
***REMOVED******REMOVED***//***REMOVED***care***REMOVED***for***REMOVED***methods***REMOVED***not***REMOVED***known***REMOVED***to***REMOVED***be***REMOVED***safe,***REMOVED***[…]
***REMOVED******REMOVED***//***REMOVED***RFC7231§6.4.2–3:***REMOVED***For***REMOVED***historical***REMOVED***reasons,***REMOVED***a***REMOVED***user***REMOVED***agent***REMOVED***MAY***REMOVED***change
***REMOVED******REMOVED***//***REMOVED***the***REMOVED***request***REMOVED***method***REMOVED***from***REMOVED***POST***REMOVED***to***REMOVED***GET***REMOVED***for***REMOVED***the***REMOVED***subsequent***REMOVED***request.
***REMOVED******REMOVED***var***REMOVED***method***REMOVED***=***REMOVED***this._options.method;
***REMOVED******REMOVED***if***REMOVED***((statusCode***REMOVED***===***REMOVED***301***REMOVED***||***REMOVED***statusCode***REMOVED***===***REMOVED***302)***REMOVED***&&***REMOVED***this._options.method***REMOVED***===***REMOVED***"POST"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***RFC7231§6.4.4:***REMOVED***The***REMOVED***303***REMOVED***(See***REMOVED***Other)***REMOVED***status***REMOVED***code***REMOVED***indicates***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***the***REMOVED***server***REMOVED***is***REMOVED***redirecting***REMOVED***the***REMOVED***user***REMOVED***agent***REMOVED***to***REMOVED***a***REMOVED***different***REMOVED***resource***REMOVED***[…]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***A***REMOVED***user***REMOVED***agent***REMOVED***can***REMOVED***perform***REMOVED***a***REMOVED***retrieval***REMOVED***request***REMOVED***targeting***REMOVED***that***REMOVED***URI
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***(a***REMOVED***GET***REMOVED***or***REMOVED***HEAD***REMOVED***request***REMOVED***if***REMOVED***using***REMOVED***HTTP)***REMOVED***[…]
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(statusCode***REMOVED***===***REMOVED***303)***REMOVED***&&***REMOVED***!/^(?:GET|HEAD)$/.test(this._options.method))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***this._options.method***REMOVED***=***REMOVED***"GET";
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Drop***REMOVED***a***REMOVED***possible***REMOVED***entity***REMOVED***and***REMOVED***headers***REMOVED***related***REMOVED***to***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED***this._requestBodyBuffers***REMOVED***=***REMOVED***[];
***REMOVED******REMOVED******REMOVED******REMOVED***removeMatchingHeaders(/^content-/i,***REMOVED***this._options.headers);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Drop***REMOVED***the***REMOVED***Host***REMOVED***header,***REMOVED***as***REMOVED***the***REMOVED***redirect***REMOVED***might***REMOVED***lead***REMOVED***to***REMOVED***a***REMOVED***different***REMOVED***host
***REMOVED******REMOVED***var***REMOVED***currentHostHeader***REMOVED***=***REMOVED***removeMatchingHeaders(/^host$/i,***REMOVED***this._options.headers);

***REMOVED******REMOVED***//***REMOVED***If***REMOVED***the***REMOVED***redirect***REMOVED***is***REMOVED***relative,***REMOVED***carry***REMOVED***over***REMOVED***the***REMOVED***host***REMOVED***of***REMOVED***the***REMOVED***last***REMOVED***request
***REMOVED******REMOVED***var***REMOVED***currentUrlParts***REMOVED***=***REMOVED***parseUrl(this._currentUrl);
***REMOVED******REMOVED***var***REMOVED***currentHost***REMOVED***=***REMOVED***currentHostHeader***REMOVED***||***REMOVED***currentUrlParts.host;
***REMOVED******REMOVED***var***REMOVED***currentUrl***REMOVED***=***REMOVED***/^\w+:/.test(location)***REMOVED***?***REMOVED***this._currentUrl***REMOVED***:
***REMOVED******REMOVED******REMOVED******REMOVED***url.format(Object.assign(currentUrlParts,***REMOVED***{***REMOVED***host:***REMOVED***currentHost***REMOVED***}));

***REMOVED******REMOVED***//***REMOVED***Create***REMOVED***the***REMOVED***redirected***REMOVED***request
***REMOVED******REMOVED***var***REMOVED***redirectUrl***REMOVED***=***REMOVED***resolveUrl(location,***REMOVED***currentUrl);
***REMOVED******REMOVED***debug("redirecting***REMOVED***to",***REMOVED***redirectUrl.href);
***REMOVED******REMOVED***this._isRedirect***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED***spreadUrlObject(redirectUrl,***REMOVED***this._options);

***REMOVED******REMOVED***//***REMOVED***Drop***REMOVED***confidential***REMOVED***headers***REMOVED***when***REMOVED***redirecting***REMOVED***to***REMOVED***a***REMOVED***less***REMOVED***secure***REMOVED***protocol
***REMOVED******REMOVED***//***REMOVED***or***REMOVED***to***REMOVED***a***REMOVED***different***REMOVED***domain***REMOVED***that***REMOVED***is***REMOVED***not***REMOVED***a***REMOVED***superdomain
***REMOVED******REMOVED***if***REMOVED***(redirectUrl.protocol***REMOVED***!==***REMOVED***currentUrlParts.protocol***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectUrl.protocol***REMOVED***!==***REMOVED***"https:"***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***redirectUrl.host***REMOVED***!==***REMOVED***currentHost***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***!isSubdomain(redirectUrl.host,***REMOVED***currentHost))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i,***REMOVED***this._options.headers);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Evaluate***REMOVED***the***REMOVED***beforeRedirect***REMOVED***callback
***REMOVED******REMOVED***if***REMOVED***(isFunction(beforeRedirect))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***responseDetails***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***response.headers,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***statusCode:***REMOVED***statusCode,
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***requestDetails***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***currentUrl,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***method:***REMOVED***method,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***requestHeaders,
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***beforeRedirect(this._options,***REMOVED***responseDetails,***REMOVED***requestDetails);
***REMOVED******REMOVED******REMOVED******REMOVED***this._sanitizeOptions(this._options);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Perform***REMOVED***the***REMOVED***redirected***REMOVED***request
***REMOVED******REMOVED***this._performRequest();
};

//***REMOVED***Wraps***REMOVED***the***REMOVED***key/value***REMOVED***object***REMOVED***of***REMOVED***protocols***REMOVED***with***REMOVED***redirect***REMOVED***functionality
function***REMOVED***wrap(protocols)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Default***REMOVED***settings
***REMOVED******REMOVED***var***REMOVED***exports***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***maxRedirects:***REMOVED***21,
***REMOVED******REMOVED******REMOVED******REMOVED***maxBodyLength:***REMOVED***10***REMOVED*******REMOVED***1024***REMOVED*******REMOVED***1024,
***REMOVED******REMOVED***};

***REMOVED******REMOVED***//***REMOVED***Wrap***REMOVED***each***REMOVED***protocol
***REMOVED******REMOVED***var***REMOVED***nativeProtocols***REMOVED***=***REMOVED***{};
***REMOVED******REMOVED***Object.keys(protocols).forEach(function***REMOVED***(scheme)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***protocol***REMOVED***=***REMOVED***scheme***REMOVED***+***REMOVED***":";
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***nativeProtocol***REMOVED***=***REMOVED***nativeProtocols[protocol]***REMOVED***=***REMOVED***protocols[scheme];
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***wrappedProtocol***REMOVED***=***REMOVED***exports[scheme]***REMOVED***=***REMOVED***Object.create(nativeProtocol);

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Executes***REMOVED***a***REMOVED***request,***REMOVED***following***REMOVED***redirects
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***request(input,***REMOVED***options,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Parse***REMOVED***parameters,***REMOVED***ensuring***REMOVED***that***REMOVED***input***REMOVED***is***REMOVED***an***REMOVED***object
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isURL(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input***REMOVED***=***REMOVED***spreadUrlObject(input);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***if***REMOVED***(isString(input))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input***REMOVED***=***REMOVED***spreadUrlObject(parseUrl(input));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***validateUrl(input);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***input***REMOVED***=***REMOVED***{***REMOVED***protocol:***REMOVED***protocol***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(options))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***callback***REMOVED***=***REMOVED***options;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Set***REMOVED***defaults
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options***REMOVED***=***REMOVED***Object.assign({
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxRedirects:***REMOVED***exports.maxRedirects,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***maxBodyLength:***REMOVED***exports.maxBodyLength,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***input,***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.nativeProtocols***REMOVED***=***REMOVED***nativeProtocols;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isString(options.host)***REMOVED***&&***REMOVED***!isString(options.hostname))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***options.hostname***REMOVED***=***REMOVED***"::1";
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***assert.equal(options.protocol,***REMOVED***protocol,***REMOVED***"protocol***REMOVED***mismatch");
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***debug("options",***REMOVED***options);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***new***REMOVED***RedirectableRequest(options,***REMOVED***callback);
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Executes***REMOVED***a***REMOVED***GET***REMOVED***request,***REMOVED***following***REMOVED***redirects
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***get(input,***REMOVED***options,***REMOVED***callback)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***wrappedRequest***REMOVED***=***REMOVED***wrappedProtocol.request(input,***REMOVED***options,***REMOVED***callback);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wrappedRequest.end();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***wrappedRequest;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Expose***REMOVED***the***REMOVED***properties***REMOVED***on***REMOVED***the***REMOVED***wrapped***REMOVED***protocol
***REMOVED******REMOVED******REMOVED******REMOVED***Object.defineProperties(wrappedProtocol,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***request:***REMOVED***{***REMOVED***value:***REMOVED***request,***REMOVED***configurable:***REMOVED***true,***REMOVED***enumerable:***REMOVED***true,***REMOVED***writable:***REMOVED***true***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***get:***REMOVED***{***REMOVED***value:***REMOVED***get,***REMOVED***configurable:***REMOVED***true,***REMOVED***enumerable:***REMOVED***true,***REMOVED***writable:***REMOVED***true***REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***exports;
}

function***REMOVED***noop()***REMOVED***{***REMOVED***/****REMOVED***empty***REMOVED****/***REMOVED***}

function***REMOVED***parseUrl(input)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***parsed;
***REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***else
***REMOVED******REMOVED***if***REMOVED***(useNativeURL)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***parsed***REMOVED***=***REMOVED***new***REMOVED***URL(input);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***else***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***the***REMOVED***URL***REMOVED***is***REMOVED***valid***REMOVED***and***REMOVED***absolute
***REMOVED******REMOVED******REMOVED******REMOVED***parsed***REMOVED***=***REMOVED***validateUrl(url.parse(input));
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!isString(parsed.protocol))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***InvalidUrlError({***REMOVED***input***REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***parsed;
}

function***REMOVED***resolveUrl(relative,***REMOVED***base)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***next
***REMOVED******REMOVED***return***REMOVED***useNativeURL***REMOVED***?***REMOVED***new***REMOVED***URL(relative,***REMOVED***base)***REMOVED***:***REMOVED***parseUrl(url.resolve(base,***REMOVED***relative));
}

function***REMOVED***validateUrl(input)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(/^\[/.test(input.hostname)***REMOVED***&&***REMOVED***!/^\[[:0-9a-f]+\]$/i.test(input.hostname))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***InvalidUrlError({***REMOVED***input:***REMOVED***input.href***REMOVED***||***REMOVED***input***REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(/^\[/.test(input.host)***REMOVED***&&***REMOVED***!/^\[[:0-9a-f]+\](:\d+)?$/i.test(input.host))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***InvalidUrlError({***REMOVED***input:***REMOVED***input.href***REMOVED***||***REMOVED***input***REMOVED***});
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***input;
}

function***REMOVED***spreadUrlObject(urlObject,***REMOVED***target)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***spread***REMOVED***=***REMOVED***target***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***key***REMOVED***of***REMOVED***preservedUrlFields)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***spread[key]***REMOVED***=***REMOVED***urlObject[key];
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Fix***REMOVED***IPv6***REMOVED***hostname
***REMOVED******REMOVED***if***REMOVED***(spread.hostname.startsWith("["))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***spread.hostname***REMOVED***=***REMOVED***spread.hostname.slice(1,***REMOVED***-1);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***Ensure***REMOVED***port***REMOVED***is***REMOVED***a***REMOVED***number
***REMOVED******REMOVED***if***REMOVED***(spread.port***REMOVED***!==***REMOVED***"")***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***spread.port***REMOVED***=***REMOVED***Number(spread.port);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***//***REMOVED***Concatenate***REMOVED***path
***REMOVED******REMOVED***spread.path***REMOVED***=***REMOVED***spread.search***REMOVED***?***REMOVED***spread.pathname***REMOVED***+***REMOVED***spread.search***REMOVED***:***REMOVED***spread.pathname;

***REMOVED******REMOVED***return***REMOVED***spread;
}

function***REMOVED***removeMatchingHeaders(regex,***REMOVED***headers)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***lastValue;
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***header***REMOVED***in***REMOVED***headers)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(regex.test(header))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***lastValue***REMOVED***=***REMOVED***headers[header];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***delete***REMOVED***headers[header];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***(lastValue***REMOVED***===***REMOVED***null***REMOVED***||***REMOVED***typeof***REMOVED***lastValue***REMOVED***===***REMOVED***"undefined")***REMOVED***?
***REMOVED******REMOVED******REMOVED******REMOVED***undefined***REMOVED***:***REMOVED***String(lastValue).trim();
}

function***REMOVED***createErrorType(code,***REMOVED***message,***REMOVED***baseClass)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***Create***REMOVED***constructor
***REMOVED******REMOVED***function***REMOVED***CustomError(properties)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***istanbul***REMOVED***ignore***REMOVED***else
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(isFunction(Error.captureStackTrace))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Error.captureStackTrace(this,***REMOVED***this.constructor);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***Object.assign(this,***REMOVED***properties***REMOVED***||***REMOVED***{});
***REMOVED******REMOVED******REMOVED******REMOVED***this.code***REMOVED***=***REMOVED***code;
***REMOVED******REMOVED******REMOVED******REMOVED***this.message***REMOVED***=***REMOVED***this.cause***REMOVED***?***REMOVED***message***REMOVED***+***REMOVED***":***REMOVED***"***REMOVED***+***REMOVED***this.cause.message***REMOVED***:***REMOVED***message;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***Attach***REMOVED***constructor***REMOVED***and***REMOVED***set***REMOVED***default***REMOVED***properties
***REMOVED******REMOVED***CustomError.prototype***REMOVED***=***REMOVED***new***REMOVED***(baseClass***REMOVED***||***REMOVED***Error)();
***REMOVED******REMOVED***Object.defineProperties(CustomError.prototype,***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***constructor:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***CustomError,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***"Error***REMOVED***["***REMOVED***+***REMOVED***code***REMOVED***+***REMOVED***"]",
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***enumerable:***REMOVED***false,
***REMOVED******REMOVED******REMOVED******REMOVED***},
***REMOVED******REMOVED***});
***REMOVED******REMOVED***return***REMOVED***CustomError;
}

function***REMOVED***destroyRequest(request,***REMOVED***error)***REMOVED***{
***REMOVED******REMOVED***for***REMOVED***(var***REMOVED***event***REMOVED***of***REMOVED***events)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***request.removeListener(event,***REMOVED***eventHandlers[event]);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***request.on("error",***REMOVED***noop);
***REMOVED******REMOVED***request.destroy(error);
}

function***REMOVED***isSubdomain(subdomain,***REMOVED***domain)***REMOVED***{
***REMOVED******REMOVED***assert(isString(subdomain)***REMOVED***&&***REMOVED***isString(domain));
***REMOVED******REMOVED***var***REMOVED***dot***REMOVED***=***REMOVED***subdomain.length***REMOVED***-***REMOVED***domain.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED***return***REMOVED***dot***REMOVED***>***REMOVED***0***REMOVED***&&***REMOVED***subdomain[dot]***REMOVED***===***REMOVED***"."***REMOVED***&&***REMOVED***subdomain.endsWith(domain);
}

function***REMOVED***isString(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"string"***REMOVED***||***REMOVED***value***REMOVED***instanceof***REMOVED***String;
}

function***REMOVED***isFunction(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"function";
}

function***REMOVED***isBuffer(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***typeof***REMOVED***value***REMOVED***===***REMOVED***"object"***REMOVED***&&***REMOVED***("length"***REMOVED***in***REMOVED***value);
}

function***REMOVED***isURL(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***URL***REMOVED***&&***REMOVED***value***REMOVED***instanceof***REMOVED***URL;
}

//***REMOVED***Exports
module.exports***REMOVED***=***REMOVED***wrap({***REMOVED***http:***REMOVED***http,***REMOVED***https:***REMOVED***https***REMOVED***});
module.exports.wrap***REMOVED***=***REMOVED***wrap;
