import***REMOVED***CanceledError***REMOVED***from***REMOVED***"../cancel/CanceledError.js";
import***REMOVED***AxiosError***REMOVED***from***REMOVED***"../core/AxiosError.js";
import***REMOVED***utils***REMOVED***from***REMOVED***'../utils.js';

const***REMOVED***composeSignals***REMOVED***=***REMOVED***(signals,***REMOVED***timeout)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***{length}***REMOVED***=***REMOVED***(signals***REMOVED***=***REMOVED***signals***REMOVED***?***REMOVED***signals.filter(Boolean)***REMOVED***:***REMOVED***[]);

***REMOVED******REMOVED***if***REMOVED***(timeout***REMOVED***||***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***controller***REMOVED***=***REMOVED***new***REMOVED***AbortController();

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***aborted;

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***onabort***REMOVED***=***REMOVED***function***REMOVED***(reason)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!aborted)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***aborted***REMOVED***=***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***unsubscribe();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***err***REMOVED***=***REMOVED***reason***REMOVED***instanceof***REMOVED***Error***REMOVED***?***REMOVED***reason***REMOVED***:***REMOVED***this.reason;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***controller.abort(err***REMOVED***instanceof***REMOVED***AxiosError***REMOVED***?***REMOVED***err***REMOVED***:***REMOVED***new***REMOVED***CanceledError(err***REMOVED***instanceof***REMOVED***Error***REMOVED***?***REMOVED***err.message***REMOVED***:***REMOVED***err));
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***timer***REMOVED***=***REMOVED***timeout***REMOVED***&&***REMOVED***setTimeout(()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***onabort(new***REMOVED***AxiosError(`timeout***REMOVED***${timeout}***REMOVED***of***REMOVED***ms***REMOVED***exceeded`,***REMOVED***AxiosError.ETIMEDOUT))
***REMOVED******REMOVED******REMOVED******REMOVED***},***REMOVED***timeout)

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***unsubscribe***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(signals)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer***REMOVED***&&***REMOVED***clearTimeout(timer);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***timer***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signals.forEach(signal***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signal.unsubscribe***REMOVED***?***REMOVED***signal.unsubscribe(onabort)***REMOVED***:***REMOVED***signal.removeEventListener('abort',***REMOVED***onabort);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***signals***REMOVED***=***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***signals.forEach((signal)***REMOVED***=>***REMOVED***signal.addEventListener('abort',***REMOVED***onabort));

***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***{signal}***REMOVED***=***REMOVED***controller;

***REMOVED******REMOVED******REMOVED******REMOVED***signal.unsubscribe***REMOVED***=***REMOVED***()***REMOVED***=>***REMOVED***utils.asap(unsubscribe);

***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***signal;
***REMOVED******REMOVED***}
}

export***REMOVED***default***REMOVED***composeSignals;
