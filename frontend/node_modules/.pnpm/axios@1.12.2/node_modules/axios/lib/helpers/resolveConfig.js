import***REMOVED***platform***REMOVED***from***REMOVED***"../platform/index.js";
import***REMOVED***utils***REMOVED***from***REMOVED***"../utils.js";
import***REMOVED***isURLSameOrigin***REMOVED***from***REMOVED***"./isURLSameOrigin.js";
import***REMOVED***cookies***REMOVED***from***REMOVED***"./cookies.js";
import***REMOVED***buildFullPath***REMOVED***from***REMOVED***"../core/buildFullPath.js";
import***REMOVED***mergeConfig***REMOVED***from***REMOVED***"../core/mergeConfig.js";
import***REMOVED***AxiosHeaders***REMOVED***from***REMOVED***"../core/AxiosHeaders.js";
import***REMOVED***buildURL***REMOVED***from***REMOVED***"./buildURL.js";

export***REMOVED***default***REMOVED***(config)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED***const***REMOVED***newConfig***REMOVED***=***REMOVED***mergeConfig({},***REMOVED***config);

***REMOVED******REMOVED***let***REMOVED***{***REMOVED***data,***REMOVED***withXSRFToken,***REMOVED***xsrfHeaderName,***REMOVED***xsrfCookieName,***REMOVED***headers,***REMOVED***auth***REMOVED***}***REMOVED***=***REMOVED***newConfig;

***REMOVED******REMOVED***newConfig.headers***REMOVED***=***REMOVED***headers***REMOVED***=***REMOVED***AxiosHeaders.from(headers);

***REMOVED******REMOVED***newConfig.url***REMOVED***=***REMOVED***buildURL(buildFullPath(newConfig.baseURL,***REMOVED***newConfig.url,***REMOVED***newConfig.allowAbsoluteUrls),***REMOVED***config.params,***REMOVED***config.paramsSerializer);

***REMOVED******REMOVED***//***REMOVED***HTTP***REMOVED***basic***REMOVED***authentication
***REMOVED******REMOVED***if***REMOVED***(auth)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***headers.set('Authorization',***REMOVED***'Basic***REMOVED***'***REMOVED***+
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***btoa((auth.username***REMOVED***||***REMOVED***'')***REMOVED***+***REMOVED***':'***REMOVED***+***REMOVED***(auth.password***REMOVED***?***REMOVED***unescape(encodeURIComponent(auth.password))***REMOVED***:***REMOVED***''))
***REMOVED******REMOVED******REMOVED******REMOVED***);
***REMOVED******REMOVED***}

***REMOVED******REMOVED***if***REMOVED***(utils.isFormData(data))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(platform.hasStandardBrowserEnv***REMOVED***||***REMOVED***platform.hasStandardBrowserWebWorkerEnv)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers.setContentType(undefined);***REMOVED***//***REMOVED***browser***REMOVED***handles***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(utils.isFunction(data.getHeaders))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Node.js***REMOVED***FormData***REMOVED***(like***REMOVED***form-data***REMOVED***package)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***formHeaders***REMOVED***=***REMOVED***data.getHeaders();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Only***REMOVED***set***REMOVED***safe***REMOVED***headers***REMOVED***to***REMOVED***avoid***REMOVED***overwriting***REMOVED***security***REMOVED***headers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***allowedHeaders***REMOVED***=***REMOVED***['content-type',***REMOVED***'content-length'];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***Object.entries(formHeaders).forEach(([key,***REMOVED***val])***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(allowedHeaders.includes(key.toLowerCase()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers.set(key,***REMOVED***val);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***});
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}***REMOVED******REMOVED***

***REMOVED******REMOVED***//***REMOVED***Add***REMOVED***xsrf***REMOVED***header
***REMOVED******REMOVED***//***REMOVED***This***REMOVED***is***REMOVED***only***REMOVED***done***REMOVED***if***REMOVED***running***REMOVED***in***REMOVED***a***REMOVED***standard***REMOVED***browser***REMOVED***environment.
***REMOVED******REMOVED***//***REMOVED***Specifically***REMOVED***not***REMOVED***if***REMOVED***we're***REMOVED***in***REMOVED***a***REMOVED***web***REMOVED***worker,***REMOVED***or***REMOVED***react-native.

***REMOVED******REMOVED***if***REMOVED***(platform.hasStandardBrowserEnv)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***withXSRFToken***REMOVED***&&***REMOVED***utils.isFunction(withXSRFToken)***REMOVED***&&***REMOVED***(withXSRFToken***REMOVED***=***REMOVED***withXSRFToken(newConfig));

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(withXSRFToken***REMOVED***||***REMOVED***(withXSRFToken***REMOVED***!==***REMOVED***false***REMOVED***&&***REMOVED***isURLSameOrigin(newConfig.url)))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Add***REMOVED***xsrf***REMOVED***header
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***xsrfValue***REMOVED***=***REMOVED***xsrfHeaderName***REMOVED***&&***REMOVED***xsrfCookieName***REMOVED***&&***REMOVED***cookies.read(xsrfCookieName);

***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(xsrfValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***headers.set(xsrfHeaderName,***REMOVED***xsrfValue);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***newConfig;
}

