'use***REMOVED***strict';

import***REMOVED***utils***REMOVED***from***REMOVED***'../utils.js';
import***REMOVED***AxiosHeaders***REMOVED***from***REMOVED***"./AxiosHeaders.js";

const***REMOVED***headersToObject***REMOVED***=***REMOVED***(thing)***REMOVED***=>***REMOVED***thing***REMOVED***instanceof***REMOVED***AxiosHeaders***REMOVED***?***REMOVED***{***REMOVED***...thing***REMOVED***}***REMOVED***:***REMOVED***thing;

/**
***REMOVED*******REMOVED***Config-specific***REMOVED***merge-function***REMOVED***which***REMOVED***creates***REMOVED***a***REMOVED***new***REMOVED***config-object
***REMOVED*******REMOVED***by***REMOVED***merging***REMOVED***two***REMOVED***configuration***REMOVED***objects***REMOVED***together.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***config1
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***config2
***REMOVED****
***REMOVED*******REMOVED***@returns***REMOVED***{Object}***REMOVED***New***REMOVED***object***REMOVED***resulting***REMOVED***from***REMOVED***merging***REMOVED***config2***REMOVED***to***REMOVED***config1
***REMOVED****/
export***REMOVED***default***REMOVED***function***REMOVED***mergeConfig(config1,***REMOVED***config2)***REMOVED***{
***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***no-param-reassign
***REMOVED******REMOVED***config2***REMOVED***=***REMOVED***config2***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***const***REMOVED***config***REMOVED***=***REMOVED***{};

***REMOVED******REMOVED***function***REMOVED***getMergedValue(target,***REMOVED***source,***REMOVED***prop,***REMOVED***caseless)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(utils.isPlainObject(target)***REMOVED***&&***REMOVED***utils.isPlainObject(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***utils.merge.call({caseless},***REMOVED***target,***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(utils.isPlainObject(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***utils.merge({},***REMOVED***source);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(utils.isArray(source))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source.slice();
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***source;
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***consistent-return
***REMOVED******REMOVED***function***REMOVED***mergeDeepProperties(a,***REMOVED***b,***REMOVED***prop***REMOVED***,***REMOVED***caseless)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!utils.isUndefined(b))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(a,***REMOVED***b,***REMOVED***prop***REMOVED***,***REMOVED***caseless);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!utils.isUndefined(a))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(undefined,***REMOVED***a,***REMOVED***prop***REMOVED***,***REMOVED***caseless);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***consistent-return
***REMOVED******REMOVED***function***REMOVED***valueFromConfig2(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!utils.isUndefined(b))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(undefined,***REMOVED***b);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***consistent-return
***REMOVED******REMOVED***function***REMOVED***defaultToConfig2(a,***REMOVED***b)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!utils.isUndefined(b))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(undefined,***REMOVED***b);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(!utils.isUndefined(a))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(undefined,***REMOVED***a);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***//***REMOVED***eslint-disable-next-line***REMOVED***consistent-return
***REMOVED******REMOVED***function***REMOVED***mergeDirectKeys(a,***REMOVED***b,***REMOVED***prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(prop***REMOVED***in***REMOVED***config2)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(a,***REMOVED***b);
***REMOVED******REMOVED******REMOVED******REMOVED***}***REMOVED***else***REMOVED***if***REMOVED***(prop***REMOVED***in***REMOVED***config1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***getMergedValue(undefined,***REMOVED***a);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}

***REMOVED******REMOVED***const***REMOVED***mergeMap***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***url:***REMOVED***valueFromConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***method:***REMOVED***valueFromConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***data:***REMOVED***valueFromConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***baseURL:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***transformRequest:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***transformResponse:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***paramsSerializer:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***timeout:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***timeoutMessage:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***withCredentials:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***withXSRFToken:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***adapter:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***responseType:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***xsrfCookieName:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***xsrfHeaderName:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***onUploadProgress:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***onDownloadProgress:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***decompress:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***maxContentLength:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***maxBodyLength:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***beforeRedirect:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***transport:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***httpAgent:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***httpsAgent:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***cancelToken:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***socketPath:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***responseEncoding:***REMOVED***defaultToConfig2,
***REMOVED******REMOVED******REMOVED******REMOVED***validateStatus:***REMOVED***mergeDirectKeys,
***REMOVED******REMOVED******REMOVED******REMOVED***headers:***REMOVED***(a,***REMOVED***b***REMOVED***,***REMOVED***prop)***REMOVED***=>***REMOVED***mergeDeepProperties(headersToObject(a),***REMOVED***headersToObject(b),prop,***REMOVED***true)
***REMOVED******REMOVED***};

***REMOVED******REMOVED***utils.forEach(Object.keys({...config1,***REMOVED***...config2}),***REMOVED***function***REMOVED***computeConfigValue(prop)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***merge***REMOVED***=***REMOVED***mergeMap[prop]***REMOVED***||***REMOVED***mergeDeepProperties;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***configValue***REMOVED***=***REMOVED***merge(config1[prop],***REMOVED***config2[prop],***REMOVED***prop);
***REMOVED******REMOVED******REMOVED******REMOVED***(utils.isUndefined(configValue)***REMOVED***&&***REMOVED***merge***REMOVED***!==***REMOVED***mergeDirectKeys)***REMOVED***||***REMOVED***(config[prop]***REMOVED***=***REMOVED***configValue);
***REMOVED******REMOVED***});

***REMOVED******REMOVED***return***REMOVED***config;
}
