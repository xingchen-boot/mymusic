'use***REMOVED***strict';

var***REMOVED***parseUrl***REMOVED***=***REMOVED***require('url').parse;

var***REMOVED***DEFAULT_PORTS***REMOVED***=***REMOVED***{
***REMOVED******REMOVED***ftp:***REMOVED***21,
***REMOVED******REMOVED***gopher:***REMOVED***70,
***REMOVED******REMOVED***http:***REMOVED***80,
***REMOVED******REMOVED***https:***REMOVED***443,
***REMOVED******REMOVED***ws:***REMOVED***80,
***REMOVED******REMOVED***wss:***REMOVED***443,
};

var***REMOVED***stringEndsWith***REMOVED***=***REMOVED***String.prototype.endsWith***REMOVED***||***REMOVED***function(s)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***s.length***REMOVED***<=***REMOVED***this.length***REMOVED***&&
***REMOVED******REMOVED******REMOVED******REMOVED***this.indexOf(s,***REMOVED***this.length***REMOVED***-***REMOVED***s.length)***REMOVED***!==***REMOVED***-1;
};

/**
***REMOVED*******REMOVED***@param***REMOVED***{string|object}***REMOVED***url***REMOVED***-***REMOVED***The***REMOVED***URL,***REMOVED***or***REMOVED***the***REMOVED***result***REMOVED***from***REMOVED***url.parse.
***REMOVED*******REMOVED***@return***REMOVED***{string}***REMOVED***The***REMOVED***URL***REMOVED***of***REMOVED***the***REMOVED***proxy***REMOVED***that***REMOVED***should***REMOVED***handle***REMOVED***the***REMOVED***request***REMOVED***to***REMOVED***the
***REMOVED*******REMOVED******REMOVED***given***REMOVED***URL.***REMOVED***If***REMOVED***no***REMOVED***proxy***REMOVED***is***REMOVED***set,***REMOVED***this***REMOVED***will***REMOVED***be***REMOVED***an***REMOVED***empty***REMOVED***string.
***REMOVED****/
function***REMOVED***getProxyForUrl(url)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***parsedUrl***REMOVED***=***REMOVED***typeof***REMOVED***url***REMOVED***===***REMOVED***'string'***REMOVED***?***REMOVED***parseUrl(url)***REMOVED***:***REMOVED***url***REMOVED***||***REMOVED***{};
***REMOVED******REMOVED***var***REMOVED***proto***REMOVED***=***REMOVED***parsedUrl.protocol;
***REMOVED******REMOVED***var***REMOVED***hostname***REMOVED***=***REMOVED***parsedUrl.host;
***REMOVED******REMOVED***var***REMOVED***port***REMOVED***=***REMOVED***parsedUrl.port;
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***hostname***REMOVED***!==***REMOVED***'string'***REMOVED***||***REMOVED***!hostname***REMOVED***||***REMOVED***typeof***REMOVED***proto***REMOVED***!==***REMOVED***'string')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';***REMOVED******REMOVED***//***REMOVED***Don't***REMOVED***proxy***REMOVED***URLs***REMOVED***without***REMOVED***a***REMOVED***valid***REMOVED***scheme***REMOVED***or***REMOVED***host.
***REMOVED******REMOVED***}

***REMOVED******REMOVED***proto***REMOVED***=***REMOVED***proto.split(':',***REMOVED***1)[0];
***REMOVED******REMOVED***//***REMOVED***Stripping***REMOVED***ports***REMOVED***in***REMOVED***this***REMOVED***way***REMOVED***instead***REMOVED***of***REMOVED***using***REMOVED***parsedUrl.hostname***REMOVED***to***REMOVED***make
***REMOVED******REMOVED***//***REMOVED***sure***REMOVED***that***REMOVED***the***REMOVED***brackets***REMOVED***around***REMOVED***IPv6***REMOVED***addresses***REMOVED***are***REMOVED***kept.
***REMOVED******REMOVED***hostname***REMOVED***=***REMOVED***hostname.replace(/:\d*$/,***REMOVED***'');
***REMOVED******REMOVED***port***REMOVED***=***REMOVED***parseInt(port)***REMOVED***||***REMOVED***DEFAULT_PORTS[proto]***REMOVED***||***REMOVED***0;
***REMOVED******REMOVED***if***REMOVED***(!shouldProxy(hostname,***REMOVED***port))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***'';***REMOVED******REMOVED***//***REMOVED***Don't***REMOVED***proxy***REMOVED***URLs***REMOVED***that***REMOVED***match***REMOVED***NO_PROXY.
***REMOVED******REMOVED***}

***REMOVED******REMOVED***var***REMOVED***proxy***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***getEnv('npm_config_'***REMOVED***+***REMOVED***proto***REMOVED***+***REMOVED***'_proxy')***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***getEnv(proto***REMOVED***+***REMOVED***'_proxy')***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***getEnv('npm_config_proxy')***REMOVED***||
***REMOVED******REMOVED******REMOVED******REMOVED***getEnv('all_proxy');
***REMOVED******REMOVED***if***REMOVED***(proxy***REMOVED***&&***REMOVED***proxy.indexOf('://')***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Missing***REMOVED***scheme***REMOVED***in***REMOVED***proxy,***REMOVED***default***REMOVED***to***REMOVED***the***REMOVED***requested***REMOVED***URL's***REMOVED***scheme.
***REMOVED******REMOVED******REMOVED******REMOVED***proxy***REMOVED***=***REMOVED***proto***REMOVED***+***REMOVED***'://'***REMOVED***+***REMOVED***proxy;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***proxy;
}

/**
***REMOVED*******REMOVED***Determines***REMOVED***whether***REMOVED***a***REMOVED***given***REMOVED***URL***REMOVED***should***REMOVED***be***REMOVED***proxied.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***hostname***REMOVED***-***REMOVED***The***REMOVED***host***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***URL.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***port***REMOVED***-***REMOVED***The***REMOVED***effective***REMOVED***port***REMOVED***of***REMOVED***the***REMOVED***URL.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Whether***REMOVED***the***REMOVED***given***REMOVED***URL***REMOVED***should***REMOVED***be***REMOVED***proxied.
***REMOVED*******REMOVED***@private
***REMOVED****/
function***REMOVED***shouldProxy(hostname,***REMOVED***port)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***NO_PROXY***REMOVED***=
***REMOVED******REMOVED******REMOVED******REMOVED***(getEnv('npm_config_no_proxy')***REMOVED***||***REMOVED***getEnv('no_proxy')).toLowerCase();
***REMOVED******REMOVED***if***REMOVED***(!NO_PROXY)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;***REMOVED******REMOVED***//***REMOVED***Always***REMOVED***proxy***REMOVED***if***REMOVED***NO_PROXY***REMOVED***is***REMOVED***not***REMOVED***set.
***REMOVED******REMOVED***}
***REMOVED******REMOVED***if***REMOVED***(NO_PROXY***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;***REMOVED******REMOVED***//***REMOVED***Never***REMOVED***proxy***REMOVED***if***REMOVED***wildcard***REMOVED***is***REMOVED***set.
***REMOVED******REMOVED***}

***REMOVED******REMOVED***return***REMOVED***NO_PROXY.split(/[,\s]/).every(function(proxy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!proxy)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;***REMOVED******REMOVED***//***REMOVED***Skip***REMOVED***zero-length***REMOVED***hosts.
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parsedProxy***REMOVED***=***REMOVED***proxy.match(/^(.+):(\d+)$/);
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parsedProxyHostname***REMOVED***=***REMOVED***parsedProxy***REMOVED***?***REMOVED***parsedProxy[1]***REMOVED***:***REMOVED***proxy;
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***parsedProxyPort***REMOVED***=***REMOVED***parsedProxy***REMOVED***?***REMOVED***parseInt(parsedProxy[2])***REMOVED***:***REMOVED***0;
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsedProxyPort***REMOVED***&&***REMOVED***parsedProxyPort***REMOVED***!==***REMOVED***port)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;***REMOVED******REMOVED***//***REMOVED***Skip***REMOVED***if***REMOVED***ports***REMOVED***don't***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!/^[.*]/.test(parsedProxyHostname))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***No***REMOVED***wildcards,***REMOVED***so***REMOVED***stop***REMOVED***proxying***REMOVED***if***REMOVED***there***REMOVED***is***REMOVED***an***REMOVED***exact***REMOVED***match.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***hostname***REMOVED***!==***REMOVED***parsedProxyHostname;
***REMOVED******REMOVED******REMOVED******REMOVED***}

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parsedProxyHostname.charAt(0)***REMOVED***===***REMOVED***'*')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Remove***REMOVED***leading***REMOVED***wildcard.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***parsedProxyHostname***REMOVED***=***REMOVED***parsedProxyHostname.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***//***REMOVED***Stop***REMOVED***proxying***REMOVED***if***REMOVED***the***REMOVED***hostname***REMOVED***ends***REMOVED***with***REMOVED***the***REMOVED***no_proxy***REMOVED***host.
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***!stringEndsWith.call(hostname,***REMOVED***parsedProxyHostname);
***REMOVED******REMOVED***});
}

/**
***REMOVED*******REMOVED***Get***REMOVED***the***REMOVED***value***REMOVED***for***REMOVED***an***REMOVED***environment***REMOVED***variable.
***REMOVED****
***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***key***REMOVED***-***REMOVED***The***REMOVED***name***REMOVED***of***REMOVED***the***REMOVED***environment***REMOVED***variable.
***REMOVED*******REMOVED***@return***REMOVED***{string}***REMOVED***The***REMOVED***value***REMOVED***of***REMOVED***the***REMOVED***environment***REMOVED***variable.
***REMOVED*******REMOVED***@private
***REMOVED****/
function***REMOVED***getEnv(key)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***process.env[key.toLowerCase()]***REMOVED***||***REMOVED***process.env[key.toUpperCase()]***REMOVED***||***REMOVED***'';
}

exports.getProxyForUrl***REMOVED***=***REMOVED***getProxyForUrl;
