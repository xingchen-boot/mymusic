var***REMOVED***isInteger***REMOVED***=***REMOVED***require('./isInteger');

/*****REMOVED***Used***REMOVED***as***REMOVED***references***REMOVED***for***REMOVED***various***REMOVED***`Number`***REMOVED***constants.***REMOVED****/
var***REMOVED***MAX_SAFE_INTEGER***REMOVED***=***REMOVED***9007199254740991;

/**
***REMOVED*******REMOVED***Checks***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***safe***REMOVED***integer.***REMOVED***An***REMOVED***integer***REMOVED***is***REMOVED***safe***REMOVED***if***REMOVED***it's***REMOVED***an***REMOVED***IEEE-754
***REMOVED*******REMOVED***double***REMOVED***precision***REMOVED***number***REMOVED***which***REMOVED***isn't***REMOVED***the***REMOVED***result***REMOVED***of***REMOVED***a***REMOVED***rounded***REMOVED***unsafe***REMOVED***integer.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***method***REMOVED***is***REMOVED***based***REMOVED***on
***REMOVED*******REMOVED***[`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Lang
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***check.
***REMOVED*******REMOVED***@returns***REMOVED***{boolean}***REMOVED***Returns***REMOVED***`true`***REMOVED***if***REMOVED***`value`***REMOVED***is***REMOVED***a***REMOVED***safe***REMOVED***integer,***REMOVED***else***REMOVED***`false`.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.isSafeInteger(3);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***true
***REMOVED****
***REMOVED*******REMOVED***_.isSafeInteger(Number.MIN_VALUE);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.isSafeInteger(Infinity);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****
***REMOVED*******REMOVED***_.isSafeInteger('3');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***false
***REMOVED****/
function***REMOVED***isSafeInteger(value)***REMOVED***{
***REMOVED******REMOVED***return***REMOVED***isInteger(value)***REMOVED***&&***REMOVED***value***REMOVED***>=***REMOVED***-MAX_SAFE_INTEGER***REMOVED***&&***REMOVED***value***REMOVED***<=***REMOVED***MAX_SAFE_INTEGER;
}

module.exports***REMOVED***=***REMOVED***isSafeInteger;
