/**
***REMOVED*******REMOVED***The***REMOVED***`timers/promises`***REMOVED***API***REMOVED***provides***REMOVED***an***REMOVED***alternative***REMOVED***set***REMOVED***of***REMOVED***timer***REMOVED***functions
***REMOVED*******REMOVED***that***REMOVED***return***REMOVED***`Promise`***REMOVED***objects.***REMOVED***The***REMOVED***API***REMOVED***is***REMOVED***accessible***REMOVED***via
***REMOVED*******REMOVED***`require('node:timers/promises')`.
***REMOVED****
***REMOVED*******REMOVED***```js
***REMOVED*******REMOVED***import***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***setTimeout,
***REMOVED*******REMOVED******REMOVED******REMOVED***setImmediate,
***REMOVED*******REMOVED******REMOVED******REMOVED***setInterval,
***REMOVED*******REMOVED***}***REMOVED***from***REMOVED***'node:timers/promises';
***REMOVED*******REMOVED***```
***REMOVED*******REMOVED***@since***REMOVED***v15.0.0
***REMOVED*******REMOVED***@see***REMOVED***[source](https://github.com/nodejs/node/blob/v20.x/lib/timers/promises.js)
***REMOVED****/
declare***REMOVED***module***REMOVED***"timers/promises"***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***import***REMOVED***{***REMOVED***TimerOptions***REMOVED***}***REMOVED***from***REMOVED***"node:timers";
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```js
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***import***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***setTimeout,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}***REMOVED***from***REMOVED***'node:timers/promises';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***await***REMOVED***setTimeout(100,***REMOVED***'result');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***console.log(res);***REMOVED******REMOVED***//***REMOVED***Prints***REMOVED***'result'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@since***REMOVED***v15.0.0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***delay***REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***milliseconds***REMOVED***to***REMOVED***wait***REMOVED***before***REMOVED***fulfilling***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***promise.***REMOVED*****Default:*****REMOVED***`1`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***A***REMOVED***value***REMOVED***with***REMOVED***which***REMOVED***the***REMOVED***promise***REMOVED***is***REMOVED***fulfilled.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***setTimeout<T***REMOVED***=***REMOVED***void>(delay?:***REMOVED***number,***REMOVED***value?:***REMOVED***T,***REMOVED***options?:***REMOVED***TimerOptions):***REMOVED***Promise<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```js
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***import***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***setImmediate,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}***REMOVED***from***REMOVED***'node:timers/promises';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***const***REMOVED***res***REMOVED***=***REMOVED***await***REMOVED***setImmediate('result');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***console.log(res);***REMOVED******REMOVED***//***REMOVED***Prints***REMOVED***'result'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@since***REMOVED***v15.0.0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***A***REMOVED***value***REMOVED***with***REMOVED***which***REMOVED***the***REMOVED***promise***REMOVED***is***REMOVED***fulfilled.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***setImmediate<T***REMOVED***=***REMOVED***void>(value?:***REMOVED***T,***REMOVED***options?:***REMOVED***TimerOptions):***REMOVED***Promise<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Returns***REMOVED***an***REMOVED***async***REMOVED***iterator***REMOVED***that***REMOVED***generates***REMOVED***values***REMOVED***in***REMOVED***an***REMOVED***interval***REMOVED***of***REMOVED***`delay`***REMOVED***ms.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***`ref`***REMOVED***is***REMOVED***`true`,***REMOVED***you***REMOVED***need***REMOVED***to***REMOVED***call***REMOVED***`next()`***REMOVED***of***REMOVED***async***REMOVED***iterator***REMOVED***explicitly
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***or***REMOVED***implicitly***REMOVED***to***REMOVED***keep***REMOVED***the***REMOVED***event***REMOVED***loop***REMOVED***alive.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```js
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***import***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***setInterval,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}***REMOVED***from***REMOVED***'node:timers/promises';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***const***REMOVED***interval***REMOVED***=***REMOVED***100;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***for***REMOVED***await***REMOVED***(const***REMOVED***startTime***REMOVED***of***REMOVED***setInterval(interval,***REMOVED***Date.now()))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***const***REMOVED***now***REMOVED***=***REMOVED***Date.now();
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***console.log(now);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED***if***REMOVED***((now***REMOVED***-***REMOVED***startTime)***REMOVED***>***REMOVED***1000)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***break;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***console.log(Date.now());
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@since***REMOVED***v15.9.0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***delay***REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***milliseconds***REMOVED***to***REMOVED***wait***REMOVED***between***REMOVED***iterations.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED*****Default:*****REMOVED***`1`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***value***REMOVED***A***REMOVED***value***REMOVED***with***REMOVED***which***REMOVED***the***REMOVED***iterator***REMOVED***returns.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***function***REMOVED***setInterval<T***REMOVED***=***REMOVED***void>(delay?:***REMOVED***number,***REMOVED***value?:***REMOVED***T,***REMOVED***options?:***REMOVED***TimerOptions):***REMOVED***NodeJS.AsyncIterator<T>;
***REMOVED******REMOVED******REMOVED******REMOVED***interface***REMOVED***Scheduler***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***An***REMOVED***experimental***REMOVED***API***REMOVED***defined***REMOVED***by***REMOVED***the***REMOVED***[Scheduling***REMOVED***APIs](https://github.com/WICG/scheduling-apis)***REMOVED***draft***REMOVED***specification
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***being***REMOVED***developed***REMOVED***as***REMOVED***a***REMOVED***standard***REMOVED***Web***REMOVED***Platform***REMOVED***API.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Calling***REMOVED***`timersPromises.scheduler.wait(delay,***REMOVED***options)`***REMOVED***is***REMOVED***roughly***REMOVED***equivalent
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***calling***REMOVED***`timersPromises.setTimeout(delay,***REMOVED***undefined,***REMOVED***options)`***REMOVED***except***REMOVED***that
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***`ref`***REMOVED***option***REMOVED***is***REMOVED***not***REMOVED***supported.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```js
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***import***REMOVED***{***REMOVED***scheduler***REMOVED***}***REMOVED***from***REMOVED***'node:timers/promises';
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***await***REMOVED***scheduler.wait(1000);***REMOVED***//***REMOVED***Wait***REMOVED***one***REMOVED***second***REMOVED***before***REMOVED***continuing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@since***REMOVED***v17.3.0,***REMOVED***v16.14.0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@experimental
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@param***REMOVED***delay***REMOVED***The***REMOVED***number***REMOVED***of***REMOVED***milliseconds***REMOVED***to***REMOVED***wait***REMOVED***before***REMOVED***resolving***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***promise.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***wait(delay:***REMOVED***number,***REMOVED***options?:***REMOVED***{***REMOVED***signal?:***REMOVED***AbortSignal***REMOVED***}):***REMOVED***Promise<void>;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***An***REMOVED***experimental***REMOVED***API***REMOVED***defined***REMOVED***by***REMOVED***the***REMOVED***[Scheduling***REMOVED***APIs](https://github.com/WICG/scheduling-apis)***REMOVED***draft***REMOVED***specification
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***being***REMOVED***developed***REMOVED***as***REMOVED***a***REMOVED***standard***REMOVED***Web***REMOVED***Platform***REMOVED***API.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Calling***REMOVED***`timersPromises.scheduler.yield()`***REMOVED***is***REMOVED***equivalent***REMOVED***to***REMOVED***calling
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`timersPromises.setImmediate()`***REMOVED***with***REMOVED***no***REMOVED***arguments.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@since***REMOVED***v17.3.0,***REMOVED***v16.14.0
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@experimental
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***yield():***REMOVED***Promise<void>;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***scheduler:***REMOVED***Scheduler;
}
declare***REMOVED***module***REMOVED***"node:timers/promises"***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***export***REMOVED*******REMOVED***from***REMOVED***"timers/promises";
}
