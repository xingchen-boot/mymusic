/*
***REMOVED******REMOVED***@license
	Rollup.js***REMOVED***v3.29.4
	Sat,***REMOVED***21***REMOVED***Sep***REMOVED***2024***REMOVED***06:29:06***REMOVED***GMT***REMOVED***-***REMOVED***commit***REMOVED***2ef77c00ec2635d42697cff2c0567ccc8db34fb4

	https://github.com/rollup/rollup

	Released***REMOVED***under***REMOVED***the***REMOVED***MIT***REMOVED***License.
*/
const***REMOVED***getLogFilter***REMOVED***=***REMOVED***filters***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(filters.length***REMOVED***===***REMOVED***0)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***()***REMOVED***=>***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***normalizedFilters***REMOVED***=***REMOVED***filters.map(filter***REMOVED***=>***REMOVED***filter.split('&').map(subFilter***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***inverted***REMOVED***=***REMOVED***subFilter.startsWith('!');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inverted)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***subFilter***REMOVED***=***REMOVED***subFilter.slice(1);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***[key,***REMOVED***...value]***REMOVED***=***REMOVED***subFilter.split(':');
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***{***REMOVED***inverted,***REMOVED***key:***REMOVED***key.split('.'),***REMOVED***parts:***REMOVED***value.join(':').split('*')***REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***}));
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***(log)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***nextIntersectedFilter:***REMOVED***for***REMOVED***(const***REMOVED***intersectedFilters***REMOVED***of***REMOVED***normalizedFilters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(const***REMOVED***{***REMOVED***inverted,***REMOVED***key,***REMOVED***parts***REMOVED***}***REMOVED***of***REMOVED***intersectedFilters)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***isFilterSatisfied***REMOVED***=***REMOVED***testFilter(log,***REMOVED***key,***REMOVED***parts);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(inverted***REMOVED***?***REMOVED***isFilterSatisfied***REMOVED***:***REMOVED***!isFilterSatisfied)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***continue***REMOVED***nextIntersectedFilter;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***};
};
const***REMOVED***testFilter***REMOVED***=***REMOVED***(log,***REMOVED***key,***REMOVED***parts)***REMOVED***=>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***rawValue***REMOVED***=***REMOVED***log;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***0;***REMOVED***index***REMOVED***<***REMOVED***key.length;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!rawValue)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***part***REMOVED***=***REMOVED***key[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!(part***REMOVED***in***REMOVED***rawValue))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***rawValue***REMOVED***=***REMOVED***rawValue[part];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***let***REMOVED***value***REMOVED***=***REMOVED***typeof***REMOVED***rawValue***REMOVED***===***REMOVED***'object'***REMOVED***?***REMOVED***JSON.stringify(rawValue)***REMOVED***:***REMOVED***String(rawValue);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(parts.length***REMOVED***===***REMOVED***1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value***REMOVED***===***REMOVED***parts[0];
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(!value.startsWith(parts[0]))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***lastPartIndex***REMOVED***=***REMOVED***parts.length***REMOVED***-***REMOVED***1;
***REMOVED******REMOVED******REMOVED******REMOVED***for***REMOVED***(let***REMOVED***index***REMOVED***=***REMOVED***1;***REMOVED***index***REMOVED***<***REMOVED***lastPartIndex;***REMOVED***index++)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***part***REMOVED***=***REMOVED***parts[index];
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***const***REMOVED***position***REMOVED***=***REMOVED***value.indexOf(part);
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(position***REMOVED***===***REMOVED***-1)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***value***REMOVED***=***REMOVED***value.slice(position***REMOVED***+***REMOVED***part.length);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value.endsWith(parts[lastPartIndex]);
};

export***REMOVED***{***REMOVED***getLogFilter***REMOVED***};
