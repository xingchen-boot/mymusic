//***REMOVED***@ts-check
/*****REMOVED***@typedef***REMOVED***{***REMOVED***import('estree').BaseNode}***REMOVED***BaseNode***REMOVED****/

/*****REMOVED***@typedef***REMOVED***{{
	skip:***REMOVED***()***REMOVED***=>***REMOVED***void;
	remove:***REMOVED***()***REMOVED***=>***REMOVED***void;
	replace:***REMOVED***(node:***REMOVED***BaseNode)***REMOVED***=>***REMOVED***void;
}}***REMOVED***WalkerContext***REMOVED****/

export***REMOVED***class***REMOVED***WalkerBase***REMOVED***{
	constructor()***REMOVED***{
		/*****REMOVED***@type***REMOVED***{boolean}***REMOVED****/
		this.should_skip***REMOVED***=***REMOVED***false;

		/*****REMOVED***@type***REMOVED***{boolean}***REMOVED****/
		this.should_remove***REMOVED***=***REMOVED***false;

		/*****REMOVED***@type***REMOVED***{BaseNode***REMOVED***|***REMOVED***null}***REMOVED****/
		this.replacement***REMOVED***=***REMOVED***null;

		/*****REMOVED***@type***REMOVED***{WalkerContext}***REMOVED****/
		this.context***REMOVED***=***REMOVED***{
			skip:***REMOVED***()***REMOVED***=>***REMOVED***(this.should_skip***REMOVED***=***REMOVED***true),
			remove:***REMOVED***()***REMOVED***=>***REMOVED***(this.should_remove***REMOVED***=***REMOVED***true),
			replace:***REMOVED***(node)***REMOVED***=>***REMOVED***(this.replacement***REMOVED***=***REMOVED***node)
		};
	}

	/**
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***parent
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***prop
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***index
	***REMOVED*******REMOVED***@param***REMOVED***{BaseNode}***REMOVED***node
	***REMOVED****/
	replace(parent,***REMOVED***prop,***REMOVED***index,***REMOVED***node)***REMOVED***{
		if***REMOVED***(parent)***REMOVED***{
			if***REMOVED***(index***REMOVED***!==***REMOVED***null)***REMOVED***{
				parent[prop][index]***REMOVED***=***REMOVED***node;
			}***REMOVED***else***REMOVED***{
				parent[prop]***REMOVED***=***REMOVED***node;
			}
		}
	}

	/**
	***REMOVED****
	***REMOVED*******REMOVED***@param***REMOVED***{any}***REMOVED***parent
	***REMOVED*******REMOVED***@param***REMOVED***{string}***REMOVED***prop
	***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***index
	***REMOVED****/
	remove(parent,***REMOVED***prop,***REMOVED***index)***REMOVED***{
		if***REMOVED***(parent)***REMOVED***{
			if***REMOVED***(index***REMOVED***!==***REMOVED***null)***REMOVED***{
				parent[prop].splice(index,***REMOVED***1);
			}***REMOVED***else***REMOVED***{
				delete***REMOVED***parent[prop];
			}
		}
	}
}
