import***REMOVED***baseRest***REMOVED***from***REMOVED***'./_baseRest.js';
import***REMOVED***toInteger***REMOVED***from***REMOVED***'./toInteger.js';

/*****REMOVED***Error***REMOVED***message***REMOVED***constants.***REMOVED****/
var***REMOVED***FUNC_ERROR_TEXT***REMOVED***=***REMOVED***'Expected***REMOVED***a***REMOVED***function';

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***the***REMOVED***`this`***REMOVED***binding***REMOVED***of***REMOVED***the
***REMOVED*******REMOVED***created***REMOVED***function***REMOVED***and***REMOVED***arguments***REMOVED***from***REMOVED***`start`***REMOVED***and***REMOVED***beyond***REMOVED***provided***REMOVED***as
***REMOVED*******REMOVED***an***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***method***REMOVED***is***REMOVED***based***REMOVED***on***REMOVED***the
***REMOVED*******REMOVED***[rest***REMOVED***parameter](https://mdn.io/rest_parameters).
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***4.0.0
***REMOVED*******REMOVED***@category***REMOVED***Function
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***apply***REMOVED***a***REMOVED***rest***REMOVED***parameter***REMOVED***to.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[start=func.length-1]***REMOVED***The***REMOVED***start***REMOVED***position***REMOVED***of***REMOVED***the***REMOVED***rest***REMOVED***parameter.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***say***REMOVED***=***REMOVED***_.rest(function(what,***REMOVED***names)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***return***REMOVED***what***REMOVED***+***REMOVED***'***REMOVED***'***REMOVED***+***REMOVED***_.initial(names).join(',***REMOVED***')***REMOVED***+
***REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***(_.size(names)***REMOVED***>***REMOVED***1***REMOVED***?***REMOVED***',***REMOVED***&***REMOVED***'***REMOVED***:***REMOVED***'')***REMOVED***+***REMOVED***_.last(names);
***REMOVED*******REMOVED***});
***REMOVED****
***REMOVED*******REMOVED***say('hello',***REMOVED***'fred',***REMOVED***'barney',***REMOVED***'pebbles');
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'hello***REMOVED***fred,***REMOVED***barney,***REMOVED***&***REMOVED***pebbles'
***REMOVED****/
function***REMOVED***rest(func,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***func***REMOVED***!=***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(FUNC_ERROR_TEXT);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***start***REMOVED***=***REMOVED***start***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***start***REMOVED***:***REMOVED***toInteger(start);
***REMOVED******REMOVED***return***REMOVED***baseRest(func,***REMOVED***start);
}

export***REMOVED***default***REMOVED***rest;
