import***REMOVED***arrayMap***REMOVED***from***REMOVED***'./_arrayMap.js';
import***REMOVED***baseIntersection***REMOVED***from***REMOVED***'./_baseIntersection.js';
import***REMOVED***baseRest***REMOVED***from***REMOVED***'./_baseRest.js';
import***REMOVED***castArrayLikeObject***REMOVED***from***REMOVED***'./_castArrayLikeObject.js';

/**
***REMOVED*******REMOVED***Creates***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***unique***REMOVED***values***REMOVED***that***REMOVED***are***REMOVED***included***REMOVED***in***REMOVED***all***REMOVED***given***REMOVED***arrays
***REMOVED*******REMOVED***using***REMOVED***[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
***REMOVED*******REMOVED***for***REMOVED***equality***REMOVED***comparisons.***REMOVED***The***REMOVED***order***REMOVED***and***REMOVED***references***REMOVED***of***REMOVED***result***REMOVED***values***REMOVED***are
***REMOVED*******REMOVED***determined***REMOVED***by***REMOVED***the***REMOVED***first***REMOVED***array.
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***0.1.0
***REMOVED*******REMOVED***@category***REMOVED***Array
***REMOVED*******REMOVED***@param***REMOVED***{...Array}***REMOVED***[arrays]***REMOVED***The***REMOVED***arrays***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***array***REMOVED***of***REMOVED***intersecting***REMOVED***values.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***_.intersection([2,***REMOVED***1],***REMOVED***[2,***REMOVED***3]);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***[2]
***REMOVED****/
var***REMOVED***intersection***REMOVED***=***REMOVED***baseRest(function(arrays)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***mapped***REMOVED***=***REMOVED***arrayMap(arrays,***REMOVED***castArrayLikeObject);
***REMOVED******REMOVED***return***REMOVED***(mapped.length***REMOVED***&&***REMOVED***mapped[0]***REMOVED***===***REMOVED***arrays[0])
***REMOVED******REMOVED******REMOVED******REMOVED***?***REMOVED***baseIntersection(mapped)
***REMOVED******REMOVED******REMOVED******REMOVED***:***REMOVED***[];
});

export***REMOVED***default***REMOVED***intersection;
