import***REMOVED***isArray***REMOVED***from***REMOVED***'./isArray.js';
import***REMOVED***isKey***REMOVED***from***REMOVED***'./_isKey.js';
import***REMOVED***stringToPath***REMOVED***from***REMOVED***'./_stringToPath.js';
import***REMOVED***toString***REMOVED***from***REMOVED***'./toString.js';

/**
***REMOVED*******REMOVED***Casts***REMOVED***`value`***REMOVED***to***REMOVED***a***REMOVED***path***REMOVED***array***REMOVED***if***REMOVED***it's***REMOVED***not***REMOVED***one.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{*}***REMOVED***value***REMOVED***The***REMOVED***value***REMOVED***to***REMOVED***inspect.
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***[object]***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query***REMOVED***keys***REMOVED***on.
***REMOVED*******REMOVED***@returns***REMOVED***{Array}***REMOVED***Returns***REMOVED***the***REMOVED***cast***REMOVED***property***REMOVED***path***REMOVED***array.
***REMOVED****/
function***REMOVED***castPath(value,***REMOVED***object)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(isArray(value))***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***value;
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***isKey(value,***REMOVED***object)***REMOVED***?***REMOVED***[value]***REMOVED***:***REMOVED***stringToPath(toString(value));
}

export***REMOVED***default***REMOVED***castPath;
