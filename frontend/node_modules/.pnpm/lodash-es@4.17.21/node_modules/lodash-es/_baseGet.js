import***REMOVED***castPath***REMOVED***from***REMOVED***'./_castPath.js';
import***REMOVED***toKey***REMOVED***from***REMOVED***'./_toKey.js';

/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.get`***REMOVED***without***REMOVED***support***REMOVED***for***REMOVED***default***REMOVED***values.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Object}***REMOVED***object***REMOVED***The***REMOVED***object***REMOVED***to***REMOVED***query.
***REMOVED*******REMOVED***@param***REMOVED***{Array|string}***REMOVED***path***REMOVED***The***REMOVED***path***REMOVED***of***REMOVED***the***REMOVED***property***REMOVED***to***REMOVED***get.
***REMOVED*******REMOVED***@returns***REMOVED***{*}***REMOVED***Returns***REMOVED***the***REMOVED***resolved***REMOVED***value.
***REMOVED****/
function***REMOVED***baseGet(object,***REMOVED***path)***REMOVED***{
***REMOVED******REMOVED***path***REMOVED***=***REMOVED***castPath(path,***REMOVED***object);

***REMOVED******REMOVED***var***REMOVED***index***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***path.length;

***REMOVED******REMOVED***while***REMOVED***(object***REMOVED***!=***REMOVED***null***REMOVED***&&***REMOVED***index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***object***REMOVED***=***REMOVED***object[toKey(path[index++])];
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***(index***REMOVED***&&***REMOVED***index***REMOVED***==***REMOVED***length)***REMOVED***?***REMOVED***object***REMOVED***:***REMOVED***undefined;
}

export***REMOVED***default***REMOVED***baseGet;
