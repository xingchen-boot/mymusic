/**
***REMOVED*******REMOVED***The***REMOVED***base***REMOVED***implementation***REMOVED***of***REMOVED***`_.sum`***REMOVED***and***REMOVED***`_.sumBy`***REMOVED***without***REMOVED***support***REMOVED***for
***REMOVED*******REMOVED***iteratee***REMOVED***shorthands.
***REMOVED****
***REMOVED*******REMOVED***@private
***REMOVED*******REMOVED***@param***REMOVED***{Array}***REMOVED***array***REMOVED***The***REMOVED***array***REMOVED***to***REMOVED***iterate***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***iteratee***REMOVED***The***REMOVED***function***REMOVED***invoked***REMOVED***per***REMOVED***iteration.
***REMOVED*******REMOVED***@returns***REMOVED***{number}***REMOVED***Returns***REMOVED***the***REMOVED***sum.
***REMOVED****/
function***REMOVED***baseSum(array,***REMOVED***iteratee)***REMOVED***{
***REMOVED******REMOVED***var***REMOVED***result,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***index***REMOVED***=***REMOVED***-1,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***length***REMOVED***=***REMOVED***array.length;

***REMOVED******REMOVED***while***REMOVED***(++index***REMOVED***<***REMOVED***length)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***current***REMOVED***=***REMOVED***iteratee(array[index]);
***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(current***REMOVED***!==***REMOVED***undefined)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***result***REMOVED***=***REMOVED***result***REMOVED***===***REMOVED***undefined***REMOVED***?***REMOVED***current***REMOVED***:***REMOVED***(result***REMOVED***+***REMOVED***current);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED***}
***REMOVED******REMOVED***return***REMOVED***result;
}

export***REMOVED***default***REMOVED***baseSum;
