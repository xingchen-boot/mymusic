import***REMOVED***apply***REMOVED***from***REMOVED***'./_apply.js';
import***REMOVED***arrayPush***REMOVED***from***REMOVED***'./_arrayPush.js';
import***REMOVED***baseRest***REMOVED***from***REMOVED***'./_baseRest.js';
import***REMOVED***castSlice***REMOVED***from***REMOVED***'./_castSlice.js';
import***REMOVED***toInteger***REMOVED***from***REMOVED***'./toInteger.js';

/*****REMOVED***Error***REMOVED***message***REMOVED***constants.***REMOVED****/
var***REMOVED***FUNC_ERROR_TEXT***REMOVED***=***REMOVED***'Expected***REMOVED***a***REMOVED***function';

/****REMOVED***Built-in***REMOVED***method***REMOVED***references***REMOVED***for***REMOVED***those***REMOVED***with***REMOVED***the***REMOVED***same***REMOVED***name***REMOVED***as***REMOVED***other***REMOVED***`lodash`***REMOVED***methods.***REMOVED****/
var***REMOVED***nativeMax***REMOVED***=***REMOVED***Math.max;

/**
***REMOVED*******REMOVED***Creates***REMOVED***a***REMOVED***function***REMOVED***that***REMOVED***invokes***REMOVED***`func`***REMOVED***with***REMOVED***the***REMOVED***`this`***REMOVED***binding***REMOVED***of***REMOVED***the
***REMOVED*******REMOVED***create***REMOVED***function***REMOVED***and***REMOVED***an***REMOVED***array***REMOVED***of***REMOVED***arguments***REMOVED***much***REMOVED***like
***REMOVED*******REMOVED***[`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
***REMOVED****
***REMOVED*******REMOVED*****Note:*****REMOVED***This***REMOVED***method***REMOVED***is***REMOVED***based***REMOVED***on***REMOVED***the
***REMOVED*******REMOVED***[spread***REMOVED***operator](https://mdn.io/spread_operator).
***REMOVED****
***REMOVED*******REMOVED***@static
***REMOVED*******REMOVED***@memberOf***REMOVED***_
***REMOVED*******REMOVED***@since***REMOVED***3.2.0
***REMOVED*******REMOVED***@category***REMOVED***Function
***REMOVED*******REMOVED***@param***REMOVED***{Function}***REMOVED***func***REMOVED***The***REMOVED***function***REMOVED***to***REMOVED***spread***REMOVED***arguments***REMOVED***over.
***REMOVED*******REMOVED***@param***REMOVED***{number}***REMOVED***[start=0]***REMOVED***The***REMOVED***start***REMOVED***position***REMOVED***of***REMOVED***the***REMOVED***spread.
***REMOVED*******REMOVED***@returns***REMOVED***{Function}***REMOVED***Returns***REMOVED***the***REMOVED***new***REMOVED***function.
***REMOVED*******REMOVED***@example
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***say***REMOVED***=***REMOVED***_.spread(function(who,***REMOVED***what)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***return***REMOVED***who***REMOVED***+***REMOVED***'***REMOVED***says***REMOVED***'***REMOVED***+***REMOVED***what;
***REMOVED*******REMOVED***});
***REMOVED****
***REMOVED*******REMOVED***say(['fred',***REMOVED***'hello']);
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***'fred***REMOVED***says***REMOVED***hello'
***REMOVED****
***REMOVED*******REMOVED***var***REMOVED***numbers***REMOVED***=***REMOVED***Promise.all([
***REMOVED*******REMOVED******REMOVED******REMOVED***Promise.resolve(40),
***REMOVED*******REMOVED******REMOVED******REMOVED***Promise.resolve(36)
***REMOVED*******REMOVED***]);
***REMOVED****
***REMOVED*******REMOVED***numbers.then(_.spread(function(x,***REMOVED***y)***REMOVED***{
***REMOVED*******REMOVED******REMOVED******REMOVED***return***REMOVED***x***REMOVED***+***REMOVED***y;
***REMOVED*******REMOVED***}));
***REMOVED*******REMOVED***//***REMOVED***=>***REMOVED***a***REMOVED***Promise***REMOVED***of***REMOVED***76
***REMOVED****/
function***REMOVED***spread(func,***REMOVED***start)***REMOVED***{
***REMOVED******REMOVED***if***REMOVED***(typeof***REMOVED***func***REMOVED***!=***REMOVED***'function')***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***throw***REMOVED***new***REMOVED***TypeError(FUNC_ERROR_TEXT);
***REMOVED******REMOVED***}
***REMOVED******REMOVED***start***REMOVED***=***REMOVED***start***REMOVED***==***REMOVED***null***REMOVED***?***REMOVED***0***REMOVED***:***REMOVED***nativeMax(toInteger(start),***REMOVED***0);
***REMOVED******REMOVED***return***REMOVED***baseRest(function(args)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***var***REMOVED***array***REMOVED***=***REMOVED***args[start],
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***otherArgs***REMOVED***=***REMOVED***castSlice(args,***REMOVED***0,***REMOVED***start);

***REMOVED******REMOVED******REMOVED******REMOVED***if***REMOVED***(array)***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***arrayPush(otherArgs,***REMOVED***array);
***REMOVED******REMOVED******REMOVED******REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED***return***REMOVED***apply(func,***REMOVED***this,***REMOVED***otherArgs);
***REMOVED******REMOVED***});
}

export***REMOVED***default***REMOVED***spread;
