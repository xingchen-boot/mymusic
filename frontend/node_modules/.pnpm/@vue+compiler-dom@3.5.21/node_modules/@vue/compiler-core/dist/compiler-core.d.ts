import***REMOVED***{***REMOVED***PatchFlags***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';
export***REMOVED***{***REMOVED***generateCodeFrame***REMOVED***}***REMOVED***from***REMOVED***'@vue/shared';
import***REMOVED***{***REMOVED***Node***REMOVED***as***REMOVED***Node$1,***REMOVED***Identifier,***REMOVED***Function,***REMOVED***BlockStatement***REMOVED***as***REMOVED***BlockStatement$1,***REMOVED***Program,***REMOVED***ObjectProperty***REMOVED***}***REMOVED***from***REMOVED***'@babel/types';
import***REMOVED***{***REMOVED***ParserPlugin***REMOVED***}***REMOVED***from***REMOVED***'@babel/parser';

export***REMOVED***declare***REMOVED***const***REMOVED***FRAGMENT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***TELEPORT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***SUSPENSE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***KEEP_ALIVE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***BASE_TRANSITION:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***OPEN_BLOCK:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_BLOCK:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_ELEMENT_BLOCK:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_VNODE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_ELEMENT_VNODE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_COMMENT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_TEXT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_STATIC:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RESOLVE_COMPONENT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RESOLVE_DYNAMIC_COMPONENT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RESOLVE_DIRECTIVE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RESOLVE_FILTER:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***WITH_DIRECTIVES:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RENDER_LIST:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***RENDER_SLOT:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CREATE_SLOTS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***TO_DISPLAY_STRING:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***MERGE_PROPS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***NORMALIZE_CLASS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***NORMALIZE_STYLE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***NORMALIZE_PROPS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***GUARD_REACTIVE_PROPS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***TO_HANDLERS:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CAMELIZE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***CAPITALIZE:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***TO_HANDLER_KEY:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***SET_BLOCK_TRACKING:***REMOVED***unique***REMOVED***symbol;
/**
***REMOVED*******REMOVED***@deprecated***REMOVED***no***REMOVED***longer***REMOVED***needed***REMOVED***in***REMOVED***3.5+***REMOVED***because***REMOVED***we***REMOVED***no***REMOVED***longer***REMOVED***hoist***REMOVED***element***REMOVED***nodes
***REMOVED*******REMOVED***but***REMOVED***kept***REMOVED***for***REMOVED***backwards***REMOVED***compat
***REMOVED****/
export***REMOVED***declare***REMOVED***const***REMOVED***PUSH_SCOPE_ID:***REMOVED***unique***REMOVED***symbol;
/**
***REMOVED*******REMOVED***@deprecated***REMOVED***kept***REMOVED***for***REMOVED***backwards***REMOVED***compat
***REMOVED****/
export***REMOVED***declare***REMOVED***const***REMOVED***POP_SCOPE_ID:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***WITH_CTX:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***UNREF:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***IS_REF:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***WITH_MEMO:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***IS_MEMO_SAME:***REMOVED***unique***REMOVED***symbol;
export***REMOVED***declare***REMOVED***const***REMOVED***helperNameMap:***REMOVED***Record<symbol,***REMOVED***string>;
export***REMOVED***declare***REMOVED***function***REMOVED***registerRuntimeHelpers(helpers:***REMOVED***Record<symbol,***REMOVED***string>):***REMOVED***void;

type***REMOVED***OptionalOptions***REMOVED***=***REMOVED***'decodeEntities'***REMOVED***|***REMOVED***'whitespace'***REMOVED***|***REMOVED***'isNativeTag'***REMOVED***|***REMOVED***'isBuiltInComponent'***REMOVED***|***REMOVED***'expressionPlugins'***REMOVED***|***REMOVED***keyof***REMOVED***CompilerCompatOptions;
type***REMOVED***MergedParserOptions***REMOVED***=***REMOVED***Omit<Required<ParserOptions>,***REMOVED***OptionalOptions>***REMOVED***&***REMOVED***Pick<ParserOptions,***REMOVED***OptionalOptions>;
export***REMOVED***declare***REMOVED***function***REMOVED***baseParse(input:***REMOVED***string,***REMOVED***options?:***REMOVED***ParserOptions):***REMOVED***RootNode;

type***REMOVED***CompilerCompatConfig***REMOVED***=***REMOVED***Partial<Record<CompilerDeprecationTypes,***REMOVED***boolean***REMOVED***|***REMOVED***'suppress-warning'>>***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***MODE?:***REMOVED***2***REMOVED***|***REMOVED***3;
};
interface***REMOVED***CompilerCompatOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***compatConfig?:***REMOVED***CompilerCompatConfig;
}
export***REMOVED***declare***REMOVED***enum***REMOVED***CompilerDeprecationTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_IS_ON_ELEMENT***REMOVED***=***REMOVED***"COMPILER_IS_ON_ELEMENT",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_V_BIND_SYNC***REMOVED***=***REMOVED***"COMPILER_V_BIND_SYNC",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_V_BIND_OBJECT_ORDER***REMOVED***=***REMOVED***"COMPILER_V_BIND_OBJECT_ORDER",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_V_ON_NATIVE***REMOVED***=***REMOVED***"COMPILER_V_ON_NATIVE",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_V_IF_V_FOR_PRECEDENCE***REMOVED***=***REMOVED***"COMPILER_V_IF_V_FOR_PRECEDENCE",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_NATIVE_TEMPLATE***REMOVED***=***REMOVED***"COMPILER_NATIVE_TEMPLATE",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_INLINE_TEMPLATE***REMOVED***=***REMOVED***"COMPILER_INLINE_TEMPLATE",
***REMOVED******REMOVED******REMOVED******REMOVED***COMPILER_FILTERS***REMOVED***=***REMOVED***"COMPILER_FILTERS"
}
export***REMOVED***declare***REMOVED***function***REMOVED***checkCompatEnabled(key:***REMOVED***CompilerDeprecationTypes,***REMOVED***context:***REMOVED***MergedParserOptions***REMOVED***|***REMOVED***TransformContext,***REMOVED***loc:***REMOVED***SourceLocation***REMOVED***|***REMOVED***null,***REMOVED***...args:***REMOVED***any[]):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***warnDeprecation(key:***REMOVED***CompilerDeprecationTypes,***REMOVED***context:***REMOVED***MergedParserOptions***REMOVED***|***REMOVED***TransformContext,***REMOVED***loc:***REMOVED***SourceLocation***REMOVED***|***REMOVED***null,***REMOVED***...args:***REMOVED***any[]):***REMOVED***void;

export***REMOVED***type***REMOVED***NodeTransform***REMOVED***=***REMOVED***(node:***REMOVED***RootNode***REMOVED***|***REMOVED***TemplateChildNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***void***REMOVED***|***REMOVED***(()***REMOVED***=>***REMOVED***void)***REMOVED***|***REMOVED***(()***REMOVED***=>***REMOVED***void)[];
export***REMOVED***type***REMOVED***DirectiveTransform***REMOVED***=***REMOVED***(dir:***REMOVED***DirectiveNode,***REMOVED***node:***REMOVED***ElementNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***augmentor?:***REMOVED***(ret:***REMOVED***DirectiveTransformResult)***REMOVED***=>***REMOVED***DirectiveTransformResult)***REMOVED***=>***REMOVED***DirectiveTransformResult;
interface***REMOVED***DirectiveTransformResult***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***Property[];
***REMOVED******REMOVED******REMOVED******REMOVED***needRuntime?:***REMOVED***boolean***REMOVED***|***REMOVED***symbol;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrTagParts?:***REMOVED***TemplateLiteral['elements'];
}
export***REMOVED***type***REMOVED***StructuralDirectiveTransform***REMOVED***=***REMOVED***(node:***REMOVED***ElementNode,***REMOVED***dir:***REMOVED***DirectiveNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***void***REMOVED***|***REMOVED***(()***REMOVED***=>***REMOVED***void);
interface***REMOVED***ImportItem***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***exp:***REMOVED***string***REMOVED***|***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***path:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***TransformContext***REMOVED***extends***REMOVED***Required<Omit<TransformOptions,***REMOVED***keyof***REMOVED***CompilerCompatOptions>>,***REMOVED***CompilerCompatOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***selfName:***REMOVED***string***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***root:***REMOVED***RootNode;
***REMOVED******REMOVED******REMOVED******REMOVED***helpers:***REMOVED***Map<symbol,***REMOVED***number>;
***REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***hoists:***REMOVED***(JSChildNode***REMOVED***|***REMOVED***null)[];
***REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***ImportItem[];
***REMOVED******REMOVED******REMOVED******REMOVED***temps:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***cached:***REMOVED***(CacheExpression***REMOVED***|***REMOVED***null)[];
***REMOVED******REMOVED******REMOVED******REMOVED***identifiers:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***[name:***REMOVED***string]:***REMOVED***number***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***scopes:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vFor:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vSlot:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vPre:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***vOnce:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***};
***REMOVED******REMOVED******REMOVED******REMOVED***parent:***REMOVED***ParentNode***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***grandParent:***REMOVED***ParentNode***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***childIndex:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***currentNode:***REMOVED***RootNode***REMOVED***|***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***inVOnce:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***helper<T***REMOVED***extends***REMOVED***symbol>(name:***REMOVED***T):***REMOVED***T;
***REMOVED******REMOVED******REMOVED******REMOVED***removeHelper<T***REMOVED***extends***REMOVED***symbol>(name:***REMOVED***T):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***helperString(name:***REMOVED***symbol):***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***replaceNode(node:***REMOVED***TemplateChildNode):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***removeNode(node?:***REMOVED***TemplateChildNode):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***onNodeRemoved():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***addIdentifiers(exp:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***removeIdentifiers(exp:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***hoist(exp:***REMOVED***string***REMOVED***|***REMOVED***JSChildNode***REMOVED***|***REMOVED***ArrayExpression):***REMOVED***SimpleExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***cache(exp:***REMOVED***JSChildNode,***REMOVED***isVNode?:***REMOVED***boolean,***REMOVED***inVOnce?:***REMOVED***boolean):***REMOVED***CacheExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***constantCache:***REMOVED***WeakMap<TemplateChildNode,***REMOVED***ConstantTypes>;
***REMOVED******REMOVED******REMOVED******REMOVED***filters?:***REMOVED***Set<string>;
}
export***REMOVED***declare***REMOVED***function***REMOVED***createTransformContext(root:***REMOVED***RootNode,***REMOVED***{***REMOVED***filename,***REMOVED***prefixIdentifiers,***REMOVED***hoistStatic,***REMOVED***hmr,***REMOVED***cacheHandlers,***REMOVED***nodeTransforms,***REMOVED***directiveTransforms,***REMOVED***transformHoist,***REMOVED***isBuiltInComponent,***REMOVED***isCustomElement,***REMOVED***expressionPlugins,***REMOVED***scopeId,***REMOVED***slotted,***REMOVED***ssr,***REMOVED***inSSR,***REMOVED***ssrCssVars,***REMOVED***bindingMetadata,***REMOVED***inline,***REMOVED***isTS,***REMOVED***onError,***REMOVED***onWarn,***REMOVED***compatConfig,***REMOVED***}:***REMOVED***TransformOptions):***REMOVED***TransformContext;
export***REMOVED***declare***REMOVED***function***REMOVED***transform(root:***REMOVED***RootNode,***REMOVED***options:***REMOVED***TransformOptions):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***traverseNode(node:***REMOVED***RootNode***REMOVED***|***REMOVED***TemplateChildNode,***REMOVED***context:***REMOVED***TransformContext):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***createStructuralDirectiveTransform(name:***REMOVED***string***REMOVED***|***REMOVED***RegExp,***REMOVED***fn:***REMOVED***StructuralDirectiveTransform):***REMOVED***NodeTransform;

export***REMOVED***declare***REMOVED***const***REMOVED***transformElement:***REMOVED***NodeTransform;
export***REMOVED***declare***REMOVED***function***REMOVED***resolveComponentType(node:***REMOVED***ComponentNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***ssr?:***REMOVED***boolean):***REMOVED***string***REMOVED***|***REMOVED***symbol***REMOVED***|***REMOVED***CallExpression;
export***REMOVED***type***REMOVED***PropsExpression***REMOVED***=***REMOVED***ObjectExpression***REMOVED***|***REMOVED***CallExpression***REMOVED***|***REMOVED***ExpressionNode;
export***REMOVED***declare***REMOVED***function***REMOVED***buildProps(node:***REMOVED***ElementNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***props:***REMOVED***ElementNode['props']***REMOVED***|***REMOVED***undefined,***REMOVED***isComponent:***REMOVED***boolean,***REMOVED***isDynamicComponent:***REMOVED***boolean,***REMOVED***ssr?:***REMOVED***boolean):***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***PropsExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***DirectiveNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicPropNames:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***shouldUseBlock:***REMOVED***boolean;
};
export***REMOVED***declare***REMOVED***function***REMOVED***buildDirectiveArgs(dir:***REMOVED***DirectiveNode,***REMOVED***context:***REMOVED***TransformContext):***REMOVED***ArrayExpression;

export***REMOVED***type***REMOVED***Namespace***REMOVED***=***REMOVED***number;
export***REMOVED***declare***REMOVED***enum***REMOVED***Namespaces***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***HTML***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***SVG***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***MATH_ML***REMOVED***=***REMOVED***2
}
export***REMOVED***declare***REMOVED***enum***REMOVED***NodeTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ROOT***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***ELEMENT***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***TEXT***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***COMMENT***REMOVED***=***REMOVED***3,
***REMOVED******REMOVED******REMOVED******REMOVED***SIMPLE_EXPRESSION***REMOVED***=***REMOVED***4,
***REMOVED******REMOVED******REMOVED******REMOVED***INTERPOLATION***REMOVED***=***REMOVED***5,
***REMOVED******REMOVED******REMOVED******REMOVED***ATTRIBUTE***REMOVED***=***REMOVED***6,
***REMOVED******REMOVED******REMOVED******REMOVED***DIRECTIVE***REMOVED***=***REMOVED***7,
***REMOVED******REMOVED******REMOVED******REMOVED***COMPOUND_EXPRESSION***REMOVED***=***REMOVED***8,
***REMOVED******REMOVED******REMOVED******REMOVED***IF***REMOVED***=***REMOVED***9,
***REMOVED******REMOVED******REMOVED******REMOVED***IF_BRANCH***REMOVED***=***REMOVED***10,
***REMOVED******REMOVED******REMOVED******REMOVED***FOR***REMOVED***=***REMOVED***11,
***REMOVED******REMOVED******REMOVED******REMOVED***TEXT_CALL***REMOVED***=***REMOVED***12,
***REMOVED******REMOVED******REMOVED******REMOVED***VNODE_CALL***REMOVED***=***REMOVED***13,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_CALL_EXPRESSION***REMOVED***=***REMOVED***14,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_OBJECT_EXPRESSION***REMOVED***=***REMOVED***15,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_PROPERTY***REMOVED***=***REMOVED***16,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_ARRAY_EXPRESSION***REMOVED***=***REMOVED***17,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_FUNCTION_EXPRESSION***REMOVED***=***REMOVED***18,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_CONDITIONAL_EXPRESSION***REMOVED***=***REMOVED***19,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_CACHE_EXPRESSION***REMOVED***=***REMOVED***20,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_BLOCK_STATEMENT***REMOVED***=***REMOVED***21,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_TEMPLATE_LITERAL***REMOVED***=***REMOVED***22,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_IF_STATEMENT***REMOVED***=***REMOVED***23,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_ASSIGNMENT_EXPRESSION***REMOVED***=***REMOVED***24,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_SEQUENCE_EXPRESSION***REMOVED***=***REMOVED***25,
***REMOVED******REMOVED******REMOVED******REMOVED***JS_RETURN_STATEMENT***REMOVED***=***REMOVED***26
}
export***REMOVED***declare***REMOVED***enum***REMOVED***ElementTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ELEMENT***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***COMPONENT***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***SLOT***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***TEMPLATE***REMOVED***=***REMOVED***3
}
export***REMOVED***interface***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes;
***REMOVED******REMOVED******REMOVED******REMOVED***loc:***REMOVED***SourceLocation;
}
export***REMOVED***interface***REMOVED***SourceLocation***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***start:***REMOVED***Position;
***REMOVED******REMOVED******REMOVED******REMOVED***end:***REMOVED***Position;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***Position***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***number;
}
export***REMOVED***type***REMOVED***ParentNode***REMOVED***=***REMOVED***RootNode***REMOVED***|***REMOVED***ElementNode***REMOVED***|***REMOVED***IfBranchNode***REMOVED***|***REMOVED***ForNode;
export***REMOVED***type***REMOVED***ExpressionNode***REMOVED***=***REMOVED***SimpleExpressionNode***REMOVED***|***REMOVED***CompoundExpressionNode;
export***REMOVED***type***REMOVED***TemplateChildNode***REMOVED***=***REMOVED***ElementNode***REMOVED***|***REMOVED***InterpolationNode***REMOVED***|***REMOVED***CompoundExpressionNode***REMOVED***|***REMOVED***TextNode***REMOVED***|***REMOVED***CommentNode***REMOVED***|***REMOVED***IfNode***REMOVED***|***REMOVED***IfBranchNode***REMOVED***|***REMOVED***ForNode***REMOVED***|***REMOVED***TextCallNode;
export***REMOVED***interface***REMOVED***RootNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.ROOT;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***TemplateChildNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***helpers:***REMOVED***Set<symbol>;
***REMOVED******REMOVED******REMOVED******REMOVED***components:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***hoists:***REMOVED***(JSChildNode***REMOVED***|***REMOVED***null)[];
***REMOVED******REMOVED******REMOVED******REMOVED***imports:***REMOVED***ImportItem[];
***REMOVED******REMOVED******REMOVED******REMOVED***cached:***REMOVED***(CacheExpression***REMOVED***|***REMOVED***null)[];
***REMOVED******REMOVED******REMOVED******REMOVED***temps:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrHelpers?:***REMOVED***symbol[];
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode?:***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***JSChildNode***REMOVED***|***REMOVED***BlockStatement;
***REMOVED******REMOVED******REMOVED******REMOVED***transformed?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***filters?:***REMOVED***string[];
}
export***REMOVED***type***REMOVED***ElementNode***REMOVED***=***REMOVED***PlainElementNode***REMOVED***|***REMOVED***ComponentNode***REMOVED***|***REMOVED***SlotOutletNode***REMOVED***|***REMOVED***TemplateNode;
export***REMOVED***interface***REMOVED***BaseElementNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.ELEMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***ns:***REMOVED***Namespace;
***REMOVED******REMOVED******REMOVED******REMOVED***tag:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***tagType:***REMOVED***ElementTypes;
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***Array<AttributeNode***REMOVED***|***REMOVED***DirectiveNode>;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***TemplateChildNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***isSelfClosing?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***innerLoc?:***REMOVED***SourceLocation;
}
export***REMOVED***interface***REMOVED***PlainElementNode***REMOVED***extends***REMOVED***BaseElementNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tagType:***REMOVED***ElementTypes.ELEMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode:***REMOVED***VNodeCall***REMOVED***|***REMOVED***SimpleExpressionNode***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***MemoExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCodegenNode?:***REMOVED***TemplateLiteral;
}
export***REMOVED***interface***REMOVED***ComponentNode***REMOVED***extends***REMOVED***BaseElementNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tagType:***REMOVED***ElementTypes.COMPONENT;
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode:***REMOVED***VNodeCall***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***MemoExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCodegenNode?:***REMOVED***CallExpression;
}
export***REMOVED***interface***REMOVED***SlotOutletNode***REMOVED***extends***REMOVED***BaseElementNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tagType:***REMOVED***ElementTypes.SLOT;
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode:***REMOVED***RenderSlotCall***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCodegenNode?:***REMOVED***CallExpression;
}
export***REMOVED***interface***REMOVED***TemplateNode***REMOVED***extends***REMOVED***BaseElementNode***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***tagType:***REMOVED***ElementTypes.TEMPLATE;
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode:***REMOVED***undefined;
}
export***REMOVED***interface***REMOVED***TextNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.TEXT;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***CommentNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.COMMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***AttributeNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.ATTRIBUTE;
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***nameLoc:***REMOVED***SourceLocation;
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***TextNode***REMOVED***|***REMOVED***undefined;
}
export***REMOVED***interface***REMOVED***DirectiveNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.DIRECTIVE;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***normalized***REMOVED***name***REMOVED***without***REMOVED***prefix***REMOVED***or***REMOVED***shorthands,***REMOVED***e.g.***REMOVED***"bind",***REMOVED***"on"
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***raw***REMOVED***attribute***REMOVED***name,***REMOVED***preserving***REMOVED***shorthand,***REMOVED***and***REMOVED***including***REMOVED***arg***REMOVED***&***REMOVED***modifiers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***this***REMOVED***is***REMOVED***only***REMOVED***used***REMOVED***during***REMOVED***parse.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***rawName?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***exp:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***arg:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***modifiers:***REMOVED***SimpleExpressionNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***optional***REMOVED***property***REMOVED***to***REMOVED***cache***REMOVED***the***REMOVED***expression***REMOVED***parse***REMOVED***result***REMOVED***for***REMOVED***v-for
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***forParseResult?:***REMOVED***ForParseResult;
}
/**
***REMOVED*******REMOVED***Static***REMOVED***types***REMOVED***have***REMOVED***several***REMOVED***levels.
***REMOVED*******REMOVED***Higher***REMOVED***levels***REMOVED***implies***REMOVED***lower***REMOVED***levels.***REMOVED***e.g.***REMOVED***a***REMOVED***node***REMOVED***that***REMOVED***can***REMOVED***be***REMOVED***stringified
***REMOVED*******REMOVED***can***REMOVED***always***REMOVED***be***REMOVED***hoisted***REMOVED***and***REMOVED***skipped***REMOVED***for***REMOVED***patch.
***REMOVED****/
export***REMOVED***declare***REMOVED***enum***REMOVED***ConstantTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***NOT_CONSTANT***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***CAN_SKIP_PATCH***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***CAN_CACHE***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***CAN_STRINGIFY***REMOVED***=***REMOVED***3
}
export***REMOVED***interface***REMOVED***SimpleExpressionNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.SIMPLE_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***isStatic:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***constType:***REMOVED***ConstantTypes;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`null`***REMOVED***means***REMOVED***the***REMOVED***expression***REMOVED***is***REMOVED***a***REMOVED***simple***REMOVED***identifier***REMOVED***that***REMOVED***doesn't***REMOVED***need
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***parsing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`false`***REMOVED***means***REMOVED***there***REMOVED***was***REMOVED***a***REMOVED***parsing***REMOVED***error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ast?:***REMOVED***Node$1***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***this***REMOVED***is***REMOVED***an***REMOVED***identifier***REMOVED***for***REMOVED***a***REMOVED***hoist***REMOVED***vnode***REMOVED***call***REMOVED***and***REMOVED***points***REMOVED***to***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***hoisted***REMOVED***node.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***hoisted?:***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***an***REMOVED***expression***REMOVED***parsed***REMOVED***as***REMOVED***the***REMOVED***params***REMOVED***of***REMOVED***a***REMOVED***function***REMOVED***will***REMOVED***track
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***identifiers***REMOVED***declared***REMOVED***inside***REMOVED***the***REMOVED***function***REMOVED***body.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***identifiers?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***isHandlerKey?:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***InterpolationNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.INTERPOLATION;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***ExpressionNode;
}
export***REMOVED***interface***REMOVED***CompoundExpressionNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.COMPOUND_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`null`***REMOVED***means***REMOVED***the***REMOVED***expression***REMOVED***is***REMOVED***a***REMOVED***simple***REMOVED***identifier***REMOVED***that***REMOVED***doesn't***REMOVED***need
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED******REMOVED******REMOVED***parsing
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`false`***REMOVED***means***REMOVED***there***REMOVED***was***REMOVED***a***REMOVED***parsing***REMOVED***error
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ast?:***REMOVED***Node$1***REMOVED***|***REMOVED***null***REMOVED***|***REMOVED***false;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***(SimpleExpressionNode***REMOVED***|***REMOVED***CompoundExpressionNode***REMOVED***|***REMOVED***InterpolationNode***REMOVED***|***REMOVED***TextNode***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***symbol)[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***an***REMOVED***expression***REMOVED***parsed***REMOVED***as***REMOVED***the***REMOVED***params***REMOVED***of***REMOVED***a***REMOVED***function***REMOVED***will***REMOVED***track
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***identifiers***REMOVED***declared***REMOVED***inside***REMOVED***the***REMOVED***function***REMOVED***body.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***identifiers?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***isHandlerKey?:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***IfNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.IF;
***REMOVED******REMOVED******REMOVED******REMOVED***branches:***REMOVED***IfBranchNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode?:***REMOVED***IfConditionalExpression***REMOVED***|***REMOVED***CacheExpression;
}
export***REMOVED***interface***REMOVED***IfBranchNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.IF_BRANCH;
***REMOVED******REMOVED******REMOVED******REMOVED***condition:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***TemplateChildNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***userKey?:***REMOVED***AttributeNode***REMOVED***|***REMOVED***DirectiveNode;
***REMOVED******REMOVED******REMOVED******REMOVED***isTemplateIf?:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***ForNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.FOR;
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***valueAlias:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***keyAlias:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***objectIndexAlias:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***parseResult:***REMOVED***ForParseResult;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***TemplateChildNode[];
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode?:***REMOVED***ForCodegenNode;
}
export***REMOVED***interface***REMOVED***ForParseResult***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***finalized:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***TextCallNode***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.TEXT_CALL;
***REMOVED******REMOVED******REMOVED******REMOVED***content:***REMOVED***TextNode***REMOVED***|***REMOVED***InterpolationNode***REMOVED***|***REMOVED***CompoundExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***codegenNode:***REMOVED***CallExpression***REMOVED***|***REMOVED***SimpleExpressionNode;
}
export***REMOVED***type***REMOVED***TemplateTextChildNode***REMOVED***=***REMOVED***TextNode***REMOVED***|***REMOVED***InterpolationNode***REMOVED***|***REMOVED***CompoundExpressionNode;
export***REMOVED***interface***REMOVED***VNodeCall***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.VNODE_CALL;
***REMOVED******REMOVED******REMOVED******REMOVED***tag:***REMOVED***string***REMOVED***|***REMOVED***symbol***REMOVED***|***REMOVED***CallExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***PropsExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***TemplateChildNode[]***REMOVED***|***REMOVED***TemplateTextChildNode***REMOVED***|***REMOVED***SlotsExpression***REMOVED***|***REMOVED***ForRenderListExpression***REMOVED***|***REMOVED***SimpleExpressionNode***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag:***REMOVED***PatchFlags***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***dynamicProps:***REMOVED***string***REMOVED***|***REMOVED***SimpleExpressionNode***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***directives:***REMOVED***DirectiveArguments***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***isBlock:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***disableTracking:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***isComponent:***REMOVED***boolean;
}
export***REMOVED***type***REMOVED***JSChildNode***REMOVED***=***REMOVED***VNodeCall***REMOVED***|***REMOVED***CallExpression***REMOVED***|***REMOVED***ObjectExpression***REMOVED***|***REMOVED***ArrayExpression***REMOVED***|***REMOVED***ExpressionNode***REMOVED***|***REMOVED***FunctionExpression***REMOVED***|***REMOVED***ConditionalExpression***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***AssignmentExpression***REMOVED***|***REMOVED***SequenceExpression;
export***REMOVED***interface***REMOVED***CallExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_CALL_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***string***REMOVED***|***REMOVED***symbol;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***(string***REMOVED***|***REMOVED***symbol***REMOVED***|***REMOVED***JSChildNode***REMOVED***|***REMOVED***SSRCodegenNode***REMOVED***|***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***TemplateChildNode[])[];
}
export***REMOVED***interface***REMOVED***ObjectExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_OBJECT_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***Array<Property>;
}
export***REMOVED***interface***REMOVED***Property***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_PROPERTY;
***REMOVED******REMOVED******REMOVED******REMOVED***key:***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***JSChildNode;
}
export***REMOVED***interface***REMOVED***ArrayExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_ARRAY_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***Array<string***REMOVED***|***REMOVED***Node>;
}
export***REMOVED***interface***REMOVED***FunctionExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_FUNCTION_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***params:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***string***REMOVED***|***REMOVED***(ExpressionNode***REMOVED***|***REMOVED***string)[]***REMOVED***|***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***returns?:***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***TemplateChildNode[]***REMOVED***|***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***body?:***REMOVED***BlockStatement***REMOVED***|***REMOVED***IfStatement;
***REMOVED******REMOVED******REMOVED******REMOVED***newline:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***flag***REMOVED***is***REMOVED***for***REMOVED***codegen***REMOVED***to***REMOVED***determine***REMOVED***whether***REMOVED***it***REMOVED***needs***REMOVED***to***REMOVED***generate***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***withScopeId()***REMOVED***wrapper
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isSlot:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***__COMPAT__***REMOVED***only,***REMOVED***indicates***REMOVED***a***REMOVED***slot***REMOVED***function***REMOVED***that***REMOVED***should***REMOVED***be***REMOVED***excluded***REMOVED***from
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***legacy***REMOVED***$scopedSlots***REMOVED***instance***REMOVED***property.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isNonScopedSlot?:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***ConditionalExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_CONDITIONAL_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***newline:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***CacheExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_CACHE_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***index:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***JSChildNode;
***REMOVED******REMOVED******REMOVED******REMOVED***needPauseTracking:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***inVOnce:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***needArraySpread:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***MemoExpression***REMOVED***extends***REMOVED***CallExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***typeof***REMOVED***WITH_MEMO;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***[ExpressionNode,***REMOVED***MemoFactory,***REMOVED***string,***REMOVED***string];
}
interface***REMOVED***MemoFactory***REMOVED***extends***REMOVED***FunctionExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***BlockCodegenNode;
}
export***REMOVED***type***REMOVED***SSRCodegenNode***REMOVED***=***REMOVED***BlockStatement***REMOVED***|***REMOVED***TemplateLiteral***REMOVED***|***REMOVED***IfStatement***REMOVED***|***REMOVED***AssignmentExpression***REMOVED***|***REMOVED***ReturnStatement***REMOVED***|***REMOVED***SequenceExpression;
export***REMOVED***interface***REMOVED***BlockStatement***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_BLOCK_STATEMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***body:***REMOVED***(JSChildNode***REMOVED***|***REMOVED***IfStatement)[];
}
export***REMOVED***interface***REMOVED***TemplateLiteral***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_TEMPLATE_LITERAL;
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***(string***REMOVED***|***REMOVED***JSChildNode)[];
}
export***REMOVED***interface***REMOVED***IfStatement***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_IF_STATEMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***test:***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***BlockStatement;
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***IfStatement***REMOVED***|***REMOVED***BlockStatement***REMOVED***|***REMOVED***ReturnStatement***REMOVED***|***REMOVED***undefined;
}
export***REMOVED***interface***REMOVED***AssignmentExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_ASSIGNMENT_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***left:***REMOVED***SimpleExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***right:***REMOVED***JSChildNode;
}
export***REMOVED***interface***REMOVED***SequenceExpression***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_SEQUENCE_EXPRESSION;
***REMOVED******REMOVED******REMOVED******REMOVED***expressions:***REMOVED***JSChildNode[];
}
export***REMOVED***interface***REMOVED***ReturnStatement***REMOVED***extends***REMOVED***Node***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***type:***REMOVED***NodeTypes.JS_RETURN_STATEMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***TemplateChildNode[]***REMOVED***|***REMOVED***JSChildNode;
}
export***REMOVED***interface***REMOVED***DirectiveArguments***REMOVED***extends***REMOVED***ArrayExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***DirectiveArgumentNode[];
}
export***REMOVED***interface***REMOVED***DirectiveArgumentNode***REMOVED***extends***REMOVED***ArrayExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***[string]***REMOVED***|***REMOVED***[string,***REMOVED***ExpressionNode]***REMOVED***|***REMOVED***[string,***REMOVED***ExpressionNode,***REMOVED***ExpressionNode]***REMOVED***|***REMOVED***[string,***REMOVED***ExpressionNode,***REMOVED***ExpressionNode,***REMOVED***ObjectExpression];
}
export***REMOVED***interface***REMOVED***RenderSlotCall***REMOVED***extends***REMOVED***CallExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***typeof***REMOVED***RENDER_SLOT;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***[string,***REMOVED***string***REMOVED***|***REMOVED***ExpressionNode]***REMOVED***|***REMOVED***[string,***REMOVED***string***REMOVED***|***REMOVED***ExpressionNode,***REMOVED***PropsExpression]***REMOVED***|***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***string***REMOVED***|***REMOVED***ExpressionNode,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***PropsExpression***REMOVED***|***REMOVED***'{}',
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***TemplateChildNode[]
***REMOVED******REMOVED******REMOVED******REMOVED***];
}
export***REMOVED***type***REMOVED***SlotsExpression***REMOVED***=***REMOVED***SlotsObjectExpression***REMOVED***|***REMOVED***DynamicSlotsExpression;
export***REMOVED***interface***REMOVED***SlotsObjectExpression***REMOVED***extends***REMOVED***ObjectExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***SlotsObjectProperty[];
}
export***REMOVED***interface***REMOVED***SlotsObjectProperty***REMOVED***extends***REMOVED***Property***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***SlotFunctionExpression;
}
export***REMOVED***interface***REMOVED***SlotFunctionExpression***REMOVED***extends***REMOVED***FunctionExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***TemplateChildNode[]***REMOVED***|***REMOVED***CacheExpression;
}
export***REMOVED***interface***REMOVED***DynamicSlotsExpression***REMOVED***extends***REMOVED***CallExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***typeof***REMOVED***CREATE_SLOTS;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***[SlotsObjectExpression,***REMOVED***DynamicSlotEntries];
}
export***REMOVED***interface***REMOVED***DynamicSlotEntries***REMOVED***extends***REMOVED***ArrayExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***elements:***REMOVED***(ConditionalDynamicSlotNode***REMOVED***|***REMOVED***ListDynamicSlotNode)[];
}
export***REMOVED***interface***REMOVED***ConditionalDynamicSlotNode***REMOVED***extends***REMOVED***ConditionalExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***DynamicSlotNode;
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***DynamicSlotNode***REMOVED***|***REMOVED***SimpleExpressionNode;
}
export***REMOVED***interface***REMOVED***ListDynamicSlotNode***REMOVED***extends***REMOVED***CallExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***typeof***REMOVED***RENDER_LIST;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***[ExpressionNode,***REMOVED***ListDynamicSlotIterator];
}
export***REMOVED***interface***REMOVED***ListDynamicSlotIterator***REMOVED***extends***REMOVED***FunctionExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***returns:***REMOVED***DynamicSlotNode;
}
export***REMOVED***interface***REMOVED***DynamicSlotNode***REMOVED***extends***REMOVED***ObjectExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***properties:***REMOVED***[Property,***REMOVED***DynamicSlotFnProperty];
}
export***REMOVED***interface***REMOVED***DynamicSlotFnProperty***REMOVED***extends***REMOVED***Property***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***value:***REMOVED***SlotFunctionExpression;
}
export***REMOVED***type***REMOVED***BlockCodegenNode***REMOVED***=***REMOVED***VNodeCall***REMOVED***|***REMOVED***RenderSlotCall;
export***REMOVED***interface***REMOVED***IfConditionalExpression***REMOVED***extends***REMOVED***ConditionalExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***consequent:***REMOVED***BlockCodegenNode***REMOVED***|***REMOVED***MemoExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***alternate:***REMOVED***BlockCodegenNode***REMOVED***|***REMOVED***IfConditionalExpression***REMOVED***|***REMOVED***MemoExpression;
}
export***REMOVED***interface***REMOVED***ForCodegenNode***REMOVED***extends***REMOVED***VNodeCall***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***isBlock:***REMOVED***true;
***REMOVED******REMOVED******REMOVED******REMOVED***tag:***REMOVED***typeof***REMOVED***FRAGMENT;
***REMOVED******REMOVED******REMOVED******REMOVED***props:***REMOVED***undefined;
***REMOVED******REMOVED******REMOVED******REMOVED***children:***REMOVED***ForRenderListExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***patchFlag:***REMOVED***PatchFlags;
***REMOVED******REMOVED******REMOVED******REMOVED***disableTracking:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***ForRenderListExpression***REMOVED***extends***REMOVED***CallExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***callee:***REMOVED***typeof***REMOVED***RENDER_LIST;
***REMOVED******REMOVED******REMOVED******REMOVED***arguments:***REMOVED***[ExpressionNode,***REMOVED***ForIteratorExpression];
}
export***REMOVED***interface***REMOVED***ForIteratorExpression***REMOVED***extends***REMOVED***FunctionExpression***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***returns?:***REMOVED***BlockCodegenNode;
}
export***REMOVED***declare***REMOVED***const***REMOVED***locStub:***REMOVED***SourceLocation;
export***REMOVED***declare***REMOVED***function***REMOVED***createRoot(children:***REMOVED***TemplateChildNode[],***REMOVED***source?:***REMOVED***string):***REMOVED***RootNode;
export***REMOVED***declare***REMOVED***function***REMOVED***createVNodeCall(context:***REMOVED***TransformContext***REMOVED***|***REMOVED***null,***REMOVED***tag:***REMOVED***VNodeCall['tag'],***REMOVED***props?:***REMOVED***VNodeCall['props'],***REMOVED***children?:***REMOVED***VNodeCall['children'],***REMOVED***patchFlag?:***REMOVED***VNodeCall['patchFlag'],***REMOVED***dynamicProps?:***REMOVED***VNodeCall['dynamicProps'],***REMOVED***directives?:***REMOVED***VNodeCall['directives'],***REMOVED***isBlock?:***REMOVED***VNodeCall['isBlock'],***REMOVED***disableTracking?:***REMOVED***VNodeCall['disableTracking'],***REMOVED***isComponent?:***REMOVED***VNodeCall['isComponent'],***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***VNodeCall;
export***REMOVED***declare***REMOVED***function***REMOVED***createArrayExpression(elements:***REMOVED***ArrayExpression['elements'],***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***ArrayExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createObjectExpression(properties:***REMOVED***ObjectExpression['properties'],***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***ObjectExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createObjectProperty(key:***REMOVED***Property['key']***REMOVED***|***REMOVED***string,***REMOVED***value:***REMOVED***Property['value']):***REMOVED***Property;
export***REMOVED***declare***REMOVED***function***REMOVED***createSimpleExpression(content:***REMOVED***SimpleExpressionNode['content'],***REMOVED***isStatic?:***REMOVED***SimpleExpressionNode['isStatic'],***REMOVED***loc?:***REMOVED***SourceLocation,***REMOVED***constType?:***REMOVED***ConstantTypes):***REMOVED***SimpleExpressionNode;
export***REMOVED***declare***REMOVED***function***REMOVED***createInterpolation(content:***REMOVED***InterpolationNode['content']***REMOVED***|***REMOVED***string,***REMOVED***loc:***REMOVED***SourceLocation):***REMOVED***InterpolationNode;
export***REMOVED***declare***REMOVED***function***REMOVED***createCompoundExpression(children:***REMOVED***CompoundExpressionNode['children'],***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***CompoundExpressionNode;
type***REMOVED***InferCodegenNodeType<T>***REMOVED***=***REMOVED***T***REMOVED***extends***REMOVED***typeof***REMOVED***RENDER_SLOT***REMOVED***?***REMOVED***RenderSlotCall***REMOVED***:***REMOVED***CallExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createCallExpression<T***REMOVED***extends***REMOVED***CallExpression['callee']>(callee:***REMOVED***T,***REMOVED***args?:***REMOVED***CallExpression['arguments'],***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***InferCodegenNodeType<T>;
export***REMOVED***declare***REMOVED***function***REMOVED***createFunctionExpression(params:***REMOVED***FunctionExpression['params'],***REMOVED***returns?:***REMOVED***FunctionExpression['returns'],***REMOVED***newline?:***REMOVED***boolean,***REMOVED***isSlot?:***REMOVED***boolean,***REMOVED***loc?:***REMOVED***SourceLocation):***REMOVED***FunctionExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createConditionalExpression(test:***REMOVED***ConditionalExpression['test'],***REMOVED***consequent:***REMOVED***ConditionalExpression['consequent'],***REMOVED***alternate:***REMOVED***ConditionalExpression['alternate'],***REMOVED***newline?:***REMOVED***boolean):***REMOVED***ConditionalExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createCacheExpression(index:***REMOVED***number,***REMOVED***value:***REMOVED***JSChildNode,***REMOVED***needPauseTracking?:***REMOVED***boolean,***REMOVED***inVOnce?:***REMOVED***boolean):***REMOVED***CacheExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createBlockStatement(body:***REMOVED***BlockStatement['body']):***REMOVED***BlockStatement;
export***REMOVED***declare***REMOVED***function***REMOVED***createTemplateLiteral(elements:***REMOVED***TemplateLiteral['elements']):***REMOVED***TemplateLiteral;
export***REMOVED***declare***REMOVED***function***REMOVED***createIfStatement(test:***REMOVED***IfStatement['test'],***REMOVED***consequent:***REMOVED***IfStatement['consequent'],***REMOVED***alternate?:***REMOVED***IfStatement['alternate']):***REMOVED***IfStatement;
export***REMOVED***declare***REMOVED***function***REMOVED***createAssignmentExpression(left:***REMOVED***AssignmentExpression['left'],***REMOVED***right:***REMOVED***AssignmentExpression['right']):***REMOVED***AssignmentExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createSequenceExpression(expressions:***REMOVED***SequenceExpression['expressions']):***REMOVED***SequenceExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***createReturnStatement(returns:***REMOVED***ReturnStatement['returns']):***REMOVED***ReturnStatement;
export***REMOVED***declare***REMOVED***function***REMOVED***getVNodeHelper(ssr:***REMOVED***boolean,***REMOVED***isComponent:***REMOVED***boolean):***REMOVED***typeof***REMOVED***CREATE_VNODE***REMOVED***|***REMOVED***typeof***REMOVED***CREATE_ELEMENT_VNODE;
export***REMOVED***declare***REMOVED***function***REMOVED***getVNodeBlockHelper(ssr:***REMOVED***boolean,***REMOVED***isComponent:***REMOVED***boolean):***REMOVED***typeof***REMOVED***CREATE_BLOCK***REMOVED***|***REMOVED***typeof***REMOVED***CREATE_ELEMENT_BLOCK;
export***REMOVED***declare***REMOVED***function***REMOVED***convertToBlock(node:***REMOVED***VNodeCall,***REMOVED***{***REMOVED***helper,***REMOVED***removeHelper,***REMOVED***inSSR***REMOVED***}:***REMOVED***TransformContext):***REMOVED***void;

export***REMOVED***interface***REMOVED***CompilerError***REMOVED***extends***REMOVED***SyntaxError***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***number***REMOVED***|***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***loc?:***REMOVED***SourceLocation;
}
export***REMOVED***interface***REMOVED***CoreCompilerError***REMOVED***extends***REMOVED***CompilerError***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***ErrorCodes;
}
type***REMOVED***InferCompilerError<T>***REMOVED***=***REMOVED***T***REMOVED***extends***REMOVED***ErrorCodes***REMOVED***?***REMOVED***CoreCompilerError***REMOVED***:***REMOVED***CompilerError;
export***REMOVED***declare***REMOVED***function***REMOVED***createCompilerError<T***REMOVED***extends***REMOVED***number>(code:***REMOVED***T,***REMOVED***loc?:***REMOVED***SourceLocation,***REMOVED***messages?:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[code:***REMOVED***number]:***REMOVED***string;
},***REMOVED***additionalMessage?:***REMOVED***string):***REMOVED***InferCompilerError<T>;
export***REMOVED***declare***REMOVED***enum***REMOVED***ErrorCodes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***ABRUPT_CLOSING_OF_EMPTY_COMMENT***REMOVED***=***REMOVED***0,
***REMOVED******REMOVED******REMOVED******REMOVED***CDATA_IN_HTML_CONTENT***REMOVED***=***REMOVED***1,
***REMOVED******REMOVED******REMOVED******REMOVED***DUPLICATE_ATTRIBUTE***REMOVED***=***REMOVED***2,
***REMOVED******REMOVED******REMOVED******REMOVED***END_TAG_WITH_ATTRIBUTES***REMOVED***=***REMOVED***3,
***REMOVED******REMOVED******REMOVED******REMOVED***END_TAG_WITH_TRAILING_SOLIDUS***REMOVED***=***REMOVED***4,
***REMOVED******REMOVED******REMOVED******REMOVED***EOF_BEFORE_TAG_NAME***REMOVED***=***REMOVED***5,
***REMOVED******REMOVED******REMOVED******REMOVED***EOF_IN_CDATA***REMOVED***=***REMOVED***6,
***REMOVED******REMOVED******REMOVED******REMOVED***EOF_IN_COMMENT***REMOVED***=***REMOVED***7,
***REMOVED******REMOVED******REMOVED******REMOVED***EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT***REMOVED***=***REMOVED***8,
***REMOVED******REMOVED******REMOVED******REMOVED***EOF_IN_TAG***REMOVED***=***REMOVED***9,
***REMOVED******REMOVED******REMOVED******REMOVED***INCORRECTLY_CLOSED_COMMENT***REMOVED***=***REMOVED***10,
***REMOVED******REMOVED******REMOVED******REMOVED***INCORRECTLY_OPENED_COMMENT***REMOVED***=***REMOVED***11,
***REMOVED******REMOVED******REMOVED******REMOVED***INVALID_FIRST_CHARACTER_OF_TAG_NAME***REMOVED***=***REMOVED***12,
***REMOVED******REMOVED******REMOVED******REMOVED***MISSING_ATTRIBUTE_VALUE***REMOVED***=***REMOVED***13,
***REMOVED******REMOVED******REMOVED******REMOVED***MISSING_END_TAG_NAME***REMOVED***=***REMOVED***14,
***REMOVED******REMOVED******REMOVED******REMOVED***MISSING_WHITESPACE_BETWEEN_ATTRIBUTES***REMOVED***=***REMOVED***15,
***REMOVED******REMOVED******REMOVED******REMOVED***NESTED_COMMENT***REMOVED***=***REMOVED***16,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME***REMOVED***=***REMOVED***17,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE***REMOVED***=***REMOVED***18,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME***REMOVED***=***REMOVED***19,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_NULL_CHARACTER***REMOVED***=***REMOVED***20,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME***REMOVED***=***REMOVED***21,
***REMOVED******REMOVED******REMOVED******REMOVED***UNEXPECTED_SOLIDUS_IN_TAG***REMOVED***=***REMOVED***22,
***REMOVED******REMOVED******REMOVED******REMOVED***X_INVALID_END_TAG***REMOVED***=***REMOVED***23,
***REMOVED******REMOVED******REMOVED******REMOVED***X_MISSING_END_TAG***REMOVED***=***REMOVED***24,
***REMOVED******REMOVED******REMOVED******REMOVED***X_MISSING_INTERPOLATION_END***REMOVED***=***REMOVED***25,
***REMOVED******REMOVED******REMOVED******REMOVED***X_MISSING_DIRECTIVE_NAME***REMOVED***=***REMOVED***26,
***REMOVED******REMOVED******REMOVED******REMOVED***X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END***REMOVED***=***REMOVED***27,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_IF_NO_EXPRESSION***REMOVED***=***REMOVED***28,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_IF_SAME_KEY***REMOVED***=***REMOVED***29,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_ELSE_NO_ADJACENT_IF***REMOVED***=***REMOVED***30,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_FOR_NO_EXPRESSION***REMOVED***=***REMOVED***31,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_FOR_MALFORMED_EXPRESSION***REMOVED***=***REMOVED***32,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_FOR_TEMPLATE_KEY_PLACEMENT***REMOVED***=***REMOVED***33,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_BIND_NO_EXPRESSION***REMOVED***=***REMOVED***34,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_ON_NO_EXPRESSION***REMOVED***=***REMOVED***35,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET***REMOVED***=***REMOVED***36,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_SLOT_MIXED_SLOT_USAGE***REMOVED***=***REMOVED***37,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_SLOT_DUPLICATE_SLOT_NAMES***REMOVED***=***REMOVED***38,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN***REMOVED***=***REMOVED***39,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_SLOT_MISPLACED***REMOVED***=***REMOVED***40,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_MODEL_NO_EXPRESSION***REMOVED***=***REMOVED***41,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_MODEL_MALFORMED_EXPRESSION***REMOVED***=***REMOVED***42,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_MODEL_ON_SCOPE_VARIABLE***REMOVED***=***REMOVED***43,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_MODEL_ON_PROPS***REMOVED***=***REMOVED***44,
***REMOVED******REMOVED******REMOVED******REMOVED***X_INVALID_EXPRESSION***REMOVED***=***REMOVED***45,
***REMOVED******REMOVED******REMOVED******REMOVED***X_KEEP_ALIVE_INVALID_CHILDREN***REMOVED***=***REMOVED***46,
***REMOVED******REMOVED******REMOVED******REMOVED***X_PREFIX_ID_NOT_SUPPORTED***REMOVED***=***REMOVED***47,
***REMOVED******REMOVED******REMOVED******REMOVED***X_MODULE_MODE_NOT_SUPPORTED***REMOVED***=***REMOVED***48,
***REMOVED******REMOVED******REMOVED******REMOVED***X_CACHE_HANDLER_NOT_SUPPORTED***REMOVED***=***REMOVED***49,
***REMOVED******REMOVED******REMOVED******REMOVED***X_SCOPE_ID_NOT_SUPPORTED***REMOVED***=***REMOVED***50,
***REMOVED******REMOVED******REMOVED******REMOVED***X_VNODE_HOOKS***REMOVED***=***REMOVED***51,
***REMOVED******REMOVED******REMOVED******REMOVED***X_V_BIND_INVALID_SAME_NAME_ARGUMENT***REMOVED***=***REMOVED***52,
***REMOVED******REMOVED******REMOVED******REMOVED***__EXTEND_POINT__***REMOVED***=***REMOVED***53
}
export***REMOVED***declare***REMOVED***const***REMOVED***errorMessages:***REMOVED***Record<ErrorCodes,***REMOVED***string>;

interface***REMOVED***ErrorHandlingOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***onWarn?:***REMOVED***(warning:***REMOVED***CompilerError)***REMOVED***=>***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***onError?:***REMOVED***(error:***REMOVED***CompilerError)***REMOVED***=>***REMOVED***void;
}
export***REMOVED***interface***REMOVED***ParserOptions***REMOVED***extends***REMOVED***ErrorHandlingOptions,***REMOVED***CompilerCompatOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Base***REMOVED***mode***REMOVED***is***REMOVED***platform***REMOVED***agnostic***REMOVED***and***REMOVED***only***REMOVED***parses***REMOVED***HTML-like***REMOVED***template***REMOVED***syntax,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***treating***REMOVED***all***REMOVED***tags***REMOVED***the***REMOVED***same***REMOVED***way.***REMOVED***Specific***REMOVED***tag***REMOVED***parsing***REMOVED***behavior***REMOVED***can***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***configured***REMOVED***by***REMOVED***higher-level***REMOVED***compilers.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***HTML***REMOVED***mode***REMOVED***adds***REMOVED***additional***REMOVED***logic***REMOVED***for***REMOVED***handling***REMOVED***special***REMOVED***parsing***REMOVED***behavior***REMOVED***in
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`<script>`,***REMOVED***`<style>`,`<title>`***REMOVED***and***REMOVED***`<textarea>`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***logic***REMOVED***is***REMOVED***handled***REMOVED***inside***REMOVED***compiler-core***REMOVED***for***REMOVED***efficiency.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***SFC***REMOVED***mode***REMOVED***treats***REMOVED***content***REMOVED***of***REMOVED***all***REMOVED***root-level***REMOVED***tags***REMOVED***except***REMOVED***`<template>`***REMOVED***as***REMOVED***plain
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***text.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***parseMode?:***REMOVED***'base'***REMOVED***|***REMOVED***'html'***REMOVED***|***REMOVED***'sfc';
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Specify***REMOVED***the***REMOVED***root***REMOVED***namespace***REMOVED***to***REMOVED***use***REMOVED***when***REMOVED***parsing***REMOVED***a***REMOVED***template.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Defaults***REMOVED***to***REMOVED***`Namespaces.HTML`***REMOVED***(0).
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ns?:***REMOVED***Namespaces;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***e.g.***REMOVED***platform***REMOVED***native***REMOVED***elements,***REMOVED***e.g.***REMOVED***`<div>`***REMOVED***for***REMOVED***browsers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isNativeTag?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***e.g.***REMOVED***native***REMOVED***elements***REMOVED***that***REMOVED***can***REMOVED***self-close,***REMOVED***e.g.***REMOVED***`<img>`,***REMOVED***`<br>`,***REMOVED***`<hr>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isVoidTag?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***e.g.***REMOVED***elements***REMOVED***that***REMOVED***should***REMOVED***preserve***REMOVED***whitespace***REMOVED***inside,***REMOVED***e.g.***REMOVED***`<pre>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isPreTag?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Elements***REMOVED***that***REMOVED***should***REMOVED***ignore***REMOVED***the***REMOVED***first***REMOVED***newline***REMOVED***token***REMOVED***per***REMOVED***parinsg***REMOVED***spec
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***e.g.***REMOVED***`<textarea>`***REMOVED***and***REMOVED***`<pre>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isIgnoreNewlineTag?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Platform-specific***REMOVED***built-in***REMOVED***components***REMOVED***e.g.***REMOVED***`<Transition>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isBuiltInComponent?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***symbol***REMOVED***|***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Separate***REMOVED***option***REMOVED***for***REMOVED***end***REMOVED***users***REMOVED***to***REMOVED***extend***REMOVED***the***REMOVED***native***REMOVED***elements***REMOVED***list
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isCustomElement?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Get***REMOVED***tag***REMOVED***namespace
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***getNamespace?:***REMOVED***(tag:***REMOVED***string,***REMOVED***parent:***REMOVED***ElementNode***REMOVED***|***REMOVED***undefined,***REMOVED***rootNamespace:***REMOVED***Namespace)***REMOVED***=>***REMOVED***Namespace;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***['{{',***REMOVED***'}}']
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***delimiters?:***REMOVED***[string,***REMOVED***string];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Whitespace***REMOVED***handling***REMOVED***strategy
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'condense'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***whitespace?:***REMOVED***'preserve'***REMOVED***|***REMOVED***'condense';
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Only***REMOVED***used***REMOVED***for***REMOVED***DOM***REMOVED***compilers***REMOVED***that***REMOVED***runs***REMOVED***in***REMOVED***the***REMOVED***browser.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***In***REMOVED***non-browser***REMOVED***builds,***REMOVED***this***REMOVED***option***REMOVED***is***REMOVED***ignored.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***decodeEntities?:***REMOVED***(rawText:***REMOVED***string,***REMOVED***asAttr:***REMOVED***boolean)***REMOVED***=>***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Whether***REMOVED***to***REMOVED***keep***REMOVED***comments***REMOVED***in***REMOVED***the***REMOVED***templates***REMOVED***AST.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***defaults***REMOVED***to***REMOVED***`true`***REMOVED***in***REMOVED***development***REMOVED***and***REMOVED***`false`***REMOVED***in***REMOVED***production***REMOVED***builds.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***comments?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Parse***REMOVED***JavaScript***REMOVED***expressions***REMOVED***with***REMOVED***Babel.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***parser***REMOVED***plugins***REMOVED***to***REMOVED***enable***REMOVED***for***REMOVED***`@babel/parser`,***REMOVED***which***REMOVED***is***REMOVED***used***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***parse***REMOVED***expressions***REMOVED***in***REMOVED***bindings***REMOVED***and***REMOVED***interpolations.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***https://babeljs.io/docs/en/next/babel-parser#plugins
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***expressionPlugins?:***REMOVED***ParserPlugin[];
}
export***REMOVED***type***REMOVED***HoistTransform***REMOVED***=***REMOVED***(children:***REMOVED***TemplateChildNode[],***REMOVED***context:***REMOVED***TransformContext,***REMOVED***parent:***REMOVED***ParentNode)***REMOVED***=>***REMOVED***void;
export***REMOVED***declare***REMOVED***enum***REMOVED***BindingTypes***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***returned***REMOVED***from***REMOVED***data()
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***DATA***REMOVED***=***REMOVED***"data",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***declared***REMOVED***as***REMOVED***a***REMOVED***prop
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***PROPS***REMOVED***=***REMOVED***"props",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***local***REMOVED***alias***REMOVED***of***REMOVED***a***REMOVED***`<script***REMOVED***setup>`***REMOVED***destructured***REMOVED***prop.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***the***REMOVED***original***REMOVED***is***REMOVED***stored***REMOVED***in***REMOVED***__propsAliases***REMOVED***of***REMOVED***the***REMOVED***bindingMetadata***REMOVED***object.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***PROPS_ALIASED***REMOVED***=***REMOVED***"props-aliased",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***let***REMOVED***binding***REMOVED***(may***REMOVED***or***REMOVED***may***REMOVED***not***REMOVED***be***REMOVED***a***REMOVED***ref)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_LET***REMOVED***=***REMOVED***"setup-let",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***can***REMOVED***never***REMOVED***be***REMOVED***a***REMOVED***ref.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***these***REMOVED***bindings***REMOVED***don't***REMOVED***need***REMOVED***`unref()`***REMOVED***calls***REMOVED***when***REMOVED***processed***REMOVED***in***REMOVED***inlined
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***template***REMOVED***expressions.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_CONST***REMOVED***=***REMOVED***"setup-const",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***does***REMOVED***not***REMOVED***need***REMOVED***`unref()`,***REMOVED***but***REMOVED***may***REMOVED***be***REMOVED***mutated.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_REACTIVE_CONST***REMOVED***=***REMOVED***"setup-reactive-const",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***const***REMOVED***binding***REMOVED***that***REMOVED***may***REMOVED***be***REMOVED***a***REMOVED***ref.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_MAYBE_REF***REMOVED***=***REMOVED***"setup-maybe-ref",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***bindings***REMOVED***that***REMOVED***are***REMOVED***guaranteed***REMOVED***to***REMOVED***be***REMOVED***refs
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***SETUP_REF***REMOVED***=***REMOVED***"setup-ref",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***declared***REMOVED***by***REMOVED***other***REMOVED***options,***REMOVED***e.g.***REMOVED***computed,***REMOVED***inject
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***OPTIONS***REMOVED***=***REMOVED***"options",
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***a***REMOVED***literal***REMOVED***constant,***REMOVED***e.g.***REMOVED***'foo',***REMOVED***1,***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***LITERAL_CONST***REMOVED***=***REMOVED***"literal-const"
}
export***REMOVED***type***REMOVED***BindingMetadata***REMOVED***=***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***[key:***REMOVED***string]:***REMOVED***BindingTypes***REMOVED***|***REMOVED***undefined;
}***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***__isScriptSetup?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***__propsAliases?:***REMOVED***Record<string,***REMOVED***string>;
};
interface***REMOVED***SharedTransformCodegenOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Transform***REMOVED***expressions***REMOVED***like***REMOVED***{{***REMOVED***foo***REMOVED***}}***REMOVED***to***REMOVED***`_ctx.foo`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***this***REMOVED***option***REMOVED***is***REMOVED***false,***REMOVED***the***REMOVED***generated***REMOVED***code***REMOVED***will***REMOVED***be***REMOVED***wrapped***REMOVED***in***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`with***REMOVED***(this)***REMOVED***{***REMOVED***...***REMOVED***}`***REMOVED***block.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***This***REMOVED***is***REMOVED***force-enabled***REMOVED***in***REMOVED***module***REMOVED***mode,***REMOVED***since***REMOVED***modules***REMOVED***are***REMOVED***by***REMOVED***default***REMOVED***strict
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***and***REMOVED***cannot***REMOVED***use***REMOVED***`with`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***mode***REMOVED***===***REMOVED***'module'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Control***REMOVED***whether***REMOVED***generate***REMOVED***SSR-optimized***REMOVED***render***REMOVED***functions***REMOVED***instead.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***The***REMOVED***resulting***REMOVED***function***REMOVED***must***REMOVED***be***REMOVED***attached***REMOVED***to***REMOVED***the***REMOVED***component***REMOVED***via***REMOVED***the
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`ssrRender`***REMOVED***option***REMOVED***instead***REMOVED***of***REMOVED***`render`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***When***REMOVED***compiler***REMOVED***generates***REMOVED***code***REMOVED***for***REMOVED***SSR's***REMOVED***fallback***REMOVED***branch,***REMOVED***we***REMOVED***need***REMOVED***to***REMOVED***set***REMOVED***it***REMOVED***to***REMOVED***false:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED***-***REMOVED***context.ssr***REMOVED***=***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***see***REMOVED***`subTransform`***REMOVED***in***REMOVED***`ssrTransformComponent.ts`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ssr?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***whether***REMOVED***the***REMOVED***compiler***REMOVED***generates***REMOVED***code***REMOVED***for***REMOVED***SSR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***it***REMOVED***is***REMOVED***always***REMOVED***true***REMOVED***when***REMOVED***generating***REMOVED***code***REMOVED***for***REMOVED***SSR,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***regardless***REMOVED***of***REMOVED***whether***REMOVED***we***REMOVED***are***REMOVED***generating***REMOVED***code***REMOVED***for***REMOVED***SSR's***REMOVED***fallback***REMOVED***branch,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***this***REMOVED***means***REMOVED***that***REMOVED***when***REMOVED***the***REMOVED***compiler***REMOVED***generates***REMOVED***code***REMOVED***for***REMOVED***SSR's***REMOVED***fallback***REMOVED***branch:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED***-***REMOVED***context.ssr***REMOVED***=***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED******REMOVED***-***REMOVED***context.inSSR***REMOVED***=***REMOVED***true
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***inSSR?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Optional***REMOVED***binding***REMOVED***metadata***REMOVED***analyzed***REMOVED***from***REMOVED***script***REMOVED***-***REMOVED***used***REMOVED***to***REMOVED***optimize
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***binding***REMOVED***access***REMOVED***when***REMOVED***`prefixIdentifiers`***REMOVED***is***REMOVED***enabled.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***bindingMetadata?:***REMOVED***BindingMetadata;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Compile***REMOVED***the***REMOVED***function***REMOVED***for***REMOVED***inlining***REMOVED***inside***REMOVED***setup().
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***This***REMOVED***allows***REMOVED***the***REMOVED***function***REMOVED***to***REMOVED***directly***REMOVED***access***REMOVED***setup()***REMOVED***local***REMOVED***bindings.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***inline?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***that***REMOVED***transforms***REMOVED***and***REMOVED***codegen***REMOVED***should***REMOVED***try***REMOVED***to***REMOVED***output***REMOVED***valid***REMOVED***TS***REMOVED***code
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isTS?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Filename***REMOVED***for***REMOVED***source***REMOVED***map***REMOVED***generation.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Also***REMOVED***used***REMOVED***for***REMOVED***self-recursive***REMOVED***reference***REMOVED***in***REMOVED***templates
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'template.vue.html'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***filename?:***REMOVED***string;
}
export***REMOVED***interface***REMOVED***TransformOptions***REMOVED***extends***REMOVED***SharedTransformCodegenOptions,***REMOVED***ErrorHandlingOptions,***REMOVED***CompilerCompatOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***An***REMOVED***array***REMOVED***of***REMOVED***node***REMOVED***transforms***REMOVED***to***REMOVED***be***REMOVED***applied***REMOVED***to***REMOVED***every***REMOVED***AST***REMOVED***node.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***nodeTransforms?:***REMOVED***NodeTransform[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***An***REMOVED***object***REMOVED***of***REMOVED***{***REMOVED***name:***REMOVED***transform***REMOVED***}***REMOVED***to***REMOVED***be***REMOVED***applied***REMOVED***to***REMOVED***every***REMOVED***directive***REMOVED***attribute
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***node***REMOVED***found***REMOVED***on***REMOVED***element***REMOVED***nodes.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***directiveTransforms?:***REMOVED***Record<string,***REMOVED***DirectiveTransform***REMOVED***|***REMOVED***undefined>;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***An***REMOVED***optional***REMOVED***hook***REMOVED***to***REMOVED***transform***REMOVED***a***REMOVED***node***REMOVED***being***REMOVED***hoisted.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***by***REMOVED***compiler-dom***REMOVED***to***REMOVED***turn***REMOVED***hoisted***REMOVED***nodes***REMOVED***into***REMOVED***stringified***REMOVED***HTML***REMOVED***vnodes.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***null
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***transformHoist?:***REMOVED***HoistTransform***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***the***REMOVED***pairing***REMOVED***runtime***REMOVED***provides***REMOVED***additional***REMOVED***built-in***REMOVED***elements,***REMOVED***use***REMOVED***this***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***mark***REMOVED***them***REMOVED***as***REMOVED***built-in***REMOVED***so***REMOVED***the***REMOVED***compiler***REMOVED***will***REMOVED***generate***REMOVED***component***REMOVED***vnodes
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***for***REMOVED***them.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isBuiltInComponent?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***symbol***REMOVED***|***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Used***REMOVED***by***REMOVED***some***REMOVED***transforms***REMOVED***that***REMOVED***expects***REMOVED***only***REMOVED***native***REMOVED***elements
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***isCustomElement?:***REMOVED***(tag:***REMOVED***string)***REMOVED***=>***REMOVED***boolean***REMOVED***|***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Transform***REMOVED***expressions***REMOVED***like***REMOVED***{{***REMOVED***foo***REMOVED***}}***REMOVED***to***REMOVED***`_ctx.foo`.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***If***REMOVED***this***REMOVED***option***REMOVED***is***REMOVED***false,***REMOVED***the***REMOVED***generated***REMOVED***code***REMOVED***will***REMOVED***be***REMOVED***wrapped***REMOVED***in***REMOVED***a
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***`with***REMOVED***(this)***REMOVED***{***REMOVED***...***REMOVED***}`***REMOVED***block.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***This***REMOVED***is***REMOVED***force-enabled***REMOVED***in***REMOVED***module***REMOVED***mode,***REMOVED***since***REMOVED***modules***REMOVED***are***REMOVED***by***REMOVED***default***REMOVED***strict
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***and***REMOVED***cannot***REMOVED***use***REMOVED***`with`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***mode***REMOVED***===***REMOVED***'module'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***prefixIdentifiers?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Cache***REMOVED***static***REMOVED***VNodes***REMOVED***and***REMOVED***props***REMOVED***objects***REMOVED***to***REMOVED***`_hoisted_x`***REMOVED***constants
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***hoistStatic?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Cache***REMOVED***v-on***REMOVED***handlers***REMOVED***to***REMOVED***avoid***REMOVED***creating***REMOVED***new***REMOVED***inline***REMOVED***functions***REMOVED***on***REMOVED***each***REMOVED***render,
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***also***REMOVED***avoids***REMOVED***the***REMOVED***need***REMOVED***for***REMOVED***dynamically***REMOVED***patching***REMOVED***the***REMOVED***handlers***REMOVED***by***REMOVED***wrapping***REMOVED***it.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***e.g***REMOVED***`@click="foo"`***REMOVED***by***REMOVED***default***REMOVED***is***REMOVED***compiled***REMOVED***to***REMOVED***`{***REMOVED***onClick:***REMOVED***foo***REMOVED***}`.***REMOVED***With***REMOVED***this
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***option***REMOVED***it's***REMOVED***compiled***REMOVED***to:
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```js
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***{***REMOVED***onClick:***REMOVED***_cache[0]***REMOVED***||***REMOVED***(_cache[0]***REMOVED***=***REMOVED***e***REMOVED***=>***REMOVED***_ctx.foo(e))***REMOVED***}
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***```
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***Requires***REMOVED***"prefixIdentifiers"***REMOVED***to***REMOVED***be***REMOVED***enabled***REMOVED***because***REMOVED***it***REMOVED***relies***REMOVED***on***REMOVED***scope
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***analysis***REMOVED***to***REMOVED***determine***REMOVED***if***REMOVED***a***REMOVED***handler***REMOVED***is***REMOVED***safe***REMOVED***to***REMOVED***cache.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***cacheHandlers?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***A***REMOVED***list***REMOVED***of***REMOVED***parser***REMOVED***plugins***REMOVED***to***REMOVED***enable***REMOVED***for***REMOVED***`@babel/parser`,***REMOVED***which***REMOVED***is***REMOVED***used***REMOVED***to
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***parse***REMOVED***expressions***REMOVED***in***REMOVED***bindings***REMOVED***and***REMOVED***interpolations.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***https://babeljs.io/docs/en/next/babel-parser#plugins
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***expressionPlugins?:***REMOVED***ParserPlugin[];
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***SFC***REMOVED***scoped***REMOVED***styles***REMOVED***ID
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***scopeId?:***REMOVED***string***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Indicates***REMOVED***this***REMOVED***SFC***REMOVED***template***REMOVED***has***REMOVED***used***REMOVED***:slotted***REMOVED***in***REMOVED***its***REMOVED***styles
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Defaults***REMOVED***to***REMOVED***`true`***REMOVED***for***REMOVED***backwards***REMOVED***compatibility***REMOVED***-***REMOVED***SFC***REMOVED***tooling***REMOVED***should***REMOVED***set***REMOVED***it
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***to***REMOVED***`false`***REMOVED***if***REMOVED***no***REMOVED***`:slotted`***REMOVED***usage***REMOVED***is***REMOVED***detected***REMOVED***in***REMOVED***`<style>`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***slotted?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***SFC***REMOVED***`<style***REMOVED***vars>`***REMOVED***injection***REMOVED***string
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Should***REMOVED***already***REMOVED***be***REMOVED***an***REMOVED***object***REMOVED***expression,***REMOVED***e.g.***REMOVED***`{***REMOVED***'xxxx-color':***REMOVED***color***REMOVED***}`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***needed***REMOVED***to***REMOVED***render***REMOVED***inline***REMOVED***CSS***REMOVED***variables***REMOVED***on***REMOVED***component***REMOVED***root
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ssrCssVars?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Whether***REMOVED***to***REMOVED***compile***REMOVED***the***REMOVED***template***REMOVED***assuming***REMOVED***it***REMOVED***needs***REMOVED***to***REMOVED***handle***REMOVED***HMR.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Some***REMOVED***edge***REMOVED***cases***REMOVED***may***REMOVED***need***REMOVED***to***REMOVED***generate***REMOVED***different***REMOVED***code***REMOVED***for***REMOVED***HMR***REMOVED***to***REMOVED***work
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***correctly,***REMOVED***e.g.***REMOVED***#6938,***REMOVED***#7138
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***hmr?:***REMOVED***boolean;
}
export***REMOVED***interface***REMOVED***CodegenOptions***REMOVED***extends***REMOVED***SharedTransformCodegenOptions***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`module`***REMOVED***mode***REMOVED***will***REMOVED***generate***REMOVED***ES***REMOVED***module***REMOVED***import***REMOVED***statements***REMOVED***for***REMOVED***helpers
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***and***REMOVED***export***REMOVED***the***REMOVED***render***REMOVED***function***REMOVED***as***REMOVED***the***REMOVED***default***REMOVED***export.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***-***REMOVED***`function`***REMOVED***mode***REMOVED***will***REMOVED***generate***REMOVED***a***REMOVED***single***REMOVED***`const***REMOVED***{***REMOVED***helpers...***REMOVED***}***REMOVED***=***REMOVED***Vue`
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***statement***REMOVED***and***REMOVED***return***REMOVED***the***REMOVED***render***REMOVED***function.***REMOVED***It***REMOVED***expects***REMOVED***`Vue`***REMOVED***to***REMOVED***be***REMOVED***globally
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***available***REMOVED***(or***REMOVED***passed***REMOVED***by***REMOVED***wrapping***REMOVED***the***REMOVED***code***REMOVED***with***REMOVED***an***REMOVED***IIFE).***REMOVED***It***REMOVED***is***REMOVED***meant***REMOVED***to***REMOVED***be
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***used***REMOVED***with***REMOVED***`new***REMOVED***Function(code)()`***REMOVED***to***REMOVED***generate***REMOVED***a***REMOVED***render***REMOVED***function***REMOVED***at***REMOVED***runtime.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'function'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***mode?:***REMOVED***'module'***REMOVED***|***REMOVED***'function';
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Generate***REMOVED***source***REMOVED***map?
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***sourceMap?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***SFC***REMOVED***scoped***REMOVED***styles***REMOVED***ID
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***scopeId?:***REMOVED***string***REMOVED***|***REMOVED***null;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Option***REMOVED***to***REMOVED***optimize***REMOVED***helper***REMOVED***import***REMOVED***bindings***REMOVED***via***REMOVED***variable***REMOVED***assignment
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***(only***REMOVED***used***REMOVED***for***REMOVED***webpack***REMOVED***code-split)
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***false
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***optimizeImports?:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Customize***REMOVED***where***REMOVED***to***REMOVED***import***REMOVED***runtime***REMOVED***helpers***REMOVED***from.
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'vue'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeModuleName?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Customize***REMOVED***where***REMOVED***to***REMOVED***import***REMOVED***ssr***REMOVED***runtime***REMOVED***helpers***REMOVED***from/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'vue/server-renderer'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***ssrRuntimeModuleName?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***/**
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***Customize***REMOVED***the***REMOVED***global***REMOVED***variable***REMOVED***name***REMOVED***of***REMOVED***`Vue`***REMOVED***to***REMOVED***get***REMOVED***helpers***REMOVED***from
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***in***REMOVED***function***REMOVED***mode
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED*******REMOVED***@default***REMOVED***'Vue'
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED****/
***REMOVED******REMOVED******REMOVED******REMOVED***runtimeGlobalName?:***REMOVED***string;
}
export***REMOVED***type***REMOVED***CompilerOptions***REMOVED***=***REMOVED***ParserOptions***REMOVED***&***REMOVED***TransformOptions***REMOVED***&***REMOVED***CodegenOptions;

/**
***REMOVED*******REMOVED***The***REMOVED***`SourceMapGenerator`***REMOVED***type***REMOVED***from***REMOVED***`source-map-js`***REMOVED***is***REMOVED***a***REMOVED***bit***REMOVED***incomplete***REMOVED***as***REMOVED***it
***REMOVED*******REMOVED***misses***REMOVED***`toJSON()`.***REMOVED***We***REMOVED***also***REMOVED***need***REMOVED***to***REMOVED***add***REMOVED***types***REMOVED***for***REMOVED***internal***REMOVED***properties***REMOVED***which***REMOVED***we
***REMOVED*******REMOVED***need***REMOVED***to***REMOVED***access***REMOVED***for***REMOVED***better***REMOVED***performance.
***REMOVED****
***REMOVED*******REMOVED***Since***REMOVED***TS***REMOVED***5.3,***REMOVED***dts***REMOVED***generation***REMOVED***starts***REMOVED***to***REMOVED***strangely***REMOVED***include***REMOVED***broken***REMOVED***triple***REMOVED***slash
***REMOVED*******REMOVED***references***REMOVED***for***REMOVED***source-map-js,***REMOVED***so***REMOVED***we***REMOVED***are***REMOVED***inlining***REMOVED***all***REMOVED***source***REMOVED***map***REMOVED***related***REMOVED***types
***REMOVED*******REMOVED***here***REMOVED***to***REMOVED***to***REMOVED***workaround***REMOVED***that.
***REMOVED****/
export***REMOVED***interface***REMOVED***CodegenSourceMapGenerator***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***setSourceContent(sourceFile:***REMOVED***string,***REMOVED***sourceContent:***REMOVED***string):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***toJSON():***REMOVED***RawSourceMap;
***REMOVED******REMOVED******REMOVED******REMOVED***_sources:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***_names:***REMOVED***Set<string>;
***REMOVED******REMOVED******REMOVED******REMOVED***_mappings:***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***add(mapping:***REMOVED***MappingItem):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***};
}
export***REMOVED***interface***REMOVED***RawSourceMap***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***file?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***sourceRoot?:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***version:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***sources:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***names:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***sourcesContent?:***REMOVED***string[];
***REMOVED******REMOVED******REMOVED******REMOVED***mappings:***REMOVED***string;
}
interface***REMOVED***MappingItem***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***generatedLine:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***generatedColumn:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***originalLine:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***originalColumn:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***name:***REMOVED***string***REMOVED***|***REMOVED***null;
}
type***REMOVED***CodegenNode***REMOVED***=***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***JSChildNode***REMOVED***|***REMOVED***SSRCodegenNode;
export***REMOVED***interface***REMOVED***CodegenResult***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***preamble:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***ast:***REMOVED***RootNode;
***REMOVED******REMOVED******REMOVED******REMOVED***map?:***REMOVED***RawSourceMap;
}
export***REMOVED***interface***REMOVED***CodegenContext***REMOVED***extends***REMOVED***Omit<Required<CodegenOptions>,***REMOVED***'bindingMetadata'***REMOVED***|***REMOVED***'inline'>***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***source:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***code:***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***line:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***column:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***offset:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***indentLevel:***REMOVED***number;
***REMOVED******REMOVED******REMOVED******REMOVED***pure:***REMOVED***boolean;
***REMOVED******REMOVED******REMOVED******REMOVED***map?:***REMOVED***CodegenSourceMapGenerator;
***REMOVED******REMOVED******REMOVED******REMOVED***helper(key:***REMOVED***symbol):***REMOVED***string;
***REMOVED******REMOVED******REMOVED******REMOVED***push(code:***REMOVED***string,***REMOVED***newlineIndex?:***REMOVED***number,***REMOVED***node?:***REMOVED***CodegenNode):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***indent():***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***deindent(withoutNewLine?:***REMOVED***boolean):***REMOVED***void;
***REMOVED******REMOVED******REMOVED******REMOVED***newline():***REMOVED***void;
}
export***REMOVED***declare***REMOVED***function***REMOVED***generate(ast:***REMOVED***RootNode,***REMOVED***options?:***REMOVED***CodegenOptions***REMOVED***&***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***onContextCreated?:***REMOVED***(context:***REMOVED***CodegenContext)***REMOVED***=>***REMOVED***void;
}):***REMOVED***CodegenResult;

export***REMOVED***type***REMOVED***TransformPreset***REMOVED***=***REMOVED***[
***REMOVED******REMOVED******REMOVED******REMOVED***NodeTransform[],
***REMOVED******REMOVED******REMOVED******REMOVED***Record<string,***REMOVED***DirectiveTransform>
];
export***REMOVED***declare***REMOVED***function***REMOVED***getBaseTransformPreset(prefixIdentifiers?:***REMOVED***boolean):***REMOVED***TransformPreset;
export***REMOVED***declare***REMOVED***function***REMOVED***baseCompile(source:***REMOVED***string***REMOVED***|***REMOVED***RootNode,***REMOVED***options?:***REMOVED***CompilerOptions):***REMOVED***CodegenResult;

export***REMOVED***declare***REMOVED***const***REMOVED***isStaticExp:***REMOVED***(p:***REMOVED***JSChildNode)***REMOVED***=>***REMOVED***p***REMOVED***is***REMOVED***SimpleExpressionNode;
export***REMOVED***declare***REMOVED***function***REMOVED***isCoreComponent(tag:***REMOVED***string):***REMOVED***symbol***REMOVED***|***REMOVED***void;
export***REMOVED***declare***REMOVED***const***REMOVED***isSimpleIdentifier:***REMOVED***(name:***REMOVED***string)***REMOVED***=>***REMOVED***boolean;
/**
***REMOVED*******REMOVED***Simple***REMOVED***lexer***REMOVED***to***REMOVED***check***REMOVED***if***REMOVED***an***REMOVED***expression***REMOVED***is***REMOVED***a***REMOVED***member***REMOVED***expression.***REMOVED***This***REMOVED***is
***REMOVED*******REMOVED***lax***REMOVED***and***REMOVED***only***REMOVED***checks***REMOVED***validity***REMOVED***at***REMOVED***the***REMOVED***root***REMOVED***level***REMOVED***(i.e.***REMOVED***does***REMOVED***not***REMOVED***validate***REMOVED***exps
***REMOVED*******REMOVED***inside***REMOVED***square***REMOVED***brackets),***REMOVED***but***REMOVED***it's***REMOVED***ok***REMOVED***since***REMOVED***these***REMOVED***are***REMOVED***only***REMOVED***used***REMOVED***on***REMOVED***template
***REMOVED*******REMOVED***expressions***REMOVED***and***REMOVED***false***REMOVED***positives***REMOVED***are***REMOVED***invalid***REMOVED***expressions***REMOVED***in***REMOVED***the***REMOVED***first***REMOVED***place.
***REMOVED****/
export***REMOVED***declare***REMOVED***const***REMOVED***isMemberExpressionBrowser:***REMOVED***(exp:***REMOVED***ExpressionNode)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***isMemberExpressionNode:***REMOVED***(exp:***REMOVED***ExpressionNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***isMemberExpression:***REMOVED***(exp:***REMOVED***ExpressionNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***isFnExpressionBrowser:***REMOVED***(exp:***REMOVED***ExpressionNode)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***isFnExpressionNode:***REMOVED***(exp:***REMOVED***ExpressionNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***isFnExpression:***REMOVED***(exp:***REMOVED***ExpressionNode,***REMOVED***context:***REMOVED***TransformContext)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***advancePositionWithClone(pos:***REMOVED***Position,***REMOVED***source:***REMOVED***string,***REMOVED***numberOfCharacters?:***REMOVED***number):***REMOVED***Position;
export***REMOVED***declare***REMOVED***function***REMOVED***advancePositionWithMutation(pos:***REMOVED***Position,***REMOVED***source:***REMOVED***string,***REMOVED***numberOfCharacters?:***REMOVED***number):***REMOVED***Position;
export***REMOVED***declare***REMOVED***function***REMOVED***assert(condition:***REMOVED***boolean,***REMOVED***msg?:***REMOVED***string):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***findDir(node:***REMOVED***ElementNode,***REMOVED***name:***REMOVED***string***REMOVED***|***REMOVED***RegExp,***REMOVED***allowEmpty?:***REMOVED***boolean):***REMOVED***DirectiveNode***REMOVED***|***REMOVED***undefined;
export***REMOVED***declare***REMOVED***function***REMOVED***findProp(node:***REMOVED***ElementNode,***REMOVED***name:***REMOVED***string,***REMOVED***dynamicOnly?:***REMOVED***boolean,***REMOVED***allowEmpty?:***REMOVED***boolean):***REMOVED***ElementNode['props'][0]***REMOVED***|***REMOVED***undefined;
export***REMOVED***declare***REMOVED***function***REMOVED***isStaticArgOf(arg:***REMOVED***DirectiveNode['arg'],***REMOVED***name:***REMOVED***string):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***hasDynamicKeyVBind(node:***REMOVED***ElementNode):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***isText(node:***REMOVED***TemplateChildNode):***REMOVED***node***REMOVED***is***REMOVED***TextNode***REMOVED***|***REMOVED***InterpolationNode;
export***REMOVED***declare***REMOVED***function***REMOVED***isVPre(p:***REMOVED***ElementNode['props'][0]):***REMOVED***p***REMOVED***is***REMOVED***DirectiveNode;
export***REMOVED***declare***REMOVED***function***REMOVED***isVSlot(p:***REMOVED***ElementNode['props'][0]):***REMOVED***p***REMOVED***is***REMOVED***DirectiveNode;
export***REMOVED***declare***REMOVED***function***REMOVED***isTemplateNode(node:***REMOVED***RootNode***REMOVED***|***REMOVED***TemplateChildNode):***REMOVED***node***REMOVED***is***REMOVED***TemplateNode;
export***REMOVED***declare***REMOVED***function***REMOVED***isSlotOutlet(node:***REMOVED***RootNode***REMOVED***|***REMOVED***TemplateChildNode):***REMOVED***node***REMOVED***is***REMOVED***SlotOutletNode;
export***REMOVED***declare***REMOVED***function***REMOVED***injectProp(node:***REMOVED***VNodeCall***REMOVED***|***REMOVED***RenderSlotCall,***REMOVED***prop:***REMOVED***Property,***REMOVED***context:***REMOVED***TransformContext):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***toValidAssetId(name:***REMOVED***string,***REMOVED***type:***REMOVED***'component'***REMOVED***|***REMOVED***'directive'***REMOVED***|***REMOVED***'filter'):***REMOVED***string;
export***REMOVED***declare***REMOVED***function***REMOVED***hasScopeRef(node:***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***IfBranchNode***REMOVED***|***REMOVED***ExpressionNode***REMOVED***|***REMOVED***CacheExpression***REMOVED***|***REMOVED***undefined,***REMOVED***ids:***REMOVED***TransformContext['identifiers']):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***getMemoedVNodeCall(node:***REMOVED***BlockCodegenNode***REMOVED***|***REMOVED***MemoExpression):***REMOVED***VNodeCall***REMOVED***|***REMOVED***RenderSlotCall;
export***REMOVED***declare***REMOVED***const***REMOVED***forAliasRE:***REMOVED***RegExp;

/**
***REMOVED*******REMOVED***Return***REMOVED***value***REMOVED***indicates***REMOVED***whether***REMOVED***the***REMOVED***AST***REMOVED***walked***REMOVED***can***REMOVED***be***REMOVED***a***REMOVED***constant
***REMOVED****/
export***REMOVED***declare***REMOVED***function***REMOVED***walkIdentifiers(root:***REMOVED***Node$1,***REMOVED***onIdentifier:***REMOVED***(node:***REMOVED***Identifier,***REMOVED***parent:***REMOVED***Node$1***REMOVED***|***REMOVED***null,***REMOVED***parentStack:***REMOVED***Node$1[],***REMOVED***isReference:***REMOVED***boolean,***REMOVED***isLocal:***REMOVED***boolean)***REMOVED***=>***REMOVED***void,***REMOVED***includeAll?:***REMOVED***boolean,***REMOVED***parentStack?:***REMOVED***Node$1[],***REMOVED***knownIds?:***REMOVED***Record<string,***REMOVED***number>):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***isReferencedIdentifier(id:***REMOVED***Identifier,***REMOVED***parent:***REMOVED***Node$1***REMOVED***|***REMOVED***null,***REMOVED***parentStack:***REMOVED***Node$1[]):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***isInDestructureAssignment(parent:***REMOVED***Node$1,***REMOVED***parentStack:***REMOVED***Node$1[]):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***isInNewExpression(parentStack:***REMOVED***Node$1[]):***REMOVED***boolean;
export***REMOVED***declare***REMOVED***function***REMOVED***walkFunctionParams(node:***REMOVED***Function,***REMOVED***onIdent:***REMOVED***(id:***REMOVED***Identifier)***REMOVED***=>***REMOVED***void):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***walkBlockDeclarations(block:***REMOVED***BlockStatement$1***REMOVED***|***REMOVED***Program,***REMOVED***onIdent:***REMOVED***(node:***REMOVED***Identifier)***REMOVED***=>***REMOVED***void):***REMOVED***void;
export***REMOVED***declare***REMOVED***function***REMOVED***extractIdentifiers(param:***REMOVED***Node$1,***REMOVED***nodes?:***REMOVED***Identifier[]):***REMOVED***Identifier[];
export***REMOVED***declare***REMOVED***const***REMOVED***isFunctionType:***REMOVED***(node:***REMOVED***Node$1)***REMOVED***=>***REMOVED***node***REMOVED***is***REMOVED***Function;
export***REMOVED***declare***REMOVED***const***REMOVED***isStaticProperty:***REMOVED***(node:***REMOVED***Node$1)***REMOVED***=>***REMOVED***node***REMOVED***is***REMOVED***ObjectProperty;
export***REMOVED***declare***REMOVED***const***REMOVED***isStaticPropertyKey:***REMOVED***(node:***REMOVED***Node$1,***REMOVED***parent:***REMOVED***Node$1)***REMOVED***=>***REMOVED***boolean;
export***REMOVED***declare***REMOVED***const***REMOVED***TS_NODE_TYPES:***REMOVED***string[];
export***REMOVED***declare***REMOVED***function***REMOVED***unwrapTSNode(node:***REMOVED***Node$1):***REMOVED***Node$1;

export***REMOVED***declare***REMOVED***const***REMOVED***transformModel:***REMOVED***DirectiveTransform;

export***REMOVED***declare***REMOVED***const***REMOVED***transformOn:***REMOVED***DirectiveTransform;

export***REMOVED***declare***REMOVED***const***REMOVED***transformBind:***REMOVED***DirectiveTransform;

export***REMOVED***declare***REMOVED***const***REMOVED***noopDirectiveTransform:***REMOVED***DirectiveTransform;

export***REMOVED***declare***REMOVED***function***REMOVED***processIf(node:***REMOVED***ElementNode,***REMOVED***dir:***REMOVED***DirectiveNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***processCodegen?:***REMOVED***(node:***REMOVED***IfNode,***REMOVED***branch:***REMOVED***IfBranchNode,***REMOVED***isRoot:***REMOVED***boolean)***REMOVED***=>***REMOVED***(()***REMOVED***=>***REMOVED***void)***REMOVED***|***REMOVED***undefined):***REMOVED***(()***REMOVED***=>***REMOVED***void)***REMOVED***|***REMOVED***undefined;

export***REMOVED***declare***REMOVED***function***REMOVED***processFor(node:***REMOVED***ElementNode,***REMOVED***dir:***REMOVED***DirectiveNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***processCodegen?:***REMOVED***(forNode:***REMOVED***ForNode)***REMOVED***=>***REMOVED***(()***REMOVED***=>***REMOVED***void)***REMOVED***|***REMOVED***undefined):***REMOVED***(()***REMOVED***=>***REMOVED***void)***REMOVED***|***REMOVED***undefined;
export***REMOVED***declare***REMOVED***function***REMOVED***createForLoopParams({***REMOVED***value,***REMOVED***key,***REMOVED***index***REMOVED***}:***REMOVED***ForParseResult,***REMOVED***memoArgs?:***REMOVED***ExpressionNode[]):***REMOVED***ExpressionNode[];

export***REMOVED***declare***REMOVED***const***REMOVED***transformExpression:***REMOVED***NodeTransform;
export***REMOVED***declare***REMOVED***function***REMOVED***processExpression(node:***REMOVED***SimpleExpressionNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***asParams?:***REMOVED***boolean,***REMOVED***asRawStatements?:***REMOVED***boolean,***REMOVED***localVars?:***REMOVED***Record<string,***REMOVED***number>):***REMOVED***ExpressionNode;
export***REMOVED***declare***REMOVED***function***REMOVED***stringifyExpression(exp:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***string):***REMOVED***string;

export***REMOVED***declare***REMOVED***const***REMOVED***trackSlotScopes:***REMOVED***NodeTransform;
export***REMOVED***declare***REMOVED***const***REMOVED***trackVForSlotScopes:***REMOVED***NodeTransform;
export***REMOVED***type***REMOVED***SlotFnBuilder***REMOVED***=***REMOVED***(slotProps:***REMOVED***ExpressionNode***REMOVED***|***REMOVED***undefined,***REMOVED***vFor:***REMOVED***DirectiveNode***REMOVED***|***REMOVED***undefined,***REMOVED***slotChildren:***REMOVED***TemplateChildNode[],***REMOVED***loc:***REMOVED***SourceLocation)***REMOVED***=>***REMOVED***FunctionExpression;
export***REMOVED***declare***REMOVED***function***REMOVED***buildSlots(node:***REMOVED***ElementNode,***REMOVED***context:***REMOVED***TransformContext,***REMOVED***buildSlotFn?:***REMOVED***SlotFnBuilder):***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***slots:***REMOVED***SlotsExpression;
***REMOVED******REMOVED******REMOVED******REMOVED***hasDynamicSlots:***REMOVED***boolean;
};

interface***REMOVED***SlotOutletProcessResult***REMOVED***{
***REMOVED******REMOVED******REMOVED******REMOVED***slotName:***REMOVED***string***REMOVED***|***REMOVED***ExpressionNode;
***REMOVED******REMOVED******REMOVED******REMOVED***slotProps:***REMOVED***PropsExpression***REMOVED***|***REMOVED***undefined;
}
export***REMOVED***declare***REMOVED***function***REMOVED***processSlotOutlet(node:***REMOVED***SlotOutletNode,***REMOVED***context:***REMOVED***TransformContext):***REMOVED***SlotOutletProcessResult;

export***REMOVED***declare***REMOVED***function***REMOVED***getConstantType(node:***REMOVED***TemplateChildNode***REMOVED***|***REMOVED***SimpleExpressionNode***REMOVED***|***REMOVED***CacheExpression,***REMOVED***context:***REMOVED***TransformContext):***REMOVED***ConstantTypes;


